
H.Array = H.Array || {};
H.Assert = H.Assert || {};
H.Cast = H.Cast || {};
H.Coerce = H.Coerce || {};
H.Collection = H.Collection || {};
H.Color = H.Color || {};
H.Comparator = H.Comparator || {};
H.Condition = H.Condition || {};
H.Convert = H.Convert || {};
H.Cube = H.Cube || {};
H.Date = H.Date || {};
H.Dictionary = H.Dictionary || {};
H.Dist = H.Dist || {};
H.Error = H.Error || {};
H.Func = H.Func || {};
H.Generator = H.Generator || {};
H.Geometry = H.Geometry || {};
H.Hash = H.Hash || {};
H.Helpers = H.Helpers || {};
H.Identifier = H.Identifier || {};
H.Interpolation = H.Interpolation || {};
H.Iterator = H.Iterator || {};
H.Kernel = H.Kernel || {};
H.Math = H.Math || {};
H.Matrix = H.Matrix || {};
H.Number = H.Number || {};
H.Obj = H.Obj || {};
H.Optimize = H.Optimize || {};
H.Opts = H.Opts || {};
H.Perf = H.Perf || {};
H.Similarity = H.Similarity || {};
H.Spatial = H.Spatial || {};
H.Stats = H.Stats || {};
H.String = H.String || {};
H.Structure = H.Structure || {};
H.Time = H.Time || {};
H.Validate = H.Validate || {};
H.Vector = H.Vector || {};
H.Namespace = H.Namespace || {};


H.Cube.array = H.Cube.array || {};
H.Cube.bisect = H.Cube.bisect || {};
H.Cube.filter = H.Cube.filter || {};
H.Cube.heap = H.Cube.heap || {};
H.Cube.heap_select = H.Cube.heap_select || {};
H.Cube.null = H.Cube.null || {};
H.Cube.permute = H.Cube.permute || {};
H.Cube.reduce = H.Cube.reduce || {};
H.Cube.result = H.Cube.result || {};
H.Cube.zero = H.Cube.zero || {};
H.Cube.cf = H.Cube.cf || {};
H.Cube.accessors = H.Cube.accessors || {};
H.Cube.reductio_alias_prop = H.Cube.reductio_alias_prop || {};
H.Cube.reductio_alias = H.Cube.reductio_alias || {};
H.Cube.reductio_avg = H.Cube.reductio_avg || {};
H.Cube.cap = H.Cube.cap || {};
H.Cube.reductio_count = H.Cube.reductio_count || {};
H.Cube.reductio_custom = H.Cube.reductio_custom || {};
H.Cube.reductio_data_list = H.Cube.reductio_data_list || {};
H.Cube.reductio_exception_count = H.Cube.reductio_exception_count || {};
H.Cube.reductio_exception_sum = H.Cube.reductio_exception_sum || {};
H.Cube.reductio_filter = H.Cube.reductio_filter || {};
H.Cube.reductio_histogram = H.Cube.reductio_histogram || {};
H.Cube.reductio_max = H.Cube.reductio_max || {};
H.Cube.reductio_median = H.Cube.reductio_median || {};
H.Cube.reductio_min = H.Cube.reductio_min || {};
H.Cube.reductio_nest = H.Cube.reductio_nest || {};
H.Cube.reductio_parameters = H.Cube.reductio_parameters || {};
H.Cube.postprocess = H.Cube.postprocess || {};
H.Cube.postprocessors = H.Cube.postprocessors || {};
H.Cube.sort_by = H.Cube.sort_by || {};
H.Cube.reductio_std = H.Cube.reductio_std || {};
H.Cube.reductio_sum_of_sq = H.Cube.reductio_sum_of_sq || {};
H.Cube.reductio_sum = H.Cube.reductio_sum || {};
H.Cube.reductio_value_count = H.Cube.reductio_value_count || {};
H.Cube.reductio_value_list = H.Cube.reductio_value_list || {};
H.Cube.build = H.Cube.build || {};
H.Cube.red = H.Cube.red || {};


H.Array.append = function(arr1, arr2) {
  if (arr2 == null) {
    return arr1;
  }
  var pad = arr1.length,
    i = -1,
    len = arr2.length;
  while (++i < len) {
    arr1[pad + i] = arr2[i];
  }
  return arr1;
};


H.Array.check_array_length = function (x, y) {
    if (!Array.isArray(x) || !Array.isArray(y)) {
      throw new TypeError('x and y must be arrays');
    }
    if (x.length !== y.length) {
      throw new RangeError('x and y arrays do not have the same length');
    }
}
H.Array.clone = function(arr) {
    let cloned = arr.slice();
    return cloned
}

H.Array.combine = function(arr1, arr2) {
  const indexOf = H.Array.index_of;
  if (arr2 == null) {
    return arr1;
  }
  var i = -1,
    len = arr2.length;
  while (++i < len) {
    if (indexOf(arr1, arr2[i]) === -1) {
      arr1.push(arr2[i]);
    }
  }
  return arr1;
};

H.Array.compact = function(arr) {
  const filter = H.Array.filter;
  return filter(arr, function(val) {
    return val != null;
  });
};


H.Array.contains = function(arr, val) {
    const indexOf = H.Array.index_of;
    return indexOf(arr, val) !== -1;
};

H.Array.difference = function(arr) {
  const unique = H.Array.unique;
  const filter = H.Array.filter;
  const some = H.Obj.some;
  const contains = H.Array.contains;
  const slice = H.Array.slice;
  var arrs = slice(arguments, 1),
    result = filter(unique(arr), function(needle) {
      return !some(arrs, function(haystack) {
        return contains(haystack, needle);
      });
    });
  return result;
};
H.Array.each = function() {
    var breaker = {};
    return function(obj, iterator, context) {
        if (obj == null) return;
        if (Array.prototype.forEach && obj.forEach === Array.prototype.forEach) {
            obj.forEach(iterator, context);
        } else if (obj.length === +obj.length) {
            for (var i = 0, l = obj.length; i < l; i++) {
                if (i in obj && iterator.call(context, obj[i], i, obj) === breaker) return;
            }
        } else {
            for (var key in obj) {
                if (hasOwnProperty.call(obj, key)) {
                    if (iterator.call(context, obj[key], key, obj) === breaker) return;
                }
            }
        }
    };
};

H.Array.equals = function(a, b, callback) {
  const is = H.Assert.is;
  const isArray = H.Assert.is_array;
  const every = H.Array.every;
  function makeCompare(callback) {
    return function(value, i) {
      return i in this && callback(value, this[i]);
    };
  }
  callback = callback || is;
  if (!isArray(a) || !isArray(b)) {
    return callback(a, b);
  }
  if (a.length !== b.length) {
    return false;
  }
  return every(a, makeCompare(callback), b);
};

H.Array.every = function (arr, callback, thisObj) {
  const makeIterator = H.Func.make_iterator;
  callback = makeIterator(callback, thisObj);
  var result = true;
  if (arr == null) {
    return result;
  }
  var i = -1,
    len = arr.length;
  while (++i < len) {
    if (!callback(arr[i], i, arr)) {
      result = false;
      break;
    }
  }
  return result;
}

H.Array.filter = function(arr, callback, thisObj) {
  const makeIterator = H.Func.make_iterator;
  callback = makeIterator(callback, thisObj);
  var results = [];
  if (arr == null) {
    return results;
  }
  var i = -1,
    len = arr.length,
    value;
  while (++i < len) {
    value = arr[i];
    if (callback(value, i, arr)) {
      results.push(value);
    }
  }
  return results;
};

H.Array.find_index = function(arr, iterator, thisObj) {
  const makeIterator = H.Func.make_iterator;
  iterator = makeIterator(iterator, thisObj);
  if (arr == null) {
    return -1;
  }
  var i = -1,
    len = arr.length;
  while (++i < len) {
    if (iterator(arr[i], i, arr)) {
      return i;
    }
  }
  return -1;
};

H.Array.find = function(arr, iterator, thisObj) {
  const findIndex = H.Array.find_index;
  var idx = findIndex(arr, iterator, thisObj);
  return idx >= 0 ? arr[idx] : void 0;
};

H.Array.flatten = function(arr, level) {
  const append = H.Array.append;
  const isArray = H.Assert.is_array;
  function flattenTo(arr, result, level) {
    if (arr == null) {
      return result;
    } else if (level === 0) {
      append(result, arr);
      return result;
    }
    var value,
      i = -1,
      len = arr.length;
    while (++i < len) {
      value = arr[i];
      if (isArray(value)) {
        flattenTo(value, result, level - 1);
      } else {
        result.push(value);
      }
    }
    return result;
  }
  level = level == null ? -1 : level;
  return flattenTo(arr, [], level);
};

H.Array.for_each = function(arr, callback, thisObj) {
  if (arr == null) {
    return;
  }
  var i = -1,
    len = arr.length;
  while (++i < len) {
    if (callback.call(thisObj, arr[i], i, arr) === false) {
      break;
    }
  }
};


H.Array.index_of = function(arr, item, fromIndex) {
  fromIndex = fromIndex || 0;
  if (arr == null) {
    return -1;
  }
  var len = arr.length,
    i = fromIndex < 0 ? len + fromIndex : fromIndex;
  while (i < len) {
    if (arr[i] === item) {
      return i;
    }
    i++;
  }
  return -1;
};


H.Array.intersection = function(arr) {
  const unique = H.Array.unique;
  const filter = H.Array.filter;
  const every = H.Array.every;
  const contains = H.Array.contains;
  const slice = H.Array.slice;
  var arrs = slice(arguments, 1),
    result = filter(unique(arr), function(needle) {
      return every(arrs, function(haystack) {
        return contains(haystack, needle);
      });
    });
  return result;
};

H.Array.map = function(arr, callback, thisObj) {
  callback = H.Func.make_iterator(callback, thisObj);
  var results = [];
  if (arr == null) {
    return results;
  }
  var i = -1,
    len = arr.length;
  while (++i < len) {
    results[i] = callback(arr[i], i, arr);
  }
  return results;
};

H.Array.pairs = function (values) {
    const pairs = [];
    let previous;
    let first = false;
    for (const value of values) {
      if (first) pairs.push(pair(previous, value));
      previous = value;
      first = true;
    }
    function pair(a, b) {
        return [a, b];
    }   
    return pairs;
}

H.Array.pluck = function(arr, propName) {
  return H.Array.map(arr, propName);
};


H.Array.choice = function(items) {
  const isArray = H.Assert.is_array;
  var target = arguments.length === 1 && isArray(items) ? items : arguments;
  return target[randInt(0, target.length - 1)];
};


function range(start, stop, step) {
  const countSteps = H.Math.count_steps;
  if (stop == null) {
    stop = start;
    start = 0;
  }
  step = step || 1;
  var result = [],
    nSteps = countSteps(stop - start, step),
    i = start;
  while (i <= stop) {
    result.push(i);
    i += step;
  }
  return result;
}

H.Array.reduce = function(arr, fn, initVal) {
  var hasInit = arguments.length > 2,
    result = initVal;
  if (arr == null || !arr.length) {
    if (!hasInit) {
      throw new Error("reduce of empty array with no initial value");
    } else {
      return initVal;
    }
  }
  var i = -1,
    len = arr.length;
  while (++i < len) {
    if (!hasInit) {
      result = arr[i];
      hasInit = true;
    } else {
      result = fn(result, arr[i], i, arr);
    }
  }
  return result;
};


H.Array.reverse = function(arr) {
    return arr.reverse();
}

H.Array.shuffle = function (arr){
  var m = arr.length, t, i;
  while (m) {
    i = Math.floor(Math.random() * m--);
    t = arr[m];
    arr[m] = arr[i];
    arr[i] = t;
  }
  return arr;
}

H.Array.slice = function(arr, start, end) {
  var len = arr.length;
  if (start == null) {
    start = 0;
  } else if (start < 0) {
    start = Math.max(len + start, 0);
  } else {
    start = Math.min(start, len);
  }
  if (end == null) {
    end = len;
  } else if (end < 0) {
    end = Math.max(len + end, 0);
  } else {
    end = Math.min(end, len);
  }
  var result = [];
  while (start < end) {
    result.push(arr[start++]);
  }
  return result;
};


H.Array.some = function(arr, callback, thisObj) {
  const makeIterator = H.Func.make_iterator;
  callback = makeIterator(callback, thisObj);
  var result = false;
  if (arr == null) {
    return result;
  }
  var i = -1,
    len = arr.length;
  while (++i < len) {
    if (callback(arr[i], i, arr)) {
      result = true;
      break;
    }
  }
  return result;
};

H.Array.sort = function(arr, compareFn) {
  function mergeSort(arr, compareFn) {
    if (arr == null) {
      return [];
    } else if (arr.length < 2) {
      return arr;
    }
    if (compareFn == null) {
      compareFn = defaultCompare;
    }
    var mid, left, right;
    mid = ~~(arr.length / 2);
    left = mergeSort(arr.slice(0, mid), compareFn);
    right = mergeSort(arr.slice(mid, arr.length), compareFn);
    return merge(left, right, compareFn);
  }
  function defaultCompare(a, b) {
    return a < b ? -1 : a > b ? 1 : 0;
  }
  function merge(left, right, compareFn) {
    var result = [];
    while (left.length && right.length) {
      if (compareFn(left[0], right[0]) <= 0) {
        result.push(left.shift());
      } else {
        result.push(right.shift());
      }
    }
    if (left.length) {
      result.push.apply(result, left);
    }
    if (right.length) {
      result.push.apply(result, right);
    }
    return result;
  }
  return mergeSort(arr, compareFn);
};


"use strict";
H.Array.tabulate = function(collection) {
  const indexOf = H.Array.index_of;
  const isCollection = H.Assert.is_array;
  var count;
  var tmp;
  var len;
  var out;
  var v;
  var i;
  var j;
  if (!isCollection(collection)) {
    throw new TypeError(
      "invalid argument. First argument must be a collection. Value: `" +
        collection +
        "`."
    );
  }
  count = 0;
  tmp = [];
  out = [];
  len = collection.length;
  for (i = 0; i < len; i++) {
    v = collection[i];
    count += 1;
    j = indexOf(tmp, v);
    if (j === -1) {
      tmp.push(v);
      out.push([v, 1, 0]);
    } else {
      out[j][1] += 1;
    }
  }
  len = out.length;
  for (i = 0; i < len; i++) {
    out[i][2] = out[i][1] / count;
  }
  return out;
};


H.Array.to_lookup = function(arr, key) {
  const isFunction = H.Assert.is_function;
  var result = {};
  if (arr == null) {
    return result;
  }
  var i = -1,
    len = arr.length,
    value;
  if (isFunction(key)) {
    while (++i < len) {
      value = arr[i];
      result[key(value)] = value;
    }
  } else {
    while (++i < len) {
      value = arr[i];
      result[value[key]] = value;
    }
  }
  return result;
};


H.Array.union = function(arrs) {
  const append = H.Array.append;
  const unique = H.Array.unique;
  var results = [];
  var i = -1,
    len = arguments.length;
  while (++i < len) {
    append(results, arguments[i]);
  }
  return unique(results);
};

H.Array.unique = function(arr, compare) {
  const filter = H.Array.filter;
  const isEqual = H.Comparator.is_equal;
  compare = compare || isEqual;
  return filter(arr, function(item, i, arr) {
    var n = arr.length;
    while (++i < n) {
      if (compare(item, arr[i])) {
        return false;
      }
    }
    return true;
  });
};


H.Array.without = function(arr, value) {
  let result = arr.filter(function(v) {
    return v !== value;
  });
  return result;
};



H.Array.zip_obj = function( props, values ) {
    var result = {};
    for (var i = 0; i < props.length; i++)
         result[props[i]] = values[i];
    return result;
}

H.Assert.all_defined = function () {
    const is_undef = H.Assert.is_undef;
    let values = Array.from(arguments);
    let i, len, value;
    if (values.length < 1) {
      throw new Error( 'Arguments passed:' + values );
    }
    for (i = 0, len = values.length; i < len; i++) {
      value = values[i];
      if (is_undef(value)) {
        return false;
      }
    }
    return true;
};

H.Assert.has_undefined = function () {
    const is_undef = H.Assert.is_undef;
    let values = Array.from(arguments);
    let i, len, value;
    if (values.length < 1) {
      throw new Error( 'Arguments passed:' + values );
    }
    for (i = 0, len = values.length; i < len; i++) {
      value = values[i];
      if (is_undef(value)) {
        return true;
      }
    }
    return false;
};

H.Assert.is_array = function(value) {
  return Array.isArray(value);
};
H.Assert.is_boolean = function(obj) {
    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';
};

'use strict';

H.Assert.is_date = function(obj) {
    return toString.call(obj) === '[object Date]';
};


H.Assert.is_empty = function(value) {
  if (value === null) return true;
  if (value.length === 0) return true;
  if (value.length && value.length > 0) return false;
};

H.Assert.is_finite = function(value) {
  return typeof value == "number" && nativeIsFinite(value);
};


H.Assert.is_function = function(value) {
  return typeof value === "function";
};

H.Assert.is_kind = function(val, kind) {
  const kindOf = H.Assert.kind_of;
  return kindOf(val) === kind;
};


H.Assert.is_nill = function(value) {
  return value === null;
};


H.Assert.is_not_undef = function(value) {
  return typeof value != "undefined";
};


H.Assert.is_number = function ( value ) {
    return typeof value === 'number' && isFinite(value);
};

H.Assert.is_object = function(val) {
    const isKind = H.Assert.is_kind;
     return isKind(val, 'Object');
}

H.Assert.is_plain_object = function(value) {
  return !!value && typeof value === "object" && value.constructor === Object;
};


H.Assert.is_primitive = function(value) {
  switch (typeof value) {
    case "string":
    case "number":
    case "boolean":
      return true;
  }
  return value == null;
};


H.Assert.is_promise = function (val) {
    return (
        !!val &&
        (typeof val === 'object' || typeof val === 'function') &&
        typeof val.then === 'function'
    );
}
H.Assert.is_string = function ( value ) {
    return typeof value === 'string' || value instanceof String;
};

H.Assert.is_typed_array = function() {
var MAX_8BIT_INTEGER = Math.pow(2, 8) - 1,
    MAX_16BIT_INTEGER = Math.pow(2, 16) - 1,
    MAX_32BIT_INTEGER = Math.pow(2, 32) - 1;
var MAX_SIGNED_8BIT_INTEGER = Math.pow(2, 7) - 1,
    MAX_SIGNED_16BIT_INTEGER = Math.pow(2, 15) - 1,
    MAX_SIGNED_32BIT_INTEGER = Math.pow(2, 31) - 1;
var getPointerArray = function(size) {
  var maxIndex = size - 1;
  if (maxIndex <= MAX_8BIT_INTEGER)
    return Uint8Array;
  if (maxIndex <= MAX_16BIT_INTEGER)
    return Uint16Array;
  if (maxIndex <= MAX_32BIT_INTEGER)
    return Uint32Array;
  return Float64Array;
};
var getSignedPointerArray = function(size) {
  var maxIndex = size - 1;
  if (maxIndex <= MAX_SIGNED_8BIT_INTEGER)
    return Int8Array;
  if (maxIndex <= MAX_SIGNED_16BIT_INTEGER)
    return Int16Array;
  if (maxIndex <= MAX_SIGNED_32BIT_INTEGER)
    return Int32Array;
  return Float64Array;
};
var getNumberType = function(value) {
  if (value === (value | 0)) {
    if (Math.sign(value) === -1) {
      if (value <= 127 && value >= -128)
        return Int8Array;
      if (value <= 32767 && value >= -32768)
        return Int16Array;
      return Int32Array;
    }
    else {
      if (value <= 255)
        return Uint8Array;
      if (value <= 65535)
        return Uint16Array;
      return Uint32Array;
    }
  }
  return Float64Array;
};
var TYPE_PRIORITY = {
  Uint8Array: 1,
  Int8Array: 2,
  Uint16Array: 3,
  Int16Array: 4,
  Uint32Array: 5,
  Int32Array: 6,
  Float32Array: 7,
  Float64Array: 8
};
var getMinimalRepresentation = function(array, getter) {
  var maxType = null,
      maxPriority = 0,
      p,
      t,
      v,
      i,
      l;
  for (i = 0, l = array.length; i < l; i++) {
    v = getter ? getter(array[i]) : array[i];
    t = exports.getNumberType(v);
    p = TYPE_PRIORITY[t.name];
    if (p > maxPriority) {
      maxPriority = p;
      maxType = t;
    }
  }
  return maxType;
};
var isTypedArray = function(value) {
  return typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView(value);
};
var concat = function() {
  var length = 0,
      i,
      o,
      l;
  for (i = 0, l = arguments.length; i < l; i++)
    length += arguments[i].length;
  var array = new (arguments[0].constructor)(length);
  for (i = 0, o = 0; i < l; i++) {
    array.set(arguments[i], o);
    o += arguments[i].length;
  }
  return array;
};
return {
    isTypedArray: isTypedArray
}
}();

H.Assert.is_undef = function(value) {
  return typeof value === "undefined";
};

H.Assert.is_valid = function(obj) {
  return obj != null && obj === obj;
};


H.Assert.kind_of = function(val) {
  var _rKind = /^\[object (.*)\]$/,
    _toString = Object.prototype.toString,
    UNDEF;
  if (val === null) {
    return "Null";
  } else if (val === UNDEF) {
    return "Undefined";
  } else {
    return _rKind.exec(_toString.call(val))[1];
  }
};

H.Coerce.collection_to_number = function(collection, column) {
  collection.forEach(function(d) {
    d[column] = +d[column];
  });
  return collection;
};


H.Coerce.column_to_number = function(column) {
  let result = column.map(Number);
  return result;
};


H.Coerce.column_to_string = function(column) {
  let result = column.map(String);
  return result;
};


H.Coerce.default_to_string = function (item) {
    if (item === null) {
        return 'NULL';
    }
    if (H.Assert.is_undef(item)) {
        return 'UNDEFINED';
    }
    if (H.Assert.is_string(item)) {
        return item;
    }
    return item.toString();
};

H.Coerce.into_array = function() {
  const isString = H.Assert.is_string;
  const isArray = H.Assert.is_array;
  for (
    var _len2 = arguments.length, args = new Array(_len2), _key2 = 0;
    _key2 < _len2;
    _key2++
  ) {
    args[_key2] = arguments[_key2];
  }
  if (args.length < 2) {
    if (isString(args[0])) {
      args = args
        .join("")
        .replace(/^\s+|\s+$/g, "")
        .replace(/\s+/g, " ")
        .split(" ");
    } else if (isArray(args[0])) {
      args = args[0];
    }
  }
  return args;
};


H.Coerce.to_array = function(x) {
    const isArray = H.Assert.is_array;
    return x != null ? (isArray(x) ? x : [x]) : [];
};

H.Coerce.boolean = function(s) {
    return s == null || s === '' ? null : s==='false' ? false : !!s;
};

H.Coerce.date = function(s, format) {
    var d = format ? format : Date;
    return s == null || s === '' ? null : d.parse(s);
};
H.Coerce.to_map = function(list, f) {
    const accessor = H.Collection.accessor;
    return (f = accessor(f)) ?
      list.reduce(function(obj, x) { return (obj[f(x)] = 1, obj); }, {}) :
      list.reduce(function(obj, x) { return (obj[x] = 1, obj); }, {});
};

H.Coerce.number = function(s) {
    return s == null || s === '' ? null : +s;
};

H.Coerce.to_nums = function(vals) {
    return vals.map(Number)
}
H.Coerce.to_str = function(x) {
    const isArray = H.Assert.is_array;
    const isObject = H.Assert.is_object;
    const isString = H.Assert.is_string;
    return isArray(x) ? '[' + x.map(u.str) + ']'
      : isObject(x) || isString(x) ?
        JSON.stringify(x).replace('\u2028','\\u2028').replace('\u2029', '\\u2029')
      : x;
  };

H.Collection.columns_to_values = function (arr){
	var out = [], columns = Object.keys(arr[0]), col_name = columns.shift();
	columns.forEach(function(column){
		arr.forEach(function(row){
			var obj = {};
			obj[col_name] = row[col_name];
			obj.column = column;
			obj.value = row[column];
			out.push(obj);
		});
	});
	return out;
}

H.Collection.deep_copy = function(arr){
	return JSON.parse(JSON.stringify(arr));
}

H.Collection.group_by = function(xs, f) {
    return xs.reduce((r, v, i, a, k = f(v)) => ((r[k] || (r[k] = [])).push(v), r), {});
}


H.Collection.make = function(arrMethod, objMethod, defaultReturn) {
  const slice = H.Array.slice;
  return function() {
    var args = slice(arguments);
    if (args[0] == null) {
      return defaultReturn;
    }
    return typeof args[0].length === "number"
      ? arrMethod.apply(null, args)
      : objMethod.apply(null, args);
  };
}


H.Collection.merge = function (arr1, arr2, property) {
	var shallowCopy = H.Collection.shallow_copy;
	var keys1 = Object.keys(arr1[0]);
	var keys2 = Object.keys(arr2[0]);
	if (keys1.indexOf(property) == -1) throw new Error(property + " not in first array.");
	if (keys2.indexOf(property) == -1) throw new Error(property + " not in second array.");
	var clone = shallowCopy(arr1);
	clone.forEach(function(d){
		var match = arr2.filter(function(e){ return d[property] == e[property]; });
		keys2.forEach(function(key){
			var prop = keys1.indexOf(key) == -1 ? key : key + "2";
			d[prop] = match[0] ? match[0][key] : "NA";
		});
		return d;
	});
	return clone;
}

H.Collection.pivot = function (arr, attribute) {
  const pluck = H.Collection.pluck;
  const unique = H.Array.unique;
  return unique(pluck(arr, attribute)).sort().map(function(d){ 
  	var obj = {count : arr.filter(function(e){ return e[attribute] == d; }).length};
  	obj[attribute] = d;
    return obj;
  });
}

H.Collection.pluck = function(collection, column) {
  let result = collection.map(function(row) {
    return row[column];
  });
  return result;
};


H.Collection.reduce = function () {
    const make = H.Collection.make;
    const arrReduce = H.Array.reduce;
    const objReduce = H.Obj.reduce;
    return make(arrReduce, objReduce);
};

H.Collection.rename_property = function (arr, renamer) {
	const is = H.Assert.is_array;
	const deepCopy = H.Collection.deep_copy;
	var clone = deepCopy(arr);
	clone.forEach(function(row){
		if (is(renamer)){
			renamer.forEach(function(rename){
				renameRow(row, rename);
			});
		} else {
			renameRow(row, renamer);
		}
		return row;
	});
	return clone;
	function renameRow(row, rename){
		row[rename.out] = row[rename.in];
		delete row[rename.in];
	}
}

H.Collection.shallow_copy = function (arr){
  return arr.slice();
}

H.Collection.sort_by = function (arr, callback, context) {
        const makeIterator = H.Func.make_iterator;
        const sort = H.Array.sort;
        callback = makeIterator(callback, context);
        return sort(arr, function(a, b) {
            a = callback(a);
            b = callback(b);
            return (a < b) ? -1 : ((a > b) ? 1 : 0);
        });
}

H.Collection.unique_by = function (arr, mapper) {
  const pluck = H.Collection.pluck;
  const unique = H.Array.unique;
  return unique(pluck(arr, mapper));
}

H.color_brightest = function(hex_color_array) {
    let sorted = H.sort_by_distance( hex_color_array, 'lightness' )
    let sorted_len = sorted.length;
    return sorted[sorted_len-1]; 
}

H.color_contrast = function (hex_color_one, hex_color_two) {
        const c1 = H.hex_to_rgb(hex_color_one);
        const c2 = H.hex_to_rgb(hex_color_two);
        var diff = Math.max(c1.r, c2.r) - Math.min(c1.r, c2.r) +
          Math.max(c1.g, c2.g) - Math.min(c1.g, c2.g) +
          Math.max(c1.b, c2.b) - Math.min(c1.b, c2.b);
        return diff / 765;
}

H.color_delta_e_76 = function(hex_color_one, hex_color_two) {
    let rgb1 = hex_to_rgb(hex_color_one);
    let rgb2 = hex_to_rgb(hex_color_two);
    let lab1 = H.rgb_to_lab(rgb1);
    let lab2 = H.rgb_to_lab(rgb2);
    function dE76(x1, x2) {
        this.x1 = x1;
        this.x2 = x2;
    }
    dE76.prototype.getDeltaE = function() {
        var x1 = this.x1;
        var x2 = this.x2;
        return Math.sqrt(
            Math.pow(x2.L - x1.L, 2) +
            Math.pow(x2.A - x1.A, 2) +
            Math.pow(x2.B - x1.B, 2)
        );
    };
    var deltaE = new dE76(lab1, lab2);
    return deltaE.getDeltaE();
};

H.color_delta_e_94 = function(hex_color_one, hex_color_two) {
    let rgb1 = hex_to_rgb(hex_color_one);
    let rgb2 = hex_to_rgb(hex_color_two);
    let lab1 = H.rgb_to_lab(rgb1);
    let lab2 = H.rgb_to_lab(rgb2);
    function dE94(x1, x2, weights) {
        this.x1 = x1;
        this.x2 = x2;
        this.weights = weights || {};
        this.weights.lightness = this.weights.lightness || 1;
        this.weights.chroma = this.weights.chroma || 1;
        this.weights.hue = this.weights.hue || 1;
        if (1 === this.weights.lightness) {
            this.weights.K1 = 0.045;
            this.weights.K2 = 0.015;
        } else {
            this.weights.K1 = 0.048;
            this.weights.K2 = 0.014;
        }
    }
    dE94.prototype.getDeltaE = function() {
        var x1 = this.x1;
        var x2 = this.x2;
        var sqrt = Math.sqrt;
        var pow = Math.pow;
        return sqrt(
            pow(this.calculateL(x1, x2), 2) +
            pow(this.calculateA(x1, x2), 2) +
            pow(this.calculateB(x1, x2), 2)
        );
    };
    dE94.prototype.calculateL = function(x1, x2) {
        return (x1.L - x2.L) / this.weights.lightness;
    };
    dE94.prototype.calculateA = function(x1, x2) {
        var sqrt = Math.sqrt;
        var pow = Math.pow;
        var c1 = sqrt(pow(x1.A, 2) + pow(x1.B, 2));
        var c2 = sqrt(pow(x2.A, 2) + pow(x2.B, 2));
        var cab = c1 - c2;
        var sc = 1 + (this.weights.K1 * c1);
        return cab / (this.weights.chroma * sc);
    };
    dE94.prototype.calculateB = function(x1, x2) {
        var sqrt = Math.sqrt;
        var pow = Math.pow;
        var c1 = sqrt(pow(x1.A, 2) + pow(x1.B, 2));
        var c2 = sqrt(pow(x2.A, 2) + pow(x2.B, 2));
        var cab = c1 - c2;
        var a = x1.A - x2.A;
        var b = x1.B - x2.B;
        var hab = sqrt(
            pow(a, 2) +
            pow(b, 2) -
            pow(cab, 2)
        );
        var c1 = sqrt(pow(x1.A, 2) + pow(x1.B, 2));
        var sh = 1 + (this.weights.K2 * c1);
        return hab / sh;
    };
    var deltaE = new dE94(lab1, lab2);
    return deltaE.getDeltaE();
};

H.color_delta_e_00 = function(hex_color_one, hex_color_two) {
    let rgb1 = hex_to_rgb(hex_color_one);
    let rgb2 = hex_to_rgb(hex_color_two);
    let lab1 = H.rgb_to_lab(rgb1);
    let lab2 = H.rgb_to_lab(rgb2);
    function dE00(x1, x2, weights) {
        var sqrt = Math.sqrt;
        var pow = Math.pow;
        this.x1 = x1;
        this.x2 = x2;
        this.weights = weights || {};
        this.ksubL = this.weights.lightness || 1;
        this.ksubC = this.weights.chroma || 1;
        this.ksubH = this.weights.hue || 1;
        this.deltaLPrime = x2.L - x1.L;
        this.LBar = (x1.L + x2.L) / 2;
        this.C1 = sqrt(pow(x1.A, 2) + pow(x1.B, 2));
        this.C2 = sqrt(pow(x2.A, 2) + pow(x2.B, 2));
        this.CBar = (this.C1 + this.C2) / 2;
        this.aPrime1 = x1.A +
            (x1.A / 2) *
            (1 - sqrt(
                pow(this.CBar, 7) /
                (pow(this.CBar, 7) + pow(25, 7))
            ));
        this.aPrime2 = x2.A +
            (x2.A / 2) *
            (1 - sqrt(
                pow(this.CBar, 7) /
                (pow(this.CBar, 7) + pow(25, 7))
            ));
        this.CPrime1 = sqrt(
            pow(this.aPrime1, 2) +
            pow(x1.B, 2)
        );
        this.CPrime2 = sqrt(
            pow(this.aPrime2, 2) +
            pow(x2.B, 2)
        );
        this.CBarPrime = (this.CPrime1 + this.CPrime2) / 2;
        this.deltaCPrime = this.CPrime2 - this.CPrime1;
        this.SsubL = 1 + (
            (0.015 * pow(this.LBar - 50, 2)) /
            sqrt(20 + pow(this.LBar - 50, 2))
        );
        this.SsubC = 1 + 0.045 * this.CBarPrime;
        this.hPrime1 = 0;
        this.hPrime2 = 0;
        this.deltahPrime = 0;
        this.deltaHPrime = 0;
        this.HBarPrime = 0;
        this.T = 0;
        this.SsubH = 0;
        this.RsubT = 0;
    }
    dE00.prototype.getDeltaE = function() {
        var sqrt = Math.sqrt;
        var sin = Math.sin;
        var pow = Math.pow;
        this.hPrime1 = this.gethPrime1();
        this.hPrime2 = this.gethPrime2();
        this.deltahPrime = this.getDeltahPrime();
        this.deltaHPrime = 2 * sqrt(this.CPrime1 * this.CPrime2) * sin(this.degreesToRadians(this.deltahPrime) / 2);
        this.HBarPrime = this.getHBarPrime();
        this.T = this.getT();
        this.SsubH = 1 + 0.015 * this.CBarPrime * this.T;
        this.RsubT = this.getRsubT();
        var lightness = this.deltaLPrime / (this.ksubL * this.SsubL);
        var chroma = this.deltaCPrime / (this.ksubC * this.SsubC);
        var hue = this.deltaHPrime / (this.ksubH * this.SsubH);
        return sqrt(
            pow(lightness, 2) +
            pow(chroma, 2) +
            pow(hue, 2) +
            this.RsubT * chroma * hue
        );
    };
    dE00.prototype.getRsubT = function() {
        var sin = Math.sin;
        var sqrt = Math.sqrt;
        var pow = Math.pow;
        var exp = Math.exp;
        return -2 *
            sqrt(
                pow(this.CBarPrime, 7) /
                (pow(this.CBarPrime, 7) + pow(25, 7))
            ) *
            sin(this.degreesToRadians(
                60 *
                exp(
                    -(
                        pow(
                            (this.HBarPrime - 275) / 25, 2
                        )
                    )
                )
            ));
    };
    dE00.prototype.getT = function() {
        var cos = Math.cos;
        return 1 -
            0.17 * cos(this.degreesToRadians(this.HBarPrime - 30)) +
            0.24 * cos(this.degreesToRadians(2 * this.HBarPrime)) +
            0.32 * cos(this.degreesToRadians(3 * this.HBarPrime + 6)) -
            0.20 * cos(this.degreesToRadians(4 * this.HBarPrime - 63));
    };
    dE00.prototype.getHBarPrime= function() {
        var abs = Math.abs;
        if (abs(this.hPrime1 - this.hPrime2) > 180) {
            return (this.hPrime1 + this.hPrime2 + 360) / 2
        }
        return (this.hPrime1 + this.hPrime2) / 2
    };
    dE00.prototype.getDeltahPrime = function() {
        var abs = Math.abs;
        if (0 === this.C1 || 0 === this.C2) {
            return 0;
        }
        if (abs(this.hPrime1 - this.hPrime2) <= 180) {
            return this.hPrime2 - this.hPrime1;
        }
        if (this.hPrime2 <= this.hPrime1) {
            return this.hPrime2 - this.hPrime1 + 360;
        } else {
            return this.hPrime2 - this.hPrime1 - 360;
        }
    };
    dE00.prototype.gethPrime1 = function() {
        return this._gethPrimeFn(this.x1.B, this.aPrime1);
    };
    dE00.prototype.gethPrime2 = function() {
        return this._gethPrimeFn(this.x2.B, this.aPrime2);
    };
    dE00.prototype._gethPrimeFn = function(x, y) {
        var hueAngle;
        if (x === 0 && y === 0) {
            return 0;
        }
        hueAngle = this.radiansToDegrees(Math.atan2(x, y));
        if (hueAngle >= 0) {
            return hueAngle;
        } else {
            return hueAngle + 360;
        }
    };
    dE00.prototype.radiansToDegrees = function(radians) {
        return radians * (180 / Math.PI);
    };
    dE00.prototype.degreesToRadians = function(degrees) {
        return degrees * (Math.PI / 180);
    };
    var deltaE = new dE00(lab1, lab2);
    return deltaE.getDeltaE();
};

H.color_difference_closest = function( hex_color, hex_colors_array ) {
    let distance = H.color_distance_euclidean(hex_color, hex_colors_array[0]);
    let closest = "";
    hex_colors_array.forEach(function(c) {
        let curr_dist = H.color_distance_euclidean(hex_color, c)
        if ( curr_dist > distance ) {
            H.Func.noop(); 
        } else {
            distance = curr_dist;
            closest = c
        }
    })
    return closest
};

H.color_difference_furthest = function( hex_color, hex_colors_array ) {
    let distance = H.color_distance_euclidean(hex_color, hex_colors_array[0]);
    let furthest = "";
    hex_colors_array.forEach(function(c) {
        let curr_dist = H.color_distance_euclidean(hex_color, c)
        if ( curr_dist < distance ) {
            H.Func.noop(); 
        } else {
            distance = curr_dist;
            furthest = c
        }
    })
    return furthest
};

H.color_distance_euclidean = function(hex_color_one, hex_color_two) {
        const c1 = H.hex_to_rgb(hex_color_one)
        const c2 = H.hex_to_rgb(hex_color_two)
        return (
            ((c1.r - c2.r) ** 2) +
            ((c1.g - c2.g) ** 2) +
            ((c1.b - c2.b) ** 2)
        );
}

H.color_distance_hue = function(hex_color_one, hex_color_two) {
    const balance = [1, 0, 0];
    const c1 = H.hex_to_rgb(hex_color_one)
    const c2 = H.hex_to_rgb(hex_color_two)
    const color1 = H.rgb_to_hsl(c1);
    const color2 = H.rgb_to_hsl(c2);
    const hsl1 = [color1.h, color1.s, color1.l];
    const hsl2 = [color2.h, color2.s, color2.l];
    var result = 0;
    for (var i = 0; i < hsl1.length; i++)
        result += (hsl1[i] - hsl2[i]) * (hsl1[i] - hsl2[i]) * balance[i];
    return result;
};

H.color_distance_lightness = function(hex_color_one, hex_color_two) {
    const balance = [0, 0, 1];
    const c1 = H.hex_to_rgb(hex_color_one)
    const c2 = H.hex_to_rgb(hex_color_two)
    const color1 = H.rgb_to_hsl(c1);
    const color2 = H.rgb_to_hsl(c2);
    const hsl1 = [color1.h, color1.s, color1.l];
    const hsl2 = [color2.h, color2.s, color2.l];
    var result = 0;
    for (var i = 0; i < hsl1.length; i++)
        result += (hsl1[i] - hsl2[i]) * (hsl1[i] - hsl2[i]) * balance[i];
    return result;
};

H.color_distance_saturation = function(hex_color_one, hex_color_two) {
    const balance = [0, 1, 0];
    const c1 = H.hex_to_rgb(hex_color_one)
    const c2 = H.hex_to_rgb(hex_color_two)
    const color1 = H.rgb_to_hsl(c1);
    const color2 = H.rgb_to_hsl(c2);
    const hsl1 = [color1.h, color1.s, color1.l];
    const hsl2 = [color2.h, color2.s, color2.l];
    var result = 0;
    for (var i = 0; i < hsl1.length; i++)
        result += (hsl1[i] - hsl2[i]) * (hsl1[i] - hsl2[i]) * balance[i];
    return result;
};

H.color_is_dark = function(hex_color) {
  let rgb = H.hex_to_rgb(hex_color);
  let yiq = (rgb.r * 299 + rgb.g * 587 + rgb.b * 144) / 1000;
  let result = yiq < 131.5
  return result;
};
  

H.color_is_equal = function(hex_color_one, hex_color_two) {
    let result = H.color_is_near(hex_color_one, hex_color_two, 0); 
    return result;
};

H.color_is_light = function(hex_color) {
    return !H.color_is_dark(hex_color);
};
  

H.color_is_near = function(hex_color_one, hex_color_two, percentage) {
    var color1 = H.hex_to_rgb(hex_color_one);
    var color2 = H.hex_to_rgb(hex_color_two);
    percentage = Math.abs(percentage === undefined ? 0 : percentage);
    var adjustment = 255 * (percentage / 100);
    let result = 
    ( Math.abs(color2.r - color1.r) <= adjustment &&
    Math.abs(color2.g - color1.g) <= adjustment &&
    Math.abs(color2.b - color1.b) <= adjustment &&
    Math.abs(1.0 - 1.0) <= percentage / 100 )
    return result;
  };

H.color_most_saturated = function(hex_color_array) {
    let sorted = H.sort_by_distance( hex_color_array, 'saturation' )
    let sorted_len = sorted.length;
    return sorted[sorted_len-1]; 
}

H.sort_by_distance = function( hex_color_array, distance_method ) {
    let colors = hex_color_array;
    distance_method = distance_method || 'lightness';
    const euclidean_distance = H.color_distance_euclidean;
    const hue_distance = H.color_distance_hue;
    const lightness_distance = H.color_distance_lightness;
    const saturation_distance = H.color_distance_saturation;
    let colorDistance;
    switch(distance_method) {
        case 'euclidean':
            colorDistance = euclidean_distance;
        break;
        case 'hue':
            colorDistance = hue_distance;
        break;
        case 'lightness':
            colorDistance = lightness_distance;
        break;
        case 'saturation':
            colorDistance = saturation_distance;
        break;
        default:
            colorDistance = lightness_distance;
    }
        var distances = [];
        for (var i = 0; i < colors.length; i++) {
            distances[i] = [];
            for (var j = 0; j < i; j++)
                distances.push([colors[i], colors[j], colorDistance(colors[i], colors[j])]);
        }
        distances.sort(function(a, b) {
            return a[2] - b[2];
        });
        var colorToCluster = {};
        for (var i = 0; i < colors.length; i++)
            colorToCluster[colors[i]] = [colors[i]];
        var lastCluster;
        for (var i = 0; i < distances.length; i++) {
            var color1 = distances[i][0];
            var color2 = distances[i][1];
            var cluster1 = colorToCluster[color1];
            var cluster2 = colorToCluster[color2];
            if (!cluster1 || !cluster2 || cluster1 == cluster2)
                continue;
            if (color1 != cluster1[cluster1.length - 1])
                cluster1.reverse();
            if (color2 != cluster2[0])
                cluster2.reverse();
            cluster1.push.apply(cluster1, cluster2);
            delete colorToCluster[color1];
            delete colorToCluster[color2];
            colorToCluster[cluster1[0]] = cluster1;
            colorToCluster[cluster1[cluster1.length - 1]] = cluster1;
            lastCluster = cluster1;
        }
        return lastCluster;
};

H.cmyk_to_rgb = function (cmyk) {
	const c = cmyk.c / 100;
	const m = cmyk.m / 100;
	const y = cmyk.y / 100;
	const k = cmyk.k / 100;
	const r = 1 - Math.min(1, c * (1 - k) + k);
	const g = 1 - Math.min(1, m * (1 - k) + k);
	const b = 1 - Math.min(1, y * (1 - k) + k);
	let result = { r: r * 255, g: g * 255, b: b * 255 }
	return result;
};

H.hex_to_css = function (hex_color) {
    let css;
    if ( H.is_valid_hex( hex_color ) ) {
        css = '#' + hex_color.toUpperCase();
    } else {
        throw new TypeError(`Expected hex string but received something else`);
    }
    return css
}

H.hex_to_hwb = function ( hex_color ) {
    let rgb = H.hex_to_rgb(hex_color)
    let hwb = H.rgb_to_hwb(rgb)
    return hwb
}

H.hex_to_rgb = function (args) {
	const match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
	if (!match) {
		return [0, 0, 0];
	}
	let colorString = match[0];
	if (match[0].length === 3) {
		colorString = colorString.split('').map(char => {
			return char + char;
		}).join('');
	}
	const integer = parseInt(colorString, 16);
	const r = (integer >> 16) & 0xFF;
	const g = (integer >> 8) & 0xFF;
	const b = integer & 0xFF;
	let result = { r: r, g: g, b: b }
	return result;
};


H.hsl_to_rgb = function (hsl) {
	const h = hsl.h / 360;
	const s = hsl.s / 100;
	const l = hsl.l / 100;
	let t2;
	let t3;
	let val;
	if (s === 0) {
		val = l * 255;
		return [val, val, val];
	}
	if (l < 0.5) {
		t2 = l * (1 + s);
	} else {
		t2 = l + s - l * s;
	}
	const t1 = 2 * l - t2;
	const rgb = [0, 0, 0];
	for (let i = 0; i < 3; i++) {
		t3 = h + 1 / 3 * -(i - 1);
		if (t3 < 0) {
			t3++;
		}
		if (t3 > 1) {
			t3--;
		}
		if (6 * t3 < 1) {
			val = t1 + (t2 - t1) * 6 * t3;
		} else if (2 * t3 < 1) {
			val = t2;
		} else if (3 * t3 < 2) {
			val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
		} else {
			val = t1;
		}
		rgb[i] = val * 255;
	}
	let result = { r: rgb[0], g: rgb[1], b: rgb[2] }
	return result;
};

H.hsv_to_rgb = function (hsv) {
	const h = hsv.h / 60;
	const s = hsv.s / 100;
	let v = hsv.v / 100;
	const hi = Math.floor(h) % 6;
	const f = h - Math.floor(h);
	const p = 255 * v * (1 - s);
	const q = 255 * v * (1 - (s * f));
	const t = 255 * v * (1 - (s * (1 - f)));
	v *= 255;
	switch (hi) {
		case 0:
			return [v, t, p];
		case 1:
			return [q, v, p];
		case 2:
			return [p, v, t];
		case 3:
			return [p, q, v];
		case 4:
			return [t, p, v];
		case 5:
			return [v, p, q];
	}
};

H.hwb_to_rgb = function (hwb) {
	const h = hwb.h / 360;
	let wh = hwb.w / 100;
	let bl = hwb.b / 100;
	const ratio = wh + bl;
	let f;
	if (ratio > 1) {
		wh /= ratio;
		bl /= ratio;
	}
	const i = Math.floor(6 * h);
	const v = 1 - bl;
	f = 6 * h - i;
	if ((i & 0x01) !== 0) {
		f = 1 - f;
	}
	const n = wh + f * (v - wh); 
	let r;
	let g;
	let b;
	switch (i) {
		default:
		case 6:
		case 0: r = v;  g = n;  b = wh; break;
		case 1: r = n;  g = v;  b = wh; break;
		case 2: r = wh; g = v;  b = n; break;
		case 3: r = wh; g = n;  b = v; break;
		case 4: r = n;  g = wh; b = v; break;
		case 5: r = v;  g = wh; b = n; break;
	}
	let rgb = { r: r * 255, g: g * 255, b: b * 255 };
	return rgb
}

H.keyword_to_hex = function (keyword) {
    const rgb255 = H.color_keywords[String(keyword).toLowerCase()];
    let result = H.rgb_to_hex({ r: rgb255[0], g: rgb255[1], b: rgb255[2] })
	return result;
}

H.lab_to_lch = function (lab) {
	const l = lab.l;
	const a = lab.a;
	const b = lab.b;
	let h;
	const hr = Math.atan2(b, a);
	h = hr * 360 / 2 / Math.PI;
	if (h < 0) {
		h += 360;
	}
	const c = Math.sqrt(a * a + b * b);
    let lch = { l: l, c: c, h: h }
	return lch;
};

H.lch_to_lab = function (lch) {
	const l = lch.l;
	const c = lch.c;
	const h = lch.h;
	const hr = h / 360 * 2 * Math.PI;
	const a = c * Math.cos(hr);
	const b = c * Math.sin(hr);
    let lab = { l: l, a: a, b: b }
	return lab;
};

H.rgb_to_ansi16 = function (rgb, saturation = null) {
	const r = rgb.r;
	const g = rgb.g;
	const b = rgb.b;
	let value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; 
	value = Math.round(value / 50);
	if (value === 0) {
		return 30;
	}
	let ansi = 30
		+ ((Math.round(b / 255) << 2)
		| (Math.round(g / 255) << 1)
		| Math.round(r / 255));
	if (value === 2) {
		ansi += 60;
	}
	return ansi;
};

H.rgb_to_ansi256 = function (rgb) {
	const r = rgb.r;
	const g = rgb.g;
	const b = rgb.b;
	if (r === g && g === b) {
		if (r < 8) {
			return 16;
		}
		if (r > 248) {
			return 231;
		}
		return Math.round(((r - 8) / 247) * 24) + 232;
	}
	const ansi = 16
		+ (36 * Math.round(r / 255 * 5))
		+ (6 * Math.round(g / 255 * 5))
		+ Math.round(b / 255 * 5);
	return ansi;
};

H.rgb_to_cmyk = function (rgb) {
	const r = rgb.r / 255;
	const g = rgb.g / 255;
	const b = rgb.b / 255;
	const k = Math.min(1 - r, 1 - g, 1 - b);
	const c = (1 - r - k) / (1 - k) || 0;
	const m = (1 - g - k) / (1 - k) || 0;
	const y = (1 - b - k) / (1 - k) || 0;
	let result = { c: c * 100, m: m * 100, y: y * 100, k: k * 100 }
	return result;
};

H.rgb_to_hex = function (rgb, allow3Char) {
    let r = rgb.r;
    let g = rgb.g;
    let b = rgb.b
	const pad2 = H.color_utils.pad2;
    var hex = [
        pad2(Math.round(r).toString(16)),
        pad2(Math.round(g).toString(16)),
        pad2(Math.round(b).toString(16))
    ];
    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {
        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);
    }
    return hex.join("");
}

H.rgb_to_hsl = function (rgb) {
	const r = rgb.r / 255;
	const g = rgb.g / 255;
	const b = rgb.b / 255;
	const min = Math.min(r, g, b);
	const max = Math.max(r, g, b);
	const delta = max - min;
	let h;
	let s;
	if (max === min) {
		h = 0;
	} else if (r === max) {
		h = (g - b) / delta;
	} else if (g === max) {
		h = 2 + (b - r) / delta;
	} else if (b === max) {
		h = 4 + (r - g) / delta;
	}
	h = Math.min(h * 60, 360);
	if (h < 0) {
		h += 360;
	}
	const l = (min + max) / 2;
	if (max === min) {
		s = 0;
	} else if (l <= 0.5) {
		s = delta / (max + min);
	} else {
		s = delta / (2 - max - min);
	}
	let result = { h: h, s: s * 100, l: l * 100 }
	return result;
};

H.rgb_to_hsv = function (rgb) {
	let rdif;
	let gdif;
	let bdif;
	let h;
	let s;
	const r = rgb.r / 255;
	const g = rgb.g / 255;
	const b = rgb.b / 255;
	const v = Math.max(r, g, b);
	const diff = v - Math.min(r, g, b);
	const diffc = function (c) {
		return (v - c) / 6 / diff + 1 / 2;
	};
	if (diff === 0) {
		h = 0;
		s = 0;
	} else {
		s = diff / v;
		rdif = diffc(r);
		gdif = diffc(g);
		bdif = diffc(b);
		if (r === v) {
			h = bdif - gdif;
		} else if (g === v) {
			h = (1 / 3) + rdif - bdif;
		} else if (b === v) {
			h = (2 / 3) + gdif - rdif;
		}
		if (h < 0) {
			h += 1;
		} else if (h > 1) {
			h -= 1;
		}
	}
	let result = { h: h * 360, s: s * 100, v: v * 100 }
	return result;
};

H.rgb_to_hwb = function (rgb) {
	const r = rgb.r;
	const g = rgb.g;
	let b = rgb.b;
	const h = H.rgb_to_hsl( {r: r, g: g, b: b }).h;
	const w = 1 / 255 * Math.min(r, Math.min(g, b));
	b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));
	let hwb = { h: h, w: w * 100, b: b * 100 }
	return hwb;
}

H.rgb_to_lab = function (rgb) {
	const xyz = H.rgb_to_xyz(rgb);
	let x = xyz.x;
	let y = xyz.y;
	let z = xyz.z;
	x /= 95.047;
	y /= 100;
	z /= 108.883;
	x = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);
	y = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);
	z = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);
	const l = (116 * y) - 16;
	const a = 500 * (x - y);
	const b = 200 * (y - z);
    let lab = { l: l, a: a, b: b }
	return lab;
};

H.rgb_to_xyz = function (rgb) {
	let r = rgb.r / 255;
	let g = rgb.g / 255;
	let b = rgb.b / 255;
	r = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);
	g = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);
	b = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);
	const x = (r * 0.4124564) + (g * 0.3575761) + (b * 0.1804375);
	const y = (r * 0.2126729) + (g * 0.7151522) + (b * 0.072175);
	const z = (r * 0.0193339) + (g * 0.119192) + (b * 0.9503041);
    let obj = { x: x * 100, y: y * 100, z: z * 100 }
	return obj;
};
H.colormap_Accent = [[0.000, [0.498, 0.788, 0.498]], [0.002, [0.498, 0.788, 0.498]], [0.004, [0.505, 0.785, 0.507]], [0.006, [0.505, 0.785, 0.507]], [0.008, [0.512, 0.782, 0.516]], [0.010, [0.512, 0.782, 0.516]], [0.012, [0.518, 0.780, 0.525]], [0.014, [0.518, 0.780, 0.525]], [0.016, [0.525, 0.777, 0.535]], [0.018, [0.525, 0.777, 0.535]], [0.020, [0.532, 0.774, 0.544]], [0.022, [0.532, 0.774, 0.544]], [0.023, [0.539, 0.771, 0.553]], [0.025, [0.539, 0.771, 0.553]], [0.027, [0.546, 0.768, 0.562]], [0.029, [0.546, 0.768, 0.562]], [0.031, [0.552, 0.765, 0.571]], [0.033, [0.552, 0.765, 0.571]], [0.035, [0.559, 0.762, 0.580]], [0.037, [0.559, 0.762, 0.580]], [0.039, [0.566, 0.759, 0.590]], [0.041, [0.566, 0.759, 0.590]], [0.043, [0.573, 0.756, 0.599]], [0.045, [0.573, 0.756, 0.599]], [0.047, [0.579, 0.753, 0.608]], [0.049, [0.579, 0.753, 0.608]], [0.051, [0.586, 0.750, 0.617]], [0.053, [0.586, 0.750, 0.617]], [0.055, [0.593, 0.748, 0.626]], [0.057, [0.593, 0.748, 0.626]], [0.059, [0.600, 0.745, 0.635]], [0.061, [0.600, 0.745, 0.635]], [0.063, [0.607, 0.742, 0.644]], [0.065, [0.607, 0.742, 0.644]], [0.067, [0.613, 0.739, 0.654]], [0.068, [0.613, 0.739, 0.654]], [0.070, [0.620, 0.736, 0.663]], [0.072, [0.620, 0.736, 0.663]], [0.074, [0.627, 0.733, 0.672]], [0.076, [0.627, 0.733, 0.672]], [0.078, [0.634, 0.730, 0.681]], [0.080, [0.634, 0.730, 0.681]], [0.082, [0.640, 0.727, 0.690]], [0.084, [0.640, 0.727, 0.690]], [0.086, [0.647, 0.724, 0.699]], [0.088, [0.647, 0.724, 0.699]], [0.090, [0.654, 0.721, 0.708]], [0.092, [0.654, 0.721, 0.708]], [0.094, [0.661, 0.718, 0.718]], [0.096, [0.661, 0.718, 0.718]], [0.098, [0.668, 0.716, 0.727]], [0.100, [0.668, 0.716, 0.727]], [0.102, [0.674, 0.713, 0.736]], [0.104, [0.674, 0.713, 0.736]], [0.106, [0.681, 0.710, 0.745]], [0.108, [0.681, 0.710, 0.745]], [0.110, [0.688, 0.707, 0.754]], [0.112, [0.688, 0.707, 0.754]], [0.114, [0.695, 0.704, 0.763]], [0.115, [0.695, 0.704, 0.763]], [0.117, [0.701, 0.701, 0.773]], [0.119, [0.701, 0.701, 0.773]], [0.121, [0.708, 0.698, 0.782]], [0.123, [0.708, 0.698, 0.782]], [0.125, [0.715, 0.695, 0.791]], [0.127, [0.715, 0.695, 0.791]], [0.129, [0.722, 0.692, 0.800]], [0.131, [0.722, 0.692, 0.800]], [0.133, [0.729, 0.689, 0.809]], [0.135, [0.729, 0.689, 0.809]], [0.137, [0.735, 0.687, 0.818]], [0.139, [0.735, 0.687, 0.818]], [0.141, [0.742, 0.684, 0.827]], [0.143, [0.742, 0.684, 0.827]], [0.145, [0.749, 0.683, 0.827]], [0.147, [0.749, 0.683, 0.827]], [0.149, [0.756, 0.685, 0.818]], [0.151, [0.756, 0.685, 0.818]], [0.153, [0.763, 0.687, 0.810]], [0.155, [0.763, 0.687, 0.810]], [0.157, [0.769, 0.689, 0.801]], [0.159, [0.769, 0.689, 0.801]], [0.160, [0.776, 0.691, 0.793]], [0.162, [0.776, 0.691, 0.793]], [0.164, [0.783, 0.693, 0.785]], [0.166, [0.783, 0.693, 0.785]], [0.168, [0.790, 0.695, 0.776]], [0.170, [0.790, 0.695, 0.776]], [0.172, [0.796, 0.697, 0.768]], [0.174, [0.796, 0.697, 0.768]], [0.176, [0.803, 0.699, 0.759]], [0.178, [0.803, 0.699, 0.759]], [0.180, [0.810, 0.701, 0.751]], [0.182, [0.810, 0.701, 0.751]], [0.184, [0.817, 0.703, 0.743]], [0.186, [0.817, 0.703, 0.743]], [0.188, [0.824, 0.705, 0.734]], [0.190, [0.824, 0.705, 0.734]], [0.192, [0.830, 0.707, 0.726]], [0.194, [0.830, 0.707, 0.726]], [0.196, [0.837, 0.709, 0.717]], [0.198, [0.837, 0.709, 0.717]], [0.200, [0.844, 0.711, 0.709]], [0.202, [0.844, 0.711, 0.709]], [0.204, [0.851, 0.713, 0.701]], [0.205, [0.851, 0.713, 0.701]], [0.207, [0.857, 0.714, 0.692]], [0.209, [0.857, 0.714, 0.692]], [0.211, [0.864, 0.716, 0.684]], [0.213, [0.864, 0.716, 0.684]], [0.215, [0.871, 0.718, 0.675]], [0.217, [0.871, 0.718, 0.675]], [0.219, [0.878, 0.720, 0.667]], [0.221, [0.878, 0.720, 0.667]], [0.223, [0.885, 0.722, 0.659]], [0.225, [0.885, 0.722, 0.659]], [0.227, [0.891, 0.724, 0.650]], [0.229, [0.891, 0.724, 0.650]], [0.231, [0.898, 0.726, 0.642]], [0.233, [0.898, 0.726, 0.642]], [0.235, [0.905, 0.728, 0.633]], [0.237, [0.905, 0.728, 0.633]], [0.239, [0.912, 0.730, 0.625]], [0.241, [0.912, 0.730, 0.625]], [0.243, [0.919, 0.732, 0.617]], [0.245, [0.919, 0.732, 0.617]], [0.247, [0.925, 0.734, 0.608]], [0.249, [0.925, 0.734, 0.608]], [0.250, [0.932, 0.736, 0.600]], [0.252, [0.932, 0.736, 0.600]], [0.254, [0.939, 0.738, 0.591]], [0.256, [0.939, 0.738, 0.591]], [0.258, [0.946, 0.740, 0.583]], [0.260, [0.946, 0.740, 0.583]], [0.262, [0.952, 0.742, 0.575]], [0.264, [0.952, 0.742, 0.575]], [0.266, [0.959, 0.744, 0.566]], [0.268, [0.959, 0.744, 0.566]], [0.270, [0.966, 0.745, 0.558]], [0.272, [0.966, 0.745, 0.558]], [0.274, [0.973, 0.747, 0.549]], [0.276, [0.973, 0.747, 0.549]], [0.278, [0.980, 0.749, 0.541]], [0.280, [0.980, 0.749, 0.541]], [0.282, [0.986, 0.751, 0.533]], [0.284, [0.986, 0.751, 0.533]], [0.286, [0.992, 0.754, 0.526]], [0.288, [0.992, 0.754, 0.526]], [0.290, [0.992, 0.761, 0.528]], [0.292, [0.992, 0.761, 0.528]], [0.294, [0.993, 0.767, 0.530]], [0.295, [0.993, 0.767, 0.530]], [0.297, [0.993, 0.774, 0.532]], [0.299, [0.993, 0.774, 0.532]], [0.301, [0.993, 0.781, 0.534]], [0.303, [0.993, 0.781, 0.534]], [0.305, [0.993, 0.788, 0.536]], [0.307, [0.993, 0.788, 0.536]], [0.309, [0.993, 0.795, 0.538]], [0.311, [0.993, 0.795, 0.538]], [0.313, [0.994, 0.801, 0.540]], [0.315, [0.994, 0.801, 0.540]], [0.317, [0.994, 0.808, 0.542]], [0.319, [0.994, 0.808, 0.542]], [0.321, [0.994, 0.815, 0.544]], [0.323, [0.994, 0.815, 0.544]], [0.325, [0.994, 0.822, 0.546]], [0.327, [0.994, 0.822, 0.546]], [0.329, [0.995, 0.829, 0.548]], [0.331, [0.995, 0.829, 0.548]], [0.333, [0.995, 0.835, 0.550]], [0.335, [0.995, 0.835, 0.550]], [0.337, [0.995, 0.842, 0.552]], [0.339, [0.995, 0.842, 0.552]], [0.341, [0.995, 0.849, 0.554]], [0.342, [0.995, 0.849, 0.554]], [0.344, [0.995, 0.856, 0.556]], [0.346, [0.995, 0.856, 0.556]], [0.348, [0.996, 0.862, 0.559]], [0.350, [0.996, 0.862, 0.559]], [0.352, [0.996, 0.869, 0.561]], [0.354, [0.996, 0.869, 0.561]], [0.356, [0.996, 0.876, 0.563]], [0.358, [0.996, 0.876, 0.563]], [0.360, [0.996, 0.883, 0.565]], [0.362, [0.996, 0.883, 0.565]], [0.364, [0.996, 0.890, 0.567]], [0.366, [0.996, 0.890, 0.567]], [0.368, [0.997, 0.896, 0.569]], [0.370, [0.997, 0.896, 0.569]], [0.372, [0.997, 0.903, 0.571]], [0.374, [0.997, 0.903, 0.571]], [0.376, [0.997, 0.910, 0.573]], [0.378, [0.997, 0.910, 0.573]], [0.380, [0.997, 0.917, 0.575]], [0.382, [0.997, 0.917, 0.575]], [0.384, [0.998, 0.923, 0.577]], [0.386, [0.998, 0.923, 0.577]], [0.387, [0.998, 0.930, 0.579]], [0.389, [0.998, 0.930, 0.579]], [0.391, [0.998, 0.937, 0.581]], [0.393, [0.998, 0.937, 0.581]], [0.395, [0.998, 0.944, 0.583]], [0.397, [0.998, 0.944, 0.583]], [0.399, [0.998, 0.951, 0.585]], [0.401, [0.998, 0.951, 0.585]], [0.403, [0.999, 0.957, 0.587]], [0.405, [0.999, 0.957, 0.587]], [0.407, [0.999, 0.964, 0.589]], [0.409, [0.999, 0.964, 0.589]], [0.411, [0.999, 0.971, 0.591]], [0.413, [0.999, 0.971, 0.591]], [0.415, [0.999, 0.978, 0.593]], [0.417, [0.999, 0.978, 0.593]], [0.419, [1.000, 0.984, 0.595]], [0.421, [1.000, 0.984, 0.595]], [0.423, [1.000, 0.991, 0.597]], [0.425, [1.000, 0.991, 0.597]], [0.427, [1.000, 0.998, 0.599]], [0.429, [1.000, 0.998, 0.599]], [0.431, [0.985, 0.989, 0.602]], [0.432, [0.985, 0.989, 0.602]], [0.434, [0.963, 0.973, 0.604]], [0.436, [0.963, 0.973, 0.604]], [0.438, [0.942, 0.957, 0.607]], [0.440, [0.942, 0.957, 0.607]], [0.442, [0.920, 0.941, 0.609]], [0.444, [0.920, 0.941, 0.609]], [0.446, [0.899, 0.925, 0.612]], [0.448, [0.899, 0.925, 0.612]], [0.450, [0.878, 0.910, 0.614]], [0.452, [0.878, 0.910, 0.614]], [0.454, [0.856, 0.894, 0.617]], [0.456, [0.856, 0.894, 0.617]], [0.458, [0.835, 0.878, 0.619]], [0.460, [0.835, 0.878, 0.619]], [0.462, [0.813, 0.862, 0.622]], [0.464, [0.813, 0.862, 0.622]], [0.466, [0.792, 0.846, 0.624]], [0.468, [0.792, 0.846, 0.624]], [0.470, [0.770, 0.830, 0.627]], [0.472, [0.770, 0.830, 0.627]], [0.474, [0.749, 0.815, 0.629]], [0.476, [0.749, 0.815, 0.629]], [0.477, [0.728, 0.799, 0.631]], [0.479, [0.728, 0.799, 0.631]], [0.481, [0.706, 0.783, 0.634]], [0.483, [0.706, 0.783, 0.634]], [0.485, [0.685, 0.767, 0.636]], [0.487, [0.685, 0.767, 0.636]], [0.489, [0.663, 0.751, 0.639]], [0.491, [0.663, 0.751, 0.639]], [0.493, [0.642, 0.736, 0.641]], [0.495, [0.642, 0.736, 0.641]], [0.497, [0.621, 0.720, 0.644]], [0.499, [0.621, 0.720, 0.644]], [0.501, [0.599, 0.704, 0.646]], [0.503, [0.599, 0.704, 0.646]], [0.505, [0.578, 0.688, 0.649]], [0.507, [0.578, 0.688, 0.649]], [0.509, [0.556, 0.672, 0.651]], [0.511, [0.556, 0.672, 0.651]], [0.513, [0.535, 0.656, 0.654]], [0.515, [0.535, 0.656, 0.654]], [0.517, [0.513, 0.641, 0.656]], [0.519, [0.513, 0.641, 0.656]], [0.521, [0.492, 0.625, 0.659]], [0.523, [0.492, 0.625, 0.659]], [0.524, [0.471, 0.609, 0.661]], [0.526, [0.471, 0.609, 0.661]], [0.528, [0.449, 0.593, 0.664]], [0.530, [0.449, 0.593, 0.664]], [0.532, [0.428, 0.577, 0.666]], [0.534, [0.428, 0.577, 0.666]], [0.536, [0.406, 0.561, 0.669]], [0.538, [0.406, 0.561, 0.669]], [0.540, [0.385, 0.546, 0.671]], [0.542, [0.385, 0.546, 0.671]], [0.544, [0.363, 0.530, 0.674]], [0.546, [0.363, 0.530, 0.674]], [0.548, [0.342, 0.514, 0.676]], [0.550, [0.342, 0.514, 0.676]], [0.552, [0.321, 0.498, 0.679]], [0.554, [0.321, 0.498, 0.679]], [0.556, [0.299, 0.482, 0.681]], [0.558, [0.299, 0.482, 0.681]], [0.560, [0.278, 0.466, 0.683]], [0.562, [0.278, 0.466, 0.683]], [0.564, [0.256, 0.451, 0.686]], [0.566, [0.256, 0.451, 0.686]], [0.568, [0.235, 0.435, 0.688]], [0.569, [0.235, 0.435, 0.688]], [0.571, [0.225, 0.420, 0.689]], [0.573, [0.225, 0.420, 0.689]], [0.575, [0.245, 0.409, 0.683]], [0.577, [0.245, 0.409, 0.683]], [0.579, [0.265, 0.397, 0.678]], [0.581, [0.265, 0.397, 0.678]], [0.583, [0.285, 0.386, 0.673]], [0.585, [0.285, 0.386, 0.673]], [0.587, [0.304, 0.375, 0.668]], [0.589, [0.304, 0.375, 0.668]], [0.591, [0.324, 0.363, 0.662]], [0.593, [0.324, 0.363, 0.662]], [0.595, [0.344, 0.352, 0.657]], [0.597, [0.344, 0.352, 0.657]], [0.599, [0.364, 0.340, 0.652]], [0.601, [0.364, 0.340, 0.652]], [0.603, [0.384, 0.329, 0.646]], [0.605, [0.384, 0.329, 0.646]], [0.607, [0.404, 0.318, 0.641]], [0.609, [0.404, 0.318, 0.641]], [0.611, [0.423, 0.306, 0.636]], [0.613, [0.423, 0.306, 0.636]], [0.614, [0.443, 0.295, 0.631]], [0.616, [0.443, 0.295, 0.631]], [0.618, [0.463, 0.283, 0.625]], [0.620, [0.463, 0.283, 0.625]], [0.622, [0.483, 0.272, 0.620]], [0.624, [0.483, 0.272, 0.620]], [0.626, [0.503, 0.261, 0.615]], [0.628, [0.503, 0.261, 0.615]], [0.630, [0.522, 0.249, 0.610]], [0.632, [0.522, 0.249, 0.610]], [0.634, [0.542, 0.238, 0.604]], [0.636, [0.542, 0.238, 0.604]], [0.638, [0.562, 0.226, 0.599]], [0.640, [0.562, 0.226, 0.599]], [0.642, [0.582, 0.215, 0.594]], [0.644, [0.582, 0.215, 0.594]], [0.646, [0.602, 0.203, 0.588]], [0.648, [0.602, 0.203, 0.588]], [0.650, [0.621, 0.192, 0.583]], [0.652, [0.621, 0.192, 0.583]], [0.654, [0.641, 0.181, 0.578]], [0.656, [0.641, 0.181, 0.578]], [0.658, [0.661, 0.169, 0.573]], [0.659, [0.661, 0.169, 0.573]], [0.661, [0.681, 0.158, 0.567]], [0.663, [0.681, 0.158, 0.567]], [0.665, [0.701, 0.146, 0.562]], [0.667, [0.701, 0.146, 0.562]], [0.669, [0.720, 0.135, 0.557]], [0.671, [0.720, 0.135, 0.557]], [0.673, [0.740, 0.124, 0.552]], [0.675, [0.740, 0.124, 0.552]], [0.677, [0.760, 0.112, 0.546]], [0.679, [0.760, 0.112, 0.546]], [0.681, [0.780, 0.101, 0.541]], [0.683, [0.780, 0.101, 0.541]], [0.685, [0.800, 0.089, 0.536]], [0.687, [0.800, 0.089, 0.536]], [0.689, [0.820, 0.078, 0.530]], [0.691, [0.820, 0.078, 0.530]], [0.693, [0.839, 0.067, 0.525]], [0.695, [0.839, 0.067, 0.525]], [0.697, [0.859, 0.055, 0.520]], [0.699, [0.859, 0.055, 0.520]], [0.701, [0.879, 0.044, 0.515]], [0.703, [0.879, 0.044, 0.515]], [0.705, [0.899, 0.032, 0.509]], [0.706, [0.899, 0.032, 0.509]], [0.708, [0.919, 0.021, 0.504]], [0.710, [0.919, 0.021, 0.504]], [0.712, [0.938, 0.009, 0.499]], [0.714, [0.938, 0.009, 0.499]], [0.716, [0.937, 0.016, 0.488]], [0.718, [0.937, 0.016, 0.488]], [0.720, [0.931, 0.026, 0.477]], [0.722, [0.931, 0.026, 0.477]], [0.724, [0.926, 0.035, 0.466]], [0.726, [0.926, 0.035, 0.466]], [0.728, [0.921, 0.045, 0.455]], [0.730, [0.921, 0.045, 0.455]], [0.732, [0.916, 0.054, 0.444]], [0.734, [0.916, 0.054, 0.444]], [0.736, [0.910, 0.064, 0.432]], [0.738, [0.910, 0.064, 0.432]], [0.740, [0.905, 0.074, 0.421]], [0.742, [0.905, 0.074, 0.421]], [0.744, [0.900, 0.083, 0.410]], [0.746, [0.900, 0.083, 0.410]], [0.748, [0.894, 0.093, 0.399]], [0.750, [0.894, 0.093, 0.399]], [0.751, [0.889, 0.102, 0.388]], [0.753, [0.889, 0.102, 0.388]], [0.755, [0.884, 0.112, 0.376]], [0.757, [0.884, 0.112, 0.376]], [0.759, [0.879, 0.121, 0.365]], [0.761, [0.879, 0.121, 0.365]], [0.763, [0.873, 0.131, 0.354]], [0.765, [0.873, 0.131, 0.354]], [0.767, [0.868, 0.141, 0.343]], [0.769, [0.868, 0.141, 0.343]], [0.771, [0.863, 0.150, 0.332]], [0.773, [0.863, 0.150, 0.332]], [0.775, [0.858, 0.160, 0.321]], [0.777, [0.858, 0.160, 0.321]], [0.779, [0.852, 0.169, 0.309]], [0.781, [0.852, 0.169, 0.309]], [0.783, [0.847, 0.179, 0.298]], [0.785, [0.847, 0.179, 0.298]], [0.787, [0.842, 0.189, 0.287]], [0.789, [0.842, 0.189, 0.287]], [0.791, [0.836, 0.198, 0.276]], [0.793, [0.836, 0.198, 0.276]], [0.795, [0.831, 0.208, 0.265]], [0.796, [0.831, 0.208, 0.265]], [0.798, [0.826, 0.217, 0.253]], [0.800, [0.826, 0.217, 0.253]], [0.802, [0.821, 0.227, 0.242]], [0.804, [0.821, 0.227, 0.242]], [0.806, [0.815, 0.236, 0.231]], [0.808, [0.815, 0.236, 0.231]], [0.810, [0.810, 0.246, 0.220]], [0.812, [0.810, 0.246, 0.220]], [0.814, [0.805, 0.256, 0.209]], [0.816, [0.805, 0.256, 0.209]], [0.818, [0.800, 0.265, 0.197]], [0.820, [0.800, 0.265, 0.197]], [0.822, [0.794, 0.275, 0.186]], [0.824, [0.794, 0.275, 0.186]], [0.826, [0.789, 0.284, 0.175]], [0.828, [0.789, 0.284, 0.175]], [0.830, [0.784, 0.294, 0.164]], [0.832, [0.784, 0.294, 0.164]], [0.834, [0.778, 0.303, 0.153]], [0.836, [0.778, 0.303, 0.153]], [0.838, [0.773, 0.313, 0.141]], [0.840, [0.773, 0.313, 0.141]], [0.841, [0.768, 0.323, 0.130]], [0.843, [0.768, 0.323, 0.130]], [0.845, [0.763, 0.332, 0.119]], [0.847, [0.763, 0.332, 0.119]], [0.849, [0.757, 0.342, 0.108]], [0.851, [0.757, 0.342, 0.108]], [0.853, [0.752, 0.351, 0.097]], [0.855, [0.752, 0.351, 0.097]], [0.857, [0.745, 0.357, 0.094]], [0.859, [0.745, 0.357, 0.094]], [0.861, [0.735, 0.359, 0.102]], [0.863, [0.735, 0.359, 0.102]], [0.865, [0.726, 0.360, 0.111]], [0.867, [0.726, 0.360, 0.111]], [0.869, [0.716, 0.361, 0.119]], [0.871, [0.716, 0.361, 0.119]], [0.873, [0.707, 0.362, 0.128]], [0.875, [0.707, 0.362, 0.128]], [0.877, [0.697, 0.363, 0.136]], [0.879, [0.697, 0.363, 0.136]], [0.881, [0.687, 0.364, 0.145]], [0.883, [0.687, 0.364, 0.145]], [0.885, [0.678, 0.366, 0.153]], [0.886, [0.678, 0.366, 0.153]], [0.888, [0.668, 0.367, 0.162]], [0.890, [0.668, 0.367, 0.162]], [0.892, [0.659, 0.368, 0.170]], [0.894, [0.659, 0.368, 0.170]], [0.896, [0.649, 0.369, 0.179]], [0.898, [0.649, 0.369, 0.179]], [0.900, [0.640, 0.370, 0.187]], [0.902, [0.640, 0.370, 0.187]], [0.904, [0.630, 0.372, 0.196]], [0.906, [0.630, 0.372, 0.196]], [0.908, [0.620, 0.373, 0.204]], [0.910, [0.620, 0.373, 0.204]], [0.912, [0.611, 0.374, 0.213]], [0.914, [0.611, 0.374, 0.213]], [0.916, [0.601, 0.375, 0.221]], [0.918, [0.601, 0.375, 0.221]], [0.920, [0.592, 0.376, 0.230]], [0.922, [0.592, 0.376, 0.230]], [0.924, [0.582, 0.378, 0.238]], [0.926, [0.582, 0.378, 0.238]], [0.928, [0.572, 0.379, 0.247]], [0.930, [0.572, 0.379, 0.247]], [0.932, [0.563, 0.380, 0.255]], [0.933, [0.563, 0.380, 0.255]], [0.935, [0.553, 0.381, 0.264]], [0.937, [0.553, 0.381, 0.264]], [0.939, [0.544, 0.382, 0.272]], [0.941, [0.544, 0.382, 0.272]], [0.943, [0.534, 0.383, 0.281]], [0.945, [0.534, 0.383, 0.281]], [0.947, [0.525, 0.385, 0.289]], [0.949, [0.525, 0.385, 0.289]], [0.951, [0.515, 0.386, 0.298]], [0.953, [0.515, 0.386, 0.298]], [0.955, [0.505, 0.387, 0.306]], [0.957, [0.505, 0.387, 0.306]], [0.959, [0.496, 0.388, 0.315]], [0.961, [0.496, 0.388, 0.315]], [0.963, [0.486, 0.389, 0.323]], [0.965, [0.486, 0.389, 0.323]], [0.967, [0.477, 0.391, 0.332]], [0.969, [0.477, 0.391, 0.332]], [0.971, [0.467, 0.392, 0.340]], [0.973, [0.467, 0.392, 0.340]], [0.975, [0.457, 0.393, 0.349]], [0.977, [0.457, 0.393, 0.349]], [0.978, [0.448, 0.394, 0.357]], [0.980, [0.448, 0.394, 0.357]], [0.982, [0.438, 0.395, 0.366]], [0.984, [0.438, 0.395, 0.366]], [0.986, [0.429, 0.396, 0.374]], [0.988, [0.429, 0.396, 0.374]], [0.990, [0.419, 0.398, 0.383]], [0.992, [0.419, 0.398, 0.383]], [0.994, [0.410, 0.399, 0.391]], [0.996, [0.410, 0.399, 0.391]], [0.998, [0.400, 0.400, 0.400]], [1.000, [0.400, 0.400, 0.400]]];
H.colormap_afmhot = [[0.000, [0.000, 0.000, 0.000]], [0.002, [0.000, 0.000, 0.000]], [0.004, [0.008, 0.000, 0.000]], [0.006, [0.008, 0.000, 0.000]], [0.008, [0.016, 0.000, 0.000]], [0.010, [0.016, 0.000, 0.000]], [0.012, [0.024, 0.000, 0.000]], [0.014, [0.024, 0.000, 0.000]], [0.016, [0.031, 0.000, 0.000]], [0.018, [0.031, 0.000, 0.000]], [0.020, [0.039, 0.000, 0.000]], [0.022, [0.039, 0.000, 0.000]], [0.023, [0.047, 0.000, 0.000]], [0.025, [0.047, 0.000, 0.000]], [0.027, [0.055, 0.000, 0.000]], [0.029, [0.055, 0.000, 0.000]], [0.031, [0.063, 0.000, 0.000]], [0.033, [0.063, 0.000, 0.000]], [0.035, [0.071, 0.000, 0.000]], [0.037, [0.071, 0.000, 0.000]], [0.039, [0.078, 0.000, 0.000]], [0.041, [0.078, 0.000, 0.000]], [0.043, [0.086, 0.000, 0.000]], [0.045, [0.086, 0.000, 0.000]], [0.047, [0.094, 0.000, 0.000]], [0.049, [0.094, 0.000, 0.000]], [0.051, [0.102, 0.000, 0.000]], [0.053, [0.102, 0.000, 0.000]], [0.055, [0.110, 0.000, 0.000]], [0.057, [0.110, 0.000, 0.000]], [0.059, [0.118, 0.000, 0.000]], [0.061, [0.118, 0.000, 0.000]], [0.063, [0.125, 0.000, 0.000]], [0.065, [0.125, 0.000, 0.000]], [0.067, [0.133, 0.000, 0.000]], [0.068, [0.133, 0.000, 0.000]], [0.070, [0.141, 0.000, 0.000]], [0.072, [0.141, 0.000, 0.000]], [0.074, [0.149, 0.000, 0.000]], [0.076, [0.149, 0.000, 0.000]], [0.078, [0.157, 0.000, 0.000]], [0.080, [0.157, 0.000, 0.000]], [0.082, [0.165, 0.000, 0.000]], [0.084, [0.165, 0.000, 0.000]], [0.086, [0.173, 0.000, 0.000]], [0.088, [0.173, 0.000, 0.000]], [0.090, [0.180, 0.000, 0.000]], [0.092, [0.180, 0.000, 0.000]], [0.094, [0.188, 0.000, 0.000]], [0.096, [0.188, 0.000, 0.000]], [0.098, [0.196, 0.000, 0.000]], [0.100, [0.196, 0.000, 0.000]], [0.102, [0.204, 0.000, 0.000]], [0.104, [0.204, 0.000, 0.000]], [0.106, [0.212, 0.000, 0.000]], [0.108, [0.212, 0.000, 0.000]], [0.110, [0.220, 0.000, 0.000]], [0.112, [0.220, 0.000, 0.000]], [0.114, [0.227, 0.000, 0.000]], [0.115, [0.227, 0.000, 0.000]], [0.117, [0.235, 0.000, 0.000]], [0.119, [0.235, 0.000, 0.000]], [0.121, [0.243, 0.000, 0.000]], [0.123, [0.243, 0.000, 0.000]], [0.125, [0.251, 0.000, 0.000]], [0.127, [0.251, 0.000, 0.000]], [0.129, [0.259, 0.000, 0.000]], [0.131, [0.259, 0.000, 0.000]], [0.133, [0.267, 0.000, 0.000]], [0.135, [0.267, 0.000, 0.000]], [0.137, [0.275, 0.000, 0.000]], [0.139, [0.275, 0.000, 0.000]], [0.141, [0.282, 0.000, 0.000]], [0.143, [0.282, 0.000, 0.000]], [0.145, [0.290, 0.000, 0.000]], [0.147, [0.290, 0.000, 0.000]], [0.149, [0.298, 0.000, 0.000]], [0.151, [0.298, 0.000, 0.000]], [0.153, [0.306, 0.000, 0.000]], [0.155, [0.306, 0.000, 0.000]], [0.157, [0.314, 0.000, 0.000]], [0.159, [0.314, 0.000, 0.000]], [0.160, [0.322, 0.000, 0.000]], [0.162, [0.322, 0.000, 0.000]], [0.164, [0.329, 0.000, 0.000]], [0.166, [0.329, 0.000, 0.000]], [0.168, [0.337, 0.000, 0.000]], [0.170, [0.337, 0.000, 0.000]], [0.172, [0.345, 0.000, 0.000]], [0.174, [0.345, 0.000, 0.000]], [0.176, [0.353, 0.000, 0.000]], [0.178, [0.353, 0.000, 0.000]], [0.180, [0.361, 0.000, 0.000]], [0.182, [0.361, 0.000, 0.000]], [0.184, [0.369, 0.000, 0.000]], [0.186, [0.369, 0.000, 0.000]], [0.188, [0.376, 0.000, 0.000]], [0.190, [0.376, 0.000, 0.000]], [0.192, [0.384, 0.000, 0.000]], [0.194, [0.384, 0.000, 0.000]], [0.196, [0.392, 0.000, 0.000]], [0.198, [0.392, 0.000, 0.000]], [0.200, [0.400, 0.000, 0.000]], [0.202, [0.400, 0.000, 0.000]], [0.204, [0.408, 0.000, 0.000]], [0.205, [0.408, 0.000, 0.000]], [0.207, [0.416, 0.000, 0.000]], [0.209, [0.416, 0.000, 0.000]], [0.211, [0.424, 0.000, 0.000]], [0.213, [0.424, 0.000, 0.000]], [0.215, [0.431, 0.000, 0.000]], [0.217, [0.431, 0.000, 0.000]], [0.219, [0.439, 0.000, 0.000]], [0.221, [0.439, 0.000, 0.000]], [0.223, [0.447, 0.000, 0.000]], [0.225, [0.447, 0.000, 0.000]], [0.227, [0.455, 0.000, 0.000]], [0.229, [0.455, 0.000, 0.000]], [0.231, [0.463, 0.000, 0.000]], [0.233, [0.463, 0.000, 0.000]], [0.235, [0.471, 0.000, 0.000]], [0.237, [0.471, 0.000, 0.000]], [0.239, [0.478, 0.000, 0.000]], [0.241, [0.478, 0.000, 0.000]], [0.243, [0.486, 0.000, 0.000]], [0.245, [0.486, 0.000, 0.000]], [0.247, [0.494, 0.000, 0.000]], [0.249, [0.494, 0.000, 0.000]], [0.250, [0.502, 0.002, 0.000]], [0.252, [0.502, 0.002, 0.000]], [0.254, [0.510, 0.010, 0.000]], [0.256, [0.510, 0.010, 0.000]], [0.258, [0.518, 0.018, 0.000]], [0.260, [0.518, 0.018, 0.000]], [0.262, [0.525, 0.025, 0.000]], [0.264, [0.525, 0.025, 0.000]], [0.266, [0.533, 0.033, 0.000]], [0.268, [0.533, 0.033, 0.000]], [0.270, [0.541, 0.041, 0.000]], [0.272, [0.541, 0.041, 0.000]], [0.274, [0.549, 0.049, 0.000]], [0.276, [0.549, 0.049, 0.000]], [0.278, [0.557, 0.057, 0.000]], [0.280, [0.557, 0.057, 0.000]], [0.282, [0.565, 0.065, 0.000]], [0.284, [0.565, 0.065, 0.000]], [0.286, [0.573, 0.073, 0.000]], [0.288, [0.573, 0.073, 0.000]], [0.290, [0.580, 0.080, 0.000]], [0.292, [0.580, 0.080, 0.000]], [0.294, [0.588, 0.088, 0.000]], [0.295, [0.588, 0.088, 0.000]], [0.297, [0.596, 0.096, 0.000]], [0.299, [0.596, 0.096, 0.000]], [0.301, [0.604, 0.104, 0.000]], [0.303, [0.604, 0.104, 0.000]], [0.305, [0.612, 0.112, 0.000]], [0.307, [0.612, 0.112, 0.000]], [0.309, [0.620, 0.120, 0.000]], [0.311, [0.620, 0.120, 0.000]], [0.313, [0.627, 0.127, 0.000]], [0.315, [0.627, 0.127, 0.000]], [0.317, [0.635, 0.135, 0.000]], [0.319, [0.635, 0.135, 0.000]], [0.321, [0.643, 0.143, 0.000]], [0.323, [0.643, 0.143, 0.000]], [0.325, [0.651, 0.151, 0.000]], [0.327, [0.651, 0.151, 0.000]], [0.329, [0.659, 0.159, 0.000]], [0.331, [0.659, 0.159, 0.000]], [0.333, [0.667, 0.167, 0.000]], [0.335, [0.667, 0.167, 0.000]], [0.337, [0.675, 0.175, 0.000]], [0.339, [0.675, 0.175, 0.000]], [0.341, [0.682, 0.182, 0.000]], [0.342, [0.682, 0.182, 0.000]], [0.344, [0.690, 0.190, 0.000]], [0.346, [0.690, 0.190, 0.000]], [0.348, [0.698, 0.198, 0.000]], [0.350, [0.698, 0.198, 0.000]], [0.352, [0.706, 0.206, 0.000]], [0.354, [0.706, 0.206, 0.000]], [0.356, [0.714, 0.214, 0.000]], [0.358, [0.714, 0.214, 0.000]], [0.360, [0.722, 0.222, 0.000]], [0.362, [0.722, 0.222, 0.000]], [0.364, [0.729, 0.229, 0.000]], [0.366, [0.729, 0.229, 0.000]], [0.368, [0.737, 0.237, 0.000]], [0.370, [0.737, 0.237, 0.000]], [0.372, [0.745, 0.245, 0.000]], [0.374, [0.745, 0.245, 0.000]], [0.376, [0.753, 0.253, 0.000]], [0.378, [0.753, 0.253, 0.000]], [0.380, [0.761, 0.261, 0.000]], [0.382, [0.761, 0.261, 0.000]], [0.384, [0.769, 0.269, 0.000]], [0.386, [0.769, 0.269, 0.000]], [0.387, [0.776, 0.276, 0.000]], [0.389, [0.776, 0.276, 0.000]], [0.391, [0.784, 0.284, 0.000]], [0.393, [0.784, 0.284, 0.000]], [0.395, [0.792, 0.292, 0.000]], [0.397, [0.792, 0.292, 0.000]], [0.399, [0.800, 0.300, 0.000]], [0.401, [0.800, 0.300, 0.000]], [0.403, [0.808, 0.308, 0.000]], [0.405, [0.808, 0.308, 0.000]], [0.407, [0.816, 0.316, 0.000]], [0.409, [0.816, 0.316, 0.000]], [0.411, [0.824, 0.324, 0.000]], [0.413, [0.824, 0.324, 0.000]], [0.415, [0.831, 0.331, 0.000]], [0.417, [0.831, 0.331, 0.000]], [0.419, [0.839, 0.339, 0.000]], [0.421, [0.839, 0.339, 0.000]], [0.423, [0.847, 0.347, 0.000]], [0.425, [0.847, 0.347, 0.000]], [0.427, [0.855, 0.355, 0.000]], [0.429, [0.855, 0.355, 0.000]], [0.431, [0.863, 0.363, 0.000]], [0.432, [0.863, 0.363, 0.000]], [0.434, [0.871, 0.371, 0.000]], [0.436, [0.871, 0.371, 0.000]], [0.438, [0.878, 0.378, 0.000]], [0.440, [0.878, 0.378, 0.000]], [0.442, [0.886, 0.386, 0.000]], [0.444, [0.886, 0.386, 0.000]], [0.446, [0.894, 0.394, 0.000]], [0.448, [0.894, 0.394, 0.000]], [0.450, [0.902, 0.402, 0.000]], [0.452, [0.902, 0.402, 0.000]], [0.454, [0.910, 0.410, 0.000]], [0.456, [0.910, 0.410, 0.000]], [0.458, [0.918, 0.418, 0.000]], [0.460, [0.918, 0.418, 0.000]], [0.462, [0.925, 0.425, 0.000]], [0.464, [0.925, 0.425, 0.000]], [0.466, [0.933, 0.433, 0.000]], [0.468, [0.933, 0.433, 0.000]], [0.470, [0.941, 0.441, 0.000]], [0.472, [0.941, 0.441, 0.000]], [0.474, [0.949, 0.449, 0.000]], [0.476, [0.949, 0.449, 0.000]], [0.477, [0.957, 0.457, 0.000]], [0.479, [0.957, 0.457, 0.000]], [0.481, [0.965, 0.465, 0.000]], [0.483, [0.965, 0.465, 0.000]], [0.485, [0.973, 0.473, 0.000]], [0.487, [0.973, 0.473, 0.000]], [0.489, [0.980, 0.480, 0.000]], [0.491, [0.980, 0.480, 0.000]], [0.493, [0.988, 0.488, 0.000]], [0.495, [0.988, 0.488, 0.000]], [0.497, [0.996, 0.496, 0.000]], [0.499, [0.996, 0.496, 0.000]], [0.501, [1.000, 0.504, 0.004]], [0.503, [1.000, 0.504, 0.004]], [0.505, [1.000, 0.512, 0.012]], [0.507, [1.000, 0.512, 0.012]], [0.509, [1.000, 0.520, 0.020]], [0.511, [1.000, 0.520, 0.020]], [0.513, [1.000, 0.527, 0.027]], [0.515, [1.000, 0.527, 0.027]], [0.517, [1.000, 0.535, 0.035]], [0.519, [1.000, 0.535, 0.035]], [0.521, [1.000, 0.543, 0.043]], [0.523, [1.000, 0.543, 0.043]], [0.524, [1.000, 0.551, 0.051]], [0.526, [1.000, 0.551, 0.051]], [0.528, [1.000, 0.559, 0.059]], [0.530, [1.000, 0.559, 0.059]], [0.532, [1.000, 0.567, 0.067]], [0.534, [1.000, 0.567, 0.067]], [0.536, [1.000, 0.575, 0.075]], [0.538, [1.000, 0.575, 0.075]], [0.540, [1.000, 0.582, 0.082]], [0.542, [1.000, 0.582, 0.082]], [0.544, [1.000, 0.590, 0.090]], [0.546, [1.000, 0.590, 0.090]], [0.548, [1.000, 0.598, 0.098]], [0.550, [1.000, 0.598, 0.098]], [0.552, [1.000, 0.606, 0.106]], [0.554, [1.000, 0.606, 0.106]], [0.556, [1.000, 0.614, 0.114]], [0.558, [1.000, 0.614, 0.114]], [0.560, [1.000, 0.622, 0.122]], [0.562, [1.000, 0.622, 0.122]], [0.564, [1.000, 0.629, 0.129]], [0.566, [1.000, 0.629, 0.129]], [0.568, [1.000, 0.637, 0.137]], [0.569, [1.000, 0.637, 0.137]], [0.571, [1.000, 0.645, 0.145]], [0.573, [1.000, 0.645, 0.145]], [0.575, [1.000, 0.653, 0.153]], [0.577, [1.000, 0.653, 0.153]], [0.579, [1.000, 0.661, 0.161]], [0.581, [1.000, 0.661, 0.161]], [0.583, [1.000, 0.669, 0.169]], [0.585, [1.000, 0.669, 0.169]], [0.587, [1.000, 0.676, 0.176]], [0.589, [1.000, 0.676, 0.176]], [0.591, [1.000, 0.684, 0.184]], [0.593, [1.000, 0.684, 0.184]], [0.595, [1.000, 0.692, 0.192]], [0.597, [1.000, 0.692, 0.192]], [0.599, [1.000, 0.700, 0.200]], [0.601, [1.000, 0.700, 0.200]], [0.603, [1.000, 0.708, 0.208]], [0.605, [1.000, 0.708, 0.208]], [0.607, [1.000, 0.716, 0.216]], [0.609, [1.000, 0.716, 0.216]], [0.611, [1.000, 0.724, 0.224]], [0.613, [1.000, 0.724, 0.224]], [0.614, [1.000, 0.731, 0.231]], [0.616, [1.000, 0.731, 0.231]], [0.618, [1.000, 0.739, 0.239]], [0.620, [1.000, 0.739, 0.239]], [0.622, [1.000, 0.747, 0.247]], [0.624, [1.000, 0.747, 0.247]], [0.626, [1.000, 0.755, 0.255]], [0.628, [1.000, 0.755, 0.255]], [0.630, [1.000, 0.763, 0.263]], [0.632, [1.000, 0.763, 0.263]], [0.634, [1.000, 0.771, 0.271]], [0.636, [1.000, 0.771, 0.271]], [0.638, [1.000, 0.778, 0.278]], [0.640, [1.000, 0.778, 0.278]], [0.642, [1.000, 0.786, 0.286]], [0.644, [1.000, 0.786, 0.286]], [0.646, [1.000, 0.794, 0.294]], [0.648, [1.000, 0.794, 0.294]], [0.650, [1.000, 0.802, 0.302]], [0.652, [1.000, 0.802, 0.302]], [0.654, [1.000, 0.810, 0.310]], [0.656, [1.000, 0.810, 0.310]], [0.658, [1.000, 0.818, 0.318]], [0.659, [1.000, 0.818, 0.318]], [0.661, [1.000, 0.825, 0.325]], [0.663, [1.000, 0.825, 0.325]], [0.665, [1.000, 0.833, 0.333]], [0.667, [1.000, 0.833, 0.333]], [0.669, [1.000, 0.841, 0.341]], [0.671, [1.000, 0.841, 0.341]], [0.673, [1.000, 0.849, 0.349]], [0.675, [1.000, 0.849, 0.349]], [0.677, [1.000, 0.857, 0.357]], [0.679, [1.000, 0.857, 0.357]], [0.681, [1.000, 0.865, 0.365]], [0.683, [1.000, 0.865, 0.365]], [0.685, [1.000, 0.873, 0.373]], [0.687, [1.000, 0.873, 0.373]], [0.689, [1.000, 0.880, 0.380]], [0.691, [1.000, 0.880, 0.380]], [0.693, [1.000, 0.888, 0.388]], [0.695, [1.000, 0.888, 0.388]], [0.697, [1.000, 0.896, 0.396]], [0.699, [1.000, 0.896, 0.396]], [0.701, [1.000, 0.904, 0.404]], [0.703, [1.000, 0.904, 0.404]], [0.705, [1.000, 0.912, 0.412]], [0.706, [1.000, 0.912, 0.412]], [0.708, [1.000, 0.920, 0.420]], [0.710, [1.000, 0.920, 0.420]], [0.712, [1.000, 0.927, 0.427]], [0.714, [1.000, 0.927, 0.427]], [0.716, [1.000, 0.935, 0.435]], [0.718, [1.000, 0.935, 0.435]], [0.720, [1.000, 0.943, 0.443]], [0.722, [1.000, 0.943, 0.443]], [0.724, [1.000, 0.951, 0.451]], [0.726, [1.000, 0.951, 0.451]], [0.728, [1.000, 0.959, 0.459]], [0.730, [1.000, 0.959, 0.459]], [0.732, [1.000, 0.967, 0.467]], [0.734, [1.000, 0.967, 0.467]], [0.736, [1.000, 0.975, 0.475]], [0.738, [1.000, 0.975, 0.475]], [0.740, [1.000, 0.982, 0.482]], [0.742, [1.000, 0.982, 0.482]], [0.744, [1.000, 0.990, 0.490]], [0.746, [1.000, 0.990, 0.490]], [0.748, [1.000, 0.998, 0.498]], [0.750, [1.000, 0.998, 0.498]], [0.751, [1.000, 1.000, 0.506]], [0.753, [1.000, 1.000, 0.506]], [0.755, [1.000, 1.000, 0.514]], [0.757, [1.000, 1.000, 0.514]], [0.759, [1.000, 1.000, 0.522]], [0.761, [1.000, 1.000, 0.522]], [0.763, [1.000, 1.000, 0.529]], [0.765, [1.000, 1.000, 0.529]], [0.767, [1.000, 1.000, 0.537]], [0.769, [1.000, 1.000, 0.537]], [0.771, [1.000, 1.000, 0.545]], [0.773, [1.000, 1.000, 0.545]], [0.775, [1.000, 1.000, 0.553]], [0.777, [1.000, 1.000, 0.553]], [0.779, [1.000, 1.000, 0.561]], [0.781, [1.000, 1.000, 0.561]], [0.783, [1.000, 1.000, 0.569]], [0.785, [1.000, 1.000, 0.569]], [0.787, [1.000, 1.000, 0.576]], [0.789, [1.000, 1.000, 0.576]], [0.791, [1.000, 1.000, 0.584]], [0.793, [1.000, 1.000, 0.584]], [0.795, [1.000, 1.000, 0.592]], [0.796, [1.000, 1.000, 0.592]], [0.798, [1.000, 1.000, 0.600]], [0.800, [1.000, 1.000, 0.600]], [0.802, [1.000, 1.000, 0.608]], [0.804, [1.000, 1.000, 0.608]], [0.806, [1.000, 1.000, 0.616]], [0.808, [1.000, 1.000, 0.616]], [0.810, [1.000, 1.000, 0.624]], [0.812, [1.000, 1.000, 0.624]], [0.814, [1.000, 1.000, 0.631]], [0.816, [1.000, 1.000, 0.631]], [0.818, [1.000, 1.000, 0.639]], [0.820, [1.000, 1.000, 0.639]], [0.822, [1.000, 1.000, 0.647]], [0.824, [1.000, 1.000, 0.647]], [0.826, [1.000, 1.000, 0.655]], [0.828, [1.000, 1.000, 0.655]], [0.830, [1.000, 1.000, 0.663]], [0.832, [1.000, 1.000, 0.663]], [0.834, [1.000, 1.000, 0.671]], [0.836, [1.000, 1.000, 0.671]], [0.838, [1.000, 1.000, 0.678]], [0.840, [1.000, 1.000, 0.678]], [0.841, [1.000, 1.000, 0.686]], [0.843, [1.000, 1.000, 0.686]], [0.845, [1.000, 1.000, 0.694]], [0.847, [1.000, 1.000, 0.694]], [0.849, [1.000, 1.000, 0.702]], [0.851, [1.000, 1.000, 0.702]], [0.853, [1.000, 1.000, 0.710]], [0.855, [1.000, 1.000, 0.710]], [0.857, [1.000, 1.000, 0.718]], [0.859, [1.000, 1.000, 0.718]], [0.861, [1.000, 1.000, 0.725]], [0.863, [1.000, 1.000, 0.725]], [0.865, [1.000, 1.000, 0.733]], [0.867, [1.000, 1.000, 0.733]], [0.869, [1.000, 1.000, 0.741]], [0.871, [1.000, 1.000, 0.741]], [0.873, [1.000, 1.000, 0.749]], [0.875, [1.000, 1.000, 0.749]], [0.877, [1.000, 1.000, 0.757]], [0.879, [1.000, 1.000, 0.757]], [0.881, [1.000, 1.000, 0.765]], [0.883, [1.000, 1.000, 0.765]], [0.885, [1.000, 1.000, 0.773]], [0.886, [1.000, 1.000, 0.773]], [0.888, [1.000, 1.000, 0.780]], [0.890, [1.000, 1.000, 0.780]], [0.892, [1.000, 1.000, 0.788]], [0.894, [1.000, 1.000, 0.788]], [0.896, [1.000, 1.000, 0.796]], [0.898, [1.000, 1.000, 0.796]], [0.900, [1.000, 1.000, 0.804]], [0.902, [1.000, 1.000, 0.804]], [0.904, [1.000, 1.000, 0.812]], [0.906, [1.000, 1.000, 0.812]], [0.908, [1.000, 1.000, 0.820]], [0.910, [1.000, 1.000, 0.820]], [0.912, [1.000, 1.000, 0.827]], [0.914, [1.000, 1.000, 0.827]], [0.916, [1.000, 1.000, 0.835]], [0.918, [1.000, 1.000, 0.835]], [0.920, [1.000, 1.000, 0.843]], [0.922, [1.000, 1.000, 0.843]], [0.924, [1.000, 1.000, 0.851]], [0.926, [1.000, 1.000, 0.851]], [0.928, [1.000, 1.000, 0.859]], [0.930, [1.000, 1.000, 0.859]], [0.932, [1.000, 1.000, 0.867]], [0.933, [1.000, 1.000, 0.867]], [0.935, [1.000, 1.000, 0.875]], [0.937, [1.000, 1.000, 0.875]], [0.939, [1.000, 1.000, 0.882]], [0.941, [1.000, 1.000, 0.882]], [0.943, [1.000, 1.000, 0.890]], [0.945, [1.000, 1.000, 0.890]], [0.947, [1.000, 1.000, 0.898]], [0.949, [1.000, 1.000, 0.898]], [0.951, [1.000, 1.000, 0.906]], [0.953, [1.000, 1.000, 0.906]], [0.955, [1.000, 1.000, 0.914]], [0.957, [1.000, 1.000, 0.914]], [0.959, [1.000, 1.000, 0.922]], [0.961, [1.000, 1.000, 0.922]], [0.963, [1.000, 1.000, 0.929]], [0.965, [1.000, 1.000, 0.929]], [0.967, [1.000, 1.000, 0.937]], [0.969, [1.000, 1.000, 0.937]], [0.971, [1.000, 1.000, 0.945]], [0.973, [1.000, 1.000, 0.945]], [0.975, [1.000, 1.000, 0.953]], [0.977, [1.000, 1.000, 0.953]], [0.978, [1.000, 1.000, 0.961]], [0.980, [1.000, 1.000, 0.961]], [0.982, [1.000, 1.000, 0.969]], [0.984, [1.000, 1.000, 0.969]], [0.986, [1.000, 1.000, 0.976]], [0.988, [1.000, 1.000, 0.976]], [0.990, [1.000, 1.000, 0.984]], [0.992, [1.000, 1.000, 0.984]], [0.994, [1.000, 1.000, 0.992]], [0.996, [1.000, 1.000, 0.992]], [0.998, [1.000, 1.000, 1.000]], [1.000, [1.000, 1.000, 1.000]]];
H.colormap_algae = [[0.000,[0.84290226,0.97691284,0.81464957]],[0.004,[0.83798987,0.97324073,0.80884306]],[0.008,[0.83307920,0.96958222,0.80305326]],[0.012,[0.82817006,0.96593722,0.79728024]],[0.016,[0.82325913,0.96230716,0.79151775]],[0.020,[0.81834917,0.95869047,0.78577205]],[0.024,[0.81344004,0.95508703,0.78004330]],[0.027,[0.80852873,0.95149810,0.77432618]],[0.031,[0.80361734,0.94792244,0.76862535]],[0.035,[0.79870604,0.94435980,0.76294165]],[0.039,[0.79379251,0.94081106,0.75727124]],[0.043,[0.78887747,0.93727567,0.75161605]],[0.047,[0.78396177,0.93375306,0.74597816]],[0.051,[0.77904414,0.93024359,0.74035579]],[0.055,[0.77412316,0.92674772,0.73474699]],[0.059,[0.76920074,0.92326438,0.72915567]],[0.063,[0.76427661,0.91979348,0.72358186]],[0.067,[0.75934783,0.91633616,0.71802108]],[0.071,[0.75441627,0.91289135,0.71247711]],[0.075,[0.74948217,0.90945876,0.70695082]],[0.078,[0.74454464,0.90603859,0.70144129]],[0.082,[0.73960143,0.90263159,0.69594546]],[0.086,[0.73465479,0.89923659,0.69046752]],[0.090,[0.72970443,0.89585351,0.68500748]],[0.094,[0.72474903,0.89248272,0.67956388]],[0.098,[0.71978715,0.88912459,0.67413514]],[0.102,[0.71482059,0.88577817,0.66872453]],[0.106,[0.70984902,0.88244339,0.66333210]],[0.110,[0.70487156,0.87912041,0.65795710]],[0.114,[0.69988588,0.87580994,0.65259689]],[0.118,[0.69489414,0.87251091,0.64725509]],[0.122,[0.68989598,0.86922324,0.64193178]],[0.125,[0.68489103,0.86594688,0.63662701]],[0.129,[0.67987695,0.86268250,0.63133830]],[0.133,[0.67485427,0.85942969,0.62606703]],[0.137,[0.66982361,0.85618797,0.62081462]],[0.141,[0.66478454,0.85295730,0.61558114]],[0.145,[0.65973664,0.84973760,0.61036667]],[0.149,[0.65467785,0.84652942,0.60516941]],[0.153,[0.64960814,0.84333252,0.59999004]],[0.157,[0.64452821,0.84014641,0.59483008]],[0.161,[0.63943758,0.83697102,0.58968966]],[0.165,[0.63433574,0.83380631,0.58456889]],[0.169,[0.62922216,0.83065222,0.57946790]],[0.173,[0.62409506,0.82750913,0.57438551]],[0.176,[0.61895395,0.82437694,0.56932201]],[0.180,[0.61379944,0.82125518,0.56427887]],[0.184,[0.60863092,0.81814380,0.55925625]],[0.188,[0.60344779,0.81504274,0.55425434]],[0.192,[0.59824938,0.81195197,0.54927334]],[0.196,[0.59303502,0.80887141,0.54431345]],[0.200,[0.58780400,0.80580103,0.53937491]],[0.204,[0.58255560,0.80274077,0.53445795]],[0.208,[0.57728767,0.79969103,0.52956161]],[0.212,[0.57200073,0.79665133,0.52468740]],[0.216,[0.56669416,0.79362156,0.51983577]],[0.220,[0.56136709,0.79060167,0.51500705]],[0.224,[0.55601867,0.78759161,0.51020160]],[0.227,[0.55064796,0.78459132,0.50541978]],[0.231,[0.54525401,0.78160076,0.50066200]],[0.235,[0.53983582,0.77861987,0.49592870]],[0.239,[0.53439237,0.77564860,0.49122035]],[0.243,[0.52892256,0.77268689,0.48653744]],[0.247,[0.52342527,0.76973468,0.48188052]],[0.251,[0.51789934,0.76679191,0.47725017]],[0.255,[0.51234353,0.76385852,0.47264701]],[0.259,[0.50675657,0.76093444,0.46807172]],[0.263,[0.50113714,0.75801961,0.46352502]],[0.267,[0.49548385,0.75511394,0.45900769]],[0.271,[0.48979527,0.75221736,0.45452056]],[0.275,[0.48406816,0.74933022,0.45006358]],[0.278,[0.47830134,0.74645233,0.44563802]],[0.282,[0.47249405,0.74358334,0.44124545]],[0.286,[0.46664458,0.74072315,0.43688699]],[0.290,[0.46075114,0.73787164,0.43256386]],[0.294,[0.45481188,0.73502867,0.42827737]],[0.298,[0.44882469,0.73219416,0.42402884]],[0.302,[0.44278167,0.72936931,0.41981738]],[0.306,[0.43668612,0.72655264,0.41564705]],[0.310,[0.43053587,0.72374398,0.41151964]],[0.314,[0.42432867,0.72094309,0.40743704]],[0.318,[0.41805337,0.71815166,0.40339835]],[0.322,[0.41171522,0.71536770,0.39940867]],[0.325,[0.40531204,0.71259083,0.39547048]],[0.329,[0.39883103,0.70982284,0.39158356]],[0.333,[0.39227735,0.70706166,0.38775317]],[0.337,[0.38564530,0.70430747,0.38398168]],[0.341,[0.37892642,0.70156084,0.38027132]],[0.345,[0.37212492,0.69881984,0.37662736]],[0.349,[0.36522563,0.69608614,0.37305153]],[0.353,[0.35823533,0.69335721,0.36954994]],[0.357,[0.35114051,0.69063416,0.36612568]],[0.361,[0.34394207,0.68791541,0.36278437]],[0.365,[0.33663762,0.68519990,0.35953132]],[0.369,[0.32921313,0.68248841,0.35637146]],[0.373,[0.32167446,0.67977832,0.35331149]],[0.376,[0.31401727,0.67706862,0.35035755]],[0.380,[0.30623756,0.67435818,0.34751622]],[0.384,[0.29833024,0.67164589,0.34479452]],[0.388,[0.29030037,0.66892916,0.34219931]],[0.392,[0.28214978,0.66620584,0.33973735]],[0.396,[0.27388290,0.66347352,0.33741504]],[0.400,[0.26550717,0.66072943,0.33523810]],[0.404,[0.25703342,0.65797057,0.33321113]],[0.408,[0.24847602,0.65519373,0.33133728]],[0.412,[0.23985293,0.65239558,0.32961779]],[0.416,[0.23118418,0.64957297,0.32805203]],[0.420,[0.22249597,0.64672254,0.32663605]],[0.424,[0.21381461,0.64384147,0.32536378]],[0.427,[0.20516717,0.64092740,0.32422681]],[0.431,[0.19658051,0.63797853,0.32321469]],[0.435,[0.18808025,0.63499369,0.32231537]],[0.439,[0.17969137,0.63197223,0.32151494]],[0.443,[0.17143307,0.62891434,0.32080039]],[0.447,[0.16332236,0.62582066,0.32015839]],[0.451,[0.15537304,0.62269226,0.31957617]],[0.455,[0.14759587,0.61953055,0.31904185]],[0.459,[0.13999895,0.61633720,0.31854464]],[0.463,[0.13258816,0.61311399,0.31807501]],[0.467,[0.12536778,0.60986280,0.31762468]],[0.471,[0.11834151,0.60658549,0.31718585]],[0.475,[0.11151261,0.60328396,0.31675059]],[0.478,[0.10488194,0.59995997,0.31631578]],[0.482,[0.09845230,0.59661516,0.31587743]],[0.486,[0.09222724,0.59325117,0.31543058]],[0.490,[0.08620977,0.58986967,0.31496950]],[0.494,[0.08040588,0.58647176,0.31449636]],[0.498,[0.07481987,0.58305904,0.31400453]],[0.502,[0.06946030,0.57963256,0.31349439]],[0.506,[0.06433628,0.57619346,0.31296410]],[0.510,[0.05945722,0.57274288,0.31241135]],[0.514,[0.05483677,0.56928169,0.31183596]],[0.518,[0.05049037,0.56581074,0.31123743]],[0.522,[0.04642777,0.56233118,0.31061247]],[0.525,[0.04267874,0.55884313,0.30996532]],[0.529,[0.03923368,0.55534819,0.30928930]],[0.533,[0.03621581,0.55184641,0.30858828]],[0.537,[0.03367174,0.54833822,0.30786290]],[0.541,[0.03155357,0.54482496,0.30710846]],[0.545,[0.02984163,0.54130675,0.30632735]],[0.549,[0.02851433,0.53778386,0.30552072]],[0.553,[0.02754542,0.53425678,0.30468824]],[0.557,[0.02689570,0.53072659,0.30382669]],[0.561,[0.02655111,0.52719334,0.30293807]],[0.565,[0.02649479,0.52365722,0.30202332]],[0.569,[0.02670582,0.52011863,0.30108235]],[0.573,[0.02716441,0.51657792,0.30011510]],[0.576,[0.02785177,0.51303546,0.29912154]],[0.580,[0.02874508,0.50949179,0.29810087]],[0.584,[0.02982666,0.50594726,0.29705307]],[0.588,[0.03108771,0.50240186,0.29597942]],[0.592,[0.03251323,0.49885586,0.29488003]],[0.596,[0.03408899,0.49530953,0.29375502]],[0.600,[0.03580155,0.49176311,0.29260454]],[0.604,[0.03763814,0.48821682,0.29142876]],[0.608,[0.03958670,0.48467089,0.29022786]],[0.612,[0.04160606,0.48112551,0.28900203]],[0.616,[0.04364369,0.47758089,0.28775151]],[0.620,[0.04569662,0.47403719,0.28647649]],[0.624,[0.04775453,0.47049459,0.28517723]],[0.627,[0.04980869,0.46695324,0.28385397]],[0.631,[0.05185174,0.46341330,0.28250695]],[0.635,[0.05387746,0.45987489,0.28113643]],[0.639,[0.05588066,0.45633814,0.27974269]],[0.643,[0.05785702,0.45280318,0.27832599]],[0.647,[0.05979877,0.44927035,0.27688596]],[0.651,[0.06170041,0.44573995,0.27542249]],[0.655,[0.06356557,0.44221171,0.27393677]],[0.659,[0.06539233,0.43868571,0.27242909]],[0.663,[0.06717918,0.43516204,0.27089974]],[0.667,[0.06892492,0.43164076,0.26934902]],[0.671,[0.07062863,0.42812193,0.26777721]],[0.675,[0.07228966,0.42460561,0.26618462]],[0.678,[0.07389642,0.42109266,0.26456976]],[0.682,[0.07545435,0.41758275,0.26293384]],[0.686,[0.07696833,0.41407555,0.26127794]],[0.690,[0.07843839,0.41057109,0.25960234]],[0.694,[0.07986463,0.40706939,0.25790734]],[0.698,[0.08124183,0.40357090,0.25619236]],[0.702,[0.08256190,0.40007639,0.25445635]],[0.706,[0.08383877,0.39658475,0.25270175]],[0.710,[0.08507286,0.39309597,0.25092886]],[0.714,[0.08626466,0.38961004,0.24913796]],[0.718,[0.08739776,0.38612850,0.24732662]],[0.722,[0.08848513,0.38265026,0.24549710]],[0.725,[0.08953167,0.37917490,0.24365037]],[0.729,[0.09053798,0.37570238,0.24178670]],[0.733,[0.09148554,0.37223456,0.23990332]],[0.737,[0.09239033,0.36876996,0.23800293]],[0.741,[0.09325665,0.36530817,0.23608636]],[0.745,[0.09407947,0.36184972,0.23415298]],[0.749,[0.09484678,0.35839595,0.23220107]],[0.753,[0.09557752,0.35494489,0.23023372]],[0.757,[0.09627239,0.35149649,0.22825119]],[0.761,[0.09690948,0.34805320,0.22625023]],[0.765,[0.09750943,0.34461278,0.22423417]],[0.769,[0.09807546,0.34117488,0.22220362]],[0.773,[0.09858840,0.33774172,0.22015580]],[0.776,[0.09906254,0.33431170,0.21809300]],[0.780,[0.09950470,0.33088402,0.21601636]],[0.784,[0.09989443,0.32746115,0.21392297]],[0.788,[0.10024781,0.32404118,0.21181533]],[0.792,[0.10057112,0.32062332,0.20969446]],[0.796,[0.10083896,0.31721078,0.20755678]],[0.800,[0.10107660,0.31380039,0.20540608]],[0.804,[0.10127976,0.31039267,0.20324181]],[0.808,[0.10143361,0.30698958,0.20106200]],[0.812,[0.10156046,0.30358817,0.19886988]],[0.816,[0.10164390,0.30019064,0.19666326]],[0.820,[0.10169001,0.29679616,0.19444309]],[0.824,[0.10170933,0.29340326,0.19221085]],[0.827,[0.10167654,0.29001546,0.18996328]],[0.831,[0.10161961,0.28662882,0.18770415]],[0.835,[0.10152195,0.28324567,0.18543137]],[0.839,[0.10138903,0.27986520,0.18314573]],[0.843,[0.10122817,0.27648631,0.18084823]],[0.847,[0.10102103,0.27311168,0.17853665]],[0.851,[0.10079233,0.26973760,0.17621409]],[0.855,[0.10051752,0.26636770,0.17387765]],[0.859,[0.10021730,0.26299882,0.17152986]],[0.863,[0.09988043,0.25963262,0.16916945]],[0.867,[0.09951033,0.25626852,0.16679686]],[0.871,[0.09911166,0.25290573,0.16441267]],[0.875,[0.09867327,0.24954595,0.16201567]],[0.878,[0.09821309,0.24618625,0.15960787]],[0.882,[0.09770794,0.24283030,0.15718680]],[0.886,[0.09718523,0.23947356,0.15475537]],[0.890,[0.09661612,0.23612068,0.15231064]],[0.894,[0.09602890,0.23276689,0.14985548]],[0.898,[0.09539954,0.22941612,0.14738752]],[0.902,[0.09474918,0.22606468,0.14490881]],[0.906,[0.09405985,0.22271554,0.14241766]],[0.910,[0.09334765,0.21936582,0.13991552]],[0.914,[0.09259864,0.21601782,0.13740115]],[0.918,[0.09182583,0.21266913,0.13487564]],[0.922,[0.09101742,0.20932169,0.13233799]],[0.925,[0.09018515,0.20597330,0.12978910]],[0.929,[0.08931759,0.20262583,0.12722804]],[0.933,[0.08842694,0.19927694,0.12465567]],[0.937,[0.08750046,0.19592877,0.12207102]],[0.941,[0.08655243,0.19257854,0.11947500]],[0.945,[0.08556724,0.18922894,0.11686652]],[0.949,[0.08456274,0.18587646,0.11424660]],[0.953,[0.08351901,0.18252464,0.11161396]],[0.957,[0.08245885,0.17916893,0.10896978]],[0.961,[0.08135670,0.17581401,0.10631260]],[0.965,[0.08023865,0.17245461,0.10364358]],[0.969,[0.07908113,0.16909506,0.10096151]],[0.973,[0.07790440,0.16573113,0.09826708]],[0.976,[0.07669294,0.16236561,0.09555954]],[0.980,[0.07545752,0.15899606,0.09283910]],[0.984,[0.07419261,0.15562329,0.09010536]],[0.988,[0.07289843,0.15224692,0.08735815]],[0.992,[0.07158041,0.14886551,0.08459735]],[0.996,[0.07022733,0.14548100,0.08182252]],[1.000,[0.06885643,0.14208946,0.07903363]]]
H.colormap_amp = [[0.000,[0.94634709,0.92901013,0.92575324]],[0.004,[0.94371151,0.92446250,0.92067015]],[0.008,[0.94132632,0.91984736,0.91542410]],[0.012,[0.93905471,0.91520940,0.91010904]],[0.016,[0.93686346,0.91055922,0.90474739]],[0.020,[0.93473589,0.90590202,0.89935023]],[0.024,[0.93266145,0.90124101,0.89392449]],[0.027,[0.93063333,0.89657817,0.88847456]],[0.031,[0.92864616,0.89191502,0.88300387]],[0.035,[0.92669605,0.88725260,0.87751487]],[0.039,[0.92477958,0.88259180,0.87200971]],[0.043,[0.92289448,0.87793315,0.86648973]],[0.047,[0.92103803,0.87327730,0.86095667]],[0.051,[0.91920879,0.86862452,0.85541133]],[0.055,[0.91740482,0.86397523,0.84985489]],[0.059,[0.91562445,0.85932976,0.84428840]],[0.063,[0.91386714,0.85468808,0.83871202]],[0.067,[0.91213057,0.85005074,0.83312732]],[0.071,[0.91041491,0.84541748,0.82753398]],[0.075,[0.90871829,0.84078870,0.82193324]],[0.078,[0.90703981,0.83616452,0.81632562]],[0.082,[0.90537962,0.83154465,0.81071083]],[0.086,[0.90373524,0.82692974,0.80509065]],[0.090,[0.90210801,0.82231911,0.79946386]],[0.094,[0.90049562,0.81771336,0.79383214]],[0.098,[0.89889772,0.81311240,0.78819564]],[0.102,[0.89731486,0.80851582,0.78255374]],[0.106,[0.89574424,0.80392441,0.77690862]],[0.110,[0.89418811,0.79933714,0.77125826]],[0.114,[0.89264372,0.79475480,0.76560481]],[0.118,[0.89111096,0.79017723,0.75994825]],[0.122,[0.88959091,0.78560380,0.75428751]],[0.125,[0.88808029,0.78103554,0.74862530]],[0.129,[0.88658192,0.77647116,0.74295904]],[0.133,[0.88509303,0.77191150,0.73729103]],[0.137,[0.88361314,0.76735654,0.73162155]],[0.141,[0.88214442,0.76280522,0.72594861]],[0.145,[0.88068280,0.75825891,0.72027569]],[0.149,[0.87923119,0.75371626,0.71460010]],[0.153,[0.87778757,0.74917785,0.70892352]],[0.157,[0.87635020,0.74464415,0.70324744]],[0.161,[0.87492328,0.74011330,0.69756799]],[0.165,[0.87350146,0.73558719,0.69188989]],[0.169,[0.87208702,0.73106471,0.68621101]],[0.173,[0.87068003,0.72654561,0.68053118]],[0.176,[0.86927700,0.72203109,0.67485355]],[0.180,[0.86788271,0.71751901,0.66917362]],[0.184,[0.86649279,0.71301092,0.66349536]],[0.188,[0.86510687,0.70850676,0.65781907]],[0.192,[0.86372898,0.70400466,0.65214090]],[0.196,[0.86235347,0.69950673,0.64646609]],[0.200,[0.86098306,0.69501165,0.64079203]],[0.204,[0.85961805,0.69051904,0.63511837]],[0.208,[0.85825448,0.68603039,0.62944884]],[0.212,[0.85689709,0.68154344,0.62377885]],[0.216,[0.85554259,0.67705939,0.61811153]],[0.220,[0.85418868,0.67257901,0.61244905]],[0.224,[0.85284187,0.66809925,0.60678508]],[0.227,[0.85149567,0.66362272,0.60112588]],[0.231,[0.85015004,0.65914923,0.59547148]],[0.235,[0.84881064,0.65467602,0.58981630]],[0.239,[0.84747066,0.65020590,0.58416701]],[0.243,[0.84613135,0.64573812,0.57852239]],[0.247,[0.84479692,0.64127050,0.57287823]],[0.251,[0.84346121,0.63680564,0.56724066]],[0.255,[0.84212584,0.63234256,0.56160808]],[0.259,[0.84079447,0.62787931,0.55597679]],[0.263,[0.83946118,0.62341843,0.55035278]],[0.267,[0.83812737,0.61895905,0.54473466]],[0.271,[0.83679726,0.61449887,0.53911813]],[0.275,[0.83546465,0.61004065,0.53350956]],[0.278,[0.83412997,0.60558393,0.52790853]],[0.282,[0.83279940,0.60112544,0.52230874]],[0.286,[0.83146578,0.59666845,0.51671758]],[0.290,[0.83012886,0.59221284,0.51113538]],[0.294,[0.82879510,0.58775511,0.50555549]],[0.298,[0.82745885,0.58329784,0.49998384]],[0.302,[0.82611883,0.57884143,0.49442183]],[0.306,[0.82477864,0.57438378,0.48886578]],[0.310,[0.82343818,0.56992464,0.48331585]],[0.314,[0.82209351,0.56546580,0.47777630]],[0.318,[0.82074446,0.56100710,0.47224741]],[0.322,[0.81939810,0.55654448,0.46672180]],[0.325,[0.81804727,0.55208146,0.46120716]],[0.329,[0.81669164,0.54761797,0.45570396]],[0.333,[0.81533287,0.54315282,0.45021060]],[0.337,[0.81397435,0.53868380,0.44472359]],[0.341,[0.81261066,0.53421362,0.43924887]],[0.345,[0.81124166,0.52974208,0.43378676]],[0.349,[0.80986892,0.52526798,0.42833575]],[0.353,[0.80849561,0.52078914,0.42289263]],[0.357,[0.80711664,0.51630818,0.41746308]],[0.361,[0.80573189,0.51182485,0.41204743]],[0.365,[0.80434127,0.50733890,0.40664602]],[0.369,[0.80294987,0.50284691,0.40125361]],[0.373,[0.80155319,0.49835121,0.39587532]],[0.376,[0.80015027,0.49385203,0.39051246]],[0.380,[0.79874102,0.48934908,0.38516542]],[0.384,[0.79732536,0.48484204,0.37983461]],[0.388,[0.79590758,0.48032781,0.37451573]],[0.392,[0.79448389,0.47580837,0.36921324]],[0.396,[0.79305338,0.47128388,0.36392851]],[0.400,[0.79161598,0.46675401,0.35866201]],[0.404,[0.79017160,0.46221839,0.35341429]],[0.408,[0.78872016,0.45767666,0.34818589]],[0.412,[0.78726390,0.45312683,0.34297487]],[0.416,[0.78580170,0.44856917,0.33778299]],[0.420,[0.78433192,0.44400431,0.33261256]],[0.424,[0.78285445,0.43943184,0.32746430]],[0.427,[0.78136918,0.43485136,0.32233896]],[0.431,[0.77987598,0.43026243,0.31723734]],[0.435,[0.77837472,0.42566461,0.31216031]],[0.439,[0.77686525,0.42105744,0.30710879]],[0.443,[0.77534742,0.41644048,0.30208376]],[0.447,[0.77382106,0.41181324,0.29708627]],[0.451,[0.77228598,0.40717525,0.29211747]],[0.455,[0.77074198,0.40252603,0.28717856]],[0.459,[0.76918883,0.39786508,0.28227086]],[0.463,[0.76762628,0.39319192,0.27739578]],[0.467,[0.76605405,0.38850606,0.27255481]],[0.471,[0.76447184,0.38380698,0.26774959]],[0.475,[0.76287932,0.37909421,0.26298186]],[0.478,[0.76127610,0.37436725,0.25825350]],[0.482,[0.75966179,0.36962563,0.25356652]],[0.486,[0.75803592,0.36486886,0.24892308]],[0.490,[0.75639802,0.36009651,0.24432551]],[0.494,[0.75474753,0.35530812,0.23977628]],[0.498,[0.75308388,0.35050328,0.23527805]],[0.502,[0.75140640,0.34568159,0.23083365]],[0.506,[0.74971442,0.34084271,0.22644611]],[0.510,[0.74800939,0.33598414,0.22211675]],[0.514,[0.74629042,0.33110557,0.21784921]],[0.518,[0.74455467,0.32620861,0.21364884]],[0.522,[0.74280115,0.32129308,0.20951949]],[0.525,[0.74102893,0.31635876,0.20546519]],[0.529,[0.73924224,0.31139994,0.20148645]],[0.533,[0.73743444,0.30642218,0.19759197]],[0.537,[0.73560419,0.30142565,0.19378648]],[0.541,[0.73375464,0.29640553,0.19007224]],[0.545,[0.73188145,0.29136515,0.18645645]],[0.549,[0.72998135,0.28630683,0.18294545]],[0.553,[0.72805897,0.28122374,0.17954176]],[0.557,[0.72610583,0.27612434,0.17625450]],[0.561,[0.72412471,0.27100385,0.17308755]],[0.565,[0.72211068,0.26586686,0.17004801]],[0.569,[0.72006376,0.26071192,0.16714113]],[0.573,[0.71797972,0.25554309,0.16437320]],[0.576,[0.71585857,0.25035905,0.16174941]],[0.580,[0.71369465,0.24516618,0.15927527]],[0.584,[0.71148941,0.23996139,0.15695555]],[0.588,[0.70923680,0.23475218,0.15479434]],[0.592,[0.70693528,0.22954010,0.15279509]],[0.596,[0.70458320,0.22432695,0.15096086]],[0.600,[0.70217642,0.21911867,0.14929281]],[0.604,[0.69971287,0.21391846,0.14779166]],[0.608,[0.69719119,0.20872863,0.14645780]],[0.612,[0.69460803,0.20355522,0.14528888]],[0.616,[0.69196156,0.19840215,0.14428234]],[0.620,[0.68925026,0.19327329,0.14343469]],[0.624,[0.68647282,0.18817247,0.14274156]],[0.627,[0.68362765,0.18310449,0.14219685]],[0.631,[0.68071389,0.17807325,0.14179429]],[0.635,[0.67773093,0.17308255,0.14152696]],[0.639,[0.67467839,0.16813609,0.14138745]],[0.643,[0.67155603,0.16323763,0.14136778]],[0.647,[0.66836392,0.15839066,0.14145988]],[0.651,[0.66510231,0.15359857,0.14165564]],[0.655,[0.66177158,0.14886467,0.14194696]],[0.659,[0.65837217,0.14419254,0.14232539]],[0.663,[0.65490476,0.13958536,0.14278329]],[0.667,[0.65137002,0.13504657,0.14331304]],[0.671,[0.64776867,0.13057974,0.14390725]],[0.675,[0.64410140,0.12618880,0.14455832]],[0.678,[0.64036897,0.12187775,0.14525938]],[0.682,[0.63657214,0.11765076,0.14600414]],[0.686,[0.63271161,0.11351250,0.14678623]],[0.690,[0.62878806,0.10946810,0.14759896]],[0.694,[0.62480216,0.10552294,0.14843641]],[0.698,[0.62075455,0.10168277,0.14929330]],[0.702,[0.61664581,0.09795388,0.15016404]],[0.706,[0.61247664,0.09434294,0.15104188]],[0.710,[0.60824759,0.09085689,0.15192244]],[0.714,[0.60395923,0.08750309,0.15280055]],[0.718,[0.59961233,0.08428892,0.15366992]],[0.722,[0.59520759,0.08122188,0.15452537]],[0.725,[0.59074564,0.07830966,0.15536250]],[0.729,[0.58622754,0.07555913,0.15617490]],[0.733,[0.58165431,0.07297680,0.15695715]],[0.737,[0.57702676,0.07056925,0.15770548]],[0.741,[0.57234666,0.06834024,0.15841244]],[0.745,[0.56761519,0.06629402,0.15907416]],[0.749,[0.56283369,0.06443348,0.15968656]],[0.753,[0.55800500,0.06275633,0.16024132]],[0.757,[0.55312973,0.06126497,0.16073839]],[0.761,[0.54821164,0.05995167,0.16116863]],[0.765,[0.54325161,0.05881548,0.16153233]],[0.769,[0.53825351,0.05784533,0.16182217]],[0.773,[0.53321862,0.05703661,0.16203840]],[0.776,[0.52815138,0.05637398,0.16217425]],[0.780,[0.52305208,0.05585384,0.16223297]],[0.784,[0.51792734,0.05545236,0.16220493]],[0.788,[0.51277604,0.05516900,0.16209682]],[0.792,[0.50760343,0.05498327,0.16190307]],[0.796,[0.50241221,0.05488240,0.16162363]],[0.800,[0.49720286,0.05486041,0.16126216]],[0.804,[0.49198001,0.05489873,0.16081569]],[0.808,[0.48674700,0.05498320,0.16028395]],[0.812,[0.48150354,0.05511075,0.15967186]],[0.816,[0.47625192,0.05527092,0.15898043]],[0.820,[0.47099432,0.05545405,0.15821095]],[0.824,[0.46573629,0.05564106,0.15736082]],[0.827,[0.46047601,0.05583490,0.15643640]],[0.831,[0.45521509,0.05602873,0.15543963]],[0.835,[0.44995505,0.05621639,0.15437248]],[0.839,[0.44469726,0.05639244,0.15323702]],[0.843,[0.43944294,0.05655221,0.15203539]],[0.847,[0.43419316,0.05669170,0.15076979]],[0.851,[0.42894883,0.05680756,0.14944240]],[0.855,[0.42371075,0.05689701,0.14805546]],[0.859,[0.41847954,0.05695780,0.14661115]],[0.863,[0.41325574,0.05698815,0.14511166]],[0.867,[0.40803974,0.05698670,0.14355911]],[0.871,[0.40283182,0.05695245,0.14195559]],[0.875,[0.39763217,0.05688474,0.14030311]],[0.878,[0.39244086,0.05678317,0.13860362]],[0.882,[0.38726151,0.05663896,0.13685687]],[0.886,[0.38209283,0.05645532,0.13506562]],[0.890,[0.37693297,0.05623658,0.13323265]],[0.894,[0.37178172,0.05598316,0.13135965]],[0.898,[0.36663878,0.05569562,0.12944818]],[0.902,[0.36150633,0.05536891,0.12749858]],[0.906,[0.35638806,0.05499475,0.12551057]],[0.910,[0.35127760,0.05458756,0.12348844]],[0.914,[0.34617448,0.05414818,0.12143346]],[0.918,[0.34108131,0.05367069,0.11934559]],[0.922,[0.33600266,0.05314516,0.11722421]],[0.925,[0.33093030,0.05258940,0.11507352]],[0.929,[0.32586362,0.05200433,0.11289448]],[0.933,[0.32081338,0.05136700,0.11068434]],[0.937,[0.31576962,0.05069836,0.10844733]],[0.941,[0.31073013,0.05000264,0.10618475]],[0.945,[0.30570613,0.04925629,0.10389404]],[0.949,[0.30068793,0.04847913,0.10157870]],[0.953,[0.29567262,0.04767654,0.09923998]],[0.957,[0.29067463,0.04681900,0.09687492]],[0.961,[0.28567820,0.04593789,0.09448789]],[0.965,[0.28068900,0.04502128,0.09207801]],[0.969,[0.27571030,0.04406225,0.08964513]],[0.973,[0.27073125,0.04308157,0.08719176]],[0.976,[0.26576674,0.04204947,0.08471559]],[0.980,[0.26080251,0.04099314,0.08221948]],[0.984,[0.25584517,0.03989183,0.07970262]],[0.988,[0.25089381,0.03876029,0.07716551]],[0.992,[0.24594281,0.03762149,0.07460911]],[0.996,[0.24100216,0.03645747,0.07203246]],[1.000,[0.23605636,0.03529748,0.06943744]]]
H.colormap_autumn = [[0.000, [1.000, 0.000, 0.000]], [0.002, [1.000, 0.000, 0.000]], [0.004, [1.000, 0.004, 0.000]], [0.006, [1.000, 0.004, 0.000]], [0.008, [1.000, 0.008, 0.000]], [0.010, [1.000, 0.008, 0.000]], [0.012, [1.000, 0.012, 0.000]], [0.014, [1.000, 0.012, 0.000]], [0.016, [1.000, 0.016, 0.000]], [0.018, [1.000, 0.016, 0.000]], [0.020, [1.000, 0.020, 0.000]], [0.022, [1.000, 0.020, 0.000]], [0.023, [1.000, 0.024, 0.000]], [0.025, [1.000, 0.024, 0.000]], [0.027, [1.000, 0.027, 0.000]], [0.029, [1.000, 0.027, 0.000]], [0.031, [1.000, 0.031, 0.000]], [0.033, [1.000, 0.031, 0.000]], [0.035, [1.000, 0.035, 0.000]], [0.037, [1.000, 0.035, 0.000]], [0.039, [1.000, 0.039, 0.000]], [0.041, [1.000, 0.039, 0.000]], [0.043, [1.000, 0.043, 0.000]], [0.045, [1.000, 0.043, 0.000]], [0.047, [1.000, 0.047, 0.000]], [0.049, [1.000, 0.047, 0.000]], [0.051, [1.000, 0.051, 0.000]], [0.053, [1.000, 0.051, 0.000]], [0.055, [1.000, 0.055, 0.000]], [0.057, [1.000, 0.055, 0.000]], [0.059, [1.000, 0.059, 0.000]], [0.061, [1.000, 0.059, 0.000]], [0.063, [1.000, 0.063, 0.000]], [0.065, [1.000, 0.063, 0.000]], [0.067, [1.000, 0.067, 0.000]], [0.068, [1.000, 0.067, 0.000]], [0.070, [1.000, 0.071, 0.000]], [0.072, [1.000, 0.071, 0.000]], [0.074, [1.000, 0.075, 0.000]], [0.076, [1.000, 0.075, 0.000]], [0.078, [1.000, 0.078, 0.000]], [0.080, [1.000, 0.078, 0.000]], [0.082, [1.000, 0.082, 0.000]], [0.084, [1.000, 0.082, 0.000]], [0.086, [1.000, 0.086, 0.000]], [0.088, [1.000, 0.086, 0.000]], [0.090, [1.000, 0.090, 0.000]], [0.092, [1.000, 0.090, 0.000]], [0.094, [1.000, 0.094, 0.000]], [0.096, [1.000, 0.094, 0.000]], [0.098, [1.000, 0.098, 0.000]], [0.100, [1.000, 0.098, 0.000]], [0.102, [1.000, 0.102, 0.000]], [0.104, [1.000, 0.102, 0.000]], [0.106, [1.000, 0.106, 0.000]], [0.108, [1.000, 0.106, 0.000]], [0.110, [1.000, 0.110, 0.000]], [0.112, [1.000, 0.110, 0.000]], [0.114, [1.000, 0.114, 0.000]], [0.115, [1.000, 0.114, 0.000]], [0.117, [1.000, 0.118, 0.000]], [0.119, [1.000, 0.118, 0.000]], [0.121, [1.000, 0.122, 0.000]], [0.123, [1.000, 0.122, 0.000]], [0.125, [1.000, 0.125, 0.000]], [0.127, [1.000, 0.125, 0.000]], [0.129, [1.000, 0.129, 0.000]], [0.131, [1.000, 0.129, 0.000]], [0.133, [1.000, 0.133, 0.000]], [0.135, [1.000, 0.133, 0.000]], [0.137, [1.000, 0.137, 0.000]], [0.139, [1.000, 0.137, 0.000]], [0.141, [1.000, 0.141, 0.000]], [0.143, [1.000, 0.141, 0.000]], [0.145, [1.000, 0.145, 0.000]], [0.147, [1.000, 0.145, 0.000]], [0.149, [1.000, 0.149, 0.000]], [0.151, [1.000, 0.149, 0.000]], [0.153, [1.000, 0.153, 0.000]], [0.155, [1.000, 0.153, 0.000]], [0.157, [1.000, 0.157, 0.000]], [0.159, [1.000, 0.157, 0.000]], [0.160, [1.000, 0.161, 0.000]], [0.162, [1.000, 0.161, 0.000]], [0.164, [1.000, 0.165, 0.000]], [0.166, [1.000, 0.165, 0.000]], [0.168, [1.000, 0.169, 0.000]], [0.170, [1.000, 0.169, 0.000]], [0.172, [1.000, 0.173, 0.000]], [0.174, [1.000, 0.173, 0.000]], [0.176, [1.000, 0.176, 0.000]], [0.178, [1.000, 0.176, 0.000]], [0.180, [1.000, 0.180, 0.000]], [0.182, [1.000, 0.180, 0.000]], [0.184, [1.000, 0.184, 0.000]], [0.186, [1.000, 0.184, 0.000]], [0.188, [1.000, 0.188, 0.000]], [0.190, [1.000, 0.188, 0.000]], [0.192, [1.000, 0.192, 0.000]], [0.194, [1.000, 0.192, 0.000]], [0.196, [1.000, 0.196, 0.000]], [0.198, [1.000, 0.196, 0.000]], [0.200, [1.000, 0.200, 0.000]], [0.202, [1.000, 0.200, 0.000]], [0.204, [1.000, 0.204, 0.000]], [0.205, [1.000, 0.204, 0.000]], [0.207, [1.000, 0.208, 0.000]], [0.209, [1.000, 0.208, 0.000]], [0.211, [1.000, 0.212, 0.000]], [0.213, [1.000, 0.212, 0.000]], [0.215, [1.000, 0.216, 0.000]], [0.217, [1.000, 0.216, 0.000]], [0.219, [1.000, 0.220, 0.000]], [0.221, [1.000, 0.220, 0.000]], [0.223, [1.000, 0.224, 0.000]], [0.225, [1.000, 0.224, 0.000]], [0.227, [1.000, 0.227, 0.000]], [0.229, [1.000, 0.227, 0.000]], [0.231, [1.000, 0.231, 0.000]], [0.233, [1.000, 0.231, 0.000]], [0.235, [1.000, 0.235, 0.000]], [0.237, [1.000, 0.235, 0.000]], [0.239, [1.000, 0.239, 0.000]], [0.241, [1.000, 0.239, 0.000]], [0.243, [1.000, 0.243, 0.000]], [0.245, [1.000, 0.243, 0.000]], [0.247, [1.000, 0.247, 0.000]], [0.249, [1.000, 0.247, 0.000]], [0.250, [1.000, 0.251, 0.000]], [0.252, [1.000, 0.251, 0.000]], [0.254, [1.000, 0.255, 0.000]], [0.256, [1.000, 0.255, 0.000]], [0.258, [1.000, 0.259, 0.000]], [0.260, [1.000, 0.259, 0.000]], [0.262, [1.000, 0.263, 0.000]], [0.264, [1.000, 0.263, 0.000]], [0.266, [1.000, 0.267, 0.000]], [0.268, [1.000, 0.267, 0.000]], [0.270, [1.000, 0.271, 0.000]], [0.272, [1.000, 0.271, 0.000]], [0.274, [1.000, 0.275, 0.000]], [0.276, [1.000, 0.275, 0.000]], [0.278, [1.000, 0.278, 0.000]], [0.280, [1.000, 0.278, 0.000]], [0.282, [1.000, 0.282, 0.000]], [0.284, [1.000, 0.282, 0.000]], [0.286, [1.000, 0.286, 0.000]], [0.288, [1.000, 0.286, 0.000]], [0.290, [1.000, 0.290, 0.000]], [0.292, [1.000, 0.290, 0.000]], [0.294, [1.000, 0.294, 0.000]], [0.295, [1.000, 0.294, 0.000]], [0.297, [1.000, 0.298, 0.000]], [0.299, [1.000, 0.298, 0.000]], [0.301, [1.000, 0.302, 0.000]], [0.303, [1.000, 0.302, 0.000]], [0.305, [1.000, 0.306, 0.000]], [0.307, [1.000, 0.306, 0.000]], [0.309, [1.000, 0.310, 0.000]], [0.311, [1.000, 0.310, 0.000]], [0.313, [1.000, 0.314, 0.000]], [0.315, [1.000, 0.314, 0.000]], [0.317, [1.000, 0.318, 0.000]], [0.319, [1.000, 0.318, 0.000]], [0.321, [1.000, 0.322, 0.000]], [0.323, [1.000, 0.322, 0.000]], [0.325, [1.000, 0.325, 0.000]], [0.327, [1.000, 0.325, 0.000]], [0.329, [1.000, 0.329, 0.000]], [0.331, [1.000, 0.329, 0.000]], [0.333, [1.000, 0.333, 0.000]], [0.335, [1.000, 0.333, 0.000]], [0.337, [1.000, 0.337, 0.000]], [0.339, [1.000, 0.337, 0.000]], [0.341, [1.000, 0.341, 0.000]], [0.342, [1.000, 0.341, 0.000]], [0.344, [1.000, 0.345, 0.000]], [0.346, [1.000, 0.345, 0.000]], [0.348, [1.000, 0.349, 0.000]], [0.350, [1.000, 0.349, 0.000]], [0.352, [1.000, 0.353, 0.000]], [0.354, [1.000, 0.353, 0.000]], [0.356, [1.000, 0.357, 0.000]], [0.358, [1.000, 0.357, 0.000]], [0.360, [1.000, 0.361, 0.000]], [0.362, [1.000, 0.361, 0.000]], [0.364, [1.000, 0.365, 0.000]], [0.366, [1.000, 0.365, 0.000]], [0.368, [1.000, 0.369, 0.000]], [0.370, [1.000, 0.369, 0.000]], [0.372, [1.000, 0.373, 0.000]], [0.374, [1.000, 0.373, 0.000]], [0.376, [1.000, 0.376, 0.000]], [0.378, [1.000, 0.376, 0.000]], [0.380, [1.000, 0.380, 0.000]], [0.382, [1.000, 0.380, 0.000]], [0.384, [1.000, 0.384, 0.000]], [0.386, [1.000, 0.384, 0.000]], [0.387, [1.000, 0.388, 0.000]], [0.389, [1.000, 0.388, 0.000]], [0.391, [1.000, 0.392, 0.000]], [0.393, [1.000, 0.392, 0.000]], [0.395, [1.000, 0.396, 0.000]], [0.397, [1.000, 0.396, 0.000]], [0.399, [1.000, 0.400, 0.000]], [0.401, [1.000, 0.400, 0.000]], [0.403, [1.000, 0.404, 0.000]], [0.405, [1.000, 0.404, 0.000]], [0.407, [1.000, 0.408, 0.000]], [0.409, [1.000, 0.408, 0.000]], [0.411, [1.000, 0.412, 0.000]], [0.413, [1.000, 0.412, 0.000]], [0.415, [1.000, 0.416, 0.000]], [0.417, [1.000, 0.416, 0.000]], [0.419, [1.000, 0.420, 0.000]], [0.421, [1.000, 0.420, 0.000]], [0.423, [1.000, 0.424, 0.000]], [0.425, [1.000, 0.424, 0.000]], [0.427, [1.000, 0.427, 0.000]], [0.429, [1.000, 0.427, 0.000]], [0.431, [1.000, 0.431, 0.000]], [0.432, [1.000, 0.431, 0.000]], [0.434, [1.000, 0.435, 0.000]], [0.436, [1.000, 0.435, 0.000]], [0.438, [1.000, 0.439, 0.000]], [0.440, [1.000, 0.439, 0.000]], [0.442, [1.000, 0.443, 0.000]], [0.444, [1.000, 0.443, 0.000]], [0.446, [1.000, 0.447, 0.000]], [0.448, [1.000, 0.447, 0.000]], [0.450, [1.000, 0.451, 0.000]], [0.452, [1.000, 0.451, 0.000]], [0.454, [1.000, 0.455, 0.000]], [0.456, [1.000, 0.455, 0.000]], [0.458, [1.000, 0.459, 0.000]], [0.460, [1.000, 0.459, 0.000]], [0.462, [1.000, 0.463, 0.000]], [0.464, [1.000, 0.463, 0.000]], [0.466, [1.000, 0.467, 0.000]], [0.468, [1.000, 0.467, 0.000]], [0.470, [1.000, 0.471, 0.000]], [0.472, [1.000, 0.471, 0.000]], [0.474, [1.000, 0.475, 0.000]], [0.476, [1.000, 0.475, 0.000]], [0.477, [1.000, 0.478, 0.000]], [0.479, [1.000, 0.478, 0.000]], [0.481, [1.000, 0.482, 0.000]], [0.483, [1.000, 0.482, 0.000]], [0.485, [1.000, 0.486, 0.000]], [0.487, [1.000, 0.486, 0.000]], [0.489, [1.000, 0.490, 0.000]], [0.491, [1.000, 0.490, 0.000]], [0.493, [1.000, 0.494, 0.000]], [0.495, [1.000, 0.494, 0.000]], [0.497, [1.000, 0.498, 0.000]], [0.499, [1.000, 0.498, 0.000]], [0.501, [1.000, 0.502, 0.000]], [0.503, [1.000, 0.502, 0.000]], [0.505, [1.000, 0.506, 0.000]], [0.507, [1.000, 0.506, 0.000]], [0.509, [1.000, 0.510, 0.000]], [0.511, [1.000, 0.510, 0.000]], [0.513, [1.000, 0.514, 0.000]], [0.515, [1.000, 0.514, 0.000]], [0.517, [1.000, 0.518, 0.000]], [0.519, [1.000, 0.518, 0.000]], [0.521, [1.000, 0.522, 0.000]], [0.523, [1.000, 0.522, 0.000]], [0.524, [1.000, 0.525, 0.000]], [0.526, [1.000, 0.525, 0.000]], [0.528, [1.000, 0.529, 0.000]], [0.530, [1.000, 0.529, 0.000]], [0.532, [1.000, 0.533, 0.000]], [0.534, [1.000, 0.533, 0.000]], [0.536, [1.000, 0.537, 0.000]], [0.538, [1.000, 0.537, 0.000]], [0.540, [1.000, 0.541, 0.000]], [0.542, [1.000, 0.541, 0.000]], [0.544, [1.000, 0.545, 0.000]], [0.546, [1.000, 0.545, 0.000]], [0.548, [1.000, 0.549, 0.000]], [0.550, [1.000, 0.549, 0.000]], [0.552, [1.000, 0.553, 0.000]], [0.554, [1.000, 0.553, 0.000]], [0.556, [1.000, 0.557, 0.000]], [0.558, [1.000, 0.557, 0.000]], [0.560, [1.000, 0.561, 0.000]], [0.562, [1.000, 0.561, 0.000]], [0.564, [1.000, 0.565, 0.000]], [0.566, [1.000, 0.565, 0.000]], [0.568, [1.000, 0.569, 0.000]], [0.569, [1.000, 0.569, 0.000]], [0.571, [1.000, 0.573, 0.000]], [0.573, [1.000, 0.573, 0.000]], [0.575, [1.000, 0.576, 0.000]], [0.577, [1.000, 0.576, 0.000]], [0.579, [1.000, 0.580, 0.000]], [0.581, [1.000, 0.580, 0.000]], [0.583, [1.000, 0.584, 0.000]], [0.585, [1.000, 0.584, 0.000]], [0.587, [1.000, 0.588, 0.000]], [0.589, [1.000, 0.588, 0.000]], [0.591, [1.000, 0.592, 0.000]], [0.593, [1.000, 0.592, 0.000]], [0.595, [1.000, 0.596, 0.000]], [0.597, [1.000, 0.596, 0.000]], [0.599, [1.000, 0.600, 0.000]], [0.601, [1.000, 0.600, 0.000]], [0.603, [1.000, 0.604, 0.000]], [0.605, [1.000, 0.604, 0.000]], [0.607, [1.000, 0.608, 0.000]], [0.609, [1.000, 0.608, 0.000]], [0.611, [1.000, 0.612, 0.000]], [0.613, [1.000, 0.612, 0.000]], [0.614, [1.000, 0.616, 0.000]], [0.616, [1.000, 0.616, 0.000]], [0.618, [1.000, 0.620, 0.000]], [0.620, [1.000, 0.620, 0.000]], [0.622, [1.000, 0.624, 0.000]], [0.624, [1.000, 0.624, 0.000]], [0.626, [1.000, 0.627, 0.000]], [0.628, [1.000, 0.627, 0.000]], [0.630, [1.000, 0.631, 0.000]], [0.632, [1.000, 0.631, 0.000]], [0.634, [1.000, 0.635, 0.000]], [0.636, [1.000, 0.635, 0.000]], [0.638, [1.000, 0.639, 0.000]], [0.640, [1.000, 0.639, 0.000]], [0.642, [1.000, 0.643, 0.000]], [0.644, [1.000, 0.643, 0.000]], [0.646, [1.000, 0.647, 0.000]], [0.648, [1.000, 0.647, 0.000]], [0.650, [1.000, 0.651, 0.000]], [0.652, [1.000, 0.651, 0.000]], [0.654, [1.000, 0.655, 0.000]], [0.656, [1.000, 0.655, 0.000]], [0.658, [1.000, 0.659, 0.000]], [0.659, [1.000, 0.659, 0.000]], [0.661, [1.000, 0.663, 0.000]], [0.663, [1.000, 0.663, 0.000]], [0.665, [1.000, 0.667, 0.000]], [0.667, [1.000, 0.667, 0.000]], [0.669, [1.000, 0.671, 0.000]], [0.671, [1.000, 0.671, 0.000]], [0.673, [1.000, 0.675, 0.000]], [0.675, [1.000, 0.675, 0.000]], [0.677, [1.000, 0.678, 0.000]], [0.679, [1.000, 0.678, 0.000]], [0.681, [1.000, 0.682, 0.000]], [0.683, [1.000, 0.682, 0.000]], [0.685, [1.000, 0.686, 0.000]], [0.687, [1.000, 0.686, 0.000]], [0.689, [1.000, 0.690, 0.000]], [0.691, [1.000, 0.690, 0.000]], [0.693, [1.000, 0.694, 0.000]], [0.695, [1.000, 0.694, 0.000]], [0.697, [1.000, 0.698, 0.000]], [0.699, [1.000, 0.698, 0.000]], [0.701, [1.000, 0.702, 0.000]], [0.703, [1.000, 0.702, 0.000]], [0.705, [1.000, 0.706, 0.000]], [0.706, [1.000, 0.706, 0.000]], [0.708, [1.000, 0.710, 0.000]], [0.710, [1.000, 0.710, 0.000]], [0.712, [1.000, 0.714, 0.000]], [0.714, [1.000, 0.714, 0.000]], [0.716, [1.000, 0.718, 0.000]], [0.718, [1.000, 0.718, 0.000]], [0.720, [1.000, 0.722, 0.000]], [0.722, [1.000, 0.722, 0.000]], [0.724, [1.000, 0.725, 0.000]], [0.726, [1.000, 0.725, 0.000]], [0.728, [1.000, 0.729, 0.000]], [0.730, [1.000, 0.729, 0.000]], [0.732, [1.000, 0.733, 0.000]], [0.734, [1.000, 0.733, 0.000]], [0.736, [1.000, 0.737, 0.000]], [0.738, [1.000, 0.737, 0.000]], [0.740, [1.000, 0.741, 0.000]], [0.742, [1.000, 0.741, 0.000]], [0.744, [1.000, 0.745, 0.000]], [0.746, [1.000, 0.745, 0.000]], [0.748, [1.000, 0.749, 0.000]], [0.750, [1.000, 0.749, 0.000]], [0.751, [1.000, 0.753, 0.000]], [0.753, [1.000, 0.753, 0.000]], [0.755, [1.000, 0.757, 0.000]], [0.757, [1.000, 0.757, 0.000]], [0.759, [1.000, 0.761, 0.000]], [0.761, [1.000, 0.761, 0.000]], [0.763, [1.000, 0.765, 0.000]], [0.765, [1.000, 0.765, 0.000]], [0.767, [1.000, 0.769, 0.000]], [0.769, [1.000, 0.769, 0.000]], [0.771, [1.000, 0.773, 0.000]], [0.773, [1.000, 0.773, 0.000]], [0.775, [1.000, 0.776, 0.000]], [0.777, [1.000, 0.776, 0.000]], [0.779, [1.000, 0.780, 0.000]], [0.781, [1.000, 0.780, 0.000]], [0.783, [1.000, 0.784, 0.000]], [0.785, [1.000, 0.784, 0.000]], [0.787, [1.000, 0.788, 0.000]], [0.789, [1.000, 0.788, 0.000]], [0.791, [1.000, 0.792, 0.000]], [0.793, [1.000, 0.792, 0.000]], [0.795, [1.000, 0.796, 0.000]], [0.796, [1.000, 0.796, 0.000]], [0.798, [1.000, 0.800, 0.000]], [0.800, [1.000, 0.800, 0.000]], [0.802, [1.000, 0.804, 0.000]], [0.804, [1.000, 0.804, 0.000]], [0.806, [1.000, 0.808, 0.000]], [0.808, [1.000, 0.808, 0.000]], [0.810, [1.000, 0.812, 0.000]], [0.812, [1.000, 0.812, 0.000]], [0.814, [1.000, 0.816, 0.000]], [0.816, [1.000, 0.816, 0.000]], [0.818, [1.000, 0.820, 0.000]], [0.820, [1.000, 0.820, 0.000]], [0.822, [1.000, 0.824, 0.000]], [0.824, [1.000, 0.824, 0.000]], [0.826, [1.000, 0.827, 0.000]], [0.828, [1.000, 0.827, 0.000]], [0.830, [1.000, 0.831, 0.000]], [0.832, [1.000, 0.831, 0.000]], [0.834, [1.000, 0.835, 0.000]], [0.836, [1.000, 0.835, 0.000]], [0.838, [1.000, 0.839, 0.000]], [0.840, [1.000, 0.839, 0.000]], [0.841, [1.000, 0.843, 0.000]], [0.843, [1.000, 0.843, 0.000]], [0.845, [1.000, 0.847, 0.000]], [0.847, [1.000, 0.847, 0.000]], [0.849, [1.000, 0.851, 0.000]], [0.851, [1.000, 0.851, 0.000]], [0.853, [1.000, 0.855, 0.000]], [0.855, [1.000, 0.855, 0.000]], [0.857, [1.000, 0.859, 0.000]], [0.859, [1.000, 0.859, 0.000]], [0.861, [1.000, 0.863, 0.000]], [0.863, [1.000, 0.863, 0.000]], [0.865, [1.000, 0.867, 0.000]], [0.867, [1.000, 0.867, 0.000]], [0.869, [1.000, 0.871, 0.000]], [0.871, [1.000, 0.871, 0.000]], [0.873, [1.000, 0.875, 0.000]], [0.875, [1.000, 0.875, 0.000]], [0.877, [1.000, 0.878, 0.000]], [0.879, [1.000, 0.878, 0.000]], [0.881, [1.000, 0.882, 0.000]], [0.883, [1.000, 0.882, 0.000]], [0.885, [1.000, 0.886, 0.000]], [0.886, [1.000, 0.886, 0.000]], [0.888, [1.000, 0.890, 0.000]], [0.890, [1.000, 0.890, 0.000]], [0.892, [1.000, 0.894, 0.000]], [0.894, [1.000, 0.894, 0.000]], [0.896, [1.000, 0.898, 0.000]], [0.898, [1.000, 0.898, 0.000]], [0.900, [1.000, 0.902, 0.000]], [0.902, [1.000, 0.902, 0.000]], [0.904, [1.000, 0.906, 0.000]], [0.906, [1.000, 0.906, 0.000]], [0.908, [1.000, 0.910, 0.000]], [0.910, [1.000, 0.910, 0.000]], [0.912, [1.000, 0.914, 0.000]], [0.914, [1.000, 0.914, 0.000]], [0.916, [1.000, 0.918, 0.000]], [0.918, [1.000, 0.918, 0.000]], [0.920, [1.000, 0.922, 0.000]], [0.922, [1.000, 0.922, 0.000]], [0.924, [1.000, 0.925, 0.000]], [0.926, [1.000, 0.925, 0.000]], [0.928, [1.000, 0.929, 0.000]], [0.930, [1.000, 0.929, 0.000]], [0.932, [1.000, 0.933, 0.000]], [0.933, [1.000, 0.933, 0.000]], [0.935, [1.000, 0.937, 0.000]], [0.937, [1.000, 0.937, 0.000]], [0.939, [1.000, 0.941, 0.000]], [0.941, [1.000, 0.941, 0.000]], [0.943, [1.000, 0.945, 0.000]], [0.945, [1.000, 0.945, 0.000]], [0.947, [1.000, 0.949, 0.000]], [0.949, [1.000, 0.949, 0.000]], [0.951, [1.000, 0.953, 0.000]], [0.953, [1.000, 0.953, 0.000]], [0.955, [1.000, 0.957, 0.000]], [0.957, [1.000, 0.957, 0.000]], [0.959, [1.000, 0.961, 0.000]], [0.961, [1.000, 0.961, 0.000]], [0.963, [1.000, 0.965, 0.000]], [0.965, [1.000, 0.965, 0.000]], [0.967, [1.000, 0.969, 0.000]], [0.969, [1.000, 0.969, 0.000]], [0.971, [1.000, 0.973, 0.000]], [0.973, [1.000, 0.973, 0.000]], [0.975, [1.000, 0.976, 0.000]], [0.977, [1.000, 0.976, 0.000]], [0.978, [1.000, 0.980, 0.000]], [0.980, [1.000, 0.980, 0.000]], [0.982, [1.000, 0.984, 0.000]], [0.984, [1.000, 0.984, 0.000]], [0.986, [1.000, 0.988, 0.000]], [0.988, [1.000, 0.988, 0.000]], [0.990, [1.000, 0.992, 0.000]], [0.992, [1.000, 0.992, 0.000]], [0.994, [1.000, 0.996, 0.000]], [0.996, [1.000, 0.996, 0.000]], [0.998, [1.000, 1.000, 0.000]], [1.000, [1.000, 1.000, 0.000]]];
H.colormap_balance = [[0.000,[0.09317630,0.11117333,0.26151239]],[0.004,[0.09697152,0.11687021,0.27309631]],[0.008,[0.10096885,0.12239315,0.28491036]],[0.012,[0.10499270,0.12782437,0.29687381]],[0.016,[0.10898740,0.13319350,0.30895384]],[0.020,[0.11292230,0.13851314,0.32115284]],[0.024,[0.11677874,0.14379072,0.33347631]],[0.027,[0.12054634,0.14903305,0.34591927]],[0.031,[0.12421597,0.15424490,0.35848249]],[0.035,[0.12777784,0.15942930,0.37117372]],[0.039,[0.13122438,0.16458993,0.38399390]],[0.043,[0.13454904,0.16973078,0.39694025]],[0.047,[0.13774403,0.17485525,0.41001322]],[0.051,[0.14079963,0.17996609,0.42321738]],[0.055,[0.14370728,0.18506718,0.43655022]],[0.059,[0.14645608,0.19016193,0.45001310]],[0.063,[0.14903482,0.19525448,0.46360362]],[0.067,[0.15143093,0.20034937,0.47731853]],[0.071,[0.15362665,0.20545038,0.49116235]],[0.075,[0.15560730,0.21056390,0.50512420]],[0.078,[0.15735349,0.21569621,0.51919772]],[0.082,[0.15884111,0.22085406,0.53337810]],[0.086,[0.16003963,0.22604481,0.54766269]],[0.090,[0.16092053,0.23127922,0.56203080]],[0.094,[0.16144553,0.23656876,0.57646619]],[0.098,[0.16156876,0.24192717,0.59094728]],[0.102,[0.16123528,0.24737119,0.60544468]],[0.106,[0.16037934,0.25292130,0.61991794]],[0.110,[0.15891657,0.25860221,0.63431839]],[0.114,[0.15673874,0.26444442,0.64858326]],[0.118,[0.15374227,0.27048752,0.66259429]],[0.122,[0.14975399,0.27677729,0.67624289]],[0.125,[0.14461903,0.28337034,0.68933032]],[0.129,[0.13815067,0.29032903,0.70161667]],[0.133,[0.13019375,0.29771375,0.71279281]],[0.137,[0.12070563,0.30556233,0.72251014]],[0.141,[0.10982269,0.31386519,0.73046944]],[0.145,[0.09795843,0.32254310,0.73652716]],[0.149,[0.08570024,0.33146616,0.74077181]],[0.153,[0.07367689,0.34049675,0.74346934]],[0.157,[0.06252233,0.34951974,0.74495630]],[0.161,[0.05283258,0.35846008,0.74554518]],[0.165,[0.04520939,0.36727493,0.74548891]],[0.169,[0.04023631,0.37594185,0.74498414]],[0.173,[0.03831576,0.38445368,0.74417463]],[0.176,[0.03948350,0.39281375,0.74315813]],[0.180,[0.04345844,0.40102371,0.74202430]],[0.184,[0.04962432,0.40909532,0.74081668]],[0.188,[0.05739800,0.41703470,0.73958775]],[0.192,[0.06626018,0.42485215,0.73836501]],[0.196,[0.07582789,0.43255722,0.73716979]],[0.200,[0.08583710,0.44015834,0.73602068]],[0.204,[0.09611024,0.44766357,0.73493125]],[0.208,[0.10653039,0.45508042,0.73391177]],[0.212,[0.11702165,0.46241591,0.73296937]],[0.216,[0.12753580,0.46967672,0.73210750]],[0.220,[0.13804321,0.47686868,0.73132951]],[0.224,[0.14852667,0.48399707,0.73063745]],[0.227,[0.15897744,0.49106666,0.73003226]],[0.231,[0.16939271,0.49808168,0.72951410]],[0.235,[0.17977386,0.50504587,0.72908242]],[0.239,[0.19012529,0.51196251,0.72873614]],[0.243,[0.20045367,0.51883439,0.72847377]],[0.247,[0.21076743,0.52566384,0.72829343]],[0.251,[0.22107637,0.53245276,0.72819301]],[0.255,[0.23139144,0.53920256,0.72817020]],[0.259,[0.24172459,0.54591421,0.72822258]],[0.263,[0.25208860,0.55258823,0.72834769]],[0.267,[0.26249697,0.55922467,0.72854317]],[0.271,[0.27296382,0.56582312,0.72880681]],[0.275,[0.28350369,0.57238271,0.72913673]],[0.278,[0.29413138,0.57890214,0.72953149]],[0.282,[0.30486166,0.58537967,0.72999025]],[0.286,[0.31570894,0.59181322,0.73051298]],[0.290,[0.32668681,0.59820041,0.73110060]],[0.294,[0.33780753,0.60453865,0.73175521]],[0.298,[0.34908180,0.61082531,0.73247968]],[0.302,[0.36051697,0.61705790,0.73327922]],[0.306,[0.37211638,0.62323432,0.73416123]],[0.310,[0.38387988,0.62935306,0.73513375]],[0.314,[0.39580281,0.63541344,0.73620602]],[0.318,[0.40787554,0.64141586,0.73738846]],[0.322,[0.42008256,0.64736207,0.73869308]],[0.325,[0.43240665,0.65325485,0.74012945]],[0.329,[0.44482701,0.65909826,0.74170693]],[0.333,[0.45732109,0.66489739,0.74343353]],[0.337,[0.46986588,0.67065815,0.74531538]],[0.341,[0.48243916,0.67638699,0.74735656]],[0.345,[0.49502055,0.68209061,0.74955890]],[0.349,[0.50759227,0.68777566,0.75192214]],[0.353,[0.52013952,0.69344853,0.75444409]],[0.357,[0.53265066,0.69911520,0.75712102]],[0.361,[0.54511511,0.70478153,0.75994930]],[0.365,[0.55751816,0.71045432,0.76292914]],[0.369,[0.56986354,0.71613651,0.76604883]],[0.373,[0.58214859,0.72183221,0.76930236]],[0.376,[0.59436024,0.72754780,0.77269163]],[0.380,[0.60650809,0.73328445,0.77620411]],[0.384,[0.61858647,0.73904668,0.77983837]],[0.388,[0.63059636,0.74483734,0.78358922]],[0.392,[0.64254033,0.75065877,0.78745106]],[0.396,[0.65441860,0.75651373,0.79142043]],[0.400,[0.66623153,0.76240488,0.79549418]],[0.404,[0.67798504,0.76833329,0.79966600]],[0.408,[0.68967550,0.77430243,0.80393610]],[0.412,[0.70131075,0.78031263,0.80829755]],[0.416,[0.71288853,0.78636686,0.81275022]],[0.420,[0.72441124,0.79246672,0.81729113]],[0.424,[0.73588370,0.79861307,0.82191590]],[0.427,[0.74730444,0.80480845,0.82662434]],[0.431,[0.75867599,0.81105425,0.83141375]],[0.435,[0.77000070,0.81735182,0.83628157]],[0.439,[0.78127895,0.82370305,0.84122655]],[0.443,[0.79251162,0.83010967,0.84624710]],[0.447,[0.80369975,0.83657330,0.85134141]],[0.451,[0.81484311,0.84309597,0.85650845]],[0.455,[0.82594216,0.84967946,0.86174654]],[0.459,[0.83699675,0.85632577,0.86705416]],[0.463,[0.84800383,0.86303779,0.87243156]],[0.467,[0.85896284,0.86981769,0.87787684]],[0.471,[0.86987188,0.87666811,0.88338843]],[0.475,[0.88072260,0.88359376,0.88896898]],[0.478,[0.89151256,0.89059766,0.89461579]],[0.482,[0.90223219,0.89768518,0.90033034]],[0.486,[0.91286295,0.90486468,0.90612019]],[0.490,[0.92339067,0.91214345,0.91198727]],[0.494,[0.93376907,0.91953891,0.91796043]],[0.498,[0.94387686,0.92709058,0.92414784]],[0.502,[0.94502413,0.92672740,0.92320173]],[0.506,[0.94017715,0.91750110,0.91273530]],[0.510,[0.93577882,0.90818496,0.90199590]],[0.514,[0.93161955,0.89884559,0.89112473]],[0.518,[0.92763669,0.88950153,0.88016251]],[0.522,[0.92379637,0.88016199,0.86913066]],[0.525,[0.92007678,0.87083231,0.85804265]],[0.529,[0.91646227,0.86151587,0.84690792]],[0.533,[0.91294097,0.85221483,0.83573351]],[0.537,[0.90950339,0.84293065,0.82452495]],[0.541,[0.90614135,0.83366435,0.81328703]],[0.545,[0.90284824,0.82441650,0.80202350]],[0.549,[0.89961835,0.81518734,0.79073759]],[0.553,[0.89644640,0.80597704,0.77943233]],[0.557,[0.89332810,0.79678541,0.76811006]],[0.561,[0.89025854,0.78761252,0.75677380]],[0.565,[0.88723415,0.77845801,0.74542553]],[0.569,[0.88425152,0.76932142,0.73406721]],[0.573,[0.88130757,0.76020224,0.72270059]],[0.576,[0.87839898,0.75110001,0.71132772]],[0.580,[0.87552202,0.74201448,0.69995114]],[0.584,[0.87267498,0.73294464,0.68857164]],[0.588,[0.86985472,0.72389001,0.67719140]],[0.592,[0.86705966,0.71484951,0.66581120]],[0.596,[0.86428554,0.70582315,0.65443443]],[0.600,[0.86153122,0.69680968,0.64306165]],[0.604,[0.85879456,0.68780825,0.63169442]],[0.608,[0.85607377,0.67881784,0.62033401]],[0.612,[0.85336475,0.66983845,0.60898403]],[0.616,[0.85066718,0.66086845,0.59764454]],[0.620,[0.84798038,0.65190630,0.58631596]],[0.624,[0.84529929,0.64295243,0.57500309]],[0.627,[0.84262333,0.63400527,0.56370649]],[0.631,[0.83995267,0.62506283,0.55242594]],[0.635,[0.83728236,0.61612552,0.54116651]],[0.639,[0.83461150,0.60719184,0.52992929]],[0.643,[0.83194170,0.59825898,0.51871286]],[0.647,[0.82926584,0.58932842,0.50752486]],[0.651,[0.82658652,0.58039681,0.49636308]],[0.655,[0.82390077,0.57146348,0.48523112]],[0.659,[0.82120472,0.56252830,0.47413374]],[0.663,[0.81850284,0.55358664,0.46306700]],[0.667,[0.81578580,0.54464120,0.45204172]],[0.671,[0.81305988,0.53568615,0.44105231]],[0.675,[0.81031573,0.52672425,0.43011000]],[0.678,[0.80756008,0.51774912,0.41920905]],[0.682,[0.80478300,0.50876385,0.40836176]],[0.686,[0.80199136,0.49976163,0.39756263]],[0.690,[0.79917761,0.49074411,0.38682195]],[0.694,[0.79634125,0.48170863,0.37614268]],[0.698,[0.79348534,0.47265010,0.36552429]],[0.702,[0.79060209,0.46357018,0.35497832]],[0.706,[0.78769221,0.45446502,0.34450752]],[0.710,[0.78475844,0.44532901,0.33411300]],[0.714,[0.78179438,0.43616264,0.32380621]],[0.718,[0.77879860,0.42696282,0.31359382]],[0.722,[0.77577003,0.41772599,0.30348288]],[0.725,[0.77270738,0.40844842,0.29348145]],[0.729,[0.76960910,0.39912628,0.28359883]],[0.733,[0.76647331,0.38975562,0.27384573]],[0.737,[0.76329775,0.38033247,0.26423455]],[0.741,[0.76007961,0.37085287,0.25477962]],[0.745,[0.75681552,0.36131299,0.24549744]],[0.749,[0.75350142,0.35170920,0.23640702]],[0.753,[0.75013244,0.34203820,0.22753009]],[0.757,[0.74670837,0.33229173,0.21888681]],[0.761,[0.74322062,0.32246895,0.21050730]],[0.765,[0.73966264,0.31256672,0.20242263]],[0.769,[0.73602766,0.30258171,0.19466697]],[0.773,[0.73230751,0.29251159,0.18727887]],[0.776,[0.72848868,0.28235996,0.18030258]],[0.780,[0.72455978,0.27212835,0.17378304]],[0.784,[0.72050526,0.26182377,0.16776811]],[0.788,[0.71630775,0.25145685,0.16230504]],[0.792,[0.71194775,0.24104317,0.15743769]],[0.796,[0.70740461,0.23060296,0.15320278]],[0.800,[0.70265778,0.22016032,0.14962642]],[0.804,[0.69768564,0.20974625,0.14671934]],[0.808,[0.69247010,0.19939235,0.14447576]],[0.812,[0.68699563,0.18913262,0.14287203]],[0.816,[0.68125094,0.17900057,0.14186849]],[0.820,[0.67522904,0.16902840,0.14141262]],[0.824,[0.66892723,0.15924601,0.14144362]],[0.827,[0.66234629,0.14968150,0.14189670]],[0.831,[0.65548946,0.14036226,0.14270608]],[0.835,[0.64836184,0.13131545,0.14380938]],[0.839,[0.64096909,0.12257090,0.14514666]],[0.843,[0.63331719,0.11416164,0.14666355]],[0.847,[0.62541177,0.10612632,0.14830833]],[0.851,[0.61725809,0.09850956,0.15003428]],[0.855,[0.60886121,0.09136271,0.15179467]],[0.859,[0.60022601,0.08474269,0.15354719]],[0.863,[0.59135807,0.07870938,0.15524760]],[0.867,[0.58226407,0.07332111,0.15685285]],[0.871,[0.57295232,0.06862870,0.15832095]],[0.875,[0.56343372,0.06466696,0.15960971]],[0.878,[0.55372241,0.06144627,0.16067796]],[0.882,[0.54383514,0.05894915,0.16148955]],[0.886,[0.53379121,0.05712858,0.16201381]],[0.890,[0.52361200,0.05591095,0.16222653]],[0.894,[0.51332147,0.05519900,0.16210827]],[0.898,[0.50294151,0.05489269,0.16165212]],[0.902,[0.49249206,0.05489498,0.16085946]],[0.906,[0.48199704,0.05509874,0.15972947]],[0.910,[0.47146853,0.05543753,0.15828036]],[0.914,[0.46092984,0.05581817,0.15651615]],[0.918,[0.45038823,0.05620093,0.15446036]],[0.922,[0.43985504,0.05653967,0.15212964]],[0.925,[0.42933959,0.05679893,0.14954130]],[0.929,[0.41884881,0.05695351,0.14671310]],[0.933,[0.40838748,0.05698680,0.14366262]],[0.937,[0.39795842,0.05688899,0.14040679]],[0.941,[0.38756618,0.05664745,0.13695962]],[0.945,[0.37721626,0.05624859,0.13333329]],[0.949,[0.36690097,0.05571028,0.12954563]],[0.953,[0.35662892,0.05501236,0.12560413]],[0.957,[0.34639461,0.05416713,0.12152211]],[0.961,[0.33620182,0.05316577,0.11730740]],[0.965,[0.32604244,0.05202498,0.11297139]],[0.969,[0.31592786,0.05071934,0.10851752]],[0.973,[0.30584405,0.04927678,0.10395692]],[0.976,[0.29579063,0.04769543,0.09929501]],[0.980,[0.28577617,0.04595517,0.09453470]],[0.984,[0.27578839,0.04407730,0.08968329]],[0.988,[0.26582514,0.04206161,0.08474472]],[0.992,[0.25588406,0.03990047,0.07972236]],[0.996,[0.24596222,0.03762595,0.07461914]],[1.000,[0.23605636,0.03529748,0.06943744]]]
H.colormap_bathymetry = [[0.000,[0.15610197,0.10260825,0.17272157]],[0.004,[0.15879951,0.10562813,0.17808215]],[0.008,[0.16148781,0.10863318,0.18344165]],[0.012,[0.16415718,0.11162318,0.18883992]],[0.016,[0.16681176,0.11459941,0.19425947]],[0.020,[0.16945091,0.11756264,0.19970233]],[0.024,[0.17207033,0.12051292,0.20518607]],[0.027,[0.17467698,0.12345223,0.21067979]],[0.031,[0.17725957,0.12637929,0.21623094]],[0.035,[0.17983088,0.12929727,0.22178284]],[0.039,[0.18237518,0.13220381,0.22740210]],[0.043,[0.18490718,0.13510267,0.23302318]],[0.047,[0.18741252,0.13799155,0.23870629]],[0.051,[0.18990318,0.14087380,0.24439758]],[0.055,[0.19236658,0.14374739,0.25014898]],[0.059,[0.19481375,0.14661556,0.25591070]],[0.063,[0.19723196,0.14947616,0.26173441]],[0.067,[0.19963336,0.15233276,0.26756593]],[0.071,[0.20200284,0.15518269,0.27346550]],[0.075,[0.20435511,0.15803011,0.27936892]],[0.078,[0.20667286,0.16087193,0.28534375]],[0.082,[0.20897027,0.16371219,0.29132868]],[0.086,[0.21123508,0.16654905,0.29736908]],[0.090,[0.21347308,0.16938469,0.30343772]],[0.094,[0.21568192,0.17221954,0.30953956]],[0.098,[0.21785541,0.17505333,0.31569323]],[0.102,[0.22000279,0.17788891,0.32185935]],[0.106,[0.22210836,0.18072434,0.32809006]],[0.110,[0.22418213,0.18356266,0.33434315]],[0.114,[0.22622210,0.18640462,0.34062032]],[0.118,[0.22821552,0.18924937,0.34695853]],[0.122,[0.23017343,0.19210006,0.35331317]],[0.125,[0.23209137,0.19495728,0.35969247]],[0.129,[0.23395668,0.19782084,0.36612828]],[0.133,[0.23577916,0.20069365,0.37258104]],[0.137,[0.23755595,0.20357690,0.37905130]],[0.141,[0.23927601,0.20647121,0.38556163]],[0.145,[0.24093942,0.20937861,0.39210045]],[0.149,[0.24254746,0.21230118,0.39865318]],[0.153,[0.24409630,0.21524071,0.40521875]],[0.157,[0.24558180,0.21819916,0.41179552]],[0.161,[0.24699281,0.22117861,0.41839657]],[0.165,[0.24833066,0.22418177,0.42500332]],[0.169,[0.24959215,0.22721132,0.43160747]],[0.173,[0.25077214,0.23027012,0.43820368]],[0.176,[0.25186528,0.23336132,0.44478539]],[0.180,[0.25286600,0.23648829,0.45134461]],[0.184,[0.25376865,0.23965469,0.45787181]],[0.188,[0.25456757,0.24286438,0.46435576]],[0.192,[0.25525721,0.24612144,0.47078343]],[0.196,[0.25583228,0.24943005,0.47713997]],[0.200,[0.25628796,0.25279443,0.48340873]],[0.204,[0.25661512,0.25621955,0.48957708]],[0.208,[0.25680888,0.25970984,0.49562536]],[0.212,[0.25687291,0.26326808,0.50152514]],[0.216,[0.25680712,0.26689714,0.50725418]],[0.220,[0.25660517,0.27060089,0.51279636]],[0.224,[0.25627372,0.27437999,0.51812616]],[0.227,[0.25582540,0.27823281,0.52321900]],[0.231,[0.25525973,0.28216003,0.52806240]],[0.235,[0.25459786,0.28615608,0.53263702]],[0.239,[0.25385147,0.29021676,0.53693454]],[0.243,[0.25303784,0.29433557,0.54094998]],[0.247,[0.25217537,0.29850489,0.54468392]],[0.251,[0.25128177,0.30271674,0.54814227]],[0.255,[0.25037292,0.30696328,0.55133524]],[0.259,[0.24946824,0.31123536,0.55427663]],[0.263,[0.24857612,0.31552728,0.55698221]],[0.267,[0.24771570,0.31982991,0.55947045]],[0.271,[0.24689121,0.32413920,0.56175861]],[0.275,[0.24611215,0.32844959,0.56386485]],[0.278,[0.24538978,0.33275513,0.56580822]],[0.282,[0.24472203,0.33705469,0.56760298]],[0.286,[0.24411647,0.34134410,0.56926586]],[0.290,[0.24357904,0.34561997,0.57081275]],[0.294,[0.24310562,0.34988262,0.57225403]],[0.298,[0.24269783,0.35413056,0.57360160]],[0.302,[0.24236192,0.35836085,0.57486937]],[0.306,[0.24209470,0.36257399,0.57606540]],[0.310,[0.24189401,0.36677027,0.57719727]],[0.314,[0.24175956,0.37094938,0.57827294]],[0.318,[0.24169076,0.37511123,0.57929958]],[0.322,[0.24168970,0.37925483,0.58028581]],[0.325,[0.24175313,0.38338117,0.58123598]],[0.329,[0.24187844,0.38749100,0.58215425]],[0.333,[0.24206427,0.39158472,0.58304526]],[0.337,[0.24230913,0.39566275,0.58391314]],[0.341,[0.24261144,0.39972561,0.58476160]],[0.345,[0.24296954,0.40377384,0.58559395]],[0.349,[0.24338171,0.40780801,0.58641316]],[0.353,[0.24384618,0.41182872,0.58722185]],[0.357,[0.24436114,0.41583660,0.58802239]],[0.361,[0.24492561,0.41983198,0.58881765]],[0.365,[0.24553674,0.42381585,0.58960858]],[0.369,[0.24619263,0.42778886,0.59039677]],[0.373,[0.24689148,0.43175165,0.59118371]],[0.376,[0.24763144,0.43570484,0.59197068]],[0.380,[0.24841072,0.43964906,0.59275883]],[0.384,[0.24922752,0.44358493,0.59354913]],[0.388,[0.25008005,0.44751306,0.59434245]],[0.392,[0.25096657,0.45143404,0.59513951]],[0.396,[0.25188534,0.45534848,0.59594094]],[0.400,[0.25283469,0.45925694,0.59674727]],[0.404,[0.25381294,0.46316000,0.59755890]],[0.408,[0.25481847,0.46705822,0.59837617]],[0.412,[0.25584972,0.47095213,0.59919934]],[0.416,[0.25690514,0.47484228,0.60002857]],[0.420,[0.25798324,0.47872916,0.60086398]],[0.424,[0.25908258,0.48261330,0.60170558]],[0.427,[0.26020178,0.48649518,0.60255336]],[0.431,[0.26133970,0.49037520,0.60340742]],[0.435,[0.26249484,0.49425390,0.60426741]],[0.439,[0.26366598,0.49813174,0.60513310]],[0.443,[0.26485195,0.50200914,0.60600423]],[0.447,[0.26605166,0.50588653,0.60688050]],[0.451,[0.26726407,0.50976430,0.60776157]],[0.455,[0.26848824,0.51364284,0.60864705]],[0.459,[0.26972326,0.51752253,0.60953651]],[0.463,[0.27096833,0.52140372,0.61042947]],[0.467,[0.27222271,0.52528675,0.61132543]],[0.471,[0.27348573,0.52917194,0.61222386]],[0.475,[0.27475681,0.53305961,0.61312416]],[0.478,[0.27603547,0.53695005,0.61402574]],[0.482,[0.27732128,0.54084353,0.61492795]],[0.486,[0.27861393,0.54474030,0.61583014]],[0.490,[0.27991319,0.54864062,0.61673159]],[0.494,[0.28121892,0.55254470,0.61763160]],[0.498,[0.28253107,0.55645275,0.61852942]],[0.502,[0.28384971,0.56036495,0.61942427]],[0.506,[0.28517499,0.56428149,0.62031537]],[0.510,[0.28650717,0.56820249,0.62120191]],[0.514,[0.28784651,0.57212815,0.62208291]],[0.518,[0.28919353,0.57605855,0.62295759]],[0.522,[0.29054888,0.57999377,0.62382514]],[0.525,[0.29191327,0.58393389,0.62468468]],[0.529,[0.29328753,0.58787895,0.62553534]],[0.533,[0.29467261,0.59182898,0.62637622]],[0.537,[0.29606961,0.59578401,0.62720640]],[0.541,[0.29747971,0.59974400,0.62802499]],[0.545,[0.29890426,0.60370894,0.62883105]],[0.549,[0.30034472,0.60767877,0.62962366]],[0.553,[0.30180270,0.61165340,0.63040190]],[0.557,[0.30327995,0.61563273,0.63116484]],[0.561,[0.30477834,0.61961664,0.63191155]],[0.565,[0.30629992,0.62360498,0.63264111]],[0.569,[0.30784684,0.62759757,0.63335259]],[0.573,[0.30942143,0.63159422,0.63404509]],[0.576,[0.31102618,0.63559469,0.63471769]],[0.580,[0.31266369,0.63959874,0.63536950]],[0.584,[0.31433675,0.64360608,0.63599965]],[0.588,[0.31604829,0.64761640,0.63660727]],[0.592,[0.31780141,0.65162937,0.63719152]],[0.596,[0.31959934,0.65564462,0.63775156]],[0.600,[0.32144548,0.65966175,0.63828660]],[0.604,[0.32334339,0.66368034,0.63879587]],[0.608,[0.32529678,0.66769992,0.63927863]],[0.612,[0.32730951,0.67171999,0.63973418]],[0.616,[0.32938557,0.67574005,0.64016185]],[0.620,[0.33152913,0.67975951,0.64056102]],[0.624,[0.33374413,0.68377791,0.64093040]],[0.627,[0.33603510,0.68779458,0.64126960]],[0.631,[0.33840684,0.69180878,0.64157857]],[0.635,[0.34086403,0.69581978,0.64185693]],[0.639,[0.34341147,0.69982684,0.64210435]],[0.643,[0.34605405,0.70382918,0.64232058]],[0.647,[0.34879674,0.70782594,0.64250547]],[0.651,[0.35164460,0.71181627,0.64265896]],[0.655,[0.35460272,0.71579925,0.64278108]],[0.659,[0.35767625,0.71977391,0.64287199]],[0.663,[0.36086992,0.72373958,0.64292927]],[0.667,[0.36418945,0.72769490,0.64295573]],[0.671,[0.36763999,0.73163877,0.64295205]],[0.675,[0.37122661,0.73557007,0.64291896]],[0.678,[0.37495428,0.73948763,0.64285736]],[0.682,[0.37882784,0.74339025,0.64276831]],[0.686,[0.38285235,0.74727697,0.64264931]],[0.690,[0.38703226,0.75114621,0.64250555]],[0.694,[0.39137183,0.75499667,0.64233873]],[0.698,[0.39587503,0.75882703,0.64215083]],[0.702,[0.40054593,0.76263603,0.64194247]],[0.706,[0.40538835,0.76642231,0.64171516]],[0.710,[0.41040452,0.77018443,0.64147423]],[0.714,[0.41559684,0.77392103,0.64122273]],[0.718,[0.42096796,0.77763083,0.64096223]],[0.722,[0.42651956,0.78131247,0.64069607]],[0.725,[0.43225139,0.78496472,0.64043042]],[0.729,[0.43816347,0.78858638,0.64016943]],[0.733,[0.44425693,0.79217623,0.63991482]],[0.737,[0.45052876,0.79573333,0.63967426]],[0.741,[0.45697666,0.79925675,0.63945293]],[0.745,[0.46359865,0.80274561,0.63925487]],[0.749,[0.47039042,0.80619928,0.63908644]],[0.753,[0.47734697,0.80961729,0.63895382]],[0.757,[0.48446331,0.81299926,0.63886245]],[0.761,[0.49173307,0.81634505,0.63881848]],[0.765,[0.49914951,0.81965467,0.63882777]],[0.769,[0.50670501,0.82292834,0.63889632]],[0.773,[0.51439085,0.82616658,0.63903043]],[0.776,[0.52219973,0.82936979,0.63923462]],[0.780,[0.53012282,0.83253876,0.63951422]],[0.784,[0.53814812,0.83567489,0.63987637]],[0.788,[0.54626958,0.83877878,0.64032322]],[0.792,[0.55447837,0.84185159,0.64085880]],[0.796,[0.56276148,0.84489535,0.64148939]],[0.800,[0.57111152,0.84791128,0.64221712]],[0.804,[0.57952181,0.85090053,0.64304356]],[0.808,[0.58798410,0.85386466,0.64397109]],[0.812,[0.59648484,0.85680645,0.64500466]],[0.816,[0.60501947,0.85972701,0.64614391]],[0.820,[0.61358282,0.86262763,0.64738888]],[0.824,[0.62216818,0.86550998,0.64874031]],[0.827,[0.63076931,0.86837576,0.65019861]],[0.831,[0.63937570,0.87122773,0.65176583]],[0.835,[0.64798434,0.87406707,0.65344053]],[0.839,[0.65659293,0.87689477,0.65522105]],[0.843,[0.66519720,0.87971238,0.65710661]],[0.847,[0.67379331,0.88252137,0.65909617]],[0.851,[0.68237784,0.88532317,0.66118854]],[0.855,[0.69094781,0.88811911,0.66338232]],[0.859,[0.69950063,0.89091050,0.66567599]],[0.863,[0.70803409,0.89369855,0.66806789]],[0.867,[0.71654633,0.89648440,0.67055629]],[0.871,[0.72503584,0.89926913,0.67313935]],[0.875,[0.73350140,0.90205374,0.67581520]],[0.878,[0.74194210,0.90483916,0.67858190]],[0.882,[0.75035729,0.90762623,0.68143751]],[0.886,[0.75874656,0.91041576,0.68438007]],[0.890,[0.76710972,0.91320846,0.68740763]],[0.894,[0.77544679,0.91600497,0.69051825]],[0.898,[0.78375799,0.91880591,0.69371001]],[0.902,[0.79204369,0.92161178,0.69698104]],[0.906,[0.80030440,0.92442306,0.70032949]],[0.910,[0.80854079,0.92724016,0.70375359]],[0.914,[0.81675365,0.93006344,0.70725160]],[0.918,[0.82494386,0.93289321,0.71082186]],[0.922,[0.83310566,0.93573198,0.71446311]],[0.925,[0.84124229,0.93857930,0.71817346]],[0.929,[0.84935864,0.94143411,0.72195118]],[0.933,[0.85745594,0.94429655,0.72579485]],[0.937,[0.86553550,0.94716668,0.72970312]],[0.941,[0.87359867,0.95004456,0.73367476]],[0.945,[0.88163260,0.95293526,0.73770822]],[0.949,[0.88965121,0.95583441,0.74180237]],[0.953,[0.89765699,0.95874159,0.74595620]],[0.957,[0.90565146,0.96165671,0.75016880]],[0.961,[0.91362740,0.96458287,0.75443868]],[0.965,[0.92158503,0.96752052,0.75876468]],[0.969,[0.92953534,0.97046601,0.76314675]],[0.973,[0.93747992,0.97341911,0.76758435]],[0.976,[0.94540698,0.97638475,0.77207538]],[0.980,[0.95332337,0.97936076,0.77661978]],[0.984,[0.96123821,0.98234397,0.78121815]],[0.988,[0.96914884,0.98533575,0.78586971]],[0.992,[0.97704185,0.98834183,0.79057175]],[0.996,[0.98493745,0.99135452,0.79532716]],[1.000,[0.99283718,0.99437346,0.80013620]]]
H.colormap_Blues = [[0.000, [0.969, 0.984, 1.000]], [0.002, [0.969, 0.984, 1.000]], [0.004, [0.966, 0.982, 0.999]], [0.006, [0.966, 0.982, 0.999]], [0.008, [0.962, 0.980, 0.998]], [0.010, [0.962, 0.980, 0.998]], [0.012, [0.959, 0.978, 0.997]], [0.014, [0.959, 0.978, 0.997]], [0.016, [0.956, 0.976, 0.996]], [0.018, [0.956, 0.976, 0.996]], [0.020, [0.953, 0.974, 0.995]], [0.022, [0.953, 0.974, 0.995]], [0.023, [0.950, 0.973, 0.994]], [0.025, [0.950, 0.973, 0.994]], [0.027, [0.947, 0.971, 0.993]], [0.029, [0.947, 0.971, 0.993]], [0.031, [0.944, 0.969, 0.992]], [0.033, [0.944, 0.969, 0.992]], [0.035, [0.941, 0.967, 0.991]], [0.037, [0.941, 0.967, 0.991]], [0.039, [0.938, 0.965, 0.990]], [0.041, [0.938, 0.965, 0.990]], [0.043, [0.935, 0.963, 0.989]], [0.045, [0.935, 0.963, 0.989]], [0.047, [0.932, 0.961, 0.988]], [0.049, [0.932, 0.961, 0.988]], [0.051, [0.929, 0.959, 0.987]], [0.053, [0.929, 0.959, 0.987]], [0.055, [0.926, 0.957, 0.986]], [0.057, [0.926, 0.957, 0.986]], [0.059, [0.922, 0.955, 0.985]], [0.061, [0.922, 0.955, 0.985]], [0.063, [0.919, 0.953, 0.984]], [0.065, [0.919, 0.953, 0.984]], [0.067, [0.916, 0.951, 0.983]], [0.068, [0.916, 0.951, 0.983]], [0.070, [0.913, 0.949, 0.982]], [0.072, [0.913, 0.949, 0.982]], [0.074, [0.910, 0.947, 0.981]], [0.076, [0.910, 0.947, 0.981]], [0.078, [0.907, 0.945, 0.980]], [0.080, [0.907, 0.945, 0.980]], [0.082, [0.904, 0.943, 0.979]], [0.084, [0.904, 0.943, 0.979]], [0.086, [0.901, 0.941, 0.978]], [0.088, [0.901, 0.941, 0.978]], [0.090, [0.898, 0.939, 0.977]], [0.092, [0.898, 0.939, 0.977]], [0.094, [0.895, 0.937, 0.976]], [0.096, [0.895, 0.937, 0.976]], [0.098, [0.892, 0.935, 0.975]], [0.100, [0.892, 0.935, 0.975]], [0.102, [0.889, 0.933, 0.974]], [0.104, [0.889, 0.933, 0.974]], [0.106, [0.886, 0.931, 0.973]], [0.108, [0.886, 0.931, 0.973]], [0.110, [0.883, 0.929, 0.972]], [0.112, [0.883, 0.929, 0.972]], [0.114, [0.879, 0.927, 0.971]], [0.115, [0.879, 0.927, 0.971]], [0.117, [0.876, 0.925, 0.970]], [0.119, [0.876, 0.925, 0.970]], [0.121, [0.873, 0.923, 0.969]], [0.123, [0.873, 0.923, 0.969]], [0.125, [0.870, 0.921, 0.969]], [0.127, [0.870, 0.921, 0.969]], [0.129, [0.867, 0.919, 0.968]], [0.131, [0.867, 0.919, 0.968]], [0.133, [0.864, 0.917, 0.967]], [0.135, [0.864, 0.917, 0.967]], [0.137, [0.861, 0.915, 0.966]], [0.139, [0.861, 0.915, 0.966]], [0.141, [0.858, 0.913, 0.965]], [0.143, [0.858, 0.913, 0.965]], [0.145, [0.855, 0.911, 0.964]], [0.147, [0.855, 0.911, 0.964]], [0.149, [0.853, 0.910, 0.963]], [0.151, [0.853, 0.910, 0.963]], [0.153, [0.850, 0.908, 0.962]], [0.155, [0.850, 0.908, 0.962]], [0.157, [0.847, 0.906, 0.961]], [0.159, [0.847, 0.906, 0.961]], [0.160, [0.844, 0.904, 0.960]], [0.162, [0.844, 0.904, 0.960]], [0.164, [0.841, 0.902, 0.959]], [0.166, [0.841, 0.902, 0.959]], [0.168, [0.838, 0.900, 0.958]], [0.170, [0.838, 0.900, 0.958]], [0.172, [0.835, 0.898, 0.957]], [0.174, [0.835, 0.898, 0.957]], [0.176, [0.832, 0.896, 0.956]], [0.178, [0.832, 0.896, 0.956]], [0.180, [0.829, 0.894, 0.955]], [0.182, [0.829, 0.894, 0.955]], [0.184, [0.826, 0.892, 0.954]], [0.186, [0.826, 0.892, 0.954]], [0.188, [0.823, 0.890, 0.953]], [0.190, [0.823, 0.890, 0.953]], [0.192, [0.820, 0.888, 0.952]], [0.194, [0.820, 0.888, 0.952]], [0.196, [0.817, 0.886, 0.951]], [0.198, [0.817, 0.886, 0.951]], [0.200, [0.814, 0.884, 0.950]], [0.202, [0.814, 0.884, 0.950]], [0.204, [0.811, 0.882, 0.949]], [0.205, [0.811, 0.882, 0.949]], [0.207, [0.808, 0.880, 0.948]], [0.209, [0.808, 0.880, 0.948]], [0.211, [0.805, 0.878, 0.947]], [0.213, [0.805, 0.878, 0.947]], [0.215, [0.802, 0.876, 0.946]], [0.217, [0.802, 0.876, 0.946]], [0.219, [0.799, 0.874, 0.945]], [0.221, [0.799, 0.874, 0.945]], [0.223, [0.796, 0.872, 0.944]], [0.225, [0.796, 0.872, 0.944]], [0.227, [0.793, 0.870, 0.943]], [0.229, [0.793, 0.870, 0.943]], [0.231, [0.790, 0.868, 0.942]], [0.233, [0.790, 0.868, 0.942]], [0.235, [0.788, 0.866, 0.941]], [0.237, [0.788, 0.866, 0.941]], [0.239, [0.785, 0.864, 0.940]], [0.241, [0.785, 0.864, 0.940]], [0.243, [0.782, 0.862, 0.939]], [0.245, [0.782, 0.862, 0.939]], [0.247, [0.779, 0.860, 0.938]], [0.249, [0.779, 0.860, 0.938]], [0.250, [0.775, 0.858, 0.937]], [0.252, [0.775, 0.858, 0.937]], [0.254, [0.770, 0.856, 0.935]], [0.256, [0.770, 0.856, 0.935]], [0.258, [0.765, 0.854, 0.933]], [0.260, [0.765, 0.854, 0.933]], [0.262, [0.760, 0.852, 0.932]], [0.264, [0.760, 0.852, 0.932]], [0.266, [0.756, 0.850, 0.930]], [0.268, [0.756, 0.850, 0.930]], [0.270, [0.751, 0.848, 0.928]], [0.272, [0.751, 0.848, 0.928]], [0.274, [0.746, 0.846, 0.926]], [0.276, [0.746, 0.846, 0.926]], [0.278, [0.741, 0.844, 0.925]], [0.280, [0.741, 0.844, 0.925]], [0.282, [0.736, 0.842, 0.923]], [0.284, [0.736, 0.842, 0.923]], [0.286, [0.731, 0.839, 0.921]], [0.288, [0.731, 0.839, 0.921]], [0.290, [0.726, 0.837, 0.920]], [0.292, [0.726, 0.837, 0.920]], [0.294, [0.721, 0.835, 0.918]], [0.295, [0.721, 0.835, 0.918]], [0.297, [0.716, 0.833, 0.916]], [0.299, [0.716, 0.833, 0.916]], [0.301, [0.711, 0.831, 0.914]], [0.303, [0.711, 0.831, 0.914]], [0.305, [0.706, 0.829, 0.913]], [0.307, [0.706, 0.829, 0.913]], [0.309, [0.701, 0.827, 0.911]], [0.311, [0.701, 0.827, 0.911]], [0.313, [0.697, 0.825, 0.909]], [0.315, [0.697, 0.825, 0.909]], [0.317, [0.692, 0.823, 0.908]], [0.319, [0.692, 0.823, 0.908]], [0.321, [0.687, 0.821, 0.906]], [0.323, [0.687, 0.821, 0.906]], [0.325, [0.682, 0.819, 0.904]], [0.327, [0.682, 0.819, 0.904]], [0.329, [0.677, 0.816, 0.902]], [0.331, [0.677, 0.816, 0.902]], [0.333, [0.672, 0.814, 0.901]], [0.335, [0.672, 0.814, 0.901]], [0.337, [0.667, 0.812, 0.899]], [0.339, [0.667, 0.812, 0.899]], [0.341, [0.662, 0.810, 0.897]], [0.342, [0.662, 0.810, 0.897]], [0.344, [0.657, 0.808, 0.895]], [0.346, [0.657, 0.808, 0.895]], [0.348, [0.652, 0.806, 0.894]], [0.350, [0.652, 0.806, 0.894]], [0.352, [0.647, 0.804, 0.892]], [0.354, [0.647, 0.804, 0.892]], [0.356, [0.642, 0.802, 0.890]], [0.358, [0.642, 0.802, 0.890]], [0.360, [0.637, 0.800, 0.889]], [0.362, [0.637, 0.800, 0.889]], [0.364, [0.633, 0.798, 0.887]], [0.366, [0.633, 0.798, 0.887]], [0.368, [0.628, 0.796, 0.885]], [0.370, [0.628, 0.796, 0.885]], [0.372, [0.623, 0.793, 0.883]], [0.374, [0.623, 0.793, 0.883]], [0.376, [0.617, 0.791, 0.882]], [0.378, [0.617, 0.791, 0.882]], [0.380, [0.611, 0.787, 0.880]], [0.382, [0.611, 0.787, 0.880]], [0.384, [0.605, 0.784, 0.879]], [0.386, [0.605, 0.784, 0.879]], [0.387, [0.598, 0.781, 0.878]], [0.389, [0.598, 0.781, 0.878]], [0.391, [0.592, 0.777, 0.876]], [0.393, [0.592, 0.777, 0.876]], [0.395, [0.586, 0.774, 0.875]], [0.397, [0.586, 0.774, 0.875]], [0.399, [0.580, 0.770, 0.874]], [0.401, [0.580, 0.770, 0.874]], [0.403, [0.573, 0.767, 0.872]], [0.405, [0.573, 0.767, 0.872]], [0.407, [0.567, 0.763, 0.871]], [0.409, [0.567, 0.763, 0.871]], [0.411, [0.561, 0.760, 0.870]], [0.413, [0.561, 0.760, 0.870]], [0.415, [0.555, 0.756, 0.868]], [0.417, [0.555, 0.756, 0.868]], [0.419, [0.548, 0.753, 0.867]], [0.421, [0.548, 0.753, 0.867]], [0.423, [0.542, 0.750, 0.866]], [0.425, [0.542, 0.750, 0.866]], [0.427, [0.536, 0.746, 0.864]], [0.429, [0.536, 0.746, 0.864]], [0.431, [0.529, 0.743, 0.863]], [0.432, [0.529, 0.743, 0.863]], [0.434, [0.523, 0.739, 0.862]], [0.436, [0.523, 0.739, 0.862]], [0.438, [0.517, 0.736, 0.860]], [0.440, [0.517, 0.736, 0.860]], [0.442, [0.511, 0.732, 0.859]], [0.444, [0.511, 0.732, 0.859]], [0.446, [0.504, 0.729, 0.857]], [0.448, [0.504, 0.729, 0.857]], [0.450, [0.498, 0.725, 0.856]], [0.452, [0.498, 0.725, 0.856]], [0.454, [0.492, 0.722, 0.855]], [0.456, [0.492, 0.722, 0.855]], [0.458, [0.485, 0.719, 0.853]], [0.460, [0.485, 0.719, 0.853]], [0.462, [0.479, 0.715, 0.852]], [0.464, [0.479, 0.715, 0.852]], [0.466, [0.473, 0.712, 0.851]], [0.468, [0.473, 0.712, 0.851]], [0.470, [0.467, 0.708, 0.849]], [0.472, [0.467, 0.708, 0.849]], [0.474, [0.460, 0.705, 0.848]], [0.476, [0.460, 0.705, 0.848]], [0.477, [0.454, 0.701, 0.847]], [0.479, [0.454, 0.701, 0.847]], [0.481, [0.448, 0.698, 0.845]], [0.483, [0.448, 0.698, 0.845]], [0.485, [0.442, 0.694, 0.844]], [0.487, [0.442, 0.694, 0.844]], [0.489, [0.435, 0.691, 0.843]], [0.491, [0.435, 0.691, 0.843]], [0.493, [0.429, 0.688, 0.841]], [0.495, [0.429, 0.688, 0.841]], [0.497, [0.423, 0.684, 0.840]], [0.499, [0.423, 0.684, 0.840]], [0.501, [0.417, 0.681, 0.838]], [0.503, [0.417, 0.681, 0.838]], [0.505, [0.412, 0.677, 0.836]], [0.507, [0.412, 0.677, 0.836]], [0.509, [0.407, 0.674, 0.834]], [0.511, [0.407, 0.674, 0.834]], [0.513, [0.402, 0.670, 0.832]], [0.515, [0.402, 0.670, 0.832]], [0.517, [0.397, 0.667, 0.830]], [0.519, [0.397, 0.667, 0.830]], [0.521, [0.392, 0.663, 0.828]], [0.523, [0.392, 0.663, 0.828]], [0.524, [0.387, 0.660, 0.826]], [0.526, [0.387, 0.660, 0.826]], [0.528, [0.382, 0.657, 0.824]], [0.530, [0.382, 0.657, 0.824]], [0.532, [0.377, 0.653, 0.822]], [0.534, [0.377, 0.653, 0.822]], [0.536, [0.372, 0.650, 0.821]], [0.538, [0.372, 0.650, 0.821]], [0.540, [0.367, 0.646, 0.819]], [0.542, [0.367, 0.646, 0.819]], [0.544, [0.362, 0.643, 0.817]], [0.546, [0.362, 0.643, 0.817]], [0.548, [0.357, 0.639, 0.815]], [0.550, [0.357, 0.639, 0.815]], [0.552, [0.352, 0.636, 0.813]], [0.554, [0.352, 0.636, 0.813]], [0.556, [0.346, 0.632, 0.811]], [0.558, [0.346, 0.632, 0.811]], [0.560, [0.341, 0.629, 0.809]], [0.562, [0.341, 0.629, 0.809]], [0.564, [0.336, 0.626, 0.807]], [0.566, [0.336, 0.626, 0.807]], [0.568, [0.331, 0.622, 0.805]], [0.569, [0.331, 0.622, 0.805]], [0.571, [0.326, 0.619, 0.803]], [0.573, [0.326, 0.619, 0.803]], [0.575, [0.321, 0.615, 0.801]], [0.577, [0.321, 0.615, 0.801]], [0.579, [0.316, 0.612, 0.799]], [0.581, [0.316, 0.612, 0.799]], [0.583, [0.311, 0.608, 0.797]], [0.585, [0.311, 0.608, 0.797]], [0.587, [0.306, 0.605, 0.795]], [0.589, [0.306, 0.605, 0.795]], [0.591, [0.301, 0.601, 0.793]], [0.593, [0.301, 0.601, 0.793]], [0.595, [0.296, 0.598, 0.791]], [0.597, [0.296, 0.598, 0.791]], [0.599, [0.291, 0.595, 0.789]], [0.601, [0.291, 0.595, 0.789]], [0.603, [0.286, 0.591, 0.787]], [0.605, [0.286, 0.591, 0.787]], [0.607, [0.281, 0.588, 0.785]], [0.609, [0.281, 0.588, 0.785]], [0.611, [0.276, 0.584, 0.783]], [0.613, [0.276, 0.584, 0.783]], [0.614, [0.271, 0.581, 0.781]], [0.616, [0.271, 0.581, 0.781]], [0.618, [0.266, 0.577, 0.779]], [0.620, [0.266, 0.577, 0.779]], [0.622, [0.261, 0.574, 0.777]], [0.624, [0.261, 0.574, 0.777]], [0.626, [0.256, 0.570, 0.775]], [0.628, [0.256, 0.570, 0.775]], [0.630, [0.252, 0.566, 0.773]], [0.632, [0.252, 0.566, 0.773]], [0.634, [0.248, 0.562, 0.771]], [0.636, [0.248, 0.562, 0.771]], [0.638, [0.244, 0.558, 0.769]], [0.640, [0.244, 0.558, 0.769]], [0.642, [0.240, 0.554, 0.767]], [0.644, [0.240, 0.554, 0.767]], [0.646, [0.236, 0.550, 0.765]], [0.648, [0.236, 0.550, 0.765]], [0.650, [0.232, 0.546, 0.763]], [0.652, [0.232, 0.546, 0.763]], [0.654, [0.228, 0.542, 0.761]], [0.656, [0.228, 0.542, 0.761]], [0.658, [0.224, 0.538, 0.758]], [0.659, [0.224, 0.538, 0.758]], [0.661, [0.220, 0.533, 0.756]], [0.663, [0.220, 0.533, 0.756]], [0.665, [0.216, 0.529, 0.754]], [0.667, [0.216, 0.529, 0.754]], [0.669, [0.212, 0.525, 0.752]], [0.671, [0.212, 0.525, 0.752]], [0.673, [0.208, 0.521, 0.750]], [0.675, [0.208, 0.521, 0.750]], [0.677, [0.204, 0.517, 0.748]], [0.679, [0.204, 0.517, 0.748]], [0.681, [0.199, 0.513, 0.746]], [0.683, [0.199, 0.513, 0.746]], [0.685, [0.195, 0.509, 0.744]], [0.687, [0.195, 0.509, 0.744]], [0.689, [0.191, 0.505, 0.742]], [0.691, [0.191, 0.505, 0.742]], [0.693, [0.187, 0.501, 0.740]], [0.695, [0.187, 0.501, 0.740]], [0.697, [0.183, 0.497, 0.738]], [0.699, [0.183, 0.497, 0.738]], [0.701, [0.179, 0.493, 0.735]], [0.703, [0.179, 0.493, 0.735]], [0.705, [0.175, 0.489, 0.733]], [0.706, [0.175, 0.489, 0.733]], [0.708, [0.171, 0.485, 0.731]], [0.710, [0.171, 0.485, 0.731]], [0.712, [0.167, 0.481, 0.729]], [0.714, [0.167, 0.481, 0.729]], [0.716, [0.163, 0.477, 0.727]], [0.718, [0.163, 0.477, 0.727]], [0.720, [0.159, 0.473, 0.725]], [0.722, [0.159, 0.473, 0.725]], [0.724, [0.155, 0.469, 0.723]], [0.726, [0.155, 0.469, 0.723]], [0.728, [0.151, 0.464, 0.721]], [0.730, [0.151, 0.464, 0.721]], [0.732, [0.147, 0.460, 0.719]], [0.734, [0.147, 0.460, 0.719]], [0.736, [0.143, 0.456, 0.717]], [0.738, [0.143, 0.456, 0.717]], [0.740, [0.139, 0.452, 0.715]], [0.742, [0.139, 0.452, 0.715]], [0.744, [0.134, 0.448, 0.712]], [0.746, [0.134, 0.448, 0.712]], [0.748, [0.130, 0.444, 0.710]], [0.750, [0.130, 0.444, 0.710]], [0.751, [0.127, 0.440, 0.707]], [0.753, [0.127, 0.440, 0.707]], [0.755, [0.124, 0.436, 0.704]], [0.757, [0.124, 0.436, 0.704]], [0.759, [0.121, 0.432, 0.701]], [0.761, [0.121, 0.432, 0.701]], [0.763, [0.118, 0.428, 0.698]], [0.765, [0.118, 0.428, 0.698]], [0.767, [0.115, 0.424, 0.695]], [0.769, [0.115, 0.424, 0.695]], [0.771, [0.112, 0.420, 0.692]], [0.773, [0.112, 0.420, 0.692]], [0.775, [0.109, 0.417, 0.689]], [0.777, [0.109, 0.417, 0.689]], [0.779, [0.106, 0.413, 0.686]], [0.781, [0.106, 0.413, 0.686]], [0.783, [0.102, 0.409, 0.683]], [0.785, [0.102, 0.409, 0.683]], [0.787, [0.099, 0.405, 0.680]], [0.789, [0.099, 0.405, 0.680]], [0.791, [0.096, 0.401, 0.677]], [0.793, [0.096, 0.401, 0.677]], [0.795, [0.093, 0.397, 0.674]], [0.796, [0.093, 0.397, 0.674]], [0.798, [0.090, 0.393, 0.671]], [0.800, [0.090, 0.393, 0.671]], [0.802, [0.087, 0.389, 0.668]], [0.804, [0.087, 0.389, 0.668]], [0.806, [0.084, 0.385, 0.664]], [0.808, [0.084, 0.385, 0.664]], [0.810, [0.081, 0.381, 0.661]], [0.812, [0.081, 0.381, 0.661]], [0.814, [0.078, 0.377, 0.658]], [0.816, [0.078, 0.377, 0.658]], [0.818, [0.075, 0.373, 0.655]], [0.820, [0.075, 0.373, 0.655]], [0.822, [0.072, 0.369, 0.652]], [0.824, [0.072, 0.369, 0.652]], [0.826, [0.069, 0.365, 0.649]], [0.828, [0.069, 0.365, 0.649]], [0.830, [0.066, 0.361, 0.646]], [0.832, [0.066, 0.361, 0.646]], [0.834, [0.063, 0.358, 0.643]], [0.836, [0.063, 0.358, 0.643]], [0.838, [0.059, 0.354, 0.640]], [0.840, [0.059, 0.354, 0.640]], [0.841, [0.056, 0.350, 0.637]], [0.843, [0.056, 0.350, 0.637]], [0.845, [0.053, 0.346, 0.634]], [0.847, [0.053, 0.346, 0.634]], [0.849, [0.050, 0.342, 0.631]], [0.851, [0.050, 0.342, 0.631]], [0.853, [0.047, 0.338, 0.628]], [0.855, [0.047, 0.338, 0.628]], [0.857, [0.044, 0.334, 0.624]], [0.859, [0.044, 0.334, 0.624]], [0.861, [0.041, 0.330, 0.621]], [0.863, [0.041, 0.330, 0.621]], [0.865, [0.038, 0.326, 0.618]], [0.867, [0.038, 0.326, 0.618]], [0.869, [0.035, 0.322, 0.615]], [0.871, [0.035, 0.322, 0.615]], [0.873, [0.032, 0.318, 0.612]], [0.875, [0.032, 0.318, 0.612]], [0.877, [0.031, 0.314, 0.606]], [0.879, [0.031, 0.314, 0.606]], [0.881, [0.031, 0.310, 0.600]], [0.883, [0.031, 0.310, 0.600]], [0.885, [0.031, 0.306, 0.594]], [0.886, [0.031, 0.306, 0.594]], [0.888, [0.031, 0.302, 0.588]], [0.890, [0.031, 0.302, 0.588]], [0.892, [0.031, 0.298, 0.582]], [0.894, [0.031, 0.298, 0.582]], [0.896, [0.031, 0.294, 0.576]], [0.898, [0.031, 0.294, 0.576]], [0.900, [0.031, 0.290, 0.570]], [0.902, [0.031, 0.290, 0.570]], [0.904, [0.031, 0.286, 0.564]], [0.906, [0.031, 0.286, 0.564]], [0.908, [0.031, 0.282, 0.558]], [0.910, [0.031, 0.282, 0.558]], [0.912, [0.031, 0.278, 0.552]], [0.914, [0.031, 0.278, 0.552]], [0.916, [0.031, 0.273, 0.546]], [0.918, [0.031, 0.273, 0.546]], [0.920, [0.031, 0.269, 0.540]], [0.922, [0.031, 0.269, 0.540]], [0.924, [0.031, 0.265, 0.534]], [0.926, [0.031, 0.265, 0.534]], [0.928, [0.031, 0.261, 0.528]], [0.930, [0.031, 0.261, 0.528]], [0.932, [0.031, 0.257, 0.522]], [0.933, [0.031, 0.257, 0.522]], [0.935, [0.031, 0.253, 0.516]], [0.937, [0.031, 0.253, 0.516]], [0.939, [0.031, 0.249, 0.510]], [0.941, [0.031, 0.249, 0.510]], [0.943, [0.031, 0.245, 0.504]], [0.945, [0.031, 0.245, 0.504]], [0.947, [0.031, 0.241, 0.498]], [0.949, [0.031, 0.241, 0.498]], [0.951, [0.031, 0.237, 0.492]], [0.953, [0.031, 0.237, 0.492]], [0.955, [0.031, 0.233, 0.486]], [0.957, [0.031, 0.233, 0.486]], [0.959, [0.031, 0.229, 0.480]], [0.961, [0.031, 0.229, 0.480]], [0.963, [0.031, 0.225, 0.474]], [0.965, [0.031, 0.225, 0.474]], [0.967, [0.031, 0.221, 0.468]], [0.969, [0.031, 0.221, 0.468]], [0.971, [0.031, 0.217, 0.462]], [0.973, [0.031, 0.217, 0.462]], [0.975, [0.031, 0.213, 0.456]], [0.977, [0.031, 0.213, 0.456]], [0.978, [0.031, 0.209, 0.450]], [0.980, [0.031, 0.209, 0.450]], [0.982, [0.031, 0.204, 0.444]], [0.984, [0.031, 0.204, 0.444]], [0.986, [0.031, 0.200, 0.438]], [0.988, [0.031, 0.200, 0.438]], [0.990, [0.031, 0.196, 0.432]], [0.992, [0.031, 0.196, 0.432]], [0.994, [0.031, 0.192, 0.426]], [0.996, [0.031, 0.192, 0.426]], [0.998, [0.031, 0.188, 0.420]], [1.000, [0.031, 0.188, 0.420]]];
H.colormap_bone = [[0.000, [0.000, 0.000, 0.000]], [0.002, [0.000, 0.000, 0.000]], [0.004, [0.003, 0.003, 0.005]], [0.006, [0.003, 0.003, 0.005]], [0.008, [0.007, 0.007, 0.010]], [0.010, [0.007, 0.007, 0.010]], [0.012, [0.010, 0.010, 0.014]], [0.014, [0.010, 0.010, 0.014]], [0.016, [0.014, 0.014, 0.019]], [0.018, [0.014, 0.014, 0.019]], [0.020, [0.017, 0.017, 0.024]], [0.022, [0.017, 0.017, 0.024]], [0.023, [0.021, 0.021, 0.029]], [0.025, [0.021, 0.021, 0.029]], [0.027, [0.024, 0.024, 0.033]], [0.029, [0.024, 0.024, 0.033]], [0.031, [0.027, 0.027, 0.038]], [0.033, [0.027, 0.027, 0.038]], [0.035, [0.031, 0.031, 0.043]], [0.037, [0.031, 0.031, 0.043]], [0.039, [0.034, 0.034, 0.048]], [0.041, [0.034, 0.034, 0.048]], [0.043, [0.038, 0.038, 0.053]], [0.045, [0.038, 0.038, 0.053]], [0.047, [0.041, 0.041, 0.057]], [0.049, [0.041, 0.041, 0.057]], [0.051, [0.045, 0.045, 0.062]], [0.053, [0.045, 0.045, 0.062]], [0.055, [0.048, 0.048, 0.067]], [0.057, [0.048, 0.048, 0.067]], [0.059, [0.051, 0.051, 0.072]], [0.061, [0.051, 0.051, 0.072]], [0.063, [0.055, 0.055, 0.076]], [0.065, [0.055, 0.055, 0.076]], [0.067, [0.058, 0.058, 0.081]], [0.068, [0.058, 0.058, 0.081]], [0.070, [0.062, 0.062, 0.086]], [0.072, [0.062, 0.062, 0.086]], [0.074, [0.065, 0.065, 0.091]], [0.076, [0.065, 0.065, 0.091]], [0.078, [0.069, 0.069, 0.095]], [0.080, [0.069, 0.069, 0.095]], [0.082, [0.072, 0.072, 0.100]], [0.084, [0.072, 0.072, 0.100]], [0.086, [0.075, 0.075, 0.105]], [0.088, [0.075, 0.075, 0.105]], [0.090, [0.079, 0.079, 0.110]], [0.092, [0.079, 0.079, 0.110]], [0.094, [0.082, 0.082, 0.115]], [0.096, [0.082, 0.082, 0.115]], [0.098, [0.086, 0.086, 0.119]], [0.100, [0.086, 0.086, 0.119]], [0.102, [0.089, 0.089, 0.124]], [0.104, [0.089, 0.089, 0.124]], [0.106, [0.093, 0.093, 0.129]], [0.108, [0.093, 0.093, 0.129]], [0.110, [0.096, 0.096, 0.134]], [0.112, [0.096, 0.096, 0.134]], [0.114, [0.100, 0.100, 0.138]], [0.115, [0.100, 0.100, 0.138]], [0.117, [0.103, 0.103, 0.143]], [0.119, [0.103, 0.103, 0.143]], [0.121, [0.106, 0.106, 0.148]], [0.123, [0.106, 0.106, 0.148]], [0.125, [0.110, 0.110, 0.153]], [0.127, [0.110, 0.110, 0.153]], [0.129, [0.113, 0.113, 0.158]], [0.131, [0.113, 0.113, 0.158]], [0.133, [0.117, 0.117, 0.162]], [0.135, [0.117, 0.117, 0.162]], [0.137, [0.120, 0.120, 0.167]], [0.139, [0.120, 0.120, 0.167]], [0.141, [0.124, 0.124, 0.172]], [0.143, [0.124, 0.124, 0.172]], [0.145, [0.127, 0.127, 0.177]], [0.147, [0.127, 0.127, 0.177]], [0.149, [0.130, 0.130, 0.181]], [0.151, [0.130, 0.130, 0.181]], [0.153, [0.134, 0.134, 0.186]], [0.155, [0.134, 0.134, 0.186]], [0.157, [0.137, 0.137, 0.191]], [0.159, [0.137, 0.137, 0.191]], [0.160, [0.141, 0.141, 0.196]], [0.162, [0.141, 0.141, 0.196]], [0.164, [0.144, 0.144, 0.201]], [0.166, [0.144, 0.144, 0.201]], [0.168, [0.148, 0.148, 0.205]], [0.170, [0.148, 0.148, 0.205]], [0.172, [0.151, 0.151, 0.210]], [0.174, [0.151, 0.151, 0.210]], [0.176, [0.154, 0.154, 0.215]], [0.178, [0.154, 0.154, 0.215]], [0.180, [0.158, 0.158, 0.220]], [0.182, [0.158, 0.158, 0.220]], [0.184, [0.161, 0.161, 0.224]], [0.186, [0.161, 0.161, 0.224]], [0.188, [0.165, 0.165, 0.229]], [0.190, [0.165, 0.165, 0.229]], [0.192, [0.168, 0.168, 0.234]], [0.194, [0.168, 0.168, 0.234]], [0.196, [0.172, 0.172, 0.239]], [0.198, [0.172, 0.172, 0.239]], [0.200, [0.175, 0.175, 0.243]], [0.202, [0.175, 0.175, 0.243]], [0.204, [0.178, 0.178, 0.248]], [0.205, [0.178, 0.178, 0.248]], [0.207, [0.182, 0.182, 0.253]], [0.209, [0.182, 0.182, 0.253]], [0.211, [0.185, 0.185, 0.258]], [0.213, [0.185, 0.185, 0.258]], [0.215, [0.189, 0.189, 0.263]], [0.217, [0.189, 0.189, 0.263]], [0.219, [0.192, 0.192, 0.267]], [0.221, [0.192, 0.192, 0.267]], [0.223, [0.196, 0.196, 0.272]], [0.225, [0.196, 0.196, 0.272]], [0.227, [0.199, 0.199, 0.277]], [0.229, [0.199, 0.199, 0.277]], [0.231, [0.202, 0.202, 0.282]], [0.233, [0.202, 0.202, 0.282]], [0.235, [0.206, 0.206, 0.286]], [0.237, [0.206, 0.206, 0.286]], [0.239, [0.209, 0.209, 0.291]], [0.241, [0.209, 0.209, 0.291]], [0.243, [0.213, 0.213, 0.296]], [0.245, [0.213, 0.213, 0.296]], [0.247, [0.216, 0.216, 0.301]], [0.249, [0.216, 0.216, 0.301]], [0.250, [0.220, 0.220, 0.306]], [0.252, [0.220, 0.220, 0.306]], [0.254, [0.223, 0.223, 0.310]], [0.256, [0.223, 0.223, 0.310]], [0.258, [0.226, 0.226, 0.315]], [0.260, [0.226, 0.226, 0.315]], [0.262, [0.230, 0.230, 0.320]], [0.264, [0.230, 0.230, 0.320]], [0.266, [0.233, 0.233, 0.325]], [0.268, [0.233, 0.233, 0.325]], [0.270, [0.237, 0.237, 0.329]], [0.272, [0.237, 0.237, 0.329]], [0.274, [0.240, 0.240, 0.334]], [0.276, [0.240, 0.240, 0.334]], [0.278, [0.244, 0.244, 0.339]], [0.280, [0.244, 0.244, 0.339]], [0.282, [0.247, 0.247, 0.344]], [0.284, [0.247, 0.247, 0.344]], [0.286, [0.250, 0.250, 0.349]], [0.288, [0.250, 0.250, 0.349]], [0.290, [0.254, 0.254, 0.353]], [0.292, [0.254, 0.254, 0.353]], [0.294, [0.257, 0.257, 0.358]], [0.295, [0.257, 0.257, 0.358]], [0.297, [0.261, 0.261, 0.363]], [0.299, [0.261, 0.261, 0.363]], [0.301, [0.264, 0.264, 0.368]], [0.303, [0.264, 0.264, 0.368]], [0.305, [0.268, 0.268, 0.372]], [0.307, [0.268, 0.268, 0.372]], [0.309, [0.271, 0.271, 0.377]], [0.311, [0.271, 0.271, 0.377]], [0.313, [0.275, 0.275, 0.382]], [0.315, [0.275, 0.275, 0.382]], [0.317, [0.278, 0.278, 0.387]], [0.319, [0.278, 0.278, 0.387]], [0.321, [0.281, 0.281, 0.391]], [0.323, [0.281, 0.281, 0.391]], [0.325, [0.285, 0.285, 0.396]], [0.327, [0.285, 0.285, 0.396]], [0.329, [0.288, 0.288, 0.401]], [0.331, [0.288, 0.288, 0.401]], [0.333, [0.292, 0.292, 0.406]], [0.335, [0.292, 0.292, 0.406]], [0.337, [0.295, 0.295, 0.411]], [0.339, [0.295, 0.295, 0.411]], [0.341, [0.299, 0.299, 0.415]], [0.342, [0.299, 0.299, 0.415]], [0.344, [0.302, 0.302, 0.420]], [0.346, [0.302, 0.302, 0.420]], [0.348, [0.305, 0.305, 0.425]], [0.350, [0.305, 0.305, 0.425]], [0.352, [0.309, 0.309, 0.430]], [0.354, [0.309, 0.309, 0.430]], [0.356, [0.312, 0.312, 0.434]], [0.358, [0.312, 0.312, 0.434]], [0.360, [0.316, 0.316, 0.439]], [0.362, [0.316, 0.316, 0.439]], [0.364, [0.319, 0.319, 0.444]], [0.366, [0.319, 0.319, 0.444]], [0.368, [0.323, 0.324, 0.448]], [0.370, [0.323, 0.324, 0.448]], [0.372, [0.326, 0.328, 0.451]], [0.374, [0.326, 0.328, 0.451]], [0.376, [0.329, 0.333, 0.454]], [0.378, [0.329, 0.333, 0.454]], [0.380, [0.333, 0.338, 0.458]], [0.382, [0.333, 0.338, 0.458]], [0.384, [0.336, 0.343, 0.461]], [0.386, [0.336, 0.343, 0.461]], [0.387, [0.340, 0.347, 0.465]], [0.389, [0.340, 0.347, 0.465]], [0.391, [0.343, 0.352, 0.468]], [0.393, [0.343, 0.352, 0.468]], [0.395, [0.347, 0.357, 0.472]], [0.397, [0.347, 0.357, 0.472]], [0.399, [0.350, 0.361, 0.475]], [0.401, [0.350, 0.361, 0.475]], [0.403, [0.353, 0.366, 0.478]], [0.405, [0.353, 0.366, 0.478]], [0.407, [0.357, 0.371, 0.482]], [0.409, [0.357, 0.371, 0.482]], [0.411, [0.360, 0.376, 0.485]], [0.413, [0.360, 0.376, 0.485]], [0.415, [0.364, 0.380, 0.489]], [0.417, [0.364, 0.380, 0.489]], [0.419, [0.367, 0.385, 0.492]], [0.421, [0.367, 0.385, 0.492]], [0.423, [0.371, 0.390, 0.496]], [0.425, [0.371, 0.390, 0.496]], [0.427, [0.374, 0.394, 0.499]], [0.429, [0.374, 0.394, 0.499]], [0.431, [0.377, 0.399, 0.502]], [0.432, [0.377, 0.399, 0.502]], [0.434, [0.381, 0.404, 0.506]], [0.436, [0.381, 0.404, 0.506]], [0.438, [0.384, 0.409, 0.509]], [0.440, [0.384, 0.409, 0.509]], [0.442, [0.388, 0.413, 0.513]], [0.444, [0.388, 0.413, 0.513]], [0.446, [0.391, 0.418, 0.516]], [0.448, [0.391, 0.418, 0.516]], [0.450, [0.395, 0.423, 0.520]], [0.452, [0.395, 0.423, 0.520]], [0.454, [0.398, 0.428, 0.523]], [0.456, [0.398, 0.428, 0.523]], [0.458, [0.401, 0.432, 0.526]], [0.460, [0.401, 0.432, 0.526]], [0.462, [0.405, 0.437, 0.530]], [0.464, [0.405, 0.437, 0.530]], [0.466, [0.408, 0.442, 0.533]], [0.468, [0.408, 0.442, 0.533]], [0.470, [0.412, 0.446, 0.537]], [0.472, [0.412, 0.446, 0.537]], [0.474, [0.415, 0.451, 0.540]], [0.476, [0.415, 0.451, 0.540]], [0.477, [0.419, 0.456, 0.544]], [0.479, [0.419, 0.456, 0.544]], [0.481, [0.422, 0.461, 0.547]], [0.483, [0.422, 0.461, 0.547]], [0.485, [0.425, 0.465, 0.550]], [0.487, [0.425, 0.465, 0.550]], [0.489, [0.429, 0.470, 0.554]], [0.491, [0.429, 0.470, 0.554]], [0.493, [0.432, 0.475, 0.557]], [0.495, [0.432, 0.475, 0.557]], [0.497, [0.436, 0.479, 0.561]], [0.499, [0.436, 0.479, 0.561]], [0.501, [0.439, 0.484, 0.564]], [0.503, [0.439, 0.484, 0.564]], [0.505, [0.443, 0.489, 0.568]], [0.507, [0.443, 0.489, 0.568]], [0.509, [0.446, 0.494, 0.571]], [0.511, [0.446, 0.494, 0.571]], [0.513, [0.450, 0.498, 0.575]], [0.515, [0.450, 0.498, 0.575]], [0.517, [0.453, 0.503, 0.578]], [0.519, [0.453, 0.503, 0.578]], [0.521, [0.456, 0.508, 0.581]], [0.523, [0.456, 0.508, 0.581]], [0.524, [0.460, 0.512, 0.585]], [0.526, [0.460, 0.512, 0.585]], [0.528, [0.463, 0.517, 0.588]], [0.530, [0.463, 0.517, 0.588]], [0.532, [0.467, 0.522, 0.592]], [0.534, [0.467, 0.522, 0.592]], [0.536, [0.470, 0.527, 0.595]], [0.538, [0.470, 0.527, 0.595]], [0.540, [0.474, 0.531, 0.599]], [0.542, [0.474, 0.531, 0.599]], [0.544, [0.477, 0.536, 0.602]], [0.546, [0.477, 0.536, 0.602]], [0.548, [0.480, 0.541, 0.605]], [0.550, [0.480, 0.541, 0.605]], [0.552, [0.484, 0.545, 0.609]], [0.554, [0.484, 0.545, 0.609]], [0.556, [0.487, 0.550, 0.612]], [0.558, [0.487, 0.550, 0.612]], [0.560, [0.491, 0.555, 0.616]], [0.562, [0.491, 0.555, 0.616]], [0.564, [0.494, 0.560, 0.619]], [0.566, [0.494, 0.560, 0.619]], [0.568, [0.498, 0.564, 0.623]], [0.569, [0.498, 0.564, 0.623]], [0.571, [0.501, 0.569, 0.626]], [0.573, [0.501, 0.569, 0.626]], [0.575, [0.504, 0.574, 0.629]], [0.577, [0.504, 0.574, 0.629]], [0.579, [0.508, 0.578, 0.633]], [0.581, [0.508, 0.578, 0.633]], [0.583, [0.511, 0.583, 0.636]], [0.585, [0.511, 0.583, 0.636]], [0.587, [0.515, 0.588, 0.640]], [0.589, [0.515, 0.588, 0.640]], [0.591, [0.518, 0.593, 0.643]], [0.593, [0.518, 0.593, 0.643]], [0.595, [0.522, 0.597, 0.647]], [0.597, [0.522, 0.597, 0.647]], [0.599, [0.525, 0.602, 0.650]], [0.601, [0.525, 0.602, 0.650]], [0.603, [0.528, 0.607, 0.653]], [0.605, [0.528, 0.607, 0.653]], [0.607, [0.532, 0.612, 0.657]], [0.609, [0.532, 0.612, 0.657]], [0.611, [0.535, 0.616, 0.660]], [0.613, [0.535, 0.616, 0.660]], [0.614, [0.539, 0.621, 0.664]], [0.616, [0.539, 0.621, 0.664]], [0.618, [0.542, 0.626, 0.667]], [0.620, [0.542, 0.626, 0.667]], [0.622, [0.546, 0.630, 0.671]], [0.624, [0.546, 0.630, 0.671]], [0.626, [0.549, 0.635, 0.674]], [0.628, [0.549, 0.635, 0.674]], [0.630, [0.552, 0.640, 0.677]], [0.632, [0.552, 0.640, 0.677]], [0.634, [0.556, 0.645, 0.681]], [0.636, [0.556, 0.645, 0.681]], [0.638, [0.559, 0.649, 0.684]], [0.640, [0.559, 0.649, 0.684]], [0.642, [0.563, 0.654, 0.688]], [0.644, [0.563, 0.654, 0.688]], [0.646, [0.566, 0.659, 0.691]], [0.648, [0.566, 0.659, 0.691]], [0.650, [0.570, 0.663, 0.695]], [0.652, [0.570, 0.663, 0.695]], [0.654, [0.573, 0.668, 0.698]], [0.656, [0.573, 0.668, 0.698]], [0.658, [0.576, 0.673, 0.701]], [0.659, [0.576, 0.673, 0.701]], [0.661, [0.580, 0.678, 0.705]], [0.663, [0.580, 0.678, 0.705]], [0.665, [0.583, 0.682, 0.708]], [0.667, [0.583, 0.682, 0.708]], [0.669, [0.587, 0.687, 0.712]], [0.671, [0.587, 0.687, 0.712]], [0.673, [0.590, 0.692, 0.715]], [0.675, [0.590, 0.692, 0.715]], [0.677, [0.594, 0.696, 0.719]], [0.679, [0.594, 0.696, 0.719]], [0.681, [0.597, 0.701, 0.722]], [0.683, [0.597, 0.701, 0.722]], [0.685, [0.600, 0.706, 0.725]], [0.687, [0.600, 0.706, 0.725]], [0.689, [0.604, 0.711, 0.729]], [0.691, [0.604, 0.711, 0.729]], [0.693, [0.607, 0.715, 0.732]], [0.695, [0.607, 0.715, 0.732]], [0.697, [0.611, 0.720, 0.736]], [0.699, [0.611, 0.720, 0.736]], [0.701, [0.614, 0.725, 0.739]], [0.703, [0.614, 0.725, 0.739]], [0.705, [0.618, 0.729, 0.743]], [0.706, [0.618, 0.729, 0.743]], [0.708, [0.621, 0.734, 0.746]], [0.710, [0.621, 0.734, 0.746]], [0.712, [0.625, 0.739, 0.750]], [0.714, [0.625, 0.739, 0.750]], [0.716, [0.628, 0.744, 0.753]], [0.718, [0.628, 0.744, 0.753]], [0.720, [0.631, 0.748, 0.756]], [0.722, [0.631, 0.748, 0.756]], [0.724, [0.635, 0.753, 0.760]], [0.726, [0.635, 0.753, 0.760]], [0.728, [0.638, 0.758, 0.763]], [0.730, [0.638, 0.758, 0.763]], [0.732, [0.642, 0.762, 0.767]], [0.734, [0.642, 0.762, 0.767]], [0.736, [0.645, 0.767, 0.770]], [0.738, [0.645, 0.767, 0.770]], [0.740, [0.649, 0.772, 0.774]], [0.742, [0.649, 0.772, 0.774]], [0.744, [0.652, 0.777, 0.777]], [0.746, [0.652, 0.777, 0.777]], [0.748, [0.657, 0.780, 0.780]], [0.750, [0.657, 0.780, 0.780]], [0.751, [0.662, 0.784, 0.784]], [0.753, [0.662, 0.784, 0.784]], [0.755, [0.668, 0.787, 0.787]], [0.757, [0.668, 0.787, 0.787]], [0.759, [0.673, 0.791, 0.791]], [0.761, [0.673, 0.791, 0.791]], [0.763, [0.678, 0.794, 0.794]], [0.765, [0.678, 0.794, 0.794]], [0.767, [0.684, 0.798, 0.798]], [0.769, [0.684, 0.798, 0.798]], [0.771, [0.689, 0.801, 0.801]], [0.773, [0.689, 0.801, 0.801]], [0.775, [0.694, 0.804, 0.804]], [0.777, [0.694, 0.804, 0.804]], [0.779, [0.700, 0.808, 0.808]], [0.781, [0.700, 0.808, 0.808]], [0.783, [0.705, 0.811, 0.811]], [0.785, [0.705, 0.811, 0.811]], [0.787, [0.710, 0.815, 0.815]], [0.789, [0.710, 0.815, 0.815]], [0.791, [0.716, 0.818, 0.818]], [0.793, [0.716, 0.818, 0.818]], [0.795, [0.721, 0.822, 0.822]], [0.796, [0.721, 0.822, 0.822]], [0.798, [0.727, 0.825, 0.825]], [0.800, [0.727, 0.825, 0.825]], [0.802, [0.732, 0.828, 0.828]], [0.804, [0.732, 0.828, 0.828]], [0.806, [0.737, 0.832, 0.832]], [0.808, [0.737, 0.832, 0.832]], [0.810, [0.743, 0.835, 0.835]], [0.812, [0.743, 0.835, 0.835]], [0.814, [0.748, 0.839, 0.839]], [0.816, [0.748, 0.839, 0.839]], [0.818, [0.753, 0.842, 0.842]], [0.820, [0.753, 0.842, 0.842]], [0.822, [0.759, 0.846, 0.846]], [0.824, [0.759, 0.846, 0.846]], [0.826, [0.764, 0.849, 0.849]], [0.828, [0.764, 0.849, 0.849]], [0.830, [0.769, 0.852, 0.852]], [0.832, [0.769, 0.852, 0.852]], [0.834, [0.775, 0.856, 0.856]], [0.836, [0.775, 0.856, 0.856]], [0.838, [0.780, 0.859, 0.859]], [0.840, [0.780, 0.859, 0.859]], [0.841, [0.786, 0.863, 0.863]], [0.843, [0.786, 0.863, 0.863]], [0.845, [0.791, 0.866, 0.866]], [0.847, [0.791, 0.866, 0.866]], [0.849, [0.796, 0.870, 0.870]], [0.851, [0.796, 0.870, 0.870]], [0.853, [0.802, 0.873, 0.873]], [0.855, [0.802, 0.873, 0.873]], [0.857, [0.807, 0.876, 0.876]], [0.859, [0.807, 0.876, 0.876]], [0.861, [0.812, 0.880, 0.880]], [0.863, [0.812, 0.880, 0.880]], [0.865, [0.818, 0.883, 0.883]], [0.867, [0.818, 0.883, 0.883]], [0.869, [0.823, 0.887, 0.887]], [0.871, [0.823, 0.887, 0.887]], [0.873, [0.828, 0.890, 0.890]], [0.875, [0.828, 0.890, 0.890]], [0.877, [0.834, 0.894, 0.894]], [0.879, [0.834, 0.894, 0.894]], [0.881, [0.839, 0.897, 0.897]], [0.883, [0.839, 0.897, 0.897]], [0.885, [0.845, 0.900, 0.900]], [0.886, [0.845, 0.900, 0.900]], [0.888, [0.850, 0.904, 0.904]], [0.890, [0.850, 0.904, 0.904]], [0.892, [0.855, 0.907, 0.907]], [0.894, [0.855, 0.907, 0.907]], [0.896, [0.861, 0.911, 0.911]], [0.898, [0.861, 0.911, 0.911]], [0.900, [0.866, 0.914, 0.914]], [0.902, [0.866, 0.914, 0.914]], [0.904, [0.871, 0.918, 0.918]], [0.906, [0.871, 0.918, 0.918]], [0.908, [0.877, 0.921, 0.921]], [0.910, [0.877, 0.921, 0.921]], [0.912, [0.882, 0.925, 0.925]], [0.914, [0.882, 0.925, 0.925]], [0.916, [0.887, 0.928, 0.928]], [0.918, [0.887, 0.928, 0.928]], [0.920, [0.893, 0.931, 0.931]], [0.922, [0.893, 0.931, 0.931]], [0.924, [0.898, 0.935, 0.935]], [0.926, [0.898, 0.935, 0.935]], [0.928, [0.903, 0.938, 0.938]], [0.930, [0.903, 0.938, 0.938]], [0.932, [0.909, 0.942, 0.942]], [0.933, [0.909, 0.942, 0.942]], [0.935, [0.914, 0.945, 0.945]], [0.937, [0.914, 0.945, 0.945]], [0.939, [0.920, 0.949, 0.949]], [0.941, [0.920, 0.949, 0.949]], [0.943, [0.925, 0.952, 0.952]], [0.945, [0.925, 0.952, 0.952]], [0.947, [0.930, 0.955, 0.955]], [0.949, [0.930, 0.955, 0.955]], [0.951, [0.936, 0.959, 0.959]], [0.953, [0.936, 0.959, 0.959]], [0.955, [0.941, 0.962, 0.962]], [0.957, [0.941, 0.962, 0.962]], [0.959, [0.946, 0.966, 0.966]], [0.961, [0.946, 0.966, 0.966]], [0.963, [0.952, 0.969, 0.969]], [0.965, [0.952, 0.969, 0.969]], [0.967, [0.957, 0.973, 0.973]], [0.969, [0.957, 0.973, 0.973]], [0.971, [0.962, 0.976, 0.976]], [0.973, [0.962, 0.976, 0.976]], [0.975, [0.968, 0.979, 0.979]], [0.977, [0.968, 0.979, 0.979]], [0.978, [0.973, 0.983, 0.983]], [0.980, [0.973, 0.983, 0.983]], [0.982, [0.979, 0.986, 0.986]], [0.984, [0.979, 0.986, 0.986]], [0.986, [0.984, 0.990, 0.990]], [0.988, [0.984, 0.990, 0.990]], [0.990, [0.989, 0.993, 0.993]], [0.992, [0.989, 0.993, 0.993]], [0.994, [0.995, 0.997, 0.997]], [0.996, [0.995, 0.997, 0.997]], [0.998, [1.000, 1.000, 1.000]], [1.000, [1.000, 1.000, 1.000]]];
H.colormap_BrBG = [[0.000, [0.329, 0.188, 0.020]], [0.002, [0.329, 0.188, 0.020]], [0.004, [0.338, 0.193, 0.020]], [0.006, [0.338, 0.193, 0.020]], [0.008, [0.347, 0.198, 0.021]], [0.010, [0.347, 0.198, 0.021]], [0.012, [0.355, 0.203, 0.022]], [0.014, [0.355, 0.203, 0.022]], [0.016, [0.364, 0.209, 0.023]], [0.018, [0.364, 0.209, 0.023]], [0.020, [0.372, 0.214, 0.023]], [0.022, [0.372, 0.214, 0.023]], [0.023, [0.381, 0.219, 0.024]], [0.025, [0.381, 0.219, 0.024]], [0.027, [0.390, 0.224, 0.025]], [0.029, [0.390, 0.224, 0.025]], [0.031, [0.398, 0.229, 0.026]], [0.033, [0.398, 0.229, 0.026]], [0.035, [0.407, 0.234, 0.027]], [0.037, [0.407, 0.234, 0.027]], [0.039, [0.416, 0.239, 0.027]], [0.041, [0.416, 0.239, 0.027]], [0.043, [0.424, 0.244, 0.028]], [0.045, [0.424, 0.244, 0.028]], [0.047, [0.433, 0.249, 0.029]], [0.049, [0.433, 0.249, 0.029]], [0.051, [0.441, 0.254, 0.030]], [0.053, [0.441, 0.254, 0.030]], [0.055, [0.450, 0.259, 0.030]], [0.057, [0.450, 0.259, 0.030]], [0.059, [0.459, 0.264, 0.031]], [0.061, [0.459, 0.264, 0.031]], [0.063, [0.467, 0.269, 0.032]], [0.065, [0.467, 0.269, 0.032]], [0.067, [0.476, 0.275, 0.033]], [0.068, [0.476, 0.275, 0.033]], [0.070, [0.484, 0.280, 0.033]], [0.072, [0.484, 0.280, 0.033]], [0.074, [0.493, 0.285, 0.034]], [0.076, [0.493, 0.285, 0.034]], [0.078, [0.502, 0.290, 0.035]], [0.080, [0.502, 0.290, 0.035]], [0.082, [0.510, 0.295, 0.036]], [0.084, [0.510, 0.295, 0.036]], [0.086, [0.519, 0.300, 0.037]], [0.088, [0.519, 0.300, 0.037]], [0.090, [0.527, 0.305, 0.037]], [0.092, [0.527, 0.305, 0.037]], [0.094, [0.536, 0.310, 0.038]], [0.096, [0.536, 0.310, 0.038]], [0.098, [0.545, 0.315, 0.039]], [0.100, [0.545, 0.315, 0.039]], [0.102, [0.553, 0.321, 0.042]], [0.104, [0.553, 0.321, 0.042]], [0.106, [0.561, 0.329, 0.047]], [0.108, [0.561, 0.329, 0.047]], [0.110, [0.569, 0.336, 0.053]], [0.112, [0.569, 0.336, 0.053]], [0.114, [0.576, 0.343, 0.058]], [0.115, [0.576, 0.343, 0.058]], [0.117, [0.584, 0.351, 0.063]], [0.119, [0.584, 0.351, 0.063]], [0.121, [0.592, 0.358, 0.069]], [0.123, [0.592, 0.358, 0.069]], [0.125, [0.600, 0.366, 0.074]], [0.127, [0.600, 0.366, 0.074]], [0.129, [0.608, 0.373, 0.080]], [0.131, [0.608, 0.373, 0.080]], [0.133, [0.616, 0.380, 0.085]], [0.135, [0.616, 0.380, 0.085]], [0.137, [0.624, 0.388, 0.090]], [0.139, [0.624, 0.388, 0.090]], [0.141, [0.631, 0.395, 0.096]], [0.143, [0.631, 0.395, 0.096]], [0.145, [0.639, 0.403, 0.101]], [0.147, [0.639, 0.403, 0.101]], [0.149, [0.647, 0.410, 0.106]], [0.151, [0.647, 0.410, 0.106]], [0.153, [0.655, 0.417, 0.112]], [0.155, [0.655, 0.417, 0.112]], [0.157, [0.663, 0.425, 0.117]], [0.159, [0.663, 0.425, 0.117]], [0.160, [0.671, 0.432, 0.123]], [0.162, [0.671, 0.432, 0.123]], [0.164, [0.678, 0.439, 0.128]], [0.166, [0.678, 0.439, 0.128]], [0.168, [0.686, 0.447, 0.133]], [0.170, [0.686, 0.447, 0.133]], [0.172, [0.694, 0.454, 0.139]], [0.174, [0.694, 0.454, 0.139]], [0.176, [0.702, 0.462, 0.144]], [0.178, [0.702, 0.462, 0.144]], [0.180, [0.710, 0.469, 0.150]], [0.182, [0.710, 0.469, 0.150]], [0.184, [0.718, 0.476, 0.155]], [0.186, [0.718, 0.476, 0.155]], [0.188, [0.725, 0.484, 0.160]], [0.190, [0.725, 0.484, 0.160]], [0.192, [0.733, 0.491, 0.166]], [0.194, [0.733, 0.491, 0.166]], [0.196, [0.741, 0.499, 0.171]], [0.198, [0.741, 0.499, 0.171]], [0.200, [0.749, 0.506, 0.176]], [0.202, [0.749, 0.506, 0.176]], [0.204, [0.754, 0.516, 0.189]], [0.205, [0.754, 0.516, 0.189]], [0.207, [0.759, 0.526, 0.201]], [0.209, [0.759, 0.526, 0.201]], [0.211, [0.764, 0.536, 0.213]], [0.213, [0.764, 0.536, 0.213]], [0.215, [0.769, 0.546, 0.226]], [0.217, [0.769, 0.546, 0.226]], [0.219, [0.774, 0.556, 0.238]], [0.221, [0.774, 0.556, 0.238]], [0.223, [0.779, 0.566, 0.250]], [0.225, [0.779, 0.566, 0.250]], [0.227, [0.783, 0.576, 0.263]], [0.229, [0.783, 0.576, 0.263]], [0.231, [0.788, 0.586, 0.275]], [0.233, [0.788, 0.586, 0.275]], [0.235, [0.793, 0.596, 0.287]], [0.237, [0.793, 0.596, 0.287]], [0.239, [0.798, 0.606, 0.300]], [0.241, [0.798, 0.606, 0.300]], [0.243, [0.803, 0.616, 0.312]], [0.245, [0.803, 0.616, 0.312]], [0.247, [0.808, 0.626, 0.324]], [0.249, [0.808, 0.626, 0.324]], [0.250, [0.813, 0.636, 0.336]], [0.252, [0.813, 0.636, 0.336]], [0.254, [0.818, 0.646, 0.349]], [0.256, [0.818, 0.646, 0.349]], [0.258, [0.823, 0.656, 0.361]], [0.260, [0.823, 0.656, 0.361]], [0.262, [0.828, 0.666, 0.373]], [0.264, [0.828, 0.666, 0.373]], [0.266, [0.833, 0.676, 0.386]], [0.268, [0.833, 0.676, 0.386]], [0.270, [0.838, 0.686, 0.398]], [0.272, [0.838, 0.686, 0.398]], [0.274, [0.843, 0.696, 0.410]], [0.276, [0.843, 0.696, 0.410]], [0.278, [0.847, 0.706, 0.423]], [0.280, [0.847, 0.706, 0.423]], [0.282, [0.852, 0.716, 0.435]], [0.284, [0.852, 0.716, 0.435]], [0.286, [0.857, 0.726, 0.447]], [0.288, [0.857, 0.726, 0.447]], [0.290, [0.862, 0.736, 0.459]], [0.292, [0.862, 0.736, 0.459]], [0.294, [0.867, 0.746, 0.472]], [0.295, [0.867, 0.746, 0.472]], [0.297, [0.872, 0.756, 0.484]], [0.299, [0.872, 0.756, 0.484]], [0.301, [0.876, 0.764, 0.496]], [0.303, [0.876, 0.764, 0.496]], [0.305, [0.880, 0.770, 0.506]], [0.307, [0.880, 0.770, 0.506]], [0.309, [0.883, 0.775, 0.517]], [0.311, [0.883, 0.775, 0.517]], [0.313, [0.887, 0.781, 0.528]], [0.315, [0.887, 0.781, 0.528]], [0.317, [0.890, 0.787, 0.539]], [0.319, [0.890, 0.787, 0.539]], [0.321, [0.894, 0.793, 0.549]], [0.323, [0.894, 0.793, 0.549]], [0.325, [0.898, 0.799, 0.560]], [0.327, [0.898, 0.799, 0.560]], [0.329, [0.901, 0.805, 0.571]], [0.331, [0.901, 0.805, 0.571]], [0.333, [0.905, 0.810, 0.582]], [0.335, [0.905, 0.810, 0.582]], [0.337, [0.908, 0.816, 0.592]], [0.339, [0.908, 0.816, 0.592]], [0.341, [0.912, 0.822, 0.603]], [0.342, [0.912, 0.822, 0.603]], [0.344, [0.915, 0.828, 0.614]], [0.346, [0.915, 0.828, 0.614]], [0.348, [0.919, 0.834, 0.625]], [0.350, [0.919, 0.834, 0.625]], [0.352, [0.922, 0.840, 0.636]], [0.354, [0.922, 0.840, 0.636]], [0.356, [0.926, 0.846, 0.646]], [0.358, [0.926, 0.846, 0.646]], [0.360, [0.929, 0.851, 0.657]], [0.362, [0.929, 0.851, 0.657]], [0.364, [0.933, 0.857, 0.668]], [0.366, [0.933, 0.857, 0.668]], [0.368, [0.936, 0.863, 0.679]], [0.370, [0.936, 0.863, 0.679]], [0.372, [0.940, 0.869, 0.689]], [0.374, [0.940, 0.869, 0.689]], [0.376, [0.943, 0.875, 0.700]], [0.378, [0.943, 0.875, 0.700]], [0.380, [0.947, 0.881, 0.711]], [0.382, [0.947, 0.881, 0.711]], [0.384, [0.951, 0.886, 0.722]], [0.386, [0.951, 0.886, 0.722]], [0.387, [0.954, 0.892, 0.732]], [0.389, [0.954, 0.892, 0.732]], [0.391, [0.958, 0.898, 0.743]], [0.393, [0.958, 0.898, 0.743]], [0.395, [0.961, 0.904, 0.754]], [0.397, [0.961, 0.904, 0.754]], [0.399, [0.965, 0.910, 0.765]], [0.401, [0.965, 0.910, 0.765]], [0.403, [0.965, 0.912, 0.772]], [0.405, [0.965, 0.912, 0.772]], [0.407, [0.964, 0.914, 0.780]], [0.409, [0.964, 0.914, 0.780]], [0.411, [0.964, 0.916, 0.788]], [0.413, [0.964, 0.916, 0.788]], [0.415, [0.964, 0.918, 0.795]], [0.417, [0.964, 0.918, 0.795]], [0.419, [0.964, 0.920, 0.803]], [0.421, [0.964, 0.920, 0.803]], [0.423, [0.964, 0.922, 0.811]], [0.425, [0.964, 0.922, 0.811]], [0.427, [0.964, 0.924, 0.819]], [0.429, [0.964, 0.924, 0.819]], [0.431, [0.963, 0.926, 0.826]], [0.432, [0.963, 0.926, 0.826]], [0.434, [0.963, 0.928, 0.834]], [0.436, [0.963, 0.928, 0.834]], [0.438, [0.963, 0.930, 0.842]], [0.440, [0.963, 0.930, 0.842]], [0.442, [0.963, 0.932, 0.849]], [0.444, [0.963, 0.932, 0.849]], [0.446, [0.963, 0.934, 0.857]], [0.448, [0.963, 0.934, 0.857]], [0.450, [0.963, 0.936, 0.865]], [0.452, [0.963, 0.936, 0.865]], [0.454, [0.963, 0.938, 0.872]], [0.456, [0.963, 0.938, 0.872]], [0.458, [0.962, 0.940, 0.880]], [0.460, [0.962, 0.940, 0.880]], [0.462, [0.962, 0.942, 0.888]], [0.464, [0.962, 0.942, 0.888]], [0.466, [0.962, 0.944, 0.895]], [0.468, [0.962, 0.944, 0.895]], [0.470, [0.962, 0.946, 0.903]], [0.472, [0.962, 0.946, 0.903]], [0.474, [0.962, 0.948, 0.911]], [0.476, [0.962, 0.948, 0.911]], [0.477, [0.962, 0.950, 0.918]], [0.479, [0.962, 0.950, 0.918]], [0.481, [0.961, 0.952, 0.926]], [0.483, [0.961, 0.952, 0.926]], [0.485, [0.961, 0.954, 0.934]], [0.487, [0.961, 0.954, 0.934]], [0.489, [0.961, 0.956, 0.942]], [0.491, [0.961, 0.956, 0.942]], [0.493, [0.961, 0.958, 0.949]], [0.495, [0.961, 0.958, 0.949]], [0.497, [0.961, 0.960, 0.957]], [0.499, [0.961, 0.960, 0.957]], [0.501, [0.957, 0.960, 0.960]], [0.503, [0.957, 0.960, 0.960]], [0.505, [0.950, 0.958, 0.957]], [0.507, [0.950, 0.958, 0.957]], [0.509, [0.943, 0.957, 0.955]], [0.511, [0.943, 0.957, 0.955]], [0.513, [0.936, 0.955, 0.952]], [0.515, [0.936, 0.955, 0.952]], [0.517, [0.929, 0.953, 0.950]], [0.519, [0.929, 0.953, 0.950]], [0.521, [0.922, 0.951, 0.947]], [0.523, [0.922, 0.951, 0.947]], [0.524, [0.915, 0.950, 0.945]], [0.526, [0.915, 0.950, 0.945]], [0.528, [0.908, 0.948, 0.942]], [0.530, [0.908, 0.948, 0.942]], [0.532, [0.901, 0.946, 0.940]], [0.534, [0.901, 0.946, 0.940]], [0.536, [0.894, 0.945, 0.937]], [0.538, [0.894, 0.945, 0.937]], [0.540, [0.887, 0.943, 0.935]], [0.542, [0.887, 0.943, 0.935]], [0.544, [0.879, 0.941, 0.932]], [0.546, [0.879, 0.941, 0.932]], [0.548, [0.872, 0.940, 0.930]], [0.550, [0.872, 0.940, 0.930]], [0.552, [0.865, 0.938, 0.928]], [0.554, [0.865, 0.938, 0.928]], [0.556, [0.858, 0.936, 0.925]], [0.558, [0.858, 0.936, 0.925]], [0.560, [0.851, 0.935, 0.923]], [0.562, [0.851, 0.935, 0.923]], [0.564, [0.844, 0.933, 0.920]], [0.566, [0.844, 0.933, 0.920]], [0.568, [0.837, 0.931, 0.918]], [0.569, [0.837, 0.931, 0.918]], [0.571, [0.830, 0.929, 0.915]], [0.573, [0.830, 0.929, 0.915]], [0.575, [0.823, 0.928, 0.913]], [0.577, [0.823, 0.928, 0.913]], [0.579, [0.816, 0.926, 0.910]], [0.581, [0.816, 0.926, 0.910]], [0.583, [0.809, 0.924, 0.908]], [0.585, [0.809, 0.924, 0.908]], [0.587, [0.802, 0.923, 0.905]], [0.589, [0.802, 0.923, 0.905]], [0.591, [0.795, 0.921, 0.903]], [0.593, [0.795, 0.921, 0.903]], [0.595, [0.787, 0.919, 0.900]], [0.597, [0.787, 0.919, 0.900]], [0.599, [0.780, 0.918, 0.898]], [0.601, [0.780, 0.918, 0.898]], [0.603, [0.769, 0.913, 0.893]], [0.605, [0.769, 0.913, 0.893]], [0.607, [0.759, 0.909, 0.887]], [0.609, [0.759, 0.909, 0.887]], [0.611, [0.748, 0.904, 0.881]], [0.613, [0.748, 0.904, 0.881]], [0.614, [0.737, 0.900, 0.876]], [0.616, [0.737, 0.900, 0.876]], [0.618, [0.726, 0.895, 0.870]], [0.620, [0.726, 0.895, 0.870]], [0.622, [0.715, 0.891, 0.865]], [0.624, [0.715, 0.891, 0.865]], [0.626, [0.704, 0.886, 0.859]], [0.628, [0.704, 0.886, 0.859]], [0.630, [0.693, 0.882, 0.854]], [0.632, [0.693, 0.882, 0.854]], [0.634, [0.682, 0.878, 0.848]], [0.636, [0.682, 0.878, 0.848]], [0.638, [0.671, 0.873, 0.843]], [0.640, [0.671, 0.873, 0.843]], [0.642, [0.660, 0.869, 0.837]], [0.644, [0.660, 0.869, 0.837]], [0.646, [0.649, 0.864, 0.832]], [0.648, [0.649, 0.864, 0.832]], [0.650, [0.638, 0.860, 0.826]], [0.652, [0.638, 0.860, 0.826]], [0.654, [0.628, 0.855, 0.821]], [0.656, [0.628, 0.855, 0.821]], [0.658, [0.617, 0.851, 0.815]], [0.659, [0.617, 0.851, 0.815]], [0.661, [0.606, 0.846, 0.809]], [0.663, [0.606, 0.846, 0.809]], [0.665, [0.595, 0.842, 0.804]], [0.667, [0.595, 0.842, 0.804]], [0.669, [0.584, 0.837, 0.798]], [0.671, [0.584, 0.837, 0.798]], [0.673, [0.573, 0.833, 0.793]], [0.675, [0.573, 0.833, 0.793]], [0.677, [0.562, 0.828, 0.787]], [0.679, [0.562, 0.828, 0.787]], [0.681, [0.551, 0.824, 0.782]], [0.683, [0.551, 0.824, 0.782]], [0.685, [0.540, 0.820, 0.776]], [0.687, [0.540, 0.820, 0.776]], [0.689, [0.529, 0.815, 0.771]], [0.691, [0.529, 0.815, 0.771]], [0.693, [0.518, 0.811, 0.765]], [0.695, [0.518, 0.811, 0.765]], [0.697, [0.507, 0.806, 0.760]], [0.699, [0.507, 0.806, 0.760]], [0.701, [0.496, 0.800, 0.753]], [0.703, [0.496, 0.800, 0.753]], [0.705, [0.485, 0.791, 0.745]], [0.706, [0.485, 0.791, 0.745]], [0.708, [0.473, 0.783, 0.738]], [0.710, [0.473, 0.783, 0.738]], [0.712, [0.462, 0.775, 0.730]], [0.714, [0.462, 0.775, 0.730]], [0.716, [0.450, 0.767, 0.722]], [0.718, [0.450, 0.767, 0.722]], [0.720, [0.439, 0.758, 0.715]], [0.722, [0.439, 0.758, 0.715]], [0.724, [0.427, 0.750, 0.707]], [0.726, [0.427, 0.750, 0.707]], [0.728, [0.415, 0.742, 0.699]], [0.730, [0.415, 0.742, 0.699]], [0.732, [0.404, 0.733, 0.692]], [0.734, [0.404, 0.733, 0.692]], [0.736, [0.392, 0.725, 0.684]], [0.738, [0.392, 0.725, 0.684]], [0.740, [0.381, 0.717, 0.676]], [0.742, [0.381, 0.717, 0.676]], [0.744, [0.369, 0.708, 0.668]], [0.746, [0.369, 0.708, 0.668]], [0.748, [0.358, 0.700, 0.661]], [0.750, [0.358, 0.700, 0.661]], [0.751, [0.346, 0.692, 0.653]], [0.753, [0.346, 0.692, 0.653]], [0.755, [0.335, 0.684, 0.645]], [0.757, [0.335, 0.684, 0.645]], [0.759, [0.323, 0.675, 0.638]], [0.761, [0.323, 0.675, 0.638]], [0.763, [0.312, 0.667, 0.630]], [0.765, [0.312, 0.667, 0.630]], [0.767, [0.300, 0.659, 0.622]], [0.769, [0.300, 0.659, 0.622]], [0.771, [0.289, 0.650, 0.615]], [0.773, [0.289, 0.650, 0.615]], [0.775, [0.277, 0.642, 0.607]], [0.777, [0.277, 0.642, 0.607]], [0.779, [0.266, 0.634, 0.599]], [0.781, [0.266, 0.634, 0.599]], [0.783, [0.254, 0.625, 0.592]], [0.785, [0.254, 0.625, 0.592]], [0.787, [0.242, 0.617, 0.584]], [0.789, [0.242, 0.617, 0.584]], [0.791, [0.231, 0.609, 0.576]], [0.793, [0.231, 0.609, 0.576]], [0.795, [0.219, 0.600, 0.568]], [0.796, [0.219, 0.600, 0.568]], [0.798, [0.208, 0.592, 0.561]], [0.800, [0.208, 0.592, 0.561]], [0.802, [0.200, 0.585, 0.553]], [0.804, [0.200, 0.585, 0.553]], [0.806, [0.192, 0.577, 0.546]], [0.808, [0.192, 0.577, 0.546]], [0.810, [0.184, 0.570, 0.538]], [0.812, [0.184, 0.570, 0.538]], [0.814, [0.176, 0.562, 0.531]], [0.816, [0.176, 0.562, 0.531]], [0.818, [0.168, 0.554, 0.523]], [0.820, [0.168, 0.554, 0.523]], [0.822, [0.160, 0.547, 0.516]], [0.824, [0.160, 0.547, 0.516]], [0.826, [0.152, 0.539, 0.508]], [0.828, [0.152, 0.539, 0.508]], [0.830, [0.144, 0.532, 0.500]], [0.832, [0.144, 0.532, 0.500]], [0.834, [0.136, 0.524, 0.493]], [0.836, [0.136, 0.524, 0.493]], [0.838, [0.128, 0.517, 0.485]], [0.840, [0.128, 0.517, 0.485]], [0.841, [0.120, 0.509, 0.478]], [0.843, [0.120, 0.509, 0.478]], [0.845, [0.112, 0.502, 0.470]], [0.847, [0.112, 0.502, 0.470]], [0.849, [0.104, 0.494, 0.463]], [0.851, [0.104, 0.494, 0.463]], [0.853, [0.096, 0.487, 0.455]], [0.855, [0.096, 0.487, 0.455]], [0.857, [0.088, 0.479, 0.448]], [0.859, [0.088, 0.479, 0.448]], [0.861, [0.080, 0.472, 0.440]], [0.863, [0.080, 0.472, 0.440]], [0.865, [0.072, 0.464, 0.433]], [0.867, [0.072, 0.464, 0.433]], [0.869, [0.064, 0.457, 0.425]], [0.871, [0.064, 0.457, 0.425]], [0.873, [0.056, 0.449, 0.418]], [0.875, [0.056, 0.449, 0.418]], [0.877, [0.048, 0.441, 0.410]], [0.879, [0.048, 0.441, 0.410]], [0.881, [0.040, 0.434, 0.403]], [0.883, [0.040, 0.434, 0.403]], [0.885, [0.032, 0.426, 0.395]], [0.886, [0.032, 0.426, 0.395]], [0.888, [0.024, 0.419, 0.387]], [0.890, [0.024, 0.419, 0.387]], [0.892, [0.016, 0.411, 0.380]], [0.894, [0.016, 0.411, 0.380]], [0.896, [0.008, 0.404, 0.372]], [0.898, [0.008, 0.404, 0.372]], [0.900, [0.004, 0.397, 0.365]], [0.902, [0.004, 0.397, 0.365]], [0.904, [0.004, 0.390, 0.358]], [0.906, [0.004, 0.390, 0.358]], [0.908, [0.004, 0.384, 0.351]], [0.910, [0.004, 0.384, 0.351]], [0.912, [0.003, 0.377, 0.344]], [0.914, [0.003, 0.377, 0.344]], [0.916, [0.003, 0.371, 0.337]], [0.918, [0.003, 0.371, 0.337]], [0.920, [0.003, 0.364, 0.330]], [0.922, [0.003, 0.364, 0.330]], [0.924, [0.003, 0.358, 0.323]], [0.926, [0.003, 0.358, 0.323]], [0.928, [0.003, 0.352, 0.316]], [0.930, [0.003, 0.352, 0.316]], [0.932, [0.003, 0.345, 0.308]], [0.933, [0.003, 0.345, 0.308]], [0.935, [0.002, 0.339, 0.301]], [0.937, [0.002, 0.339, 0.301]], [0.939, [0.002, 0.332, 0.294]], [0.941, [0.002, 0.332, 0.294]], [0.943, [0.002, 0.326, 0.287]], [0.945, [0.002, 0.326, 0.287]], [0.947, [0.002, 0.319, 0.280]], [0.949, [0.002, 0.319, 0.280]], [0.951, [0.002, 0.313, 0.273]], [0.953, [0.002, 0.313, 0.273]], [0.955, [0.002, 0.306, 0.266]], [0.957, [0.002, 0.306, 0.266]], [0.959, [0.002, 0.300, 0.259]], [0.961, [0.002, 0.300, 0.259]], [0.963, [0.001, 0.293, 0.252]], [0.965, [0.001, 0.293, 0.252]], [0.967, [0.001, 0.287, 0.245]], [0.969, [0.001, 0.287, 0.245]], [0.971, [0.001, 0.281, 0.238]], [0.973, [0.001, 0.281, 0.238]], [0.975, [0.001, 0.274, 0.231]], [0.977, [0.001, 0.274, 0.231]], [0.978, [0.001, 0.268, 0.224]], [0.980, [0.001, 0.268, 0.224]], [0.982, [0.001, 0.261, 0.217]], [0.984, [0.001, 0.261, 0.217]], [0.986, [0.000, 0.255, 0.209]], [0.988, [0.000, 0.255, 0.209]], [0.990, [0.000, 0.248, 0.202]], [0.992, [0.000, 0.248, 0.202]], [0.994, [0.000, 0.242, 0.195]], [0.996, [0.000, 0.242, 0.195]], [0.998, [0.000, 0.235, 0.188]], [1.000, [0.000, 0.235, 0.188]]];
H.colormap_brg = [[0.000, [0.000, 0.000, 1.000]], [0.002, [0.000, 0.000, 1.000]], [0.004, [0.008, 0.000, 0.992]], [0.006, [0.008, 0.000, 0.992]], [0.008, [0.016, 0.000, 0.984]], [0.010, [0.016, 0.000, 0.984]], [0.012, [0.024, 0.000, 0.976]], [0.014, [0.024, 0.000, 0.976]], [0.016, [0.031, 0.000, 0.969]], [0.018, [0.031, 0.000, 0.969]], [0.020, [0.039, 0.000, 0.961]], [0.022, [0.039, 0.000, 0.961]], [0.023, [0.047, 0.000, 0.953]], [0.025, [0.047, 0.000, 0.953]], [0.027, [0.055, 0.000, 0.945]], [0.029, [0.055, 0.000, 0.945]], [0.031, [0.063, 0.000, 0.937]], [0.033, [0.063, 0.000, 0.937]], [0.035, [0.071, 0.000, 0.929]], [0.037, [0.071, 0.000, 0.929]], [0.039, [0.078, 0.000, 0.922]], [0.041, [0.078, 0.000, 0.922]], [0.043, [0.086, 0.000, 0.914]], [0.045, [0.086, 0.000, 0.914]], [0.047, [0.094, 0.000, 0.906]], [0.049, [0.094, 0.000, 0.906]], [0.051, [0.102, 0.000, 0.898]], [0.053, [0.102, 0.000, 0.898]], [0.055, [0.110, 0.000, 0.890]], [0.057, [0.110, 0.000, 0.890]], [0.059, [0.118, 0.000, 0.882]], [0.061, [0.118, 0.000, 0.882]], [0.063, [0.125, 0.000, 0.875]], [0.065, [0.125, 0.000, 0.875]], [0.067, [0.133, 0.000, 0.867]], [0.068, [0.133, 0.000, 0.867]], [0.070, [0.141, 0.000, 0.859]], [0.072, [0.141, 0.000, 0.859]], [0.074, [0.149, 0.000, 0.851]], [0.076, [0.149, 0.000, 0.851]], [0.078, [0.157, 0.000, 0.843]], [0.080, [0.157, 0.000, 0.843]], [0.082, [0.165, 0.000, 0.835]], [0.084, [0.165, 0.000, 0.835]], [0.086, [0.173, 0.000, 0.827]], [0.088, [0.173, 0.000, 0.827]], [0.090, [0.180, 0.000, 0.820]], [0.092, [0.180, 0.000, 0.820]], [0.094, [0.188, 0.000, 0.812]], [0.096, [0.188, 0.000, 0.812]], [0.098, [0.196, 0.000, 0.804]], [0.100, [0.196, 0.000, 0.804]], [0.102, [0.204, 0.000, 0.796]], [0.104, [0.204, 0.000, 0.796]], [0.106, [0.212, 0.000, 0.788]], [0.108, [0.212, 0.000, 0.788]], [0.110, [0.220, 0.000, 0.780]], [0.112, [0.220, 0.000, 0.780]], [0.114, [0.227, 0.000, 0.773]], [0.115, [0.227, 0.000, 0.773]], [0.117, [0.235, 0.000, 0.765]], [0.119, [0.235, 0.000, 0.765]], [0.121, [0.243, 0.000, 0.757]], [0.123, [0.243, 0.000, 0.757]], [0.125, [0.251, 0.000, 0.749]], [0.127, [0.251, 0.000, 0.749]], [0.129, [0.259, 0.000, 0.741]], [0.131, [0.259, 0.000, 0.741]], [0.133, [0.267, 0.000, 0.733]], [0.135, [0.267, 0.000, 0.733]], [0.137, [0.275, 0.000, 0.725]], [0.139, [0.275, 0.000, 0.725]], [0.141, [0.282, 0.000, 0.718]], [0.143, [0.282, 0.000, 0.718]], [0.145, [0.290, 0.000, 0.710]], [0.147, [0.290, 0.000, 0.710]], [0.149, [0.298, 0.000, 0.702]], [0.151, [0.298, 0.000, 0.702]], [0.153, [0.306, 0.000, 0.694]], [0.155, [0.306, 0.000, 0.694]], [0.157, [0.314, 0.000, 0.686]], [0.159, [0.314, 0.000, 0.686]], [0.160, [0.322, 0.000, 0.678]], [0.162, [0.322, 0.000, 0.678]], [0.164, [0.329, 0.000, 0.671]], [0.166, [0.329, 0.000, 0.671]], [0.168, [0.337, 0.000, 0.663]], [0.170, [0.337, 0.000, 0.663]], [0.172, [0.345, 0.000, 0.655]], [0.174, [0.345, 0.000, 0.655]], [0.176, [0.353, 0.000, 0.647]], [0.178, [0.353, 0.000, 0.647]], [0.180, [0.361, 0.000, 0.639]], [0.182, [0.361, 0.000, 0.639]], [0.184, [0.369, 0.000, 0.631]], [0.186, [0.369, 0.000, 0.631]], [0.188, [0.376, 0.000, 0.624]], [0.190, [0.376, 0.000, 0.624]], [0.192, [0.384, 0.000, 0.616]], [0.194, [0.384, 0.000, 0.616]], [0.196, [0.392, 0.000, 0.608]], [0.198, [0.392, 0.000, 0.608]], [0.200, [0.400, 0.000, 0.600]], [0.202, [0.400, 0.000, 0.600]], [0.204, [0.408, 0.000, 0.592]], [0.205, [0.408, 0.000, 0.592]], [0.207, [0.416, 0.000, 0.584]], [0.209, [0.416, 0.000, 0.584]], [0.211, [0.424, 0.000, 0.576]], [0.213, [0.424, 0.000, 0.576]], [0.215, [0.431, 0.000, 0.569]], [0.217, [0.431, 0.000, 0.569]], [0.219, [0.439, 0.000, 0.561]], [0.221, [0.439, 0.000, 0.561]], [0.223, [0.447, 0.000, 0.553]], [0.225, [0.447, 0.000, 0.553]], [0.227, [0.455, 0.000, 0.545]], [0.229, [0.455, 0.000, 0.545]], [0.231, [0.463, 0.000, 0.537]], [0.233, [0.463, 0.000, 0.537]], [0.235, [0.471, 0.000, 0.529]], [0.237, [0.471, 0.000, 0.529]], [0.239, [0.478, 0.000, 0.522]], [0.241, [0.478, 0.000, 0.522]], [0.243, [0.486, 0.000, 0.514]], [0.245, [0.486, 0.000, 0.514]], [0.247, [0.494, 0.000, 0.506]], [0.249, [0.494, 0.000, 0.506]], [0.250, [0.502, 0.000, 0.498]], [0.252, [0.502, 0.000, 0.498]], [0.254, [0.510, 0.000, 0.490]], [0.256, [0.510, 0.000, 0.490]], [0.258, [0.518, 0.000, 0.482]], [0.260, [0.518, 0.000, 0.482]], [0.262, [0.525, 0.000, 0.475]], [0.264, [0.525, 0.000, 0.475]], [0.266, [0.533, 0.000, 0.467]], [0.268, [0.533, 0.000, 0.467]], [0.270, [0.541, 0.000, 0.459]], [0.272, [0.541, 0.000, 0.459]], [0.274, [0.549, 0.000, 0.451]], [0.276, [0.549, 0.000, 0.451]], [0.278, [0.557, 0.000, 0.443]], [0.280, [0.557, 0.000, 0.443]], [0.282, [0.565, 0.000, 0.435]], [0.284, [0.565, 0.000, 0.435]], [0.286, [0.573, 0.000, 0.427]], [0.288, [0.573, 0.000, 0.427]], [0.290, [0.580, 0.000, 0.420]], [0.292, [0.580, 0.000, 0.420]], [0.294, [0.588, 0.000, 0.412]], [0.295, [0.588, 0.000, 0.412]], [0.297, [0.596, 0.000, 0.404]], [0.299, [0.596, 0.000, 0.404]], [0.301, [0.604, 0.000, 0.396]], [0.303, [0.604, 0.000, 0.396]], [0.305, [0.612, 0.000, 0.388]], [0.307, [0.612, 0.000, 0.388]], [0.309, [0.620, 0.000, 0.380]], [0.311, [0.620, 0.000, 0.380]], [0.313, [0.627, 0.000, 0.373]], [0.315, [0.627, 0.000, 0.373]], [0.317, [0.635, 0.000, 0.365]], [0.319, [0.635, 0.000, 0.365]], [0.321, [0.643, 0.000, 0.357]], [0.323, [0.643, 0.000, 0.357]], [0.325, [0.651, 0.000, 0.349]], [0.327, [0.651, 0.000, 0.349]], [0.329, [0.659, 0.000, 0.341]], [0.331, [0.659, 0.000, 0.341]], [0.333, [0.667, 0.000, 0.333]], [0.335, [0.667, 0.000, 0.333]], [0.337, [0.675, 0.000, 0.325]], [0.339, [0.675, 0.000, 0.325]], [0.341, [0.682, 0.000, 0.318]], [0.342, [0.682, 0.000, 0.318]], [0.344, [0.690, 0.000, 0.310]], [0.346, [0.690, 0.000, 0.310]], [0.348, [0.698, 0.000, 0.302]], [0.350, [0.698, 0.000, 0.302]], [0.352, [0.706, 0.000, 0.294]], [0.354, [0.706, 0.000, 0.294]], [0.356, [0.714, 0.000, 0.286]], [0.358, [0.714, 0.000, 0.286]], [0.360, [0.722, 0.000, 0.278]], [0.362, [0.722, 0.000, 0.278]], [0.364, [0.729, 0.000, 0.271]], [0.366, [0.729, 0.000, 0.271]], [0.368, [0.737, 0.000, 0.263]], [0.370, [0.737, 0.000, 0.263]], [0.372, [0.745, 0.000, 0.255]], [0.374, [0.745, 0.000, 0.255]], [0.376, [0.753, 0.000, 0.247]], [0.378, [0.753, 0.000, 0.247]], [0.380, [0.761, 0.000, 0.239]], [0.382, [0.761, 0.000, 0.239]], [0.384, [0.769, 0.000, 0.231]], [0.386, [0.769, 0.000, 0.231]], [0.387, [0.776, 0.000, 0.224]], [0.389, [0.776, 0.000, 0.224]], [0.391, [0.784, 0.000, 0.216]], [0.393, [0.784, 0.000, 0.216]], [0.395, [0.792, 0.000, 0.208]], [0.397, [0.792, 0.000, 0.208]], [0.399, [0.800, 0.000, 0.200]], [0.401, [0.800, 0.000, 0.200]], [0.403, [0.808, 0.000, 0.192]], [0.405, [0.808, 0.000, 0.192]], [0.407, [0.816, 0.000, 0.184]], [0.409, [0.816, 0.000, 0.184]], [0.411, [0.824, 0.000, 0.176]], [0.413, [0.824, 0.000, 0.176]], [0.415, [0.831, 0.000, 0.169]], [0.417, [0.831, 0.000, 0.169]], [0.419, [0.839, 0.000, 0.161]], [0.421, [0.839, 0.000, 0.161]], [0.423, [0.847, 0.000, 0.153]], [0.425, [0.847, 0.000, 0.153]], [0.427, [0.855, 0.000, 0.145]], [0.429, [0.855, 0.000, 0.145]], [0.431, [0.863, 0.000, 0.137]], [0.432, [0.863, 0.000, 0.137]], [0.434, [0.871, 0.000, 0.129]], [0.436, [0.871, 0.000, 0.129]], [0.438, [0.878, 0.000, 0.122]], [0.440, [0.878, 0.000, 0.122]], [0.442, [0.886, 0.000, 0.114]], [0.444, [0.886, 0.000, 0.114]], [0.446, [0.894, 0.000, 0.106]], [0.448, [0.894, 0.000, 0.106]], [0.450, [0.902, 0.000, 0.098]], [0.452, [0.902, 0.000, 0.098]], [0.454, [0.910, 0.000, 0.090]], [0.456, [0.910, 0.000, 0.090]], [0.458, [0.918, 0.000, 0.082]], [0.460, [0.918, 0.000, 0.082]], [0.462, [0.925, 0.000, 0.075]], [0.464, [0.925, 0.000, 0.075]], [0.466, [0.933, 0.000, 0.067]], [0.468, [0.933, 0.000, 0.067]], [0.470, [0.941, 0.000, 0.059]], [0.472, [0.941, 0.000, 0.059]], [0.474, [0.949, 0.000, 0.051]], [0.476, [0.949, 0.000, 0.051]], [0.477, [0.957, 0.000, 0.043]], [0.479, [0.957, 0.000, 0.043]], [0.481, [0.965, 0.000, 0.035]], [0.483, [0.965, 0.000, 0.035]], [0.485, [0.973, 0.000, 0.027]], [0.487, [0.973, 0.000, 0.027]], [0.489, [0.980, 0.000, 0.020]], [0.491, [0.980, 0.000, 0.020]], [0.493, [0.988, 0.000, 0.012]], [0.495, [0.988, 0.000, 0.012]], [0.497, [0.996, 0.000, 0.004]], [0.499, [0.996, 0.000, 0.004]], [0.501, [0.996, 0.004, 0.000]], [0.503, [0.996, 0.004, 0.000]], [0.505, [0.988, 0.012, 0.000]], [0.507, [0.988, 0.012, 0.000]], [0.509, [0.980, 0.020, 0.000]], [0.511, [0.980, 0.020, 0.000]], [0.513, [0.973, 0.027, 0.000]], [0.515, [0.973, 0.027, 0.000]], [0.517, [0.965, 0.035, 0.000]], [0.519, [0.965, 0.035, 0.000]], [0.521, [0.957, 0.043, 0.000]], [0.523, [0.957, 0.043, 0.000]], [0.524, [0.949, 0.051, 0.000]], [0.526, [0.949, 0.051, 0.000]], [0.528, [0.941, 0.059, 0.000]], [0.530, [0.941, 0.059, 0.000]], [0.532, [0.933, 0.067, 0.000]], [0.534, [0.933, 0.067, 0.000]], [0.536, [0.925, 0.075, 0.000]], [0.538, [0.925, 0.075, 0.000]], [0.540, [0.918, 0.082, 0.000]], [0.542, [0.918, 0.082, 0.000]], [0.544, [0.910, 0.090, 0.000]], [0.546, [0.910, 0.090, 0.000]], [0.548, [0.902, 0.098, 0.000]], [0.550, [0.902, 0.098, 0.000]], [0.552, [0.894, 0.106, 0.000]], [0.554, [0.894, 0.106, 0.000]], [0.556, [0.886, 0.114, 0.000]], [0.558, [0.886, 0.114, 0.000]], [0.560, [0.878, 0.122, 0.000]], [0.562, [0.878, 0.122, 0.000]], [0.564, [0.871, 0.129, 0.000]], [0.566, [0.871, 0.129, 0.000]], [0.568, [0.863, 0.137, 0.000]], [0.569, [0.863, 0.137, 0.000]], [0.571, [0.855, 0.145, 0.000]], [0.573, [0.855, 0.145, 0.000]], [0.575, [0.847, 0.153, 0.000]], [0.577, [0.847, 0.153, 0.000]], [0.579, [0.839, 0.161, 0.000]], [0.581, [0.839, 0.161, 0.000]], [0.583, [0.831, 0.169, 0.000]], [0.585, [0.831, 0.169, 0.000]], [0.587, [0.824, 0.176, 0.000]], [0.589, [0.824, 0.176, 0.000]], [0.591, [0.816, 0.184, 0.000]], [0.593, [0.816, 0.184, 0.000]], [0.595, [0.808, 0.192, 0.000]], [0.597, [0.808, 0.192, 0.000]], [0.599, [0.800, 0.200, 0.000]], [0.601, [0.800, 0.200, 0.000]], [0.603, [0.792, 0.208, 0.000]], [0.605, [0.792, 0.208, 0.000]], [0.607, [0.784, 0.216, 0.000]], [0.609, [0.784, 0.216, 0.000]], [0.611, [0.776, 0.224, 0.000]], [0.613, [0.776, 0.224, 0.000]], [0.614, [0.769, 0.231, 0.000]], [0.616, [0.769, 0.231, 0.000]], [0.618, [0.761, 0.239, 0.000]], [0.620, [0.761, 0.239, 0.000]], [0.622, [0.753, 0.247, 0.000]], [0.624, [0.753, 0.247, 0.000]], [0.626, [0.745, 0.255, 0.000]], [0.628, [0.745, 0.255, 0.000]], [0.630, [0.737, 0.263, 0.000]], [0.632, [0.737, 0.263, 0.000]], [0.634, [0.729, 0.271, 0.000]], [0.636, [0.729, 0.271, 0.000]], [0.638, [0.722, 0.278, 0.000]], [0.640, [0.722, 0.278, 0.000]], [0.642, [0.714, 0.286, 0.000]], [0.644, [0.714, 0.286, 0.000]], [0.646, [0.706, 0.294, 0.000]], [0.648, [0.706, 0.294, 0.000]], [0.650, [0.698, 0.302, 0.000]], [0.652, [0.698, 0.302, 0.000]], [0.654, [0.690, 0.310, 0.000]], [0.656, [0.690, 0.310, 0.000]], [0.658, [0.682, 0.318, 0.000]], [0.659, [0.682, 0.318, 0.000]], [0.661, [0.675, 0.325, 0.000]], [0.663, [0.675, 0.325, 0.000]], [0.665, [0.667, 0.333, 0.000]], [0.667, [0.667, 0.333, 0.000]], [0.669, [0.659, 0.341, 0.000]], [0.671, [0.659, 0.341, 0.000]], [0.673, [0.651, 0.349, 0.000]], [0.675, [0.651, 0.349, 0.000]], [0.677, [0.643, 0.357, 0.000]], [0.679, [0.643, 0.357, 0.000]], [0.681, [0.635, 0.365, 0.000]], [0.683, [0.635, 0.365, 0.000]], [0.685, [0.627, 0.373, 0.000]], [0.687, [0.627, 0.373, 0.000]], [0.689, [0.620, 0.380, 0.000]], [0.691, [0.620, 0.380, 0.000]], [0.693, [0.612, 0.388, 0.000]], [0.695, [0.612, 0.388, 0.000]], [0.697, [0.604, 0.396, 0.000]], [0.699, [0.604, 0.396, 0.000]], [0.701, [0.596, 0.404, 0.000]], [0.703, [0.596, 0.404, 0.000]], [0.705, [0.588, 0.412, 0.000]], [0.706, [0.588, 0.412, 0.000]], [0.708, [0.580, 0.420, 0.000]], [0.710, [0.580, 0.420, 0.000]], [0.712, [0.573, 0.427, 0.000]], [0.714, [0.573, 0.427, 0.000]], [0.716, [0.565, 0.435, 0.000]], [0.718, [0.565, 0.435, 0.000]], [0.720, [0.557, 0.443, 0.000]], [0.722, [0.557, 0.443, 0.000]], [0.724, [0.549, 0.451, 0.000]], [0.726, [0.549, 0.451, 0.000]], [0.728, [0.541, 0.459, 0.000]], [0.730, [0.541, 0.459, 0.000]], [0.732, [0.533, 0.467, 0.000]], [0.734, [0.533, 0.467, 0.000]], [0.736, [0.525, 0.475, 0.000]], [0.738, [0.525, 0.475, 0.000]], [0.740, [0.518, 0.482, 0.000]], [0.742, [0.518, 0.482, 0.000]], [0.744, [0.510, 0.490, 0.000]], [0.746, [0.510, 0.490, 0.000]], [0.748, [0.502, 0.498, 0.000]], [0.750, [0.502, 0.498, 0.000]], [0.751, [0.494, 0.506, 0.000]], [0.753, [0.494, 0.506, 0.000]], [0.755, [0.486, 0.514, 0.000]], [0.757, [0.486, 0.514, 0.000]], [0.759, [0.478, 0.522, 0.000]], [0.761, [0.478, 0.522, 0.000]], [0.763, [0.471, 0.529, 0.000]], [0.765, [0.471, 0.529, 0.000]], [0.767, [0.463, 0.537, 0.000]], [0.769, [0.463, 0.537, 0.000]], [0.771, [0.455, 0.545, 0.000]], [0.773, [0.455, 0.545, 0.000]], [0.775, [0.447, 0.553, 0.000]], [0.777, [0.447, 0.553, 0.000]], [0.779, [0.439, 0.561, 0.000]], [0.781, [0.439, 0.561, 0.000]], [0.783, [0.431, 0.569, 0.000]], [0.785, [0.431, 0.569, 0.000]], [0.787, [0.424, 0.576, 0.000]], [0.789, [0.424, 0.576, 0.000]], [0.791, [0.416, 0.584, 0.000]], [0.793, [0.416, 0.584, 0.000]], [0.795, [0.408, 0.592, 0.000]], [0.796, [0.408, 0.592, 0.000]], [0.798, [0.400, 0.600, 0.000]], [0.800, [0.400, 0.600, 0.000]], [0.802, [0.392, 0.608, 0.000]], [0.804, [0.392, 0.608, 0.000]], [0.806, [0.384, 0.616, 0.000]], [0.808, [0.384, 0.616, 0.000]], [0.810, [0.376, 0.624, 0.000]], [0.812, [0.376, 0.624, 0.000]], [0.814, [0.369, 0.631, 0.000]], [0.816, [0.369, 0.631, 0.000]], [0.818, [0.361, 0.639, 0.000]], [0.820, [0.361, 0.639, 0.000]], [0.822, [0.353, 0.647, 0.000]], [0.824, [0.353, 0.647, 0.000]], [0.826, [0.345, 0.655, 0.000]], [0.828, [0.345, 0.655, 0.000]], [0.830, [0.337, 0.663, 0.000]], [0.832, [0.337, 0.663, 0.000]], [0.834, [0.329, 0.671, 0.000]], [0.836, [0.329, 0.671, 0.000]], [0.838, [0.322, 0.678, 0.000]], [0.840, [0.322, 0.678, 0.000]], [0.841, [0.314, 0.686, 0.000]], [0.843, [0.314, 0.686, 0.000]], [0.845, [0.306, 0.694, 0.000]], [0.847, [0.306, 0.694, 0.000]], [0.849, [0.298, 0.702, 0.000]], [0.851, [0.298, 0.702, 0.000]], [0.853, [0.290, 0.710, 0.000]], [0.855, [0.290, 0.710, 0.000]], [0.857, [0.282, 0.718, 0.000]], [0.859, [0.282, 0.718, 0.000]], [0.861, [0.275, 0.725, 0.000]], [0.863, [0.275, 0.725, 0.000]], [0.865, [0.267, 0.733, 0.000]], [0.867, [0.267, 0.733, 0.000]], [0.869, [0.259, 0.741, 0.000]], [0.871, [0.259, 0.741, 0.000]], [0.873, [0.251, 0.749, 0.000]], [0.875, [0.251, 0.749, 0.000]], [0.877, [0.243, 0.757, 0.000]], [0.879, [0.243, 0.757, 0.000]], [0.881, [0.235, 0.765, 0.000]], [0.883, [0.235, 0.765, 0.000]], [0.885, [0.227, 0.773, 0.000]], [0.886, [0.227, 0.773, 0.000]], [0.888, [0.220, 0.780, 0.000]], [0.890, [0.220, 0.780, 0.000]], [0.892, [0.212, 0.788, 0.000]], [0.894, [0.212, 0.788, 0.000]], [0.896, [0.204, 0.796, 0.000]], [0.898, [0.204, 0.796, 0.000]], [0.900, [0.196, 0.804, 0.000]], [0.902, [0.196, 0.804, 0.000]], [0.904, [0.188, 0.812, 0.000]], [0.906, [0.188, 0.812, 0.000]], [0.908, [0.180, 0.820, 0.000]], [0.910, [0.180, 0.820, 0.000]], [0.912, [0.173, 0.827, 0.000]], [0.914, [0.173, 0.827, 0.000]], [0.916, [0.165, 0.835, 0.000]], [0.918, [0.165, 0.835, 0.000]], [0.920, [0.157, 0.843, 0.000]], [0.922, [0.157, 0.843, 0.000]], [0.924, [0.149, 0.851, 0.000]], [0.926, [0.149, 0.851, 0.000]], [0.928, [0.141, 0.859, 0.000]], [0.930, [0.141, 0.859, 0.000]], [0.932, [0.133, 0.867, 0.000]], [0.933, [0.133, 0.867, 0.000]], [0.935, [0.125, 0.875, 0.000]], [0.937, [0.125, 0.875, 0.000]], [0.939, [0.118, 0.882, 0.000]], [0.941, [0.118, 0.882, 0.000]], [0.943, [0.110, 0.890, 0.000]], [0.945, [0.110, 0.890, 0.000]], [0.947, [0.102, 0.898, 0.000]], [0.949, [0.102, 0.898, 0.000]], [0.951, [0.094, 0.906, 0.000]], [0.953, [0.094, 0.906, 0.000]], [0.955, [0.086, 0.914, 0.000]], [0.957, [0.086, 0.914, 0.000]], [0.959, [0.078, 0.922, 0.000]], [0.961, [0.078, 0.922, 0.000]], [0.963, [0.071, 0.929, 0.000]], [0.965, [0.071, 0.929, 0.000]], [0.967, [0.063, 0.937, 0.000]], [0.969, [0.063, 0.937, 0.000]], [0.971, [0.055, 0.945, 0.000]], [0.973, [0.055, 0.945, 0.000]], [0.975, [0.047, 0.953, 0.000]], [0.977, [0.047, 0.953, 0.000]], [0.978, [0.039, 0.961, 0.000]], [0.980, [0.039, 0.961, 0.000]], [0.982, [0.031, 0.969, 0.000]], [0.984, [0.031, 0.969, 0.000]], [0.986, [0.024, 0.976, 0.000]], [0.988, [0.024, 0.976, 0.000]], [0.990, [0.016, 0.984, 0.000]], [0.992, [0.016, 0.984, 0.000]], [0.994, [0.008, 0.992, 0.000]], [0.996, [0.008, 0.992, 0.000]], [0.998, [0.000, 1.000, 0.000]], [1.000, [0.000, 1.000, 0.000]]];
H.colormap_BuGn = [[0.000, [0.969, 0.988, 0.992]], [0.002, [0.969, 0.988, 0.992]], [0.004, [0.966, 0.987, 0.992]], [0.006, [0.966, 0.987, 0.992]], [0.008, [0.964, 0.987, 0.991]], [0.010, [0.964, 0.987, 0.991]], [0.012, [0.962, 0.986, 0.991]], [0.014, [0.962, 0.986, 0.991]], [0.016, [0.960, 0.985, 0.990]], [0.018, [0.960, 0.985, 0.990]], [0.020, [0.958, 0.984, 0.990]], [0.022, [0.958, 0.984, 0.990]], [0.023, [0.955, 0.983, 0.989]], [0.025, [0.955, 0.983, 0.989]], [0.027, [0.953, 0.982, 0.989]], [0.029, [0.953, 0.982, 0.989]], [0.031, [0.951, 0.981, 0.988]], [0.033, [0.951, 0.981, 0.988]], [0.035, [0.949, 0.980, 0.988]], [0.037, [0.949, 0.980, 0.988]], [0.039, [0.946, 0.980, 0.987]], [0.041, [0.946, 0.980, 0.987]], [0.043, [0.944, 0.979, 0.987]], [0.045, [0.944, 0.979, 0.987]], [0.047, [0.942, 0.978, 0.986]], [0.049, [0.942, 0.978, 0.986]], [0.051, [0.940, 0.977, 0.986]], [0.053, [0.940, 0.977, 0.986]], [0.055, [0.938, 0.976, 0.985]], [0.057, [0.938, 0.976, 0.985]], [0.059, [0.935, 0.975, 0.985]], [0.061, [0.935, 0.975, 0.985]], [0.063, [0.933, 0.974, 0.984]], [0.065, [0.933, 0.974, 0.984]], [0.067, [0.931, 0.974, 0.984]], [0.068, [0.931, 0.974, 0.984]], [0.070, [0.929, 0.973, 0.983]], [0.072, [0.929, 0.973, 0.983]], [0.074, [0.927, 0.972, 0.983]], [0.076, [0.927, 0.972, 0.983]], [0.078, [0.924, 0.971, 0.982]], [0.080, [0.924, 0.971, 0.982]], [0.082, [0.922, 0.970, 0.982]], [0.084, [0.922, 0.970, 0.982]], [0.086, [0.920, 0.969, 0.981]], [0.088, [0.920, 0.969, 0.981]], [0.090, [0.918, 0.968, 0.981]], [0.092, [0.918, 0.968, 0.981]], [0.094, [0.915, 0.968, 0.980]], [0.096, [0.915, 0.968, 0.980]], [0.098, [0.913, 0.967, 0.980]], [0.100, [0.913, 0.967, 0.980]], [0.102, [0.911, 0.966, 0.979]], [0.104, [0.911, 0.966, 0.979]], [0.106, [0.909, 0.965, 0.979]], [0.108, [0.909, 0.965, 0.979]], [0.110, [0.907, 0.964, 0.978]], [0.112, [0.907, 0.964, 0.978]], [0.114, [0.904, 0.963, 0.978]], [0.115, [0.904, 0.963, 0.978]], [0.117, [0.902, 0.962, 0.977]], [0.119, [0.902, 0.962, 0.977]], [0.121, [0.900, 0.962, 0.977]], [0.123, [0.900, 0.962, 0.977]], [0.125, [0.898, 0.961, 0.976]], [0.127, [0.898, 0.961, 0.976]], [0.129, [0.895, 0.960, 0.974]], [0.131, [0.895, 0.960, 0.974]], [0.133, [0.892, 0.958, 0.972]], [0.135, [0.892, 0.958, 0.972]], [0.137, [0.888, 0.957, 0.969]], [0.139, [0.888, 0.957, 0.969]], [0.141, [0.885, 0.956, 0.967]], [0.143, [0.885, 0.956, 0.967]], [0.145, [0.882, 0.955, 0.964]], [0.147, [0.882, 0.955, 0.964]], [0.149, [0.879, 0.954, 0.962]], [0.151, [0.879, 0.954, 0.962]], [0.153, [0.876, 0.953, 0.960]], [0.155, [0.876, 0.953, 0.960]], [0.157, [0.873, 0.952, 0.957]], [0.159, [0.873, 0.952, 0.957]], [0.160, [0.870, 0.951, 0.955]], [0.162, [0.870, 0.951, 0.955]], [0.164, [0.867, 0.950, 0.953]], [0.166, [0.867, 0.950, 0.953]], [0.168, [0.864, 0.948, 0.950]], [0.170, [0.864, 0.948, 0.950]], [0.172, [0.861, 0.947, 0.948]], [0.174, [0.861, 0.947, 0.948]], [0.176, [0.858, 0.946, 0.946]], [0.178, [0.858, 0.946, 0.946]], [0.180, [0.855, 0.945, 0.943]], [0.182, [0.855, 0.945, 0.943]], [0.184, [0.852, 0.944, 0.941]], [0.186, [0.852, 0.944, 0.941]], [0.188, [0.848, 0.943, 0.939]], [0.190, [0.848, 0.943, 0.939]], [0.192, [0.845, 0.942, 0.936]], [0.194, [0.845, 0.942, 0.936]], [0.196, [0.842, 0.941, 0.934]], [0.198, [0.842, 0.941, 0.934]], [0.200, [0.839, 0.940, 0.932]], [0.202, [0.839, 0.940, 0.932]], [0.204, [0.836, 0.939, 0.929]], [0.205, [0.836, 0.939, 0.929]], [0.207, [0.833, 0.937, 0.927]], [0.209, [0.833, 0.937, 0.927]], [0.211, [0.830, 0.936, 0.925]], [0.213, [0.830, 0.936, 0.925]], [0.215, [0.827, 0.935, 0.922]], [0.217, [0.827, 0.935, 0.922]], [0.219, [0.824, 0.934, 0.920]], [0.221, [0.824, 0.934, 0.920]], [0.223, [0.821, 0.933, 0.918]], [0.225, [0.821, 0.933, 0.918]], [0.227, [0.818, 0.932, 0.915]], [0.229, [0.818, 0.932, 0.915]], [0.231, [0.815, 0.931, 0.913]], [0.233, [0.815, 0.931, 0.913]], [0.235, [0.812, 0.930, 0.911]], [0.237, [0.812, 0.930, 0.911]], [0.239, [0.808, 0.929, 0.908]], [0.241, [0.808, 0.929, 0.908]], [0.243, [0.805, 0.927, 0.906]], [0.245, [0.805, 0.927, 0.906]], [0.247, [0.802, 0.926, 0.904]], [0.249, [0.802, 0.926, 0.904]], [0.250, [0.798, 0.925, 0.901]], [0.252, [0.798, 0.925, 0.901]], [0.254, [0.792, 0.922, 0.898]], [0.256, [0.792, 0.922, 0.898]], [0.258, [0.786, 0.920, 0.894]], [0.260, [0.786, 0.920, 0.894]], [0.262, [0.780, 0.917, 0.890]], [0.264, [0.780, 0.917, 0.890]], [0.266, [0.773, 0.915, 0.887]], [0.268, [0.773, 0.915, 0.887]], [0.270, [0.767, 0.913, 0.883]], [0.272, [0.767, 0.913, 0.883]], [0.274, [0.761, 0.910, 0.880]], [0.276, [0.761, 0.910, 0.880]], [0.278, [0.755, 0.908, 0.876]], [0.280, [0.755, 0.908, 0.876]], [0.282, [0.748, 0.905, 0.873]], [0.284, [0.748, 0.905, 0.873]], [0.286, [0.742, 0.903, 0.869]], [0.288, [0.742, 0.903, 0.869]], [0.290, [0.736, 0.900, 0.865]], [0.292, [0.736, 0.900, 0.865]], [0.294, [0.729, 0.898, 0.862]], [0.295, [0.729, 0.898, 0.862]], [0.297, [0.723, 0.895, 0.858]], [0.299, [0.723, 0.895, 0.858]], [0.301, [0.717, 0.893, 0.855]], [0.303, [0.717, 0.893, 0.855]], [0.305, [0.711, 0.890, 0.851]], [0.307, [0.711, 0.890, 0.851]], [0.309, [0.704, 0.888, 0.848]], [0.311, [0.704, 0.888, 0.848]], [0.313, [0.698, 0.886, 0.844]], [0.315, [0.698, 0.886, 0.844]], [0.317, [0.692, 0.883, 0.840]], [0.319, [0.692, 0.883, 0.840]], [0.321, [0.685, 0.881, 0.837]], [0.323, [0.685, 0.881, 0.837]], [0.325, [0.679, 0.878, 0.833]], [0.327, [0.679, 0.878, 0.833]], [0.329, [0.673, 0.876, 0.830]], [0.331, [0.673, 0.876, 0.830]], [0.333, [0.667, 0.873, 0.826]], [0.335, [0.667, 0.873, 0.826]], [0.337, [0.660, 0.871, 0.823]], [0.339, [0.660, 0.871, 0.823]], [0.341, [0.654, 0.868, 0.819]], [0.342, [0.654, 0.868, 0.819]], [0.344, [0.648, 0.866, 0.815]], [0.346, [0.648, 0.866, 0.815]], [0.348, [0.642, 0.863, 0.812]], [0.350, [0.642, 0.863, 0.812]], [0.352, [0.635, 0.861, 0.808]], [0.354, [0.635, 0.861, 0.808]], [0.356, [0.629, 0.858, 0.805]], [0.358, [0.629, 0.858, 0.805]], [0.360, [0.623, 0.856, 0.801]], [0.362, [0.623, 0.856, 0.801]], [0.364, [0.616, 0.854, 0.798]], [0.366, [0.616, 0.854, 0.798]], [0.368, [0.610, 0.851, 0.794]], [0.370, [0.610, 0.851, 0.794]], [0.372, [0.604, 0.849, 0.790]], [0.374, [0.604, 0.849, 0.790]], [0.376, [0.598, 0.846, 0.787]], [0.378, [0.598, 0.846, 0.787]], [0.380, [0.591, 0.843, 0.782]], [0.382, [0.591, 0.843, 0.782]], [0.384, [0.585, 0.841, 0.777]], [0.386, [0.585, 0.841, 0.777]], [0.387, [0.579, 0.838, 0.773]], [0.389, [0.579, 0.838, 0.773]], [0.391, [0.573, 0.835, 0.768]], [0.393, [0.573, 0.835, 0.768]], [0.395, [0.566, 0.833, 0.764]], [0.397, [0.566, 0.833, 0.764]], [0.399, [0.560, 0.830, 0.759]], [0.401, [0.560, 0.830, 0.759]], [0.403, [0.554, 0.827, 0.755]], [0.405, [0.554, 0.827, 0.755]], [0.407, [0.547, 0.824, 0.750]], [0.409, [0.547, 0.824, 0.750]], [0.411, [0.541, 0.822, 0.746]], [0.413, [0.541, 0.822, 0.746]], [0.415, [0.535, 0.819, 0.741]], [0.417, [0.535, 0.819, 0.741]], [0.419, [0.529, 0.816, 0.736]], [0.421, [0.529, 0.816, 0.736]], [0.423, [0.522, 0.814, 0.732]], [0.425, [0.522, 0.814, 0.732]], [0.427, [0.516, 0.811, 0.727]], [0.429, [0.516, 0.811, 0.727]], [0.431, [0.510, 0.808, 0.723]], [0.432, [0.510, 0.808, 0.723]], [0.434, [0.504, 0.805, 0.718]], [0.436, [0.504, 0.805, 0.718]], [0.438, [0.497, 0.803, 0.714]], [0.440, [0.497, 0.803, 0.714]], [0.442, [0.491, 0.800, 0.709]], [0.444, [0.491, 0.800, 0.709]], [0.446, [0.485, 0.797, 0.705]], [0.448, [0.485, 0.797, 0.705]], [0.450, [0.478, 0.795, 0.700]], [0.452, [0.478, 0.795, 0.700]], [0.454, [0.472, 0.792, 0.695]], [0.456, [0.472, 0.792, 0.695]], [0.458, [0.466, 0.789, 0.691]], [0.460, [0.466, 0.789, 0.691]], [0.462, [0.460, 0.786, 0.686]], [0.464, [0.460, 0.786, 0.686]], [0.466, [0.453, 0.784, 0.682]], [0.468, [0.453, 0.784, 0.682]], [0.470, [0.447, 0.781, 0.677]], [0.472, [0.447, 0.781, 0.677]], [0.474, [0.441, 0.778, 0.673]], [0.476, [0.441, 0.778, 0.673]], [0.477, [0.435, 0.776, 0.668]], [0.479, [0.435, 0.776, 0.668]], [0.481, [0.428, 0.773, 0.664]], [0.483, [0.428, 0.773, 0.664]], [0.485, [0.422, 0.770, 0.659]], [0.487, [0.422, 0.770, 0.659]], [0.489, [0.416, 0.768, 0.655]], [0.491, [0.416, 0.768, 0.655]], [0.493, [0.409, 0.765, 0.650]], [0.495, [0.409, 0.765, 0.650]], [0.497, [0.403, 0.762, 0.645]], [0.499, [0.403, 0.762, 0.645]], [0.501, [0.398, 0.760, 0.640]], [0.503, [0.398, 0.760, 0.640]], [0.505, [0.393, 0.757, 0.635]], [0.507, [0.393, 0.757, 0.635]], [0.509, [0.389, 0.755, 0.629]], [0.511, [0.389, 0.755, 0.629]], [0.513, [0.384, 0.752, 0.623]], [0.515, [0.384, 0.752, 0.623]], [0.517, [0.380, 0.750, 0.618]], [0.519, [0.380, 0.750, 0.618]], [0.521, [0.375, 0.747, 0.612]], [0.523, [0.375, 0.747, 0.612]], [0.524, [0.370, 0.745, 0.606]], [0.526, [0.370, 0.745, 0.606]], [0.528, [0.366, 0.742, 0.601]], [0.530, [0.366, 0.742, 0.601]], [0.532, [0.361, 0.740, 0.595]], [0.534, [0.361, 0.740, 0.595]], [0.536, [0.357, 0.737, 0.589]], [0.538, [0.357, 0.737, 0.589]], [0.540, [0.352, 0.735, 0.584]], [0.542, [0.352, 0.735, 0.584]], [0.544, [0.348, 0.732, 0.578]], [0.546, [0.348, 0.732, 0.578]], [0.548, [0.343, 0.730, 0.572]], [0.550, [0.343, 0.730, 0.572]], [0.552, [0.339, 0.728, 0.567]], [0.554, [0.339, 0.728, 0.567]], [0.556, [0.334, 0.725, 0.561]], [0.558, [0.334, 0.725, 0.561]], [0.560, [0.329, 0.723, 0.555]], [0.562, [0.329, 0.723, 0.555]], [0.564, [0.325, 0.720, 0.550]], [0.566, [0.325, 0.720, 0.550]], [0.568, [0.320, 0.718, 0.544]], [0.569, [0.320, 0.718, 0.544]], [0.571, [0.316, 0.715, 0.538]], [0.573, [0.316, 0.715, 0.538]], [0.575, [0.311, 0.713, 0.533]], [0.577, [0.311, 0.713, 0.533]], [0.579, [0.307, 0.710, 0.527]], [0.581, [0.307, 0.710, 0.527]], [0.583, [0.302, 0.708, 0.521]], [0.585, [0.302, 0.708, 0.521]], [0.587, [0.298, 0.705, 0.516]], [0.589, [0.298, 0.705, 0.516]], [0.591, [0.293, 0.703, 0.510]], [0.593, [0.293, 0.703, 0.510]], [0.595, [0.288, 0.700, 0.504]], [0.597, [0.288, 0.700, 0.504]], [0.599, [0.284, 0.698, 0.499]], [0.601, [0.284, 0.698, 0.499]], [0.603, [0.279, 0.696, 0.493]], [0.605, [0.279, 0.696, 0.493]], [0.607, [0.275, 0.693, 0.488]], [0.609, [0.275, 0.693, 0.488]], [0.611, [0.270, 0.691, 0.482]], [0.613, [0.270, 0.691, 0.482]], [0.614, [0.266, 0.688, 0.476]], [0.616, [0.266, 0.688, 0.476]], [0.618, [0.261, 0.686, 0.471]], [0.620, [0.261, 0.686, 0.471]], [0.622, [0.257, 0.683, 0.465]], [0.624, [0.257, 0.683, 0.465]], [0.626, [0.253, 0.680, 0.459]], [0.628, [0.253, 0.680, 0.459]], [0.630, [0.249, 0.675, 0.453]], [0.632, [0.249, 0.675, 0.453]], [0.634, [0.245, 0.671, 0.447]], [0.636, [0.245, 0.671, 0.447]], [0.638, [0.242, 0.667, 0.441]], [0.640, [0.242, 0.667, 0.441]], [0.642, [0.238, 0.662, 0.435]], [0.644, [0.238, 0.662, 0.435]], [0.646, [0.234, 0.658, 0.429]], [0.648, [0.234, 0.658, 0.429]], [0.650, [0.230, 0.654, 0.423]], [0.652, [0.230, 0.654, 0.423]], [0.654, [0.227, 0.650, 0.417]], [0.656, [0.227, 0.650, 0.417]], [0.658, [0.223, 0.645, 0.411]], [0.659, [0.223, 0.645, 0.411]], [0.661, [0.219, 0.641, 0.405]], [0.663, [0.219, 0.641, 0.405]], [0.665, [0.216, 0.637, 0.399]], [0.667, [0.216, 0.637, 0.399]], [0.669, [0.212, 0.632, 0.393]], [0.671, [0.212, 0.632, 0.393]], [0.673, [0.208, 0.628, 0.387]], [0.675, [0.208, 0.628, 0.387]], [0.677, [0.205, 0.624, 0.381]], [0.679, [0.205, 0.624, 0.381]], [0.681, [0.201, 0.619, 0.375]], [0.683, [0.201, 0.619, 0.375]], [0.685, [0.197, 0.615, 0.369]], [0.687, [0.197, 0.615, 0.369]], [0.689, [0.194, 0.611, 0.363]], [0.691, [0.194, 0.611, 0.363]], [0.693, [0.190, 0.606, 0.356]], [0.695, [0.190, 0.606, 0.356]], [0.697, [0.186, 0.602, 0.350]], [0.699, [0.186, 0.602, 0.350]], [0.701, [0.182, 0.598, 0.344]], [0.703, [0.182, 0.598, 0.344]], [0.705, [0.179, 0.594, 0.338]], [0.706, [0.179, 0.594, 0.338]], [0.708, [0.175, 0.589, 0.332]], [0.710, [0.175, 0.589, 0.332]], [0.712, [0.171, 0.585, 0.326]], [0.714, [0.171, 0.585, 0.326]], [0.716, [0.168, 0.581, 0.320]], [0.718, [0.168, 0.581, 0.320]], [0.720, [0.164, 0.576, 0.314]], [0.722, [0.164, 0.576, 0.314]], [0.724, [0.160, 0.572, 0.308]], [0.726, [0.160, 0.572, 0.308]], [0.728, [0.157, 0.568, 0.302]], [0.730, [0.157, 0.568, 0.302]], [0.732, [0.153, 0.563, 0.296]], [0.734, [0.153, 0.563, 0.296]], [0.736, [0.149, 0.559, 0.290]], [0.738, [0.149, 0.559, 0.290]], [0.740, [0.146, 0.555, 0.284]], [0.742, [0.146, 0.555, 0.284]], [0.744, [0.142, 0.550, 0.278]], [0.746, [0.142, 0.550, 0.278]], [0.748, [0.138, 0.546, 0.272]], [0.750, [0.138, 0.546, 0.272]], [0.751, [0.134, 0.542, 0.268]], [0.753, [0.134, 0.542, 0.268]], [0.755, [0.130, 0.539, 0.265]], [0.757, [0.130, 0.539, 0.265]], [0.759, [0.125, 0.535, 0.262]], [0.761, [0.125, 0.535, 0.262]], [0.763, [0.121, 0.531, 0.259]], [0.765, [0.121, 0.531, 0.259]], [0.767, [0.117, 0.528, 0.256]], [0.769, [0.117, 0.528, 0.256]], [0.771, [0.112, 0.524, 0.253]], [0.773, [0.112, 0.524, 0.253]], [0.775, [0.108, 0.520, 0.250]], [0.777, [0.108, 0.520, 0.250]], [0.779, [0.104, 0.516, 0.247]], [0.781, [0.104, 0.516, 0.247]], [0.783, [0.100, 0.513, 0.244]], [0.785, [0.100, 0.513, 0.244]], [0.787, [0.095, 0.509, 0.241]], [0.789, [0.095, 0.509, 0.241]], [0.791, [0.091, 0.505, 0.238]], [0.793, [0.091, 0.505, 0.238]], [0.795, [0.087, 0.502, 0.234]], [0.796, [0.087, 0.502, 0.234]], [0.798, [0.082, 0.498, 0.231]], [0.800, [0.082, 0.498, 0.231]], [0.802, [0.078, 0.494, 0.228]], [0.804, [0.078, 0.494, 0.228]], [0.806, [0.074, 0.491, 0.225]], [0.808, [0.074, 0.491, 0.225]], [0.810, [0.069, 0.487, 0.222]], [0.812, [0.069, 0.487, 0.222]], [0.814, [0.065, 0.483, 0.219]], [0.816, [0.065, 0.483, 0.219]], [0.818, [0.061, 0.480, 0.216]], [0.820, [0.061, 0.480, 0.216]], [0.822, [0.057, 0.476, 0.213]], [0.824, [0.057, 0.476, 0.213]], [0.826, [0.052, 0.472, 0.210]], [0.828, [0.052, 0.472, 0.210]], [0.830, [0.048, 0.469, 0.207]], [0.832, [0.048, 0.469, 0.207]], [0.834, [0.044, 0.465, 0.204]], [0.836, [0.044, 0.465, 0.204]], [0.838, [0.039, 0.461, 0.201]], [0.840, [0.039, 0.461, 0.201]], [0.841, [0.035, 0.457, 0.198]], [0.843, [0.035, 0.457, 0.198]], [0.845, [0.031, 0.454, 0.194]], [0.847, [0.031, 0.454, 0.194]], [0.849, [0.026, 0.450, 0.191]], [0.851, [0.026, 0.450, 0.191]], [0.853, [0.022, 0.446, 0.188]], [0.855, [0.022, 0.446, 0.188]], [0.857, [0.018, 0.443, 0.185]], [0.859, [0.018, 0.443, 0.185]], [0.861, [0.013, 0.439, 0.182]], [0.863, [0.013, 0.439, 0.182]], [0.865, [0.009, 0.435, 0.179]], [0.867, [0.009, 0.435, 0.179]], [0.869, [0.005, 0.432, 0.176]], [0.871, [0.005, 0.432, 0.176]], [0.873, [0.001, 0.428, 0.173]], [0.875, [0.001, 0.428, 0.173]], [0.877, [0.000, 0.423, 0.171]], [0.879, [0.000, 0.423, 0.171]], [0.881, [0.000, 0.418, 0.169]], [0.883, [0.000, 0.418, 0.169]], [0.885, [0.000, 0.413, 0.167]], [0.886, [0.000, 0.413, 0.167]], [0.888, [0.000, 0.408, 0.164]], [0.890, [0.000, 0.408, 0.164]], [0.892, [0.000, 0.403, 0.162]], [0.894, [0.000, 0.403, 0.162]], [0.896, [0.000, 0.398, 0.160]], [0.898, [0.000, 0.398, 0.160]], [0.900, [0.000, 0.393, 0.158]], [0.902, [0.000, 0.393, 0.158]], [0.904, [0.000, 0.388, 0.156]], [0.906, [0.000, 0.388, 0.156]], [0.908, [0.000, 0.383, 0.154]], [0.910, [0.000, 0.383, 0.154]], [0.912, [0.000, 0.378, 0.152]], [0.914, [0.000, 0.378, 0.152]], [0.916, [0.000, 0.373, 0.150]], [0.918, [0.000, 0.373, 0.150]], [0.920, [0.000, 0.368, 0.148]], [0.922, [0.000, 0.368, 0.148]], [0.924, [0.000, 0.363, 0.146]], [0.926, [0.000, 0.363, 0.146]], [0.928, [0.000, 0.357, 0.144]], [0.930, [0.000, 0.357, 0.144]], [0.932, [0.000, 0.352, 0.141]], [0.933, [0.000, 0.352, 0.141]], [0.935, [0.000, 0.347, 0.139]], [0.937, [0.000, 0.347, 0.139]], [0.939, [0.000, 0.342, 0.137]], [0.941, [0.000, 0.342, 0.137]], [0.943, [0.000, 0.337, 0.135]], [0.945, [0.000, 0.337, 0.135]], [0.947, [0.000, 0.332, 0.133]], [0.949, [0.000, 0.332, 0.133]], [0.951, [0.000, 0.327, 0.131]], [0.953, [0.000, 0.327, 0.131]], [0.955, [0.000, 0.322, 0.129]], [0.957, [0.000, 0.322, 0.129]], [0.959, [0.000, 0.317, 0.127]], [0.961, [0.000, 0.317, 0.127]], [0.963, [0.000, 0.312, 0.125]], [0.965, [0.000, 0.312, 0.125]], [0.967, [0.000, 0.307, 0.123]], [0.969, [0.000, 0.307, 0.123]], [0.971, [0.000, 0.302, 0.121]], [0.973, [0.000, 0.302, 0.121]], [0.975, [0.000, 0.297, 0.118]], [0.977, [0.000, 0.297, 0.118]], [0.978, [0.000, 0.292, 0.116]], [0.980, [0.000, 0.292, 0.116]], [0.982, [0.000, 0.287, 0.114]], [0.984, [0.000, 0.287, 0.114]], [0.986, [0.000, 0.282, 0.112]], [0.988, [0.000, 0.282, 0.112]], [0.990, [0.000, 0.277, 0.110]], [0.992, [0.000, 0.277, 0.110]], [0.994, [0.000, 0.272, 0.108]], [0.996, [0.000, 0.272, 0.108]], [0.998, [0.000, 0.267, 0.106]], [1.000, [0.000, 0.267, 0.106]]];
H.colormap_BuPu = [[0.000, [0.969, 0.988, 0.992]], [0.002, [0.969, 0.988, 0.992]], [0.004, [0.966, 0.986, 0.991]], [0.006, [0.966, 0.986, 0.991]], [0.008, [0.963, 0.984, 0.990]], [0.010, [0.963, 0.984, 0.990]], [0.012, [0.960, 0.982, 0.989]], [0.014, [0.960, 0.982, 0.989]], [0.016, [0.957, 0.980, 0.988]], [0.018, [0.957, 0.980, 0.988]], [0.020, [0.954, 0.978, 0.987]], [0.022, [0.954, 0.978, 0.987]], [0.023, [0.952, 0.976, 0.986]], [0.025, [0.952, 0.976, 0.986]], [0.027, [0.949, 0.974, 0.984]], [0.029, [0.949, 0.974, 0.984]], [0.031, [0.946, 0.972, 0.983]], [0.033, [0.946, 0.972, 0.983]], [0.035, [0.943, 0.971, 0.982]], [0.037, [0.943, 0.971, 0.982]], [0.039, [0.940, 0.969, 0.981]], [0.041, [0.940, 0.969, 0.981]], [0.043, [0.938, 0.967, 0.980]], [0.045, [0.938, 0.967, 0.980]], [0.047, [0.935, 0.965, 0.979]], [0.049, [0.935, 0.965, 0.979]], [0.051, [0.932, 0.963, 0.978]], [0.053, [0.932, 0.963, 0.978]], [0.055, [0.929, 0.961, 0.977]], [0.057, [0.929, 0.961, 0.977]], [0.059, [0.926, 0.959, 0.976]], [0.061, [0.926, 0.959, 0.976]], [0.063, [0.923, 0.957, 0.974]], [0.065, [0.923, 0.957, 0.974]], [0.067, [0.921, 0.955, 0.973]], [0.068, [0.921, 0.955, 0.973]], [0.070, [0.918, 0.953, 0.972]], [0.072, [0.918, 0.953, 0.972]], [0.074, [0.915, 0.951, 0.971]], [0.076, [0.915, 0.951, 0.971]], [0.078, [0.912, 0.949, 0.970]], [0.080, [0.912, 0.949, 0.970]], [0.082, [0.909, 0.947, 0.969]], [0.084, [0.909, 0.947, 0.969]], [0.086, [0.906, 0.945, 0.968]], [0.088, [0.906, 0.945, 0.968]], [0.090, [0.904, 0.943, 0.967]], [0.092, [0.904, 0.943, 0.967]], [0.094, [0.901, 0.941, 0.966]], [0.096, [0.901, 0.941, 0.966]], [0.098, [0.898, 0.939, 0.964]], [0.100, [0.898, 0.939, 0.964]], [0.102, [0.895, 0.937, 0.963]], [0.104, [0.895, 0.937, 0.963]], [0.106, [0.892, 0.935, 0.962]], [0.108, [0.892, 0.935, 0.962]], [0.110, [0.889, 0.933, 0.961]], [0.112, [0.889, 0.933, 0.961]], [0.114, [0.887, 0.931, 0.960]], [0.115, [0.887, 0.931, 0.960]], [0.117, [0.884, 0.929, 0.959]], [0.119, [0.884, 0.929, 0.959]], [0.121, [0.881, 0.927, 0.958]], [0.123, [0.881, 0.927, 0.958]], [0.125, [0.878, 0.925, 0.957]], [0.127, [0.878, 0.925, 0.957]], [0.129, [0.874, 0.922, 0.955]], [0.131, [0.874, 0.922, 0.955]], [0.133, [0.870, 0.919, 0.953]], [0.135, [0.870, 0.919, 0.953]], [0.137, [0.866, 0.916, 0.951]], [0.139, [0.866, 0.916, 0.951]], [0.141, [0.862, 0.913, 0.950]], [0.143, [0.862, 0.913, 0.950]], [0.145, [0.858, 0.910, 0.948]], [0.147, [0.858, 0.910, 0.948]], [0.149, [0.854, 0.907, 0.946]], [0.151, [0.854, 0.907, 0.946]], [0.153, [0.850, 0.904, 0.945]], [0.155, [0.850, 0.904, 0.945]], [0.157, [0.845, 0.900, 0.943]], [0.159, [0.845, 0.900, 0.943]], [0.160, [0.841, 0.897, 0.941]], [0.162, [0.841, 0.897, 0.941]], [0.164, [0.837, 0.894, 0.939]], [0.166, [0.837, 0.894, 0.939]], [0.168, [0.833, 0.891, 0.938]], [0.170, [0.833, 0.891, 0.938]], [0.172, [0.829, 0.888, 0.936]], [0.174, [0.829, 0.888, 0.936]], [0.176, [0.825, 0.885, 0.934]], [0.178, [0.825, 0.885, 0.934]], [0.180, [0.821, 0.882, 0.933]], [0.182, [0.821, 0.882, 0.933]], [0.184, [0.817, 0.879, 0.931]], [0.186, [0.817, 0.879, 0.931]], [0.188, [0.813, 0.876, 0.929]], [0.190, [0.813, 0.876, 0.929]], [0.192, [0.809, 0.873, 0.927]], [0.194, [0.809, 0.873, 0.927]], [0.196, [0.805, 0.870, 0.926]], [0.198, [0.805, 0.870, 0.926]], [0.200, [0.801, 0.867, 0.924]], [0.202, [0.801, 0.867, 0.924]], [0.204, [0.797, 0.864, 0.922]], [0.205, [0.797, 0.864, 0.922]], [0.207, [0.793, 0.861, 0.920]], [0.209, [0.793, 0.861, 0.920]], [0.211, [0.789, 0.857, 0.919]], [0.213, [0.789, 0.857, 0.919]], [0.215, [0.785, 0.854, 0.917]], [0.217, [0.785, 0.854, 0.917]], [0.219, [0.780, 0.851, 0.915]], [0.221, [0.780, 0.851, 0.915]], [0.223, [0.776, 0.848, 0.914]], [0.225, [0.776, 0.848, 0.914]], [0.227, [0.772, 0.845, 0.912]], [0.229, [0.772, 0.845, 0.912]], [0.231, [0.768, 0.842, 0.910]], [0.233, [0.768, 0.842, 0.910]], [0.235, [0.764, 0.839, 0.908]], [0.237, [0.764, 0.839, 0.908]], [0.239, [0.760, 0.836, 0.907]], [0.241, [0.760, 0.836, 0.907]], [0.243, [0.756, 0.833, 0.905]], [0.245, [0.756, 0.833, 0.905]], [0.247, [0.752, 0.830, 0.903]], [0.249, [0.752, 0.830, 0.903]], [0.250, [0.748, 0.827, 0.902]], [0.252, [0.748, 0.827, 0.902]], [0.254, [0.744, 0.824, 0.900]], [0.256, [0.744, 0.824, 0.900]], [0.258, [0.740, 0.821, 0.899]], [0.260, [0.740, 0.821, 0.899]], [0.262, [0.736, 0.818, 0.897]], [0.264, [0.736, 0.818, 0.897]], [0.266, [0.732, 0.815, 0.896]], [0.268, [0.732, 0.815, 0.896]], [0.270, [0.728, 0.813, 0.894]], [0.272, [0.728, 0.813, 0.894]], [0.274, [0.724, 0.810, 0.893]], [0.276, [0.724, 0.810, 0.893]], [0.278, [0.720, 0.807, 0.891]], [0.280, [0.720, 0.807, 0.891]], [0.282, [0.716, 0.804, 0.890]], [0.284, [0.716, 0.804, 0.890]], [0.286, [0.711, 0.801, 0.888]], [0.288, [0.711, 0.801, 0.888]], [0.290, [0.707, 0.798, 0.887]], [0.292, [0.707, 0.798, 0.887]], [0.294, [0.703, 0.796, 0.885]], [0.295, [0.703, 0.796, 0.885]], [0.297, [0.699, 0.793, 0.884]], [0.299, [0.699, 0.793, 0.884]], [0.301, [0.695, 0.790, 0.882]], [0.303, [0.695, 0.790, 0.882]], [0.305, [0.691, 0.787, 0.881]], [0.307, [0.691, 0.787, 0.881]], [0.309, [0.687, 0.784, 0.879]], [0.311, [0.687, 0.784, 0.879]], [0.313, [0.683, 0.781, 0.878]], [0.315, [0.683, 0.781, 0.878]], [0.317, [0.679, 0.779, 0.876]], [0.319, [0.679, 0.779, 0.876]], [0.321, [0.675, 0.776, 0.875]], [0.323, [0.675, 0.776, 0.875]], [0.325, [0.671, 0.773, 0.874]], [0.327, [0.671, 0.773, 0.874]], [0.329, [0.667, 0.770, 0.872]], [0.331, [0.667, 0.770, 0.872]], [0.333, [0.663, 0.767, 0.871]], [0.335, [0.663, 0.767, 0.871]], [0.337, [0.659, 0.764, 0.869]], [0.339, [0.659, 0.764, 0.869]], [0.341, [0.655, 0.762, 0.868]], [0.342, [0.655, 0.762, 0.868]], [0.344, [0.651, 0.759, 0.866]], [0.346, [0.651, 0.759, 0.866]], [0.348, [0.647, 0.756, 0.865]], [0.350, [0.647, 0.756, 0.865]], [0.352, [0.642, 0.753, 0.863]], [0.354, [0.642, 0.753, 0.863]], [0.356, [0.638, 0.750, 0.862]], [0.358, [0.638, 0.750, 0.862]], [0.360, [0.634, 0.748, 0.860]], [0.362, [0.634, 0.748, 0.860]], [0.364, [0.630, 0.745, 0.859]], [0.366, [0.630, 0.745, 0.859]], [0.368, [0.626, 0.742, 0.857]], [0.370, [0.626, 0.742, 0.857]], [0.372, [0.622, 0.739, 0.856]], [0.374, [0.622, 0.739, 0.856]], [0.376, [0.619, 0.736, 0.854]], [0.378, [0.619, 0.736, 0.854]], [0.380, [0.617, 0.731, 0.852]], [0.382, [0.617, 0.731, 0.852]], [0.384, [0.614, 0.726, 0.849]], [0.386, [0.614, 0.726, 0.849]], [0.387, [0.612, 0.721, 0.847]], [0.389, [0.612, 0.721, 0.847]], [0.391, [0.610, 0.717, 0.844]], [0.393, [0.610, 0.717, 0.844]], [0.395, [0.608, 0.712, 0.842]], [0.397, [0.608, 0.712, 0.842]], [0.399, [0.605, 0.707, 0.839]], [0.401, [0.605, 0.707, 0.839]], [0.403, [0.603, 0.703, 0.837]], [0.405, [0.603, 0.703, 0.837]], [0.407, [0.601, 0.698, 0.834]], [0.409, [0.601, 0.698, 0.834]], [0.411, [0.599, 0.693, 0.832]], [0.413, [0.599, 0.693, 0.832]], [0.415, [0.597, 0.689, 0.829]], [0.417, [0.597, 0.689, 0.829]], [0.419, [0.594, 0.684, 0.827]], [0.421, [0.594, 0.684, 0.827]], [0.423, [0.592, 0.679, 0.824]], [0.425, [0.592, 0.679, 0.824]], [0.427, [0.590, 0.675, 0.822]], [0.429, [0.590, 0.675, 0.822]], [0.431, [0.588, 0.670, 0.820]], [0.432, [0.588, 0.670, 0.820]], [0.434, [0.586, 0.665, 0.817]], [0.436, [0.586, 0.665, 0.817]], [0.438, [0.583, 0.661, 0.815]], [0.440, [0.583, 0.661, 0.815]], [0.442, [0.581, 0.656, 0.812]], [0.444, [0.581, 0.656, 0.812]], [0.446, [0.579, 0.651, 0.810]], [0.448, [0.579, 0.651, 0.810]], [0.450, [0.577, 0.647, 0.807]], [0.452, [0.577, 0.647, 0.807]], [0.454, [0.574, 0.642, 0.805]], [0.456, [0.574, 0.642, 0.805]], [0.458, [0.572, 0.637, 0.802]], [0.460, [0.572, 0.637, 0.802]], [0.462, [0.570, 0.633, 0.800]], [0.464, [0.570, 0.633, 0.800]], [0.466, [0.568, 0.628, 0.797]], [0.468, [0.568, 0.628, 0.797]], [0.470, [0.566, 0.623, 0.795]], [0.472, [0.566, 0.623, 0.795]], [0.474, [0.563, 0.619, 0.792]], [0.476, [0.563, 0.619, 0.792]], [0.477, [0.561, 0.614, 0.790]], [0.479, [0.561, 0.614, 0.790]], [0.481, [0.559, 0.609, 0.788]], [0.483, [0.559, 0.609, 0.788]], [0.485, [0.557, 0.605, 0.785]], [0.487, [0.557, 0.605, 0.785]], [0.489, [0.555, 0.600, 0.783]], [0.491, [0.555, 0.600, 0.783]], [0.493, [0.552, 0.595, 0.780]], [0.495, [0.552, 0.595, 0.780]], [0.497, [0.550, 0.591, 0.778]], [0.499, [0.550, 0.591, 0.778]], [0.501, [0.549, 0.586, 0.775]], [0.503, [0.549, 0.586, 0.775]], [0.505, [0.549, 0.580, 0.773]], [0.507, [0.549, 0.580, 0.773]], [0.509, [0.549, 0.575, 0.770]], [0.511, [0.549, 0.575, 0.770]], [0.513, [0.549, 0.570, 0.767]], [0.515, [0.549, 0.570, 0.767]], [0.517, [0.549, 0.564, 0.765]], [0.519, [0.549, 0.564, 0.765]], [0.521, [0.549, 0.559, 0.762]], [0.523, [0.549, 0.559, 0.762]], [0.524, [0.549, 0.554, 0.760]], [0.526, [0.549, 0.554, 0.760]], [0.528, [0.549, 0.549, 0.757]], [0.530, [0.549, 0.549, 0.757]], [0.532, [0.549, 0.543, 0.755]], [0.534, [0.549, 0.543, 0.755]], [0.536, [0.549, 0.538, 0.752]], [0.538, [0.549, 0.538, 0.752]], [0.540, [0.549, 0.533, 0.749]], [0.542, [0.549, 0.533, 0.749]], [0.544, [0.549, 0.527, 0.747]], [0.546, [0.549, 0.527, 0.747]], [0.548, [0.549, 0.522, 0.744]], [0.550, [0.549, 0.522, 0.744]], [0.552, [0.549, 0.517, 0.742]], [0.554, [0.549, 0.517, 0.742]], [0.556, [0.549, 0.512, 0.739]], [0.558, [0.549, 0.512, 0.739]], [0.560, [0.549, 0.506, 0.736]], [0.562, [0.549, 0.506, 0.736]], [0.564, [0.549, 0.501, 0.734]], [0.566, [0.549, 0.501, 0.734]], [0.568, [0.549, 0.496, 0.731]], [0.569, [0.549, 0.496, 0.731]], [0.571, [0.549, 0.490, 0.729]], [0.573, [0.549, 0.490, 0.729]], [0.575, [0.549, 0.485, 0.726]], [0.577, [0.549, 0.485, 0.726]], [0.579, [0.549, 0.480, 0.724]], [0.581, [0.549, 0.480, 0.724]], [0.583, [0.549, 0.474, 0.721]], [0.585, [0.549, 0.474, 0.721]], [0.587, [0.549, 0.469, 0.718]], [0.589, [0.549, 0.469, 0.718]], [0.591, [0.549, 0.464, 0.716]], [0.593, [0.549, 0.464, 0.716]], [0.595, [0.549, 0.459, 0.713]], [0.597, [0.549, 0.459, 0.713]], [0.599, [0.549, 0.453, 0.711]], [0.601, [0.549, 0.453, 0.711]], [0.603, [0.549, 0.448, 0.708]], [0.605, [0.549, 0.448, 0.708]], [0.607, [0.549, 0.443, 0.705]], [0.609, [0.549, 0.443, 0.705]], [0.611, [0.549, 0.437, 0.703]], [0.613, [0.549, 0.437, 0.703]], [0.614, [0.549, 0.432, 0.700]], [0.616, [0.549, 0.432, 0.700]], [0.618, [0.549, 0.427, 0.698]], [0.620, [0.549, 0.427, 0.698]], [0.622, [0.549, 0.422, 0.695]], [0.624, [0.549, 0.422, 0.695]], [0.626, [0.549, 0.416, 0.693]], [0.628, [0.549, 0.416, 0.693]], [0.630, [0.548, 0.411, 0.690]], [0.632, [0.548, 0.411, 0.690]], [0.634, [0.548, 0.406, 0.688]], [0.636, [0.548, 0.406, 0.688]], [0.638, [0.547, 0.401, 0.685]], [0.640, [0.547, 0.401, 0.685]], [0.642, [0.547, 0.396, 0.683]], [0.644, [0.547, 0.396, 0.683]], [0.646, [0.546, 0.391, 0.680]], [0.648, [0.546, 0.391, 0.680]], [0.650, [0.546, 0.385, 0.678]], [0.652, [0.546, 0.385, 0.678]], [0.654, [0.545, 0.380, 0.675]], [0.656, [0.545, 0.380, 0.675]], [0.658, [0.545, 0.375, 0.673]], [0.659, [0.545, 0.375, 0.673]], [0.661, [0.544, 0.370, 0.670]], [0.663, [0.544, 0.370, 0.670]], [0.665, [0.544, 0.365, 0.668]], [0.667, [0.544, 0.365, 0.668]], [0.669, [0.543, 0.360, 0.666]], [0.671, [0.543, 0.360, 0.666]], [0.673, [0.543, 0.354, 0.663]], [0.675, [0.543, 0.354, 0.663]], [0.677, [0.542, 0.349, 0.661]], [0.679, [0.542, 0.349, 0.661]], [0.681, [0.542, 0.344, 0.658]], [0.683, [0.542, 0.344, 0.658]], [0.685, [0.541, 0.339, 0.656]], [0.687, [0.541, 0.339, 0.656]], [0.689, [0.541, 0.334, 0.653]], [0.691, [0.541, 0.334, 0.653]], [0.693, [0.540, 0.329, 0.651]], [0.695, [0.540, 0.329, 0.651]], [0.697, [0.540, 0.323, 0.648]], [0.699, [0.540, 0.323, 0.648]], [0.701, [0.539, 0.318, 0.646]], [0.703, [0.539, 0.318, 0.646]], [0.705, [0.539, 0.313, 0.643]], [0.706, [0.539, 0.313, 0.643]], [0.708, [0.538, 0.308, 0.641]], [0.710, [0.538, 0.308, 0.641]], [0.712, [0.538, 0.303, 0.638]], [0.714, [0.538, 0.303, 0.638]], [0.716, [0.537, 0.298, 0.636]], [0.718, [0.537, 0.298, 0.636]], [0.720, [0.537, 0.292, 0.634]], [0.722, [0.537, 0.292, 0.634]], [0.724, [0.536, 0.287, 0.631]], [0.726, [0.536, 0.287, 0.631]], [0.728, [0.536, 0.282, 0.629]], [0.730, [0.536, 0.282, 0.629]], [0.732, [0.535, 0.277, 0.626]], [0.734, [0.535, 0.277, 0.626]], [0.736, [0.535, 0.272, 0.624]], [0.738, [0.535, 0.272, 0.624]], [0.740, [0.534, 0.267, 0.621]], [0.742, [0.534, 0.267, 0.621]], [0.744, [0.534, 0.261, 0.619]], [0.746, [0.534, 0.261, 0.619]], [0.748, [0.533, 0.256, 0.616]], [0.750, [0.533, 0.256, 0.616]], [0.751, [0.533, 0.250, 0.613]], [0.753, [0.533, 0.250, 0.613]], [0.755, [0.532, 0.244, 0.609]], [0.757, [0.532, 0.244, 0.609]], [0.759, [0.531, 0.238, 0.605]], [0.761, [0.531, 0.238, 0.605]], [0.763, [0.530, 0.232, 0.600]], [0.765, [0.530, 0.232, 0.600]], [0.767, [0.529, 0.226, 0.596]], [0.769, [0.529, 0.226, 0.596]], [0.771, [0.528, 0.220, 0.592]], [0.773, [0.528, 0.220, 0.592]], [0.775, [0.528, 0.213, 0.588]], [0.777, [0.528, 0.213, 0.588]], [0.779, [0.527, 0.207, 0.584]], [0.781, [0.527, 0.207, 0.584]], [0.783, [0.526, 0.201, 0.580]], [0.785, [0.526, 0.201, 0.580]], [0.787, [0.525, 0.195, 0.576]], [0.789, [0.525, 0.195, 0.576]], [0.791, [0.524, 0.189, 0.572]], [0.793, [0.524, 0.189, 0.572]], [0.795, [0.523, 0.183, 0.568]], [0.796, [0.523, 0.183, 0.568]], [0.798, [0.522, 0.176, 0.564]], [0.800, [0.522, 0.176, 0.564]], [0.802, [0.521, 0.170, 0.560]], [0.804, [0.521, 0.170, 0.560]], [0.806, [0.521, 0.164, 0.556]], [0.808, [0.521, 0.164, 0.556]], [0.810, [0.520, 0.158, 0.552]], [0.812, [0.520, 0.158, 0.552]], [0.814, [0.519, 0.152, 0.548]], [0.816, [0.519, 0.152, 0.548]], [0.818, [0.518, 0.146, 0.544]], [0.820, [0.518, 0.146, 0.544]], [0.822, [0.517, 0.140, 0.540]], [0.824, [0.517, 0.140, 0.540]], [0.826, [0.516, 0.133, 0.536]], [0.828, [0.516, 0.133, 0.536]], [0.830, [0.515, 0.127, 0.531]], [0.832, [0.515, 0.127, 0.531]], [0.834, [0.515, 0.121, 0.527]], [0.836, [0.515, 0.121, 0.527]], [0.838, [0.514, 0.115, 0.523]], [0.840, [0.514, 0.115, 0.523]], [0.841, [0.513, 0.109, 0.519]], [0.843, [0.513, 0.109, 0.519]], [0.845, [0.512, 0.103, 0.515]], [0.847, [0.512, 0.103, 0.515]], [0.849, [0.511, 0.097, 0.511]], [0.851, [0.511, 0.097, 0.511]], [0.853, [0.510, 0.090, 0.507]], [0.855, [0.510, 0.090, 0.507]], [0.857, [0.509, 0.084, 0.503]], [0.859, [0.509, 0.084, 0.503]], [0.861, [0.509, 0.078, 0.499]], [0.863, [0.509, 0.078, 0.499]], [0.865, [0.508, 0.072, 0.495]], [0.867, [0.508, 0.072, 0.495]], [0.869, [0.507, 0.066, 0.491]], [0.871, [0.507, 0.066, 0.491]], [0.873, [0.506, 0.060, 0.487]], [0.875, [0.506, 0.060, 0.487]], [0.877, [0.500, 0.057, 0.481]], [0.879, [0.500, 0.057, 0.481]], [0.881, [0.494, 0.055, 0.475]], [0.883, [0.494, 0.055, 0.475]], [0.885, [0.487, 0.054, 0.469]], [0.886, [0.487, 0.054, 0.469]], [0.888, [0.481, 0.052, 0.463]], [0.890, [0.481, 0.052, 0.463]], [0.892, [0.475, 0.050, 0.457]], [0.894, [0.475, 0.050, 0.457]], [0.896, [0.468, 0.048, 0.451]], [0.898, [0.468, 0.048, 0.451]], [0.900, [0.462, 0.046, 0.445]], [0.902, [0.462, 0.046, 0.445]], [0.904, [0.456, 0.044, 0.439]], [0.906, [0.456, 0.044, 0.439]], [0.908, [0.449, 0.042, 0.433]], [0.910, [0.449, 0.042, 0.433]], [0.912, [0.443, 0.041, 0.427]], [0.914, [0.443, 0.041, 0.427]], [0.916, [0.436, 0.039, 0.421]], [0.918, [0.436, 0.039, 0.421]], [0.920, [0.430, 0.037, 0.415]], [0.922, [0.430, 0.037, 0.415]], [0.924, [0.424, 0.035, 0.409]], [0.926, [0.424, 0.035, 0.409]], [0.928, [0.417, 0.033, 0.403]], [0.930, [0.417, 0.033, 0.403]], [0.932, [0.411, 0.031, 0.397]], [0.933, [0.411, 0.031, 0.397]], [0.935, [0.404, 0.030, 0.391]], [0.937, [0.404, 0.030, 0.391]], [0.939, [0.398, 0.028, 0.385]], [0.941, [0.398, 0.028, 0.385]], [0.943, [0.392, 0.026, 0.379]], [0.945, [0.392, 0.026, 0.379]], [0.947, [0.385, 0.024, 0.372]], [0.949, [0.385, 0.024, 0.372]], [0.951, [0.379, 0.022, 0.366]], [0.953, [0.379, 0.022, 0.366]], [0.955, [0.372, 0.020, 0.360]], [0.957, [0.372, 0.020, 0.360]], [0.959, [0.366, 0.018, 0.354]], [0.961, [0.366, 0.018, 0.354]], [0.963, [0.360, 0.017, 0.348]], [0.965, [0.360, 0.017, 0.348]], [0.967, [0.353, 0.015, 0.342]], [0.969, [0.353, 0.015, 0.342]], [0.971, [0.347, 0.013, 0.336]], [0.973, [0.347, 0.013, 0.336]], [0.975, [0.340, 0.011, 0.330]], [0.977, [0.340, 0.011, 0.330]], [0.978, [0.334, 0.009, 0.324]], [0.980, [0.334, 0.009, 0.324]], [0.982, [0.328, 0.007, 0.318]], [0.984, [0.328, 0.007, 0.318]], [0.986, [0.321, 0.006, 0.312]], [0.988, [0.321, 0.006, 0.312]], [0.990, [0.315, 0.004, 0.306]], [0.992, [0.315, 0.004, 0.306]], [0.994, [0.308, 0.002, 0.300]], [0.996, [0.308, 0.002, 0.300]], [0.998, [0.302, 0.000, 0.294]], [1.000, [0.302, 0.000, 0.294]]];
H.colormap_bwr = [[0.000, [0.000, 0.000, 1.000]], [0.002, [0.000, 0.000, 1.000]], [0.004, [0.008, 0.008, 1.000]], [0.006, [0.008, 0.008, 1.000]], [0.008, [0.016, 0.016, 1.000]], [0.010, [0.016, 0.016, 1.000]], [0.012, [0.024, 0.024, 1.000]], [0.014, [0.024, 0.024, 1.000]], [0.016, [0.031, 0.031, 1.000]], [0.018, [0.031, 0.031, 1.000]], [0.020, [0.039, 0.039, 1.000]], [0.022, [0.039, 0.039, 1.000]], [0.023, [0.047, 0.047, 1.000]], [0.025, [0.047, 0.047, 1.000]], [0.027, [0.055, 0.055, 1.000]], [0.029, [0.055, 0.055, 1.000]], [0.031, [0.063, 0.063, 1.000]], [0.033, [0.063, 0.063, 1.000]], [0.035, [0.071, 0.071, 1.000]], [0.037, [0.071, 0.071, 1.000]], [0.039, [0.078, 0.078, 1.000]], [0.041, [0.078, 0.078, 1.000]], [0.043, [0.086, 0.086, 1.000]], [0.045, [0.086, 0.086, 1.000]], [0.047, [0.094, 0.094, 1.000]], [0.049, [0.094, 0.094, 1.000]], [0.051, [0.102, 0.102, 1.000]], [0.053, [0.102, 0.102, 1.000]], [0.055, [0.110, 0.110, 1.000]], [0.057, [0.110, 0.110, 1.000]], [0.059, [0.118, 0.118, 1.000]], [0.061, [0.118, 0.118, 1.000]], [0.063, [0.125, 0.125, 1.000]], [0.065, [0.125, 0.125, 1.000]], [0.067, [0.133, 0.133, 1.000]], [0.068, [0.133, 0.133, 1.000]], [0.070, [0.141, 0.141, 1.000]], [0.072, [0.141, 0.141, 1.000]], [0.074, [0.149, 0.149, 1.000]], [0.076, [0.149, 0.149, 1.000]], [0.078, [0.157, 0.157, 1.000]], [0.080, [0.157, 0.157, 1.000]], [0.082, [0.165, 0.165, 1.000]], [0.084, [0.165, 0.165, 1.000]], [0.086, [0.173, 0.173, 1.000]], [0.088, [0.173, 0.173, 1.000]], [0.090, [0.180, 0.180, 1.000]], [0.092, [0.180, 0.180, 1.000]], [0.094, [0.188, 0.188, 1.000]], [0.096, [0.188, 0.188, 1.000]], [0.098, [0.196, 0.196, 1.000]], [0.100, [0.196, 0.196, 1.000]], [0.102, [0.204, 0.204, 1.000]], [0.104, [0.204, 0.204, 1.000]], [0.106, [0.212, 0.212, 1.000]], [0.108, [0.212, 0.212, 1.000]], [0.110, [0.220, 0.220, 1.000]], [0.112, [0.220, 0.220, 1.000]], [0.114, [0.227, 0.227, 1.000]], [0.115, [0.227, 0.227, 1.000]], [0.117, [0.235, 0.235, 1.000]], [0.119, [0.235, 0.235, 1.000]], [0.121, [0.243, 0.243, 1.000]], [0.123, [0.243, 0.243, 1.000]], [0.125, [0.251, 0.251, 1.000]], [0.127, [0.251, 0.251, 1.000]], [0.129, [0.259, 0.259, 1.000]], [0.131, [0.259, 0.259, 1.000]], [0.133, [0.267, 0.267, 1.000]], [0.135, [0.267, 0.267, 1.000]], [0.137, [0.275, 0.275, 1.000]], [0.139, [0.275, 0.275, 1.000]], [0.141, [0.282, 0.282, 1.000]], [0.143, [0.282, 0.282, 1.000]], [0.145, [0.290, 0.290, 1.000]], [0.147, [0.290, 0.290, 1.000]], [0.149, [0.298, 0.298, 1.000]], [0.151, [0.298, 0.298, 1.000]], [0.153, [0.306, 0.306, 1.000]], [0.155, [0.306, 0.306, 1.000]], [0.157, [0.314, 0.314, 1.000]], [0.159, [0.314, 0.314, 1.000]], [0.160, [0.322, 0.322, 1.000]], [0.162, [0.322, 0.322, 1.000]], [0.164, [0.329, 0.329, 1.000]], [0.166, [0.329, 0.329, 1.000]], [0.168, [0.337, 0.337, 1.000]], [0.170, [0.337, 0.337, 1.000]], [0.172, [0.345, 0.345, 1.000]], [0.174, [0.345, 0.345, 1.000]], [0.176, [0.353, 0.353, 1.000]], [0.178, [0.353, 0.353, 1.000]], [0.180, [0.361, 0.361, 1.000]], [0.182, [0.361, 0.361, 1.000]], [0.184, [0.369, 0.369, 1.000]], [0.186, [0.369, 0.369, 1.000]], [0.188, [0.376, 0.376, 1.000]], [0.190, [0.376, 0.376, 1.000]], [0.192, [0.384, 0.384, 1.000]], [0.194, [0.384, 0.384, 1.000]], [0.196, [0.392, 0.392, 1.000]], [0.198, [0.392, 0.392, 1.000]], [0.200, [0.400, 0.400, 1.000]], [0.202, [0.400, 0.400, 1.000]], [0.204, [0.408, 0.408, 1.000]], [0.205, [0.408, 0.408, 1.000]], [0.207, [0.416, 0.416, 1.000]], [0.209, [0.416, 0.416, 1.000]], [0.211, [0.424, 0.424, 1.000]], [0.213, [0.424, 0.424, 1.000]], [0.215, [0.431, 0.431, 1.000]], [0.217, [0.431, 0.431, 1.000]], [0.219, [0.439, 0.439, 1.000]], [0.221, [0.439, 0.439, 1.000]], [0.223, [0.447, 0.447, 1.000]], [0.225, [0.447, 0.447, 1.000]], [0.227, [0.455, 0.455, 1.000]], [0.229, [0.455, 0.455, 1.000]], [0.231, [0.463, 0.463, 1.000]], [0.233, [0.463, 0.463, 1.000]], [0.235, [0.471, 0.471, 1.000]], [0.237, [0.471, 0.471, 1.000]], [0.239, [0.478, 0.478, 1.000]], [0.241, [0.478, 0.478, 1.000]], [0.243, [0.486, 0.486, 1.000]], [0.245, [0.486, 0.486, 1.000]], [0.247, [0.494, 0.494, 1.000]], [0.249, [0.494, 0.494, 1.000]], [0.250, [0.502, 0.502, 1.000]], [0.252, [0.502, 0.502, 1.000]], [0.254, [0.510, 0.510, 1.000]], [0.256, [0.510, 0.510, 1.000]], [0.258, [0.518, 0.518, 1.000]], [0.260, [0.518, 0.518, 1.000]], [0.262, [0.525, 0.525, 1.000]], [0.264, [0.525, 0.525, 1.000]], [0.266, [0.533, 0.533, 1.000]], [0.268, [0.533, 0.533, 1.000]], [0.270, [0.541, 0.541, 1.000]], [0.272, [0.541, 0.541, 1.000]], [0.274, [0.549, 0.549, 1.000]], [0.276, [0.549, 0.549, 1.000]], [0.278, [0.557, 0.557, 1.000]], [0.280, [0.557, 0.557, 1.000]], [0.282, [0.565, 0.565, 1.000]], [0.284, [0.565, 0.565, 1.000]], [0.286, [0.573, 0.573, 1.000]], [0.288, [0.573, 0.573, 1.000]], [0.290, [0.580, 0.580, 1.000]], [0.292, [0.580, 0.580, 1.000]], [0.294, [0.588, 0.588, 1.000]], [0.295, [0.588, 0.588, 1.000]], [0.297, [0.596, 0.596, 1.000]], [0.299, [0.596, 0.596, 1.000]], [0.301, [0.604, 0.604, 1.000]], [0.303, [0.604, 0.604, 1.000]], [0.305, [0.612, 0.612, 1.000]], [0.307, [0.612, 0.612, 1.000]], [0.309, [0.620, 0.620, 1.000]], [0.311, [0.620, 0.620, 1.000]], [0.313, [0.627, 0.627, 1.000]], [0.315, [0.627, 0.627, 1.000]], [0.317, [0.635, 0.635, 1.000]], [0.319, [0.635, 0.635, 1.000]], [0.321, [0.643, 0.643, 1.000]], [0.323, [0.643, 0.643, 1.000]], [0.325, [0.651, 0.651, 1.000]], [0.327, [0.651, 0.651, 1.000]], [0.329, [0.659, 0.659, 1.000]], [0.331, [0.659, 0.659, 1.000]], [0.333, [0.667, 0.667, 1.000]], [0.335, [0.667, 0.667, 1.000]], [0.337, [0.675, 0.675, 1.000]], [0.339, [0.675, 0.675, 1.000]], [0.341, [0.682, 0.682, 1.000]], [0.342, [0.682, 0.682, 1.000]], [0.344, [0.690, 0.690, 1.000]], [0.346, [0.690, 0.690, 1.000]], [0.348, [0.698, 0.698, 1.000]], [0.350, [0.698, 0.698, 1.000]], [0.352, [0.706, 0.706, 1.000]], [0.354, [0.706, 0.706, 1.000]], [0.356, [0.714, 0.714, 1.000]], [0.358, [0.714, 0.714, 1.000]], [0.360, [0.722, 0.722, 1.000]], [0.362, [0.722, 0.722, 1.000]], [0.364, [0.729, 0.729, 1.000]], [0.366, [0.729, 0.729, 1.000]], [0.368, [0.737, 0.737, 1.000]], [0.370, [0.737, 0.737, 1.000]], [0.372, [0.745, 0.745, 1.000]], [0.374, [0.745, 0.745, 1.000]], [0.376, [0.753, 0.753, 1.000]], [0.378, [0.753, 0.753, 1.000]], [0.380, [0.761, 0.761, 1.000]], [0.382, [0.761, 0.761, 1.000]], [0.384, [0.769, 0.769, 1.000]], [0.386, [0.769, 0.769, 1.000]], [0.387, [0.776, 0.776, 1.000]], [0.389, [0.776, 0.776, 1.000]], [0.391, [0.784, 0.784, 1.000]], [0.393, [0.784, 0.784, 1.000]], [0.395, [0.792, 0.792, 1.000]], [0.397, [0.792, 0.792, 1.000]], [0.399, [0.800, 0.800, 1.000]], [0.401, [0.800, 0.800, 1.000]], [0.403, [0.808, 0.808, 1.000]], [0.405, [0.808, 0.808, 1.000]], [0.407, [0.816, 0.816, 1.000]], [0.409, [0.816, 0.816, 1.000]], [0.411, [0.824, 0.824, 1.000]], [0.413, [0.824, 0.824, 1.000]], [0.415, [0.831, 0.831, 1.000]], [0.417, [0.831, 0.831, 1.000]], [0.419, [0.839, 0.839, 1.000]], [0.421, [0.839, 0.839, 1.000]], [0.423, [0.847, 0.847, 1.000]], [0.425, [0.847, 0.847, 1.000]], [0.427, [0.855, 0.855, 1.000]], [0.429, [0.855, 0.855, 1.000]], [0.431, [0.863, 0.863, 1.000]], [0.432, [0.863, 0.863, 1.000]], [0.434, [0.871, 0.871, 1.000]], [0.436, [0.871, 0.871, 1.000]], [0.438, [0.878, 0.878, 1.000]], [0.440, [0.878, 0.878, 1.000]], [0.442, [0.886, 0.886, 1.000]], [0.444, [0.886, 0.886, 1.000]], [0.446, [0.894, 0.894, 1.000]], [0.448, [0.894, 0.894, 1.000]], [0.450, [0.902, 0.902, 1.000]], [0.452, [0.902, 0.902, 1.000]], [0.454, [0.910, 0.910, 1.000]], [0.456, [0.910, 0.910, 1.000]], [0.458, [0.918, 0.918, 1.000]], [0.460, [0.918, 0.918, 1.000]], [0.462, [0.925, 0.925, 1.000]], [0.464, [0.925, 0.925, 1.000]], [0.466, [0.933, 0.933, 1.000]], [0.468, [0.933, 0.933, 1.000]], [0.470, [0.941, 0.941, 1.000]], [0.472, [0.941, 0.941, 1.000]], [0.474, [0.949, 0.949, 1.000]], [0.476, [0.949, 0.949, 1.000]], [0.477, [0.957, 0.957, 1.000]], [0.479, [0.957, 0.957, 1.000]], [0.481, [0.965, 0.965, 1.000]], [0.483, [0.965, 0.965, 1.000]], [0.485, [0.973, 0.973, 1.000]], [0.487, [0.973, 0.973, 1.000]], [0.489, [0.980, 0.980, 1.000]], [0.491, [0.980, 0.980, 1.000]], [0.493, [0.988, 0.988, 1.000]], [0.495, [0.988, 0.988, 1.000]], [0.497, [0.996, 0.996, 1.000]], [0.499, [0.996, 0.996, 1.000]], [0.501, [1.000, 0.996, 0.996]], [0.503, [1.000, 0.996, 0.996]], [0.505, [1.000, 0.988, 0.988]], [0.507, [1.000, 0.988, 0.988]], [0.509, [1.000, 0.980, 0.980]], [0.511, [1.000, 0.980, 0.980]], [0.513, [1.000, 0.973, 0.973]], [0.515, [1.000, 0.973, 0.973]], [0.517, [1.000, 0.965, 0.965]], [0.519, [1.000, 0.965, 0.965]], [0.521, [1.000, 0.957, 0.957]], [0.523, [1.000, 0.957, 0.957]], [0.524, [1.000, 0.949, 0.949]], [0.526, [1.000, 0.949, 0.949]], [0.528, [1.000, 0.941, 0.941]], [0.530, [1.000, 0.941, 0.941]], [0.532, [1.000, 0.933, 0.933]], [0.534, [1.000, 0.933, 0.933]], [0.536, [1.000, 0.925, 0.925]], [0.538, [1.000, 0.925, 0.925]], [0.540, [1.000, 0.918, 0.918]], [0.542, [1.000, 0.918, 0.918]], [0.544, [1.000, 0.910, 0.910]], [0.546, [1.000, 0.910, 0.910]], [0.548, [1.000, 0.902, 0.902]], [0.550, [1.000, 0.902, 0.902]], [0.552, [1.000, 0.894, 0.894]], [0.554, [1.000, 0.894, 0.894]], [0.556, [1.000, 0.886, 0.886]], [0.558, [1.000, 0.886, 0.886]], [0.560, [1.000, 0.878, 0.878]], [0.562, [1.000, 0.878, 0.878]], [0.564, [1.000, 0.871, 0.871]], [0.566, [1.000, 0.871, 0.871]], [0.568, [1.000, 0.863, 0.863]], [0.569, [1.000, 0.863, 0.863]], [0.571, [1.000, 0.855, 0.855]], [0.573, [1.000, 0.855, 0.855]], [0.575, [1.000, 0.847, 0.847]], [0.577, [1.000, 0.847, 0.847]], [0.579, [1.000, 0.839, 0.839]], [0.581, [1.000, 0.839, 0.839]], [0.583, [1.000, 0.831, 0.831]], [0.585, [1.000, 0.831, 0.831]], [0.587, [1.000, 0.824, 0.824]], [0.589, [1.000, 0.824, 0.824]], [0.591, [1.000, 0.816, 0.816]], [0.593, [1.000, 0.816, 0.816]], [0.595, [1.000, 0.808, 0.808]], [0.597, [1.000, 0.808, 0.808]], [0.599, [1.000, 0.800, 0.800]], [0.601, [1.000, 0.800, 0.800]], [0.603, [1.000, 0.792, 0.792]], [0.605, [1.000, 0.792, 0.792]], [0.607, [1.000, 0.784, 0.784]], [0.609, [1.000, 0.784, 0.784]], [0.611, [1.000, 0.776, 0.776]], [0.613, [1.000, 0.776, 0.776]], [0.614, [1.000, 0.769, 0.769]], [0.616, [1.000, 0.769, 0.769]], [0.618, [1.000, 0.761, 0.761]], [0.620, [1.000, 0.761, 0.761]], [0.622, [1.000, 0.753, 0.753]], [0.624, [1.000, 0.753, 0.753]], [0.626, [1.000, 0.745, 0.745]], [0.628, [1.000, 0.745, 0.745]], [0.630, [1.000, 0.737, 0.737]], [0.632, [1.000, 0.737, 0.737]], [0.634, [1.000, 0.729, 0.729]], [0.636, [1.000, 0.729, 0.729]], [0.638, [1.000, 0.722, 0.722]], [0.640, [1.000, 0.722, 0.722]], [0.642, [1.000, 0.714, 0.714]], [0.644, [1.000, 0.714, 0.714]], [0.646, [1.000, 0.706, 0.706]], [0.648, [1.000, 0.706, 0.706]], [0.650, [1.000, 0.698, 0.698]], [0.652, [1.000, 0.698, 0.698]], [0.654, [1.000, 0.690, 0.690]], [0.656, [1.000, 0.690, 0.690]], [0.658, [1.000, 0.682, 0.682]], [0.659, [1.000, 0.682, 0.682]], [0.661, [1.000, 0.675, 0.675]], [0.663, [1.000, 0.675, 0.675]], [0.665, [1.000, 0.667, 0.667]], [0.667, [1.000, 0.667, 0.667]], [0.669, [1.000, 0.659, 0.659]], [0.671, [1.000, 0.659, 0.659]], [0.673, [1.000, 0.651, 0.651]], [0.675, [1.000, 0.651, 0.651]], [0.677, [1.000, 0.643, 0.643]], [0.679, [1.000, 0.643, 0.643]], [0.681, [1.000, 0.635, 0.635]], [0.683, [1.000, 0.635, 0.635]], [0.685, [1.000, 0.627, 0.627]], [0.687, [1.000, 0.627, 0.627]], [0.689, [1.000, 0.620, 0.620]], [0.691, [1.000, 0.620, 0.620]], [0.693, [1.000, 0.612, 0.612]], [0.695, [1.000, 0.612, 0.612]], [0.697, [1.000, 0.604, 0.604]], [0.699, [1.000, 0.604, 0.604]], [0.701, [1.000, 0.596, 0.596]], [0.703, [1.000, 0.596, 0.596]], [0.705, [1.000, 0.588, 0.588]], [0.706, [1.000, 0.588, 0.588]], [0.708, [1.000, 0.580, 0.580]], [0.710, [1.000, 0.580, 0.580]], [0.712, [1.000, 0.573, 0.573]], [0.714, [1.000, 0.573, 0.573]], [0.716, [1.000, 0.565, 0.565]], [0.718, [1.000, 0.565, 0.565]], [0.720, [1.000, 0.557, 0.557]], [0.722, [1.000, 0.557, 0.557]], [0.724, [1.000, 0.549, 0.549]], [0.726, [1.000, 0.549, 0.549]], [0.728, [1.000, 0.541, 0.541]], [0.730, [1.000, 0.541, 0.541]], [0.732, [1.000, 0.533, 0.533]], [0.734, [1.000, 0.533, 0.533]], [0.736, [1.000, 0.525, 0.525]], [0.738, [1.000, 0.525, 0.525]], [0.740, [1.000, 0.518, 0.518]], [0.742, [1.000, 0.518, 0.518]], [0.744, [1.000, 0.510, 0.510]], [0.746, [1.000, 0.510, 0.510]], [0.748, [1.000, 0.502, 0.502]], [0.750, [1.000, 0.502, 0.502]], [0.751, [1.000, 0.494, 0.494]], [0.753, [1.000, 0.494, 0.494]], [0.755, [1.000, 0.486, 0.486]], [0.757, [1.000, 0.486, 0.486]], [0.759, [1.000, 0.478, 0.478]], [0.761, [1.000, 0.478, 0.478]], [0.763, [1.000, 0.471, 0.471]], [0.765, [1.000, 0.471, 0.471]], [0.767, [1.000, 0.463, 0.463]], [0.769, [1.000, 0.463, 0.463]], [0.771, [1.000, 0.455, 0.455]], [0.773, [1.000, 0.455, 0.455]], [0.775, [1.000, 0.447, 0.447]], [0.777, [1.000, 0.447, 0.447]], [0.779, [1.000, 0.439, 0.439]], [0.781, [1.000, 0.439, 0.439]], [0.783, [1.000, 0.431, 0.431]], [0.785, [1.000, 0.431, 0.431]], [0.787, [1.000, 0.424, 0.424]], [0.789, [1.000, 0.424, 0.424]], [0.791, [1.000, 0.416, 0.416]], [0.793, [1.000, 0.416, 0.416]], [0.795, [1.000, 0.408, 0.408]], [0.796, [1.000, 0.408, 0.408]], [0.798, [1.000, 0.400, 0.400]], [0.800, [1.000, 0.400, 0.400]], [0.802, [1.000, 0.392, 0.392]], [0.804, [1.000, 0.392, 0.392]], [0.806, [1.000, 0.384, 0.384]], [0.808, [1.000, 0.384, 0.384]], [0.810, [1.000, 0.376, 0.376]], [0.812, [1.000, 0.376, 0.376]], [0.814, [1.000, 0.369, 0.369]], [0.816, [1.000, 0.369, 0.369]], [0.818, [1.000, 0.361, 0.361]], [0.820, [1.000, 0.361, 0.361]], [0.822, [1.000, 0.353, 0.353]], [0.824, [1.000, 0.353, 0.353]], [0.826, [1.000, 0.345, 0.345]], [0.828, [1.000, 0.345, 0.345]], [0.830, [1.000, 0.337, 0.337]], [0.832, [1.000, 0.337, 0.337]], [0.834, [1.000, 0.329, 0.329]], [0.836, [1.000, 0.329, 0.329]], [0.838, [1.000, 0.322, 0.322]], [0.840, [1.000, 0.322, 0.322]], [0.841, [1.000, 0.314, 0.314]], [0.843, [1.000, 0.314, 0.314]], [0.845, [1.000, 0.306, 0.306]], [0.847, [1.000, 0.306, 0.306]], [0.849, [1.000, 0.298, 0.298]], [0.851, [1.000, 0.298, 0.298]], [0.853, [1.000, 0.290, 0.290]], [0.855, [1.000, 0.290, 0.290]], [0.857, [1.000, 0.282, 0.282]], [0.859, [1.000, 0.282, 0.282]], [0.861, [1.000, 0.275, 0.275]], [0.863, [1.000, 0.275, 0.275]], [0.865, [1.000, 0.267, 0.267]], [0.867, [1.000, 0.267, 0.267]], [0.869, [1.000, 0.259, 0.259]], [0.871, [1.000, 0.259, 0.259]], [0.873, [1.000, 0.251, 0.251]], [0.875, [1.000, 0.251, 0.251]], [0.877, [1.000, 0.243, 0.243]], [0.879, [1.000, 0.243, 0.243]], [0.881, [1.000, 0.235, 0.235]], [0.883, [1.000, 0.235, 0.235]], [0.885, [1.000, 0.227, 0.227]], [0.886, [1.000, 0.227, 0.227]], [0.888, [1.000, 0.220, 0.220]], [0.890, [1.000, 0.220, 0.220]], [0.892, [1.000, 0.212, 0.212]], [0.894, [1.000, 0.212, 0.212]], [0.896, [1.000, 0.204, 0.204]], [0.898, [1.000, 0.204, 0.204]], [0.900, [1.000, 0.196, 0.196]], [0.902, [1.000, 0.196, 0.196]], [0.904, [1.000, 0.188, 0.188]], [0.906, [1.000, 0.188, 0.188]], [0.908, [1.000, 0.180, 0.180]], [0.910, [1.000, 0.180, 0.180]], [0.912, [1.000, 0.173, 0.173]], [0.914, [1.000, 0.173, 0.173]], [0.916, [1.000, 0.165, 0.165]], [0.918, [1.000, 0.165, 0.165]], [0.920, [1.000, 0.157, 0.157]], [0.922, [1.000, 0.157, 0.157]], [0.924, [1.000, 0.149, 0.149]], [0.926, [1.000, 0.149, 0.149]], [0.928, [1.000, 0.141, 0.141]], [0.930, [1.000, 0.141, 0.141]], [0.932, [1.000, 0.133, 0.133]], [0.933, [1.000, 0.133, 0.133]], [0.935, [1.000, 0.125, 0.125]], [0.937, [1.000, 0.125, 0.125]], [0.939, [1.000, 0.118, 0.118]], [0.941, [1.000, 0.118, 0.118]], [0.943, [1.000, 0.110, 0.110]], [0.945, [1.000, 0.110, 0.110]], [0.947, [1.000, 0.102, 0.102]], [0.949, [1.000, 0.102, 0.102]], [0.951, [1.000, 0.094, 0.094]], [0.953, [1.000, 0.094, 0.094]], [0.955, [1.000, 0.086, 0.086]], [0.957, [1.000, 0.086, 0.086]], [0.959, [1.000, 0.078, 0.078]], [0.961, [1.000, 0.078, 0.078]], [0.963, [1.000, 0.071, 0.071]], [0.965, [1.000, 0.071, 0.071]], [0.967, [1.000, 0.063, 0.063]], [0.969, [1.000, 0.063, 0.063]], [0.971, [1.000, 0.055, 0.055]], [0.973, [1.000, 0.055, 0.055]], [0.975, [1.000, 0.047, 0.047]], [0.977, [1.000, 0.047, 0.047]], [0.978, [1.000, 0.039, 0.039]], [0.980, [1.000, 0.039, 0.039]], [0.982, [1.000, 0.031, 0.031]], [0.984, [1.000, 0.031, 0.031]], [0.986, [1.000, 0.024, 0.024]], [0.988, [1.000, 0.024, 0.024]], [0.990, [1.000, 0.016, 0.016]], [0.992, [1.000, 0.016, 0.016]], [0.994, [1.000, 0.008, 0.008]], [0.996, [1.000, 0.008, 0.008]], [0.998, [1.000, 0.000, 0.000]], [1.000, [1.000, 0.000, 0.000]]];
H.colormap_category_10 = function() {
    const colors = H.color_utils.color_cut; 
    let result  = colors("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf")
    return result
}
H.colormap_category_20 = function() {
    const colors = H.color_utils.color_cut; 
    let result  = colors("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5")
    return result
}
H.colormap_category_20b = function() {
    const colors = H.color_utils.color_cut; 
    let result  = colors("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6")
    return result
}
H.colormap_category_20c = function() {
    const colors = H.color_utils.color_cut; 
    let result  = colors("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9")
    return result
}
H.colormap_cdom = [[0.000,[0.18517171,0.05913349,0.24304267]],[0.004,[0.19008219,0.06057894,0.24651605]],[0.008,[0.19500160,0.06199021,0.24996805]],[0.012,[0.19993023,0.06336778,0.25339803]],[0.016,[0.20486910,0.06471124,0.25680549]],[0.020,[0.20982353,0.06601486,0.26019056]],[0.024,[0.21478769,0.06728631,0.26355148]],[0.027,[0.21976179,0.06852599,0.26688759]],[0.031,[0.22474604,0.06973430,0.27019819]],[0.035,[0.22974485,0.07090635,0.27348302]],[0.039,[0.23475530,0.07204628,0.27674091]],[0.043,[0.23977611,0.07315619,0.27997094]],[0.047,[0.24480741,0.07423648,0.28317235]],[0.051,[0.24984931,0.07528753,0.28634437]],[0.055,[0.25490478,0.07630599,0.28948629]],[0.059,[0.25997231,0.07729426,0.29259714]],[0.063,[0.26505035,0.07825478,0.29567600]],[0.067,[0.27013893,0.07918798,0.29872202]],[0.071,[0.27523807,0.08009433,0.30173433]],[0.075,[0.28034773,0.08097432,0.30471204]],[0.078,[0.28546798,0.08182832,0.30765422]],[0.082,[0.29060135,0.08265337,0.31055974]],[0.086,[0.29574478,0.08345400,0.31342780]],[0.090,[0.30089818,0.08423083,0.31625744]],[0.094,[0.30606141,0.08498453,0.31904770]],[0.098,[0.31123432,0.08571579,0.32179759]],[0.102,[0.31641672,0.08642536,0.32450613]],[0.106,[0.32160842,0.08711404,0.32717232]],[0.110,[0.32680918,0.08778266,0.32979513]],[0.114,[0.33201875,0.08843214,0.33237355]],[0.118,[0.33723686,0.08906342,0.33490656]],[0.122,[0.34246320,0.08967752,0.33739313]],[0.125,[0.34769744,0.09027551,0.33983225]],[0.129,[0.35293923,0.09085853,0.34222288]],[0.133,[0.35818819,0.09142777,0.34456401]],[0.137,[0.36344392,0.09198450,0.34685464]],[0.141,[0.36870599,0.09253005,0.34909377]],[0.145,[0.37397397,0.09306580,0.35128042]],[0.149,[0.37924738,0.09359321,0.35341364]],[0.153,[0.38452573,0.09411380,0.35549249]],[0.157,[0.38980852,0.09462915,0.35751606]],[0.161,[0.39509521,0.09514090,0.35948347]],[0.165,[0.40038526,0.09565075,0.36139387]],[0.169,[0.40567812,0.09616044,0.36324644]],[0.173,[0.41097320,0.09667179,0.36504042]],[0.176,[0.41626992,0.09718665,0.36677507]],[0.180,[0.42156767,0.09770691,0.36844971]],[0.184,[0.42686586,0.09823449,0.37006371]],[0.188,[0.43216478,0.09876992,0.37161577]],[0.192,[0.43746355,0.09931556,0.37310547]],[0.196,[0.44276088,0.09987450,0.37453284]],[0.200,[0.44805611,0.10044877,0.37589749]],[0.204,[0.45334861,0.10104040,0.37719908]],[0.208,[0.45863773,0.10165142,0.37843733]],[0.212,[0.46392333,0.10228310,0.37961155]],[0.216,[0.46920552,0.10293623,0.38072076]],[0.220,[0.47448238,0.10361485,0.38176614]],[0.224,[0.47975329,0.10432087,0.38274769]],[0.227,[0.48501765,0.10505620,0.38366550]],[0.231,[0.49027555,0.10582154,0.38451884]],[0.235,[0.49552659,0.10661841,0.38530760]],[0.239,[0.50076923,0.10745003,0.38603324]],[0.243,[0.50600291,0.10831803,0.38669608]],[0.247,[0.51122751,0.10922327,0.38729597]],[0.251,[0.51644309,0.11016633,0.38783247]],[0.255,[0.52164803,0.11115027,0.38830764]],[0.259,[0.52684188,0.11217633,0.38872207]],[0.263,[0.53202486,0.11324458,0.38907529]],[0.267,[0.53719631,0.11435643,0.38936827]],[0.271,[0.54235522,0.11551369,0.38960269]],[0.275,[0.54750131,0.11671701,0.38977915]],[0.278,[0.55263500,0.11796595,0.38989699]],[0.282,[0.55775491,0.11926261,0.38995887]],[0.286,[0.56286070,0.12060752,0.38996572]],[0.290,[0.56795278,0.12200003,0.38991698]],[0.294,[0.57303015,0.12344147,0.38981494]],[0.298,[0.57809238,0.12493225,0.38966089]],[0.302,[0.58313973,0.12647180,0.38945465]],[0.306,[0.58817152,0.12806077,0.38919810]],[0.310,[0.59318730,0.12969941,0.38889274]],[0.314,[0.59818726,0.13138711,0.38853858]],[0.318,[0.60317083,0.13312418,0.38813742]],[0.322,[0.60813763,0.13491065,0.38769077]],[0.325,[0.61308782,0.13674584,0.38719864]],[0.329,[0.61802083,0.13862993,0.38666300]],[0.333,[0.62293634,0.14056274,0.38608522]],[0.337,[0.62783454,0.14254354,0.38546523]],[0.341,[0.63271477,0.14457248,0.38480529]],[0.345,[0.63757687,0.14664919,0.38410635]],[0.349,[0.64242081,0.14877308,0.38336876]],[0.353,[0.64724605,0.15094418,0.38259458]],[0.357,[0.65205246,0.15316203,0.38178446]],[0.361,[0.65683983,0.15542627,0.38093931]],[0.365,[0.66160768,0.15773679,0.38006084]],[0.369,[0.66635592,0.16009315,0.37914944]],[0.373,[0.67108412,0.16249519,0.37820659]],[0.376,[0.67579188,0.16494277,0.37723366]],[0.380,[0.68047906,0.16743548,0.37623081]],[0.384,[0.68514508,0.16997338,0.37520008]],[0.388,[0.68978961,0.17255625,0.37414221]],[0.392,[0.69441228,0.17518398,0.37305808]],[0.396,[0.69901252,0.17785660,0.37194940]],[0.400,[0.70359001,0.18057398,0.37081657]],[0.404,[0.70814412,0.18333622,0.36966126]],[0.408,[0.71267433,0.18614338,0.36848468]],[0.412,[0.71718017,0.18899550,0.36728743]],[0.416,[0.72166090,0.19189279,0.36607151]],[0.420,[0.72611598,0.19483537,0.36483758]],[0.424,[0.73054471,0.19782348,0.36358718]],[0.427,[0.73494635,0.20085737,0.36232191]],[0.431,[0.73932024,0.20393732,0.36104238]],[0.435,[0.74366551,0.20706364,0.35975091]],[0.439,[0.74798139,0.21023669,0.35844838]],[0.443,[0.75226701,0.21345683,0.35713657]],[0.447,[0.75652144,0.21672446,0.35581731]],[0.451,[0.76074383,0.22004003,0.35449167]],[0.455,[0.76493312,0.22340394,0.35316213]],[0.459,[0.76908837,0.22681667,0.35183001]],[0.463,[0.77320850,0.23027866,0.35049752]],[0.467,[0.77729245,0.23379036,0.34916672]],[0.471,[0.78133913,0.23735228,0.34783945]],[0.475,[0.78534739,0.24096482,0.34651830]],[0.478,[0.78931609,0.24462845,0.34520528]],[0.482,[0.79324405,0.24834357,0.34390302]],[0.486,[0.79713009,0.25211056,0.34261402]],[0.490,[0.80097301,0.25592978,0.34134093]],[0.494,[0.80477161,0.25980154,0.34008638]],[0.498,[0.80852469,0.26372603,0.33885362]],[0.502,[0.81223105,0.26770354,0.33764514]],[0.506,[0.81588953,0.27173408,0.33646439]],[0.510,[0.81949900,0.27581774,0.33531442]],[0.514,[0.82305829,0.27995459,0.33419807]],[0.518,[0.82656645,0.28414414,0.33311978]],[0.522,[0.83002232,0.28838659,0.33208153]],[0.525,[0.83342508,0.29268122,0.33108793]],[0.529,[0.83677380,0.29702773,0.33014193]],[0.533,[0.84006752,0.30142586,0.32924624]],[0.537,[0.84330599,0.30587398,0.32840668]],[0.541,[0.84648807,0.31037235,0.32762406]],[0.545,[0.84961352,0.31491948,0.32690313]],[0.549,[0.85268212,0.31951405,0.32624774]],[0.553,[0.85569300,0.32415591,0.32565907]],[0.557,[0.85864675,0.32884252,0.32514279]],[0.561,[0.86154301,0.33357304,0.32470075]],[0.565,[0.86438132,0.33834687,0.32433433]],[0.569,[0.86716293,0.34316081,0.32404903]],[0.573,[0.86988775,0.34801394,0.32384604]],[0.576,[0.87255551,0.35290558,0.32372610]],[0.580,[0.87516740,0.35783305,0.32369276]],[0.584,[0.87772497,0.36279339,0.32374939]],[0.588,[0.88022743,0.36778691,0.32389464]],[0.592,[0.88267554,0.37281188,0.32412991]],[0.596,[0.88507136,0.37786501,0.32445816]],[0.600,[0.88741638,0.38294391,0.32488078]],[0.604,[0.88971012,0.38804876,0.32539617]],[0.608,[0.89195365,0.39317783,0.32600483]],[0.612,[0.89414811,0.39832940,0.32670706]],[0.616,[0.89629551,0.40350084,0.32750381]],[0.620,[0.89839827,0.40868922,0.32839594]],[0.624,[0.90045568,0.41389524,0.32938102]],[0.627,[0.90246898,0.41911741,0.33045857]],[0.631,[0.90443943,0.42435429,0.33162793]],[0.635,[0.90636827,0.42960453,0.33288831]],[0.639,[0.90825675,0.43486684,0.33423877]],[0.643,[0.91010609,0.44014000,0.33567825]],[0.647,[0.91191750,0.44542290,0.33720557]],[0.651,[0.91369216,0.45071447,0.33881946]],[0.655,[0.91543120,0.45601377,0.34051856]],[0.659,[0.91713572,0.46131990,0.34230146]],[0.663,[0.91880676,0.46663207,0.34416665]],[0.667,[0.92044532,0.47194958,0.34611260]],[0.671,[0.92205233,0.47727179,0.34813776]],[0.675,[0.92362867,0.48259816,0.35024054]],[0.678,[0.92517515,0.48792820,0.35241933]],[0.682,[0.92669252,0.49326154,0.35467254]],[0.686,[0.92818145,0.49859784,0.35699858]],[0.690,[0.92964257,0.50393685,0.35939586]],[0.694,[0.93107641,0.50927839,0.36186284]],[0.698,[0.93248345,0.51462233,0.36439800]],[0.702,[0.93386574,0.51996726,0.36700002]],[0.706,[0.93522801,0.52530964,0.36966771]],[0.710,[0.93656551,0.53065374,0.37239898]],[0.714,[0.93787845,0.53599965,0.37519244]],[0.718,[0.93916701,0.54134751,0.37804676]],[0.722,[0.94043129,0.54669749,0.38096067]],[0.725,[0.94167798,0.55204474,0.38393283]],[0.729,[0.94290654,0.55739007,0.38696177]],[0.733,[0.94411192,0.56273764,0.39004635]],[0.737,[0.94529398,0.56808778,0.39318551]],[0.741,[0.94645531,0.57343881,0.39637803]],[0.745,[0.94760645,0.57878343,0.39962183]],[0.749,[0.94873480,0.58413113,0.40291682]],[0.753,[0.94984002,0.58948232,0.40626218]],[0.757,[0.95092987,0.59483180,0.40965603]],[0.761,[0.95200784,0.60017752,0.41309682]],[0.765,[0.95306267,0.60552755,0.41658520]],[0.769,[0.95409505,0.61088157,0.42012037]],[0.773,[0.95512504,0.61622639,0.42369803]],[0.776,[0.95613153,0.62157650,0.42732096]],[0.780,[0.95711389,0.62693242,0.43098874]],[0.784,[0.95809626,0.63227868,0.43469575]],[0.788,[0.95905559,0.63763057,0.43844592]],[0.792,[0.95999158,0.64298842,0.44223886]],[0.796,[0.96092933,0.64833660,0.44606817]],[0.800,[0.96184190,0.65369237,0.44993943]],[0.804,[0.96273830,0.65905026,0.45385005]],[0.808,[0.96363020,0.66440340,0.45779644]],[0.812,[0.96449566,0.66976540,0.46178377]],[0.816,[0.96535776,0.67512254,0.46580546]],[0.820,[0.96620304,0.68048317,0.46986463]],[0.824,[0.96702730,0.68584991,0.47396210]],[0.827,[0.96785315,0.69120980,0.47809096]],[0.831,[0.96865040,0.69658060,0.48225963]],[0.835,[0.96944845,0.70194560,0.48645901]],[0.839,[0.97022616,0.70731710,0.49069515]],[0.843,[0.97099121,0.71269094,0.49496543]],[0.847,[0.97174984,0.71806387,0.49926753]],[0.851,[0.97248364,0.72344627,0.50360719]],[0.855,[0.97322354,0.72882140,0.50797400]],[0.859,[0.97393124,0.73421027,0.51238049]],[0.863,[0.97464928,0.73959020,0.51681211]],[0.867,[0.97533754,0.74498280,0.52128239]],[0.871,[0.97602903,0.75037081,0.52577975]],[0.875,[0.97669802,0.75576791,0.53031308]],[0.878,[0.97736473,0.76116379,0.53487508]],[0.882,[0.97801457,0.76656615,0.53947089]],[0.886,[0.97865835,0.77196968,0.54409650]],[0.890,[0.97928916,0.77737806,0.54875439]],[0.894,[0.97991190,0.78278902,0.55344266]],[0.898,[0.98052378,0.78820414,0.55816232]],[0.902,[0.98112747,0.79362230,0.56291231]],[0.906,[0.98172055,0.79904486,0.56769355]],[0.910,[0.98230724,0.80446999,0.57250437]],[0.914,[0.98288171,0.80990066,0.57734705]],[0.918,[0.98345358,0.81533250,0.58221775]],[0.922,[0.98400967,0.82077189,0.58712176]],[0.925,[0.98456902,0.82621018,0.59205135]],[0.929,[0.98510705,0.83165888,0.59701657]],[0.933,[0.98565630,0.83710333,0.60200398]],[0.937,[0.98617668,0.84256188,0.60703023]],[0.941,[0.98671839,0.84801220,0.61207428]],[0.945,[0.98722803,0.85347830,0.61715857]],[0.949,[0.98775850,0.85893700,0.62226060]],[0.953,[0.98826470,0.86440831,0.62739957]],[0.957,[0.98878008,0.86987788,0.63256100]],[0.961,[0.98928575,0.87535412,0.63775296]],[0.965,[0.98978682,0.88083501,0.64297311]],[0.969,[0.99029495,0.88631589,0.64821615]],[0.973,[0.99078259,0.89180853,0.65349411]],[0.976,[0.99129627,0.89729384,0.65878604]],[0.980,[0.99178436,0.90279340,0.66411480]],[0.984,[0.99229377,0.90828822,0.66945902]],[0.988,[0.99279222,0.91379173,0.67483294]],[0.992,[0.99329154,0.91929937,0.68023089]],[0.996,[0.99380347,0.92480678,0.68564709]],[1.000,[0.99429361,0.93032780,0.69109690]]]
H.colormap_chlorophyll = [[0.000,[0.06885643,0.14208946,0.07903363]],[0.004,[0.07022733,0.14548100,0.08182252]],[0.008,[0.07158041,0.14886551,0.08459735]],[0.012,[0.07289843,0.15224692,0.08735815]],[0.016,[0.07419261,0.15562329,0.09010536]],[0.020,[0.07545752,0.15899606,0.09283910]],[0.024,[0.07669294,0.16236561,0.09555954]],[0.027,[0.07790440,0.16573113,0.09826708]],[0.031,[0.07908113,0.16909506,0.10096151]],[0.035,[0.08023865,0.17245461,0.10364358]],[0.039,[0.08135670,0.17581401,0.10631260]],[0.043,[0.08245885,0.17916893,0.10896978]],[0.047,[0.08351901,0.18252464,0.11161396]],[0.051,[0.08456274,0.18587646,0.11424660]],[0.055,[0.08556724,0.18922894,0.11686652]],[0.059,[0.08655243,0.19257854,0.11947500]],[0.063,[0.08750046,0.19592877,0.12207102]],[0.067,[0.08842694,0.19927694,0.12465567]],[0.071,[0.08931759,0.20262583,0.12722804]],[0.075,[0.09018515,0.20597330,0.12978910]],[0.078,[0.09101742,0.20932169,0.13233799]],[0.082,[0.09182583,0.21266913,0.13487564]],[0.086,[0.09259864,0.21601782,0.13740115]],[0.090,[0.09334765,0.21936582,0.13991552]],[0.094,[0.09405985,0.22271554,0.14241766]],[0.098,[0.09474918,0.22606468,0.14490881]],[0.102,[0.09539954,0.22941612,0.14738752]],[0.106,[0.09602890,0.23276689,0.14985548]],[0.110,[0.09661612,0.23612068,0.15231064]],[0.114,[0.09718523,0.23947356,0.15475537]],[0.118,[0.09770794,0.24283030,0.15718680]],[0.122,[0.09821309,0.24618625,0.15960787]],[0.125,[0.09867327,0.24954595,0.16201567]],[0.129,[0.09911166,0.25290573,0.16441267]],[0.133,[0.09951033,0.25626852,0.16679686]],[0.137,[0.09988043,0.25963262,0.16916945]],[0.141,[0.10021730,0.26299882,0.17152986]],[0.145,[0.10051752,0.26636770,0.17387765]],[0.149,[0.10079233,0.26973760,0.17621409]],[0.153,[0.10102103,0.27311168,0.17853665]],[0.157,[0.10122817,0.27648631,0.18084823]],[0.161,[0.10138903,0.27986520,0.18314573]],[0.165,[0.10152195,0.28324567,0.18543137]],[0.169,[0.10161961,0.28662882,0.18770415]],[0.173,[0.10167654,0.29001546,0.18996328]],[0.176,[0.10170933,0.29340326,0.19221085]],[0.180,[0.10169001,0.29679616,0.19444309]],[0.184,[0.10164390,0.30019064,0.19666326]],[0.188,[0.10156046,0.30358817,0.19886988]],[0.192,[0.10143361,0.30698958,0.20106200]],[0.196,[0.10127976,0.31039267,0.20324181]],[0.200,[0.10107660,0.31380039,0.20540608]],[0.204,[0.10083896,0.31721078,0.20755678]],[0.208,[0.10057112,0.32062332,0.20969446]],[0.212,[0.10024781,0.32404118,0.21181533]],[0.216,[0.09989443,0.32746115,0.21392297]],[0.220,[0.09950470,0.33088402,0.21601636]],[0.224,[0.09906254,0.33431170,0.21809300]],[0.227,[0.09858840,0.33774172,0.22015580]],[0.231,[0.09807546,0.34117488,0.22220362]],[0.235,[0.09750943,0.34461278,0.22423417]],[0.239,[0.09690948,0.34805320,0.22625023]],[0.243,[0.09627239,0.35149649,0.22825119]],[0.247,[0.09557752,0.35494489,0.23023372]],[0.251,[0.09484678,0.35839595,0.23220107]],[0.255,[0.09407947,0.36184972,0.23415298]],[0.259,[0.09325665,0.36530817,0.23608636]],[0.263,[0.09239033,0.36876996,0.23800293]],[0.267,[0.09148554,0.37223456,0.23990332]],[0.271,[0.09053798,0.37570238,0.24178670]],[0.275,[0.08953167,0.37917490,0.24365037]],[0.278,[0.08848513,0.38265026,0.24549710]],[0.282,[0.08739776,0.38612850,0.24732662]],[0.286,[0.08626466,0.38961004,0.24913796]],[0.290,[0.08507286,0.39309597,0.25092886]],[0.294,[0.08383877,0.39658475,0.25270175]],[0.298,[0.08256190,0.40007639,0.25445635]],[0.302,[0.08124183,0.40357090,0.25619236]],[0.306,[0.07986463,0.40706939,0.25790734]],[0.310,[0.07843839,0.41057109,0.25960234]],[0.314,[0.07696833,0.41407555,0.26127794]],[0.318,[0.07545435,0.41758275,0.26293384]],[0.322,[0.07389642,0.42109266,0.26456976]],[0.325,[0.07228966,0.42460561,0.26618462]],[0.329,[0.07062863,0.42812193,0.26777721]],[0.333,[0.06892492,0.43164076,0.26934902]],[0.337,[0.06717918,0.43516204,0.27089974]],[0.341,[0.06539233,0.43868571,0.27242909]],[0.345,[0.06356557,0.44221171,0.27393677]],[0.349,[0.06170041,0.44573995,0.27542249]],[0.353,[0.05979877,0.44927035,0.27688596]],[0.357,[0.05785702,0.45280318,0.27832599]],[0.361,[0.05588066,0.45633814,0.27974269]],[0.365,[0.05387746,0.45987489,0.28113643]],[0.369,[0.05185174,0.46341330,0.28250695]],[0.373,[0.04980869,0.46695324,0.28385397]],[0.376,[0.04775453,0.47049459,0.28517723]],[0.380,[0.04569662,0.47403719,0.28647649]],[0.384,[0.04364369,0.47758089,0.28775151]],[0.388,[0.04160606,0.48112551,0.28900203]],[0.392,[0.03958670,0.48467089,0.29022786]],[0.396,[0.03763814,0.48821682,0.29142876]],[0.400,[0.03580155,0.49176311,0.29260454]],[0.404,[0.03408899,0.49530953,0.29375502]],[0.408,[0.03251323,0.49885586,0.29488003]],[0.412,[0.03108771,0.50240186,0.29597942]],[0.416,[0.02982666,0.50594726,0.29705307]],[0.420,[0.02874508,0.50949179,0.29810087]],[0.424,[0.02785177,0.51303546,0.29912154]],[0.427,[0.02716441,0.51657792,0.30011510]],[0.431,[0.02670582,0.52011863,0.30108235]],[0.435,[0.02649479,0.52365722,0.30202332]],[0.439,[0.02655111,0.52719334,0.30293807]],[0.443,[0.02689570,0.53072659,0.30382669]],[0.447,[0.02754542,0.53425678,0.30468824]],[0.451,[0.02851433,0.53778386,0.30552072]],[0.455,[0.02984163,0.54130675,0.30632735]],[0.459,[0.03155357,0.54482496,0.30710846]],[0.463,[0.03367174,0.54833822,0.30786290]],[0.467,[0.03621581,0.55184641,0.30858828]],[0.471,[0.03923368,0.55534819,0.30928930]],[0.475,[0.04267874,0.55884313,0.30996532]],[0.478,[0.04642777,0.56233118,0.31061247]],[0.482,[0.05049037,0.56581074,0.31123743]],[0.486,[0.05483677,0.56928169,0.31183596]],[0.490,[0.05945722,0.57274288,0.31241135]],[0.494,[0.06433628,0.57619346,0.31296410]],[0.498,[0.06946030,0.57963256,0.31349439]],[0.502,[0.07481987,0.58305904,0.31400453]],[0.506,[0.08040588,0.58647176,0.31449636]],[0.510,[0.08620977,0.58986967,0.31496950]],[0.514,[0.09222724,0.59325117,0.31543058]],[0.518,[0.09845230,0.59661516,0.31587743]],[0.522,[0.10488194,0.59995997,0.31631578]],[0.525,[0.11151261,0.60328396,0.31675059]],[0.529,[0.11834151,0.60658549,0.31718585]],[0.533,[0.12536778,0.60986280,0.31762468]],[0.537,[0.13258816,0.61311399,0.31807501]],[0.541,[0.13999895,0.61633720,0.31854464]],[0.545,[0.14759587,0.61953055,0.31904185]],[0.549,[0.15537304,0.62269226,0.31957617]],[0.553,[0.16332236,0.62582066,0.32015839]],[0.557,[0.17143307,0.62891434,0.32080039]],[0.561,[0.17969137,0.63197223,0.32151494]],[0.565,[0.18808025,0.63499369,0.32231537]],[0.569,[0.19658051,0.63797853,0.32321469]],[0.573,[0.20516717,0.64092740,0.32422681]],[0.576,[0.21381461,0.64384147,0.32536378]],[0.580,[0.22249597,0.64672254,0.32663605]],[0.584,[0.23118418,0.64957297,0.32805203]],[0.588,[0.23985293,0.65239558,0.32961779]],[0.592,[0.24847602,0.65519373,0.33133728]],[0.596,[0.25703342,0.65797057,0.33321113]],[0.600,[0.26550717,0.66072943,0.33523810]],[0.604,[0.27388290,0.66347352,0.33741504]],[0.608,[0.28214978,0.66620584,0.33973735]],[0.612,[0.29030037,0.66892916,0.34219931]],[0.616,[0.29833024,0.67164589,0.34479452]],[0.620,[0.30623756,0.67435818,0.34751622]],[0.624,[0.31401727,0.67706862,0.35035755]],[0.627,[0.32167446,0.67977832,0.35331149]],[0.631,[0.32921313,0.68248841,0.35637146]],[0.635,[0.33663762,0.68519990,0.35953132]],[0.639,[0.34394207,0.68791541,0.36278437]],[0.643,[0.35114051,0.69063416,0.36612568]],[0.647,[0.35823533,0.69335721,0.36954994]],[0.651,[0.36522563,0.69608614,0.37305153]],[0.655,[0.37212492,0.69881984,0.37662736]],[0.659,[0.37892642,0.70156084,0.38027132]],[0.663,[0.38564530,0.70430747,0.38398168]],[0.667,[0.39227735,0.70706166,0.38775317]],[0.671,[0.39883103,0.70982284,0.39158356]],[0.675,[0.40531204,0.71259083,0.39547048]],[0.678,[0.41171522,0.71536770,0.39940867]],[0.682,[0.41805337,0.71815166,0.40339835]],[0.686,[0.42432867,0.72094309,0.40743704]],[0.690,[0.43053587,0.72374398,0.41151964]],[0.694,[0.43668612,0.72655264,0.41564705]],[0.698,[0.44278167,0.72936931,0.41981738]],[0.702,[0.44882469,0.73219416,0.42402884]],[0.706,[0.45481188,0.73502867,0.42827737]],[0.710,[0.46075114,0.73787164,0.43256386]],[0.714,[0.46664458,0.74072315,0.43688699]],[0.718,[0.47249405,0.74358334,0.44124545]],[0.722,[0.47830134,0.74645233,0.44563802]],[0.725,[0.48406816,0.74933022,0.45006358]],[0.729,[0.48979527,0.75221736,0.45452056]],[0.733,[0.49548385,0.75511394,0.45900769]],[0.737,[0.50113714,0.75801961,0.46352502]],[0.741,[0.50675657,0.76093444,0.46807172]],[0.745,[0.51234353,0.76385852,0.47264701]],[0.749,[0.51789934,0.76679191,0.47725017]],[0.753,[0.52342527,0.76973468,0.48188052]],[0.757,[0.52892256,0.77268689,0.48653744]],[0.761,[0.53439237,0.77564860,0.49122035]],[0.765,[0.53983582,0.77861987,0.49592870]],[0.769,[0.54525401,0.78160076,0.50066200]],[0.773,[0.55064796,0.78459132,0.50541978]],[0.776,[0.55601867,0.78759161,0.51020160]],[0.780,[0.56136709,0.79060167,0.51500705]],[0.784,[0.56669416,0.79362156,0.51983577]],[0.788,[0.57200073,0.79665133,0.52468740]],[0.792,[0.57728767,0.79969103,0.52956161]],[0.796,[0.58255560,0.80274077,0.53445795]],[0.800,[0.58780400,0.80580103,0.53937491]],[0.804,[0.59303502,0.80887141,0.54431345]],[0.808,[0.59824938,0.81195197,0.54927334]],[0.812,[0.60344779,0.81504274,0.55425434]],[0.816,[0.60863092,0.81814380,0.55925625]],[0.820,[0.61379944,0.82125518,0.56427887]],[0.824,[0.61895395,0.82437694,0.56932201]],[0.827,[0.62409506,0.82750913,0.57438551]],[0.831,[0.62922216,0.83065222,0.57946790]],[0.835,[0.63433574,0.83380631,0.58456889]],[0.839,[0.63943758,0.83697102,0.58968966]],[0.843,[0.64452821,0.84014641,0.59483008]],[0.847,[0.64960814,0.84333252,0.59999004]],[0.851,[0.65467785,0.84652942,0.60516941]],[0.855,[0.65973664,0.84973760,0.61036667]],[0.859,[0.66478454,0.85295730,0.61558114]],[0.863,[0.66982361,0.85618797,0.62081462]],[0.867,[0.67485427,0.85942969,0.62606703]],[0.871,[0.67987695,0.86268250,0.63133830]],[0.875,[0.68489103,0.86594688,0.63662701]],[0.878,[0.68989598,0.86922324,0.64193178]],[0.882,[0.69489414,0.87251091,0.64725509]],[0.886,[0.69988588,0.87580994,0.65259689]],[0.890,[0.70487156,0.87912041,0.65795710]],[0.894,[0.70984902,0.88244339,0.66333210]],[0.898,[0.71482059,0.88577817,0.66872453]],[0.902,[0.71978715,0.88912459,0.67413514]],[0.906,[0.72474903,0.89248272,0.67956388]],[0.910,[0.72970443,0.89585351,0.68500748]],[0.914,[0.73465479,0.89923659,0.69046752]],[0.918,[0.73960143,0.90263159,0.69594546]],[0.922,[0.74454464,0.90603859,0.70144129]],[0.925,[0.74948217,0.90945876,0.70695082]],[0.929,[0.75441627,0.91289135,0.71247711]],[0.933,[0.75934783,0.91633616,0.71802108]],[0.937,[0.76427661,0.91979348,0.72358186]],[0.941,[0.76920074,0.92326438,0.72915567]],[0.945,[0.77412316,0.92674772,0.73474699]],[0.949,[0.77904414,0.93024359,0.74035579]],[0.953,[0.78396177,0.93375306,0.74597816]],[0.957,[0.78887747,0.93727567,0.75161605]],[0.961,[0.79379251,0.94081106,0.75727124]],[0.965,[0.79870604,0.94435980,0.76294165]],[0.969,[0.80361734,0.94792244,0.76862535]],[0.973,[0.80852873,0.95149810,0.77432618]],[0.976,[0.81344004,0.95508703,0.78004330]],[0.980,[0.81834917,0.95869047,0.78577205]],[0.984,[0.82325913,0.96230716,0.79151775]],[0.988,[0.82817006,0.96593722,0.79728024]],[0.992,[0.83307920,0.96958222,0.80305326]],[0.996,[0.83798987,0.97324073,0.80884306]],[1.000,[0.84290226,0.97691284,0.81464957]]]
H.colormap_cividis2 = [[0.000,[0.00000000,0.13511200,0.30475100]],[0.004,[0.00000000,0.13806800,0.31110500]],[0.008,[0.00000000,0.14101300,0.31757900]],[0.012,[0.00000000,0.14395100,0.32398200]],[0.016,[0.00000000,0.14687700,0.33047900]],[0.020,[0.00000000,0.14979100,0.33706500]],[0.024,[0.00000000,0.15267300,0.34370400]],[0.027,[0.00000000,0.15537700,0.35050000]],[0.031,[0.00000000,0.15793200,0.35752100]],[0.035,[0.00000000,0.16049500,0.36453400]],[0.039,[0.00000000,0.16305800,0.37160800]],[0.043,[0.00000000,0.16562100,0.37876900]],[0.047,[0.00000000,0.16820400,0.38590200]],[0.051,[0.00000000,0.17080000,0.39310000]],[0.055,[0.00000000,0.17342000,0.40035300]],[0.059,[0.00000000,0.17608200,0.40757700]],[0.063,[0.00000000,0.17880200,0.41476400]],[0.067,[0.00000000,0.18161000,0.42185900]],[0.071,[0.00000000,0.18455000,0.42880200]],[0.075,[0.00000000,0.18691500,0.43553200]],[0.078,[0.00000000,0.18876900,0.43956300]],[0.082,[0.00000000,0.19095000,0.44108500]],[0.086,[0.00000000,0.19336600,0.44156100]],[0.090,[0.00360200,0.19591100,0.44156400]],[0.094,[0.01785200,0.19852800,0.44124800]],[0.098,[0.03211000,0.20119900,0.44078500]],[0.102,[0.04620500,0.20390300,0.44019600]],[0.106,[0.05837800,0.20662900,0.43953100]],[0.110,[0.06896800,0.20937200,0.43886300]],[0.114,[0.07862400,0.21212200,0.43810500]],[0.118,[0.08746500,0.21487900,0.43734200]],[0.122,[0.09564500,0.21764300,0.43659300]],[0.125,[0.10340100,0.22040600,0.43579000]],[0.129,[0.11065800,0.22317000,0.43506700]],[0.133,[0.11761200,0.22593500,0.43430800]],[0.137,[0.12429100,0.22869700,0.43354700]],[0.141,[0.13066900,0.23145800,0.43284000]],[0.145,[0.13683000,0.23421600,0.43214800]],[0.149,[0.14285200,0.23697200,0.43140400]],[0.153,[0.14863800,0.23972400,0.43075200]],[0.157,[0.15426100,0.24247500,0.43012000]],[0.161,[0.15973300,0.24522100,0.42952800]],[0.165,[0.16511300,0.24796500,0.42890800]],[0.169,[0.17036200,0.25070700,0.42832500]],[0.173,[0.17549000,0.25344400,0.42779000]],[0.176,[0.18050300,0.25618000,0.42729900]],[0.180,[0.18545300,0.25891400,0.42678800]],[0.184,[0.19030300,0.26164400,0.42632900]],[0.188,[0.19505700,0.26437200,0.42592400]],[0.192,[0.19976400,0.26709900,0.42549700]],[0.196,[0.20438500,0.26982300,0.42512600]],[0.200,[0.20892600,0.27254600,0.42480900]],[0.204,[0.21343100,0.27526600,0.42448000]],[0.208,[0.21786300,0.27798500,0.42420600]],[0.212,[0.22226400,0.28070200,0.42391400]],[0.216,[0.22659800,0.28341900,0.42367800]],[0.220,[0.23087100,0.28613400,0.42349800]],[0.224,[0.23512000,0.28884800,0.42330400]],[0.227,[0.23931200,0.29156200,0.42316700]],[0.231,[0.24348500,0.29427400,0.42301400]],[0.235,[0.24760500,0.29698600,0.42291700]],[0.239,[0.25167500,0.29969800,0.42287300]],[0.243,[0.25573100,0.30240900,0.42281400]],[0.247,[0.25974000,0.30512000,0.42281000]],[0.251,[0.26373800,0.30783100,0.42278900]],[0.255,[0.26769300,0.31054200,0.42282100]],[0.259,[0.27163900,0.31325300,0.42283700]],[0.263,[0.27551300,0.31596500,0.42297900]],[0.267,[0.27941100,0.31867700,0.42303100]],[0.271,[0.28324000,0.32139000,0.42321100]],[0.275,[0.28706500,0.32410300,0.42337300]],[0.278,[0.29088400,0.32681600,0.42351700]],[0.282,[0.29466900,0.32953100,0.42371600]],[0.286,[0.29842100,0.33224700,0.42397300]],[0.290,[0.30216900,0.33496300,0.42421300]],[0.294,[0.30588600,0.33768100,0.42451200]],[0.298,[0.30960100,0.34039900,0.42479000]],[0.302,[0.31328700,0.34312000,0.42512000]],[0.306,[0.31694100,0.34584200,0.42551200]],[0.310,[0.32059500,0.34856500,0.42588900]],[0.314,[0.32425000,0.35128900,0.42625000]],[0.318,[0.32787500,0.35401600,0.42667000]],[0.322,[0.33147400,0.35674400,0.42714400]],[0.325,[0.33507300,0.35947400,0.42760500]],[0.329,[0.33867300,0.36220600,0.42805300]],[0.333,[0.34224600,0.36493900,0.42855900]],[0.337,[0.34579300,0.36767600,0.42912700]],[0.341,[0.34934100,0.37041400,0.42968500]],[0.345,[0.35289200,0.37315300,0.43022600]],[0.349,[0.35641800,0.37589600,0.43082300]],[0.353,[0.35991600,0.37864100,0.43150100]],[0.357,[0.36344600,0.38138800,0.43207500]],[0.361,[0.36692300,0.38413900,0.43279600]],[0.365,[0.37043000,0.38689000,0.43342800]],[0.369,[0.37388400,0.38964600,0.43420900]],[0.373,[0.37737100,0.39240400,0.43489000]],[0.376,[0.38083000,0.39516400,0.43565300]],[0.380,[0.38426800,0.39792800,0.43647500]],[0.384,[0.38770500,0.40069400,0.43730500]],[0.388,[0.39115100,0.40346400,0.43809600]],[0.392,[0.39456800,0.40623600,0.43898600]],[0.396,[0.39799100,0.40901100,0.43984800]],[0.400,[0.40141800,0.41179000,0.44070800]],[0.404,[0.40482000,0.41457200,0.44164200]],[0.408,[0.40822600,0.41735700,0.44257000]],[0.412,[0.41160700,0.42014500,0.44357700]],[0.416,[0.41499200,0.42293700,0.44457800]],[0.420,[0.41838300,0.42573300,0.44556000]],[0.424,[0.42174800,0.42853100,0.44664000]],[0.427,[0.42512000,0.43133400,0.44769200]],[0.431,[0.42846200,0.43414000,0.44886400]],[0.435,[0.43181700,0.43695000,0.44998200]],[0.439,[0.43516800,0.43976300,0.45113400]],[0.443,[0.43850400,0.44258000,0.45234100]],[0.447,[0.44181000,0.44540200,0.45365900]],[0.451,[0.44514800,0.44822600,0.45488500]],[0.455,[0.44844700,0.45105300,0.45626400]],[0.459,[0.45175900,0.45388700,0.45758200]],[0.463,[0.45507200,0.45671800,0.45897600]],[0.467,[0.45836600,0.45955200,0.46045700]],[0.471,[0.46161600,0.46240500,0.46196900]],[0.475,[0.46494700,0.46524100,0.46339500]],[0.478,[0.46825400,0.46808300,0.46490800]],[0.482,[0.47150100,0.47096000,0.46635700]],[0.486,[0.47481200,0.47383200,0.46768100]],[0.490,[0.47818600,0.47669900,0.46884500]],[0.494,[0.48162200,0.47957300,0.46976700]],[0.498,[0.48514100,0.48245100,0.47038400]],[0.502,[0.48869700,0.48531800,0.47100800]],[0.506,[0.49227800,0.48819800,0.47145300]],[0.510,[0.49591300,0.49107600,0.47175100]],[0.514,[0.49955200,0.49396000,0.47203200]],[0.518,[0.50318500,0.49685100,0.47230500]],[0.522,[0.50686600,0.49974300,0.47243200]],[0.525,[0.51054000,0.50264300,0.47255000]],[0.529,[0.51422600,0.50554600,0.47264000]],[0.533,[0.51792000,0.50845400,0.47270700]],[0.537,[0.52164300,0.51136700,0.47263900]],[0.541,[0.52534800,0.51428500,0.47266000]],[0.545,[0.52908600,0.51720700,0.47254300]],[0.549,[0.53282900,0.52013500,0.47240100]],[0.553,[0.53655300,0.52306700,0.47235200]],[0.557,[0.54030700,0.52600500,0.47216300]],[0.561,[0.54406900,0.52894800,0.47194700]],[0.565,[0.54784000,0.53189500,0.47170400]],[0.569,[0.55161200,0.53484900,0.47143900]],[0.573,[0.55539300,0.53780700,0.47114700]],[0.576,[0.55918100,0.54077100,0.47082900]],[0.580,[0.56297200,0.54374100,0.47048800]],[0.584,[0.56680200,0.54671500,0.46998800]],[0.588,[0.57060700,0.54969500,0.46959300]],[0.592,[0.57441700,0.55268200,0.46917200]],[0.596,[0.57823600,0.55567300,0.46872400]],[0.600,[0.58208700,0.55867000,0.46811800]],[0.604,[0.58591600,0.56167400,0.46761800]],[0.608,[0.58975300,0.56468200,0.46709000]],[0.612,[0.59362200,0.56769700,0.46640100]],[0.616,[0.59746900,0.57071800,0.46582100]],[0.620,[0.60135400,0.57374300,0.46507400]],[0.624,[0.60521100,0.57677700,0.46444100]],[0.627,[0.60910500,0.57981600,0.46363800]],[0.631,[0.61297700,0.58286100,0.46295000]],[0.635,[0.61685200,0.58591300,0.46223700]],[0.639,[0.62076500,0.58897000,0.46135100]],[0.643,[0.62465400,0.59203400,0.46058300]],[0.647,[0.62857600,0.59510400,0.45964100]],[0.651,[0.63250600,0.59818000,0.45866800]],[0.655,[0.63641200,0.60126400,0.45781800]],[0.659,[0.64035200,0.60435400,0.45679100]],[0.663,[0.64427000,0.60745000,0.45588600]],[0.667,[0.64822200,0.61055300,0.45480100]],[0.671,[0.65217800,0.61366400,0.45368900]],[0.675,[0.65611400,0.61678000,0.45270200]],[0.678,[0.66008200,0.61990400,0.45153400]],[0.682,[0.66405500,0.62303400,0.45033800]],[0.686,[0.66800800,0.62617100,0.44927000]],[0.690,[0.67199100,0.62931600,0.44801800]],[0.694,[0.67598100,0.63246800,0.44673600]],[0.698,[0.67997900,0.63562600,0.44542400]],[0.702,[0.68395000,0.63879300,0.44425100]],[0.706,[0.68795700,0.64196600,0.44288600]],[0.710,[0.69197100,0.64514500,0.44149100]],[0.714,[0.69598500,0.64833400,0.44007200]],[0.718,[0.70000800,0.65152900,0.43862400]],[0.722,[0.70403700,0.65473100,0.43714700]],[0.725,[0.70806700,0.65794200,0.43564700]],[0.729,[0.71210500,0.66116000,0.43411700]],[0.733,[0.71617700,0.66438400,0.43238600]],[0.737,[0.72022200,0.66761800,0.43080500]],[0.741,[0.72427400,0.67085900,0.42919400]],[0.745,[0.72833400,0.67410700,0.42755400]],[0.749,[0.73242200,0.67736400,0.42571700]],[0.753,[0.73648800,0.68062900,0.42402800]],[0.757,[0.74058900,0.68390000,0.42213100]],[0.761,[0.74466400,0.68718100,0.42039300]],[0.765,[0.74877200,0.69047000,0.41844800]],[0.769,[0.75288600,0.69376600,0.41647200]],[0.773,[0.75697500,0.69707100,0.41465900]],[0.776,[0.76109600,0.70038400,0.41263800]],[0.780,[0.76522300,0.70370500,0.41058700]],[0.784,[0.76935300,0.70703500,0.40851600]],[0.788,[0.77348600,0.71037300,0.40642200]],[0.792,[0.77765100,0.71371900,0.40411200]],[0.796,[0.78179500,0.71707400,0.40196600]],[0.800,[0.78596500,0.72043800,0.39961300]],[0.804,[0.79011600,0.72381000,0.39742300]],[0.808,[0.79429800,0.72719000,0.39501600]],[0.812,[0.79848000,0.73058000,0.39259700]],[0.816,[0.80266700,0.73397800,0.39015300]],[0.820,[0.80685900,0.73738500,0.38768400]],[0.824,[0.81105400,0.74080100,0.38519800]],[0.827,[0.81527400,0.74422600,0.38250400]],[0.831,[0.81949900,0.74765900,0.37978500]],[0.835,[0.82372900,0.75110100,0.37704300]],[0.839,[0.82795900,0.75455300,0.37429200]],[0.843,[0.83219200,0.75801400,0.37152900]],[0.847,[0.83642900,0.76148300,0.36874700]],[0.851,[0.84069300,0.76496200,0.36574600]],[0.855,[0.84495700,0.76845000,0.36274100]],[0.859,[0.84922300,0.77194700,0.35972900]],[0.863,[0.85351500,0.77545400,0.35650000]],[0.867,[0.85780900,0.77896900,0.35325900]],[0.871,[0.86210500,0.78249400,0.35001100]],[0.875,[0.86642100,0.78602800,0.34657100]],[0.878,[0.87071700,0.78957200,0.34333300]],[0.882,[0.87505700,0.79312500,0.33968500]],[0.886,[0.87937800,0.79668700,0.33624100]],[0.890,[0.88372000,0.80025800,0.33259900]],[0.894,[0.88808100,0.80383900,0.32877000]],[0.898,[0.89244000,0.80743000,0.32496800]],[0.902,[0.89681800,0.81103000,0.32098200]],[0.906,[0.90119500,0.81463900,0.31702100]],[0.910,[0.90558900,0.81825700,0.31288900]],[0.914,[0.91000000,0.82188500,0.30859400]],[0.918,[0.91440700,0.82552200,0.30434800]],[0.922,[0.91882800,0.82916800,0.29996000]],[0.925,[0.92327900,0.83282200,0.29524400]],[0.929,[0.92772400,0.83648600,0.29061100]],[0.933,[0.93218000,0.84015900,0.28588000]],[0.937,[0.93666000,0.84384100,0.28087600]],[0.941,[0.94114700,0.84753000,0.27581500]],[0.945,[0.94565400,0.85122800,0.27053200]],[0.949,[0.95017800,0.85493300,0.26508500]],[0.953,[0.95472500,0.85864600,0.25936500]],[0.957,[0.95928400,0.86236500,0.25356300]],[0.961,[0.96387200,0.86608900,0.24744500]],[0.965,[0.96846900,0.86981900,0.24131000]],[0.969,[0.97311400,0.87355000,0.23467700]],[0.973,[0.97778000,0.87728100,0.22795400]],[0.976,[0.98249700,0.88100800,0.22087800]],[0.980,[0.98729300,0.88471800,0.21333600]],[0.984,[0.99221800,0.88838500,0.20546800]],[0.988,[0.99484700,0.89295400,0.20344500]],[0.992,[0.99524900,0.89838400,0.20756100]],[0.996,[0.99550300,0.90386600,0.21237000]],[1.000,[0.99573700,0.90934400,0.21777200]]]
H.colormap_cividis = function(t) {
    t = Math.max(0, Math.min(1, t));
    let r = Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57)))))))
    let g = Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37)))))))
    let b = Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67)))))))
    let result = H.rgb_to_hex( { r: r, g: g, b: b } )
    return result;
}
H.colormap_CMRmap = [[0.000, [0.000, 0.000, 0.000]], [0.002, [0.000, 0.000, 0.000]], [0.004, [0.005, 0.005, 0.016]], [0.006, [0.005, 0.005, 0.016]], [0.008, [0.009, 0.009, 0.031]], [0.010, [0.009, 0.009, 0.031]], [0.012, [0.014, 0.014, 0.047]], [0.014, [0.014, 0.014, 0.047]], [0.016, [0.019, 0.019, 0.063]], [0.018, [0.019, 0.019, 0.063]], [0.020, [0.024, 0.024, 0.078]], [0.022, [0.024, 0.024, 0.078]], [0.023, [0.028, 0.028, 0.094]], [0.025, [0.028, 0.028, 0.094]], [0.027, [0.033, 0.033, 0.110]], [0.029, [0.033, 0.033, 0.110]], [0.031, [0.038, 0.038, 0.125]], [0.033, [0.038, 0.038, 0.125]], [0.035, [0.042, 0.042, 0.141]], [0.037, [0.042, 0.042, 0.141]], [0.039, [0.047, 0.047, 0.157]], [0.041, [0.047, 0.047, 0.157]], [0.043, [0.052, 0.052, 0.173]], [0.045, [0.052, 0.052, 0.173]], [0.047, [0.056, 0.056, 0.188]], [0.049, [0.056, 0.056, 0.188]], [0.051, [0.061, 0.061, 0.204]], [0.053, [0.061, 0.061, 0.204]], [0.055, [0.066, 0.066, 0.220]], [0.057, [0.066, 0.066, 0.220]], [0.059, [0.071, 0.071, 0.235]], [0.061, [0.071, 0.071, 0.235]], [0.063, [0.075, 0.075, 0.251]], [0.065, [0.075, 0.075, 0.251]], [0.067, [0.080, 0.080, 0.267]], [0.068, [0.080, 0.080, 0.267]], [0.070, [0.085, 0.085, 0.282]], [0.072, [0.085, 0.085, 0.282]], [0.074, [0.089, 0.089, 0.298]], [0.076, [0.089, 0.089, 0.298]], [0.078, [0.094, 0.094, 0.314]], [0.080, [0.094, 0.094, 0.314]], [0.082, [0.099, 0.099, 0.329]], [0.084, [0.099, 0.099, 0.329]], [0.086, [0.104, 0.104, 0.345]], [0.088, [0.104, 0.104, 0.345]], [0.090, [0.108, 0.108, 0.361]], [0.092, [0.108, 0.108, 0.361]], [0.094, [0.113, 0.113, 0.376]], [0.096, [0.113, 0.113, 0.376]], [0.098, [0.118, 0.118, 0.392]], [0.100, [0.118, 0.118, 0.392]], [0.102, [0.122, 0.122, 0.408]], [0.104, [0.122, 0.122, 0.408]], [0.106, [0.127, 0.127, 0.424]], [0.108, [0.127, 0.127, 0.424]], [0.110, [0.132, 0.132, 0.439]], [0.112, [0.132, 0.132, 0.439]], [0.114, [0.136, 0.136, 0.455]], [0.115, [0.136, 0.136, 0.455]], [0.117, [0.141, 0.141, 0.471]], [0.119, [0.141, 0.141, 0.471]], [0.121, [0.146, 0.146, 0.486]], [0.123, [0.146, 0.146, 0.486]], [0.125, [0.151, 0.150, 0.501]], [0.127, [0.151, 0.150, 0.501]], [0.129, [0.155, 0.150, 0.509]], [0.131, [0.155, 0.150, 0.509]], [0.133, [0.160, 0.150, 0.517]], [0.135, [0.160, 0.150, 0.517]], [0.137, [0.165, 0.150, 0.525]], [0.139, [0.165, 0.150, 0.525]], [0.141, [0.169, 0.150, 0.532]], [0.143, [0.169, 0.150, 0.532]], [0.145, [0.174, 0.150, 0.540]], [0.147, [0.174, 0.150, 0.540]], [0.149, [0.179, 0.150, 0.548]], [0.151, [0.179, 0.150, 0.548]], [0.153, [0.184, 0.150, 0.556]], [0.155, [0.184, 0.150, 0.556]], [0.157, [0.188, 0.150, 0.564]], [0.159, [0.188, 0.150, 0.564]], [0.160, [0.193, 0.150, 0.572]], [0.162, [0.193, 0.150, 0.572]], [0.164, [0.198, 0.150, 0.579]], [0.166, [0.198, 0.150, 0.579]], [0.168, [0.202, 0.150, 0.587]], [0.170, [0.202, 0.150, 0.587]], [0.172, [0.207, 0.150, 0.595]], [0.174, [0.207, 0.150, 0.595]], [0.176, [0.212, 0.150, 0.603]], [0.178, [0.212, 0.150, 0.603]], [0.180, [0.216, 0.150, 0.611]], [0.182, [0.216, 0.150, 0.611]], [0.184, [0.221, 0.150, 0.619]], [0.186, [0.221, 0.150, 0.619]], [0.188, [0.226, 0.150, 0.626]], [0.190, [0.226, 0.150, 0.626]], [0.192, [0.231, 0.150, 0.634]], [0.194, [0.231, 0.150, 0.634]], [0.196, [0.235, 0.150, 0.642]], [0.198, [0.235, 0.150, 0.642]], [0.200, [0.240, 0.150, 0.650]], [0.202, [0.240, 0.150, 0.650]], [0.204, [0.245, 0.150, 0.658]], [0.205, [0.245, 0.150, 0.658]], [0.207, [0.249, 0.150, 0.666]], [0.209, [0.249, 0.150, 0.666]], [0.211, [0.254, 0.150, 0.674]], [0.213, [0.254, 0.150, 0.674]], [0.215, [0.259, 0.150, 0.681]], [0.217, [0.259, 0.150, 0.681]], [0.219, [0.264, 0.150, 0.689]], [0.221, [0.264, 0.150, 0.689]], [0.223, [0.268, 0.150, 0.697]], [0.225, [0.268, 0.150, 0.697]], [0.227, [0.273, 0.150, 0.705]], [0.229, [0.273, 0.150, 0.705]], [0.231, [0.278, 0.150, 0.713]], [0.233, [0.278, 0.150, 0.713]], [0.235, [0.282, 0.150, 0.721]], [0.237, [0.282, 0.150, 0.721]], [0.239, [0.287, 0.150, 0.728]], [0.241, [0.287, 0.150, 0.728]], [0.243, [0.292, 0.150, 0.736]], [0.245, [0.292, 0.150, 0.736]], [0.247, [0.296, 0.150, 0.744]], [0.249, [0.296, 0.150, 0.744]], [0.250, [0.302, 0.150, 0.748]], [0.252, [0.302, 0.150, 0.748]], [0.254, [0.312, 0.152, 0.740]], [0.256, [0.312, 0.152, 0.740]], [0.258, [0.321, 0.154, 0.732]], [0.260, [0.321, 0.154, 0.732]], [0.262, [0.331, 0.155, 0.725]], [0.264, [0.331, 0.155, 0.725]], [0.266, [0.340, 0.157, 0.717]], [0.268, [0.340, 0.157, 0.717]], [0.270, [0.349, 0.158, 0.709]], [0.272, [0.349, 0.158, 0.709]], [0.274, [0.359, 0.160, 0.701]], [0.276, [0.359, 0.160, 0.701]], [0.278, [0.368, 0.161, 0.693]], [0.280, [0.368, 0.161, 0.693]], [0.282, [0.378, 0.163, 0.685]], [0.284, [0.378, 0.163, 0.685]], [0.286, [0.387, 0.165, 0.677]], [0.288, [0.387, 0.165, 0.677]], [0.290, [0.396, 0.166, 0.670]], [0.292, [0.396, 0.166, 0.670]], [0.294, [0.406, 0.168, 0.662]], [0.295, [0.406, 0.168, 0.662]], [0.297, [0.415, 0.169, 0.654]], [0.299, [0.415, 0.169, 0.654]], [0.301, [0.425, 0.171, 0.646]], [0.303, [0.425, 0.171, 0.646]], [0.305, [0.434, 0.172, 0.638]], [0.307, [0.434, 0.172, 0.638]], [0.309, [0.444, 0.174, 0.630]], [0.311, [0.444, 0.174, 0.630]], [0.313, [0.453, 0.175, 0.623]], [0.315, [0.453, 0.175, 0.623]], [0.317, [0.462, 0.177, 0.615]], [0.319, [0.462, 0.177, 0.615]], [0.321, [0.472, 0.179, 0.607]], [0.323, [0.472, 0.179, 0.607]], [0.325, [0.481, 0.180, 0.599]], [0.327, [0.481, 0.180, 0.599]], [0.329, [0.491, 0.182, 0.591]], [0.331, [0.491, 0.182, 0.591]], [0.333, [0.500, 0.183, 0.583]], [0.335, [0.500, 0.183, 0.583]], [0.337, [0.509, 0.185, 0.575]], [0.339, [0.509, 0.185, 0.575]], [0.341, [0.519, 0.186, 0.568]], [0.342, [0.519, 0.186, 0.568]], [0.344, [0.528, 0.188, 0.560]], [0.346, [0.528, 0.188, 0.560]], [0.348, [0.538, 0.190, 0.552]], [0.350, [0.538, 0.190, 0.552]], [0.352, [0.547, 0.191, 0.544]], [0.354, [0.547, 0.191, 0.544]], [0.356, [0.556, 0.193, 0.536]], [0.358, [0.556, 0.193, 0.536]], [0.360, [0.566, 0.194, 0.528]], [0.362, [0.566, 0.194, 0.528]], [0.364, [0.575, 0.196, 0.521]], [0.366, [0.575, 0.196, 0.521]], [0.368, [0.585, 0.197, 0.513]], [0.370, [0.585, 0.197, 0.513]], [0.372, [0.594, 0.199, 0.505]], [0.374, [0.594, 0.199, 0.505]], [0.376, [0.605, 0.201, 0.496]], [0.378, [0.605, 0.201, 0.496]], [0.380, [0.617, 0.202, 0.485]], [0.382, [0.617, 0.202, 0.485]], [0.384, [0.630, 0.204, 0.474]], [0.386, [0.630, 0.204, 0.474]], [0.387, [0.642, 0.205, 0.463]], [0.389, [0.642, 0.205, 0.463]], [0.391, [0.655, 0.207, 0.452]], [0.393, [0.655, 0.207, 0.452]], [0.395, [0.667, 0.208, 0.441]], [0.397, [0.667, 0.208, 0.441]], [0.399, [0.680, 0.210, 0.430]], [0.401, [0.680, 0.210, 0.430]], [0.403, [0.693, 0.212, 0.419]], [0.405, [0.693, 0.212, 0.419]], [0.407, [0.705, 0.213, 0.408]], [0.409, [0.705, 0.213, 0.408]], [0.411, [0.718, 0.215, 0.397]], [0.413, [0.718, 0.215, 0.397]], [0.415, [0.730, 0.216, 0.386]], [0.417, [0.730, 0.216, 0.386]], [0.419, [0.743, 0.218, 0.375]], [0.421, [0.743, 0.218, 0.375]], [0.423, [0.755, 0.219, 0.364]], [0.425, [0.755, 0.219, 0.364]], [0.427, [0.768, 0.221, 0.353]], [0.429, [0.768, 0.221, 0.353]], [0.431, [0.780, 0.223, 0.342]], [0.432, [0.780, 0.223, 0.342]], [0.434, [0.793, 0.224, 0.331]], [0.436, [0.793, 0.224, 0.331]], [0.438, [0.805, 0.226, 0.320]], [0.440, [0.805, 0.226, 0.320]], [0.442, [0.818, 0.227, 0.309]], [0.444, [0.818, 0.227, 0.309]], [0.446, [0.831, 0.229, 0.298]], [0.448, [0.831, 0.229, 0.298]], [0.450, [0.843, 0.230, 0.287]], [0.452, [0.843, 0.230, 0.287]], [0.454, [0.856, 0.232, 0.276]], [0.456, [0.856, 0.232, 0.276]], [0.458, [0.868, 0.234, 0.265]], [0.460, [0.868, 0.234, 0.265]], [0.462, [0.881, 0.235, 0.254]], [0.464, [0.881, 0.235, 0.254]], [0.466, [0.893, 0.237, 0.243]], [0.468, [0.893, 0.237, 0.243]], [0.470, [0.906, 0.238, 0.232]], [0.472, [0.906, 0.238, 0.232]], [0.474, [0.918, 0.240, 0.221]], [0.476, [0.918, 0.240, 0.221]], [0.477, [0.931, 0.241, 0.210]], [0.479, [0.931, 0.241, 0.210]], [0.481, [0.944, 0.243, 0.199]], [0.483, [0.944, 0.243, 0.199]], [0.485, [0.956, 0.245, 0.188]], [0.487, [0.956, 0.245, 0.188]], [0.489, [0.969, 0.246, 0.177]], [0.491, [0.969, 0.246, 0.177]], [0.493, [0.981, 0.248, 0.166]], [0.495, [0.981, 0.248, 0.166]], [0.497, [0.994, 0.249, 0.155]], [0.499, [0.994, 0.249, 0.155]], [0.501, [0.998, 0.254, 0.148]], [0.503, [0.998, 0.254, 0.148]], [0.505, [0.995, 0.262, 0.143]], [0.507, [0.995, 0.262, 0.143]], [0.509, [0.992, 0.270, 0.138]], [0.511, [0.992, 0.270, 0.138]], [0.513, [0.989, 0.277, 0.134]], [0.515, [0.989, 0.277, 0.134]], [0.517, [0.986, 0.285, 0.129]], [0.519, [0.986, 0.285, 0.129]], [0.521, [0.983, 0.293, 0.124]], [0.523, [0.983, 0.293, 0.124]], [0.524, [0.980, 0.301, 0.119]], [0.526, [0.980, 0.301, 0.119]], [0.528, [0.976, 0.309, 0.115]], [0.530, [0.976, 0.309, 0.115]], [0.532, [0.973, 0.317, 0.110]], [0.534, [0.973, 0.317, 0.110]], [0.536, [0.970, 0.325, 0.105]], [0.538, [0.970, 0.325, 0.105]], [0.540, [0.967, 0.332, 0.101]], [0.542, [0.967, 0.332, 0.101]], [0.544, [0.964, 0.340, 0.096]], [0.546, [0.964, 0.340, 0.096]], [0.548, [0.961, 0.348, 0.091]], [0.550, [0.961, 0.348, 0.091]], [0.552, [0.958, 0.356, 0.086]], [0.554, [0.958, 0.356, 0.086]], [0.556, [0.955, 0.364, 0.082]], [0.558, [0.955, 0.364, 0.082]], [0.560, [0.951, 0.372, 0.077]], [0.562, [0.951, 0.372, 0.077]], [0.564, [0.948, 0.379, 0.072]], [0.566, [0.948, 0.379, 0.072]], [0.568, [0.945, 0.387, 0.068]], [0.569, [0.945, 0.387, 0.068]], [0.571, [0.942, 0.395, 0.063]], [0.573, [0.942, 0.395, 0.063]], [0.575, [0.939, 0.403, 0.058]], [0.577, [0.939, 0.403, 0.058]], [0.579, [0.936, 0.411, 0.054]], [0.581, [0.936, 0.411, 0.054]], [0.583, [0.933, 0.419, 0.049]], [0.585, [0.933, 0.419, 0.049]], [0.587, [0.929, 0.426, 0.044]], [0.589, [0.929, 0.426, 0.044]], [0.591, [0.926, 0.434, 0.039]], [0.593, [0.926, 0.434, 0.039]], [0.595, [0.923, 0.442, 0.035]], [0.597, [0.923, 0.442, 0.035]], [0.599, [0.920, 0.450, 0.030]], [0.601, [0.920, 0.450, 0.030]], [0.603, [0.917, 0.458, 0.025]], [0.605, [0.917, 0.458, 0.025]], [0.607, [0.914, 0.466, 0.021]], [0.609, [0.914, 0.466, 0.021]], [0.611, [0.911, 0.474, 0.016]], [0.613, [0.911, 0.474, 0.016]], [0.614, [0.907, 0.481, 0.011]], [0.616, [0.907, 0.481, 0.011]], [0.618, [0.904, 0.489, 0.006]], [0.620, [0.904, 0.489, 0.006]], [0.622, [0.901, 0.497, 0.002]], [0.624, [0.901, 0.497, 0.002]], [0.626, [0.900, 0.505, 0.002]], [0.628, [0.900, 0.505, 0.002]], [0.630, [0.900, 0.513, 0.005]], [0.632, [0.900, 0.513, 0.005]], [0.634, [0.900, 0.521, 0.008]], [0.636, [0.900, 0.521, 0.008]], [0.638, [0.900, 0.528, 0.011]], [0.640, [0.900, 0.528, 0.011]], [0.642, [0.900, 0.536, 0.015]], [0.644, [0.900, 0.536, 0.015]], [0.646, [0.900, 0.544, 0.018]], [0.648, [0.900, 0.544, 0.018]], [0.650, [0.900, 0.552, 0.021]], [0.652, [0.900, 0.552, 0.021]], [0.654, [0.900, 0.560, 0.024]], [0.656, [0.900, 0.560, 0.024]], [0.658, [0.900, 0.568, 0.027]], [0.659, [0.900, 0.568, 0.027]], [0.661, [0.900, 0.575, 0.030]], [0.663, [0.900, 0.575, 0.030]], [0.665, [0.900, 0.583, 0.033]], [0.667, [0.900, 0.583, 0.033]], [0.669, [0.900, 0.591, 0.036]], [0.671, [0.900, 0.591, 0.036]], [0.673, [0.900, 0.599, 0.040]], [0.675, [0.900, 0.599, 0.040]], [0.677, [0.900, 0.607, 0.043]], [0.679, [0.900, 0.607, 0.043]], [0.681, [0.900, 0.615, 0.046]], [0.683, [0.900, 0.615, 0.046]], [0.685, [0.900, 0.623, 0.049]], [0.687, [0.900, 0.623, 0.049]], [0.689, [0.900, 0.630, 0.052]], [0.691, [0.900, 0.630, 0.052]], [0.693, [0.900, 0.638, 0.055]], [0.695, [0.900, 0.638, 0.055]], [0.697, [0.900, 0.646, 0.058]], [0.699, [0.900, 0.646, 0.058]], [0.701, [0.900, 0.654, 0.062]], [0.703, [0.900, 0.654, 0.062]], [0.705, [0.900, 0.662, 0.065]], [0.706, [0.900, 0.662, 0.065]], [0.708, [0.900, 0.670, 0.068]], [0.710, [0.900, 0.670, 0.068]], [0.712, [0.900, 0.677, 0.071]], [0.714, [0.900, 0.677, 0.071]], [0.716, [0.900, 0.685, 0.074]], [0.718, [0.900, 0.685, 0.074]], [0.720, [0.900, 0.693, 0.077]], [0.722, [0.900, 0.693, 0.077]], [0.724, [0.900, 0.701, 0.080]], [0.726, [0.900, 0.701, 0.080]], [0.728, [0.900, 0.709, 0.084]], [0.730, [0.900, 0.709, 0.084]], [0.732, [0.900, 0.717, 0.087]], [0.734, [0.900, 0.717, 0.087]], [0.736, [0.900, 0.725, 0.090]], [0.738, [0.900, 0.725, 0.090]], [0.740, [0.900, 0.732, 0.093]], [0.742, [0.900, 0.732, 0.093]], [0.744, [0.900, 0.740, 0.096]], [0.746, [0.900, 0.740, 0.096]], [0.748, [0.900, 0.748, 0.099]], [0.750, [0.900, 0.748, 0.099]], [0.751, [0.900, 0.754, 0.109]], [0.753, [0.900, 0.754, 0.109]], [0.755, [0.900, 0.758, 0.122]], [0.757, [0.900, 0.758, 0.122]], [0.759, [0.900, 0.763, 0.135]], [0.761, [0.900, 0.763, 0.135]], [0.763, [0.900, 0.768, 0.147]], [0.765, [0.900, 0.768, 0.147]], [0.767, [0.900, 0.772, 0.160]], [0.769, [0.900, 0.772, 0.160]], [0.771, [0.900, 0.777, 0.172]], [0.773, [0.900, 0.777, 0.172]], [0.775, [0.900, 0.782, 0.185]], [0.777, [0.900, 0.782, 0.185]], [0.779, [0.900, 0.786, 0.197]], [0.781, [0.900, 0.786, 0.197]], [0.783, [0.900, 0.791, 0.210]], [0.785, [0.900, 0.791, 0.210]], [0.787, [0.900, 0.796, 0.222]], [0.789, [0.900, 0.796, 0.222]], [0.791, [0.900, 0.801, 0.235]], [0.793, [0.900, 0.801, 0.235]], [0.795, [0.900, 0.805, 0.247]], [0.796, [0.900, 0.805, 0.247]], [0.798, [0.900, 0.810, 0.260]], [0.800, [0.900, 0.810, 0.260]], [0.802, [0.900, 0.815, 0.273]], [0.804, [0.900, 0.815, 0.273]], [0.806, [0.900, 0.819, 0.285]], [0.808, [0.900, 0.819, 0.285]], [0.810, [0.900, 0.824, 0.298]], [0.812, [0.900, 0.824, 0.298]], [0.814, [0.900, 0.829, 0.310]], [0.816, [0.900, 0.829, 0.310]], [0.818, [0.900, 0.834, 0.323]], [0.820, [0.900, 0.834, 0.323]], [0.822, [0.900, 0.838, 0.335]], [0.824, [0.900, 0.838, 0.335]], [0.826, [0.900, 0.843, 0.348]], [0.828, [0.900, 0.843, 0.348]], [0.830, [0.900, 0.848, 0.360]], [0.832, [0.900, 0.848, 0.360]], [0.834, [0.900, 0.852, 0.373]], [0.836, [0.900, 0.852, 0.373]], [0.838, [0.900, 0.857, 0.385]], [0.840, [0.900, 0.857, 0.385]], [0.841, [0.900, 0.862, 0.398]], [0.843, [0.900, 0.862, 0.398]], [0.845, [0.900, 0.866, 0.411]], [0.847, [0.900, 0.866, 0.411]], [0.849, [0.900, 0.871, 0.423]], [0.851, [0.900, 0.871, 0.423]], [0.853, [0.900, 0.876, 0.436]], [0.855, [0.900, 0.876, 0.436]], [0.857, [0.900, 0.881, 0.448]], [0.859, [0.900, 0.881, 0.448]], [0.861, [0.900, 0.885, 0.461]], [0.863, [0.900, 0.885, 0.461]], [0.865, [0.900, 0.890, 0.473]], [0.867, [0.900, 0.890, 0.473]], [0.869, [0.900, 0.895, 0.486]], [0.871, [0.900, 0.895, 0.486]], [0.873, [0.900, 0.899, 0.498]], [0.875, [0.900, 0.899, 0.498]], [0.877, [0.903, 0.903, 0.514]], [0.879, [0.903, 0.903, 0.514]], [0.881, [0.906, 0.906, 0.529]], [0.883, [0.906, 0.906, 0.529]], [0.885, [0.909, 0.909, 0.545]], [0.886, [0.909, 0.909, 0.545]], [0.888, [0.912, 0.912, 0.561]], [0.890, [0.912, 0.912, 0.561]], [0.892, [0.915, 0.915, 0.576]], [0.894, [0.915, 0.915, 0.576]], [0.896, [0.918, 0.918, 0.592]], [0.898, [0.918, 0.918, 0.592]], [0.900, [0.922, 0.922, 0.608]], [0.902, [0.922, 0.922, 0.608]], [0.904, [0.925, 0.925, 0.624]], [0.906, [0.925, 0.925, 0.624]], [0.908, [0.928, 0.928, 0.639]], [0.910, [0.928, 0.928, 0.639]], [0.912, [0.931, 0.931, 0.655]], [0.914, [0.931, 0.931, 0.655]], [0.916, [0.934, 0.934, 0.671]], [0.918, [0.934, 0.934, 0.671]], [0.920, [0.937, 0.937, 0.686]], [0.922, [0.937, 0.937, 0.686]], [0.924, [0.940, 0.940, 0.702]], [0.926, [0.940, 0.940, 0.702]], [0.928, [0.944, 0.944, 0.718]], [0.930, [0.944, 0.944, 0.718]], [0.932, [0.947, 0.947, 0.733]], [0.933, [0.947, 0.947, 0.733]], [0.935, [0.950, 0.950, 0.749]], [0.937, [0.950, 0.950, 0.749]], [0.939, [0.953, 0.953, 0.765]], [0.941, [0.953, 0.953, 0.765]], [0.943, [0.956, 0.956, 0.780]], [0.945, [0.956, 0.956, 0.780]], [0.947, [0.959, 0.959, 0.796]], [0.949, [0.959, 0.959, 0.796]], [0.951, [0.962, 0.962, 0.812]], [0.953, [0.962, 0.962, 0.812]], [0.955, [0.965, 0.965, 0.827]], [0.957, [0.965, 0.965, 0.827]], [0.959, [0.969, 0.969, 0.843]], [0.961, [0.969, 0.969, 0.843]], [0.963, [0.972, 0.972, 0.859]], [0.965, [0.972, 0.972, 0.859]], [0.967, [0.975, 0.975, 0.875]], [0.969, [0.975, 0.975, 0.875]], [0.971, [0.978, 0.978, 0.890]], [0.973, [0.978, 0.978, 0.890]], [0.975, [0.981, 0.981, 0.906]], [0.977, [0.981, 0.981, 0.906]], [0.978, [0.984, 0.984, 0.922]], [0.980, [0.984, 0.984, 0.922]], [0.982, [0.987, 0.987, 0.937]], [0.984, [0.987, 0.987, 0.937]], [0.986, [0.991, 0.991, 0.953]], [0.988, [0.991, 0.991, 0.953]], [0.990, [0.994, 0.994, 0.969]], [0.992, [0.994, 0.994, 0.969]], [0.994, [0.997, 0.997, 0.984]], [0.996, [0.997, 0.997, 0.984]], [0.998, [1.000, 1.000, 1.000]], [1.000, [1.000, 1.000, 1.000]]];
H.colormap_cool = [[0.000, [0.000, 1.000, 1.000]], [0.002, [0.000, 1.000, 1.000]], [0.004, [0.004, 0.996, 1.000]], [0.006, [0.004, 0.996, 1.000]], [0.008, [0.008, 0.992, 1.000]], [0.010, [0.008, 0.992, 1.000]], [0.012, [0.012, 0.988, 1.000]], [0.014, [0.012, 0.988, 1.000]], [0.016, [0.016, 0.984, 1.000]], [0.018, [0.016, 0.984, 1.000]], [0.020, [0.020, 0.980, 1.000]], [0.022, [0.020, 0.980, 1.000]], [0.023, [0.024, 0.976, 1.000]], [0.025, [0.024, 0.976, 1.000]], [0.027, [0.027, 0.973, 1.000]], [0.029, [0.027, 0.973, 1.000]], [0.031, [0.031, 0.969, 1.000]], [0.033, [0.031, 0.969, 1.000]], [0.035, [0.035, 0.965, 1.000]], [0.037, [0.035, 0.965, 1.000]], [0.039, [0.039, 0.961, 1.000]], [0.041, [0.039, 0.961, 1.000]], [0.043, [0.043, 0.957, 1.000]], [0.045, [0.043, 0.957, 1.000]], [0.047, [0.047, 0.953, 1.000]], [0.049, [0.047, 0.953, 1.000]], [0.051, [0.051, 0.949, 1.000]], [0.053, [0.051, 0.949, 1.000]], [0.055, [0.055, 0.945, 1.000]], [0.057, [0.055, 0.945, 1.000]], [0.059, [0.059, 0.941, 1.000]], [0.061, [0.059, 0.941, 1.000]], [0.063, [0.063, 0.937, 1.000]], [0.065, [0.063, 0.937, 1.000]], [0.067, [0.067, 0.933, 1.000]], [0.068, [0.067, 0.933, 1.000]], [0.070, [0.071, 0.929, 1.000]], [0.072, [0.071, 0.929, 1.000]], [0.074, [0.075, 0.925, 1.000]], [0.076, [0.075, 0.925, 1.000]], [0.078, [0.078, 0.922, 1.000]], [0.080, [0.078, 0.922, 1.000]], [0.082, [0.082, 0.918, 1.000]], [0.084, [0.082, 0.918, 1.000]], [0.086, [0.086, 0.914, 1.000]], [0.088, [0.086, 0.914, 1.000]], [0.090, [0.090, 0.910, 1.000]], [0.092, [0.090, 0.910, 1.000]], [0.094, [0.094, 0.906, 1.000]], [0.096, [0.094, 0.906, 1.000]], [0.098, [0.098, 0.902, 1.000]], [0.100, [0.098, 0.902, 1.000]], [0.102, [0.102, 0.898, 1.000]], [0.104, [0.102, 0.898, 1.000]], [0.106, [0.106, 0.894, 1.000]], [0.108, [0.106, 0.894, 1.000]], [0.110, [0.110, 0.890, 1.000]], [0.112, [0.110, 0.890, 1.000]], [0.114, [0.114, 0.886, 1.000]], [0.115, [0.114, 0.886, 1.000]], [0.117, [0.118, 0.882, 1.000]], [0.119, [0.118, 0.882, 1.000]], [0.121, [0.122, 0.878, 1.000]], [0.123, [0.122, 0.878, 1.000]], [0.125, [0.125, 0.875, 1.000]], [0.127, [0.125, 0.875, 1.000]], [0.129, [0.129, 0.871, 1.000]], [0.131, [0.129, 0.871, 1.000]], [0.133, [0.133, 0.867, 1.000]], [0.135, [0.133, 0.867, 1.000]], [0.137, [0.137, 0.863, 1.000]], [0.139, [0.137, 0.863, 1.000]], [0.141, [0.141, 0.859, 1.000]], [0.143, [0.141, 0.859, 1.000]], [0.145, [0.145, 0.855, 1.000]], [0.147, [0.145, 0.855, 1.000]], [0.149, [0.149, 0.851, 1.000]], [0.151, [0.149, 0.851, 1.000]], [0.153, [0.153, 0.847, 1.000]], [0.155, [0.153, 0.847, 1.000]], [0.157, [0.157, 0.843, 1.000]], [0.159, [0.157, 0.843, 1.000]], [0.160, [0.161, 0.839, 1.000]], [0.162, [0.161, 0.839, 1.000]], [0.164, [0.165, 0.835, 1.000]], [0.166, [0.165, 0.835, 1.000]], [0.168, [0.169, 0.831, 1.000]], [0.170, [0.169, 0.831, 1.000]], [0.172, [0.173, 0.827, 1.000]], [0.174, [0.173, 0.827, 1.000]], [0.176, [0.176, 0.824, 1.000]], [0.178, [0.176, 0.824, 1.000]], [0.180, [0.180, 0.820, 1.000]], [0.182, [0.180, 0.820, 1.000]], [0.184, [0.184, 0.816, 1.000]], [0.186, [0.184, 0.816, 1.000]], [0.188, [0.188, 0.812, 1.000]], [0.190, [0.188, 0.812, 1.000]], [0.192, [0.192, 0.808, 1.000]], [0.194, [0.192, 0.808, 1.000]], [0.196, [0.196, 0.804, 1.000]], [0.198, [0.196, 0.804, 1.000]], [0.200, [0.200, 0.800, 1.000]], [0.202, [0.200, 0.800, 1.000]], [0.204, [0.204, 0.796, 1.000]], [0.205, [0.204, 0.796, 1.000]], [0.207, [0.208, 0.792, 1.000]], [0.209, [0.208, 0.792, 1.000]], [0.211, [0.212, 0.788, 1.000]], [0.213, [0.212, 0.788, 1.000]], [0.215, [0.216, 0.784, 1.000]], [0.217, [0.216, 0.784, 1.000]], [0.219, [0.220, 0.780, 1.000]], [0.221, [0.220, 0.780, 1.000]], [0.223, [0.224, 0.776, 1.000]], [0.225, [0.224, 0.776, 1.000]], [0.227, [0.227, 0.773, 1.000]], [0.229, [0.227, 0.773, 1.000]], [0.231, [0.231, 0.769, 1.000]], [0.233, [0.231, 0.769, 1.000]], [0.235, [0.235, 0.765, 1.000]], [0.237, [0.235, 0.765, 1.000]], [0.239, [0.239, 0.761, 1.000]], [0.241, [0.239, 0.761, 1.000]], [0.243, [0.243, 0.757, 1.000]], [0.245, [0.243, 0.757, 1.000]], [0.247, [0.247, 0.753, 1.000]], [0.249, [0.247, 0.753, 1.000]], [0.250, [0.251, 0.749, 1.000]], [0.252, [0.251, 0.749, 1.000]], [0.254, [0.255, 0.745, 1.000]], [0.256, [0.255, 0.745, 1.000]], [0.258, [0.259, 0.741, 1.000]], [0.260, [0.259, 0.741, 1.000]], [0.262, [0.263, 0.737, 1.000]], [0.264, [0.263, 0.737, 1.000]], [0.266, [0.267, 0.733, 1.000]], [0.268, [0.267, 0.733, 1.000]], [0.270, [0.271, 0.729, 1.000]], [0.272, [0.271, 0.729, 1.000]], [0.274, [0.275, 0.725, 1.000]], [0.276, [0.275, 0.725, 1.000]], [0.278, [0.278, 0.722, 1.000]], [0.280, [0.278, 0.722, 1.000]], [0.282, [0.282, 0.718, 1.000]], [0.284, [0.282, 0.718, 1.000]], [0.286, [0.286, 0.714, 1.000]], [0.288, [0.286, 0.714, 1.000]], [0.290, [0.290, 0.710, 1.000]], [0.292, [0.290, 0.710, 1.000]], [0.294, [0.294, 0.706, 1.000]], [0.295, [0.294, 0.706, 1.000]], [0.297, [0.298, 0.702, 1.000]], [0.299, [0.298, 0.702, 1.000]], [0.301, [0.302, 0.698, 1.000]], [0.303, [0.302, 0.698, 1.000]], [0.305, [0.306, 0.694, 1.000]], [0.307, [0.306, 0.694, 1.000]], [0.309, [0.310, 0.690, 1.000]], [0.311, [0.310, 0.690, 1.000]], [0.313, [0.314, 0.686, 1.000]], [0.315, [0.314, 0.686, 1.000]], [0.317, [0.318, 0.682, 1.000]], [0.319, [0.318, 0.682, 1.000]], [0.321, [0.322, 0.678, 1.000]], [0.323, [0.322, 0.678, 1.000]], [0.325, [0.325, 0.675, 1.000]], [0.327, [0.325, 0.675, 1.000]], [0.329, [0.329, 0.671, 1.000]], [0.331, [0.329, 0.671, 1.000]], [0.333, [0.333, 0.667, 1.000]], [0.335, [0.333, 0.667, 1.000]], [0.337, [0.337, 0.663, 1.000]], [0.339, [0.337, 0.663, 1.000]], [0.341, [0.341, 0.659, 1.000]], [0.342, [0.341, 0.659, 1.000]], [0.344, [0.345, 0.655, 1.000]], [0.346, [0.345, 0.655, 1.000]], [0.348, [0.349, 0.651, 1.000]], [0.350, [0.349, 0.651, 1.000]], [0.352, [0.353, 0.647, 1.000]], [0.354, [0.353, 0.647, 1.000]], [0.356, [0.357, 0.643, 1.000]], [0.358, [0.357, 0.643, 1.000]], [0.360, [0.361, 0.639, 1.000]], [0.362, [0.361, 0.639, 1.000]], [0.364, [0.365, 0.635, 1.000]], [0.366, [0.365, 0.635, 1.000]], [0.368, [0.369, 0.631, 1.000]], [0.370, [0.369, 0.631, 1.000]], [0.372, [0.373, 0.627, 1.000]], [0.374, [0.373, 0.627, 1.000]], [0.376, [0.376, 0.624, 1.000]], [0.378, [0.376, 0.624, 1.000]], [0.380, [0.380, 0.620, 1.000]], [0.382, [0.380, 0.620, 1.000]], [0.384, [0.384, 0.616, 1.000]], [0.386, [0.384, 0.616, 1.000]], [0.387, [0.388, 0.612, 1.000]], [0.389, [0.388, 0.612, 1.000]], [0.391, [0.392, 0.608, 1.000]], [0.393, [0.392, 0.608, 1.000]], [0.395, [0.396, 0.604, 1.000]], [0.397, [0.396, 0.604, 1.000]], [0.399, [0.400, 0.600, 1.000]], [0.401, [0.400, 0.600, 1.000]], [0.403, [0.404, 0.596, 1.000]], [0.405, [0.404, 0.596, 1.000]], [0.407, [0.408, 0.592, 1.000]], [0.409, [0.408, 0.592, 1.000]], [0.411, [0.412, 0.588, 1.000]], [0.413, [0.412, 0.588, 1.000]], [0.415, [0.416, 0.584, 1.000]], [0.417, [0.416, 0.584, 1.000]], [0.419, [0.420, 0.580, 1.000]], [0.421, [0.420, 0.580, 1.000]], [0.423, [0.424, 0.576, 1.000]], [0.425, [0.424, 0.576, 1.000]], [0.427, [0.427, 0.573, 1.000]], [0.429, [0.427, 0.573, 1.000]], [0.431, [0.431, 0.569, 1.000]], [0.432, [0.431, 0.569, 1.000]], [0.434, [0.435, 0.565, 1.000]], [0.436, [0.435, 0.565, 1.000]], [0.438, [0.439, 0.561, 1.000]], [0.440, [0.439, 0.561, 1.000]], [0.442, [0.443, 0.557, 1.000]], [0.444, [0.443, 0.557, 1.000]], [0.446, [0.447, 0.553, 1.000]], [0.448, [0.447, 0.553, 1.000]], [0.450, [0.451, 0.549, 1.000]], [0.452, [0.451, 0.549, 1.000]], [0.454, [0.455, 0.545, 1.000]], [0.456, [0.455, 0.545, 1.000]], [0.458, [0.459, 0.541, 1.000]], [0.460, [0.459, 0.541, 1.000]], [0.462, [0.463, 0.537, 1.000]], [0.464, [0.463, 0.537, 1.000]], [0.466, [0.467, 0.533, 1.000]], [0.468, [0.467, 0.533, 1.000]], [0.470, [0.471, 0.529, 1.000]], [0.472, [0.471, 0.529, 1.000]], [0.474, [0.475, 0.525, 1.000]], [0.476, [0.475, 0.525, 1.000]], [0.477, [0.478, 0.522, 1.000]], [0.479, [0.478, 0.522, 1.000]], [0.481, [0.482, 0.518, 1.000]], [0.483, [0.482, 0.518, 1.000]], [0.485, [0.486, 0.514, 1.000]], [0.487, [0.486, 0.514, 1.000]], [0.489, [0.490, 0.510, 1.000]], [0.491, [0.490, 0.510, 1.000]], [0.493, [0.494, 0.506, 1.000]], [0.495, [0.494, 0.506, 1.000]], [0.497, [0.498, 0.502, 1.000]], [0.499, [0.498, 0.502, 1.000]], [0.501, [0.502, 0.498, 1.000]], [0.503, [0.502, 0.498, 1.000]], [0.505, [0.506, 0.494, 1.000]], [0.507, [0.506, 0.494, 1.000]], [0.509, [0.510, 0.490, 1.000]], [0.511, [0.510, 0.490, 1.000]], [0.513, [0.514, 0.486, 1.000]], [0.515, [0.514, 0.486, 1.000]], [0.517, [0.518, 0.482, 1.000]], [0.519, [0.518, 0.482, 1.000]], [0.521, [0.522, 0.478, 1.000]], [0.523, [0.522, 0.478, 1.000]], [0.524, [0.525, 0.475, 1.000]], [0.526, [0.525, 0.475, 1.000]], [0.528, [0.529, 0.471, 1.000]], [0.530, [0.529, 0.471, 1.000]], [0.532, [0.533, 0.467, 1.000]], [0.534, [0.533, 0.467, 1.000]], [0.536, [0.537, 0.463, 1.000]], [0.538, [0.537, 0.463, 1.000]], [0.540, [0.541, 0.459, 1.000]], [0.542, [0.541, 0.459, 1.000]], [0.544, [0.545, 0.455, 1.000]], [0.546, [0.545, 0.455, 1.000]], [0.548, [0.549, 0.451, 1.000]], [0.550, [0.549, 0.451, 1.000]], [0.552, [0.553, 0.447, 1.000]], [0.554, [0.553, 0.447, 1.000]], [0.556, [0.557, 0.443, 1.000]], [0.558, [0.557, 0.443, 1.000]], [0.560, [0.561, 0.439, 1.000]], [0.562, [0.561, 0.439, 1.000]], [0.564, [0.565, 0.435, 1.000]], [0.566, [0.565, 0.435, 1.000]], [0.568, [0.569, 0.431, 1.000]], [0.569, [0.569, 0.431, 1.000]], [0.571, [0.573, 0.427, 1.000]], [0.573, [0.573, 0.427, 1.000]], [0.575, [0.576, 0.424, 1.000]], [0.577, [0.576, 0.424, 1.000]], [0.579, [0.580, 0.420, 1.000]], [0.581, [0.580, 0.420, 1.000]], [0.583, [0.584, 0.416, 1.000]], [0.585, [0.584, 0.416, 1.000]], [0.587, [0.588, 0.412, 1.000]], [0.589, [0.588, 0.412, 1.000]], [0.591, [0.592, 0.408, 1.000]], [0.593, [0.592, 0.408, 1.000]], [0.595, [0.596, 0.404, 1.000]], [0.597, [0.596, 0.404, 1.000]], [0.599, [0.600, 0.400, 1.000]], [0.601, [0.600, 0.400, 1.000]], [0.603, [0.604, 0.396, 1.000]], [0.605, [0.604, 0.396, 1.000]], [0.607, [0.608, 0.392, 1.000]], [0.609, [0.608, 0.392, 1.000]], [0.611, [0.612, 0.388, 1.000]], [0.613, [0.612, 0.388, 1.000]], [0.614, [0.616, 0.384, 1.000]], [0.616, [0.616, 0.384, 1.000]], [0.618, [0.620, 0.380, 1.000]], [0.620, [0.620, 0.380, 1.000]], [0.622, [0.624, 0.376, 1.000]], [0.624, [0.624, 0.376, 1.000]], [0.626, [0.627, 0.373, 1.000]], [0.628, [0.627, 0.373, 1.000]], [0.630, [0.631, 0.369, 1.000]], [0.632, [0.631, 0.369, 1.000]], [0.634, [0.635, 0.365, 1.000]], [0.636, [0.635, 0.365, 1.000]], [0.638, [0.639, 0.361, 1.000]], [0.640, [0.639, 0.361, 1.000]], [0.642, [0.643, 0.357, 1.000]], [0.644, [0.643, 0.357, 1.000]], [0.646, [0.647, 0.353, 1.000]], [0.648, [0.647, 0.353, 1.000]], [0.650, [0.651, 0.349, 1.000]], [0.652, [0.651, 0.349, 1.000]], [0.654, [0.655, 0.345, 1.000]], [0.656, [0.655, 0.345, 1.000]], [0.658, [0.659, 0.341, 1.000]], [0.659, [0.659, 0.341, 1.000]], [0.661, [0.663, 0.337, 1.000]], [0.663, [0.663, 0.337, 1.000]], [0.665, [0.667, 0.333, 1.000]], [0.667, [0.667, 0.333, 1.000]], [0.669, [0.671, 0.329, 1.000]], [0.671, [0.671, 0.329, 1.000]], [0.673, [0.675, 0.325, 1.000]], [0.675, [0.675, 0.325, 1.000]], [0.677, [0.678, 0.322, 1.000]], [0.679, [0.678, 0.322, 1.000]], [0.681, [0.682, 0.318, 1.000]], [0.683, [0.682, 0.318, 1.000]], [0.685, [0.686, 0.314, 1.000]], [0.687, [0.686, 0.314, 1.000]], [0.689, [0.690, 0.310, 1.000]], [0.691, [0.690, 0.310, 1.000]], [0.693, [0.694, 0.306, 1.000]], [0.695, [0.694, 0.306, 1.000]], [0.697, [0.698, 0.302, 1.000]], [0.699, [0.698, 0.302, 1.000]], [0.701, [0.702, 0.298, 1.000]], [0.703, [0.702, 0.298, 1.000]], [0.705, [0.706, 0.294, 1.000]], [0.706, [0.706, 0.294, 1.000]], [0.708, [0.710, 0.290, 1.000]], [0.710, [0.710, 0.290, 1.000]], [0.712, [0.714, 0.286, 1.000]], [0.714, [0.714, 0.286, 1.000]], [0.716, [0.718, 0.282, 1.000]], [0.718, [0.718, 0.282, 1.000]], [0.720, [0.722, 0.278, 1.000]], [0.722, [0.722, 0.278, 1.000]], [0.724, [0.725, 0.275, 1.000]], [0.726, [0.725, 0.275, 1.000]], [0.728, [0.729, 0.271, 1.000]], [0.730, [0.729, 0.271, 1.000]], [0.732, [0.733, 0.267, 1.000]], [0.734, [0.733, 0.267, 1.000]], [0.736, [0.737, 0.263, 1.000]], [0.738, [0.737, 0.263, 1.000]], [0.740, [0.741, 0.259, 1.000]], [0.742, [0.741, 0.259, 1.000]], [0.744, [0.745, 0.255, 1.000]], [0.746, [0.745, 0.255, 1.000]], [0.748, [0.749, 0.251, 1.000]], [0.750, [0.749, 0.251, 1.000]], [0.751, [0.753, 0.247, 1.000]], [0.753, [0.753, 0.247, 1.000]], [0.755, [0.757, 0.243, 1.000]], [0.757, [0.757, 0.243, 1.000]], [0.759, [0.761, 0.239, 1.000]], [0.761, [0.761, 0.239, 1.000]], [0.763, [0.765, 0.235, 1.000]], [0.765, [0.765, 0.235, 1.000]], [0.767, [0.769, 0.231, 1.000]], [0.769, [0.769, 0.231, 1.000]], [0.771, [0.773, 0.227, 1.000]], [0.773, [0.773, 0.227, 1.000]], [0.775, [0.776, 0.224, 1.000]], [0.777, [0.776, 0.224, 1.000]], [0.779, [0.780, 0.220, 1.000]], [0.781, [0.780, 0.220, 1.000]], [0.783, [0.784, 0.216, 1.000]], [0.785, [0.784, 0.216, 1.000]], [0.787, [0.788, 0.212, 1.000]], [0.789, [0.788, 0.212, 1.000]], [0.791, [0.792, 0.208, 1.000]], [0.793, [0.792, 0.208, 1.000]], [0.795, [0.796, 0.204, 1.000]], [0.796, [0.796, 0.204, 1.000]], [0.798, [0.800, 0.200, 1.000]], [0.800, [0.800, 0.200, 1.000]], [0.802, [0.804, 0.196, 1.000]], [0.804, [0.804, 0.196, 1.000]], [0.806, [0.808, 0.192, 1.000]], [0.808, [0.808, 0.192, 1.000]], [0.810, [0.812, 0.188, 1.000]], [0.812, [0.812, 0.188, 1.000]], [0.814, [0.816, 0.184, 1.000]], [0.816, [0.816, 0.184, 1.000]], [0.818, [0.820, 0.180, 1.000]], [0.820, [0.820, 0.180, 1.000]], [0.822, [0.824, 0.176, 1.000]], [0.824, [0.824, 0.176, 1.000]], [0.826, [0.827, 0.173, 1.000]], [0.828, [0.827, 0.173, 1.000]], [0.830, [0.831, 0.169, 1.000]], [0.832, [0.831, 0.169, 1.000]], [0.834, [0.835, 0.165, 1.000]], [0.836, [0.835, 0.165, 1.000]], [0.838, [0.839, 0.161, 1.000]], [0.840, [0.839, 0.161, 1.000]], [0.841, [0.843, 0.157, 1.000]], [0.843, [0.843, 0.157, 1.000]], [0.845, [0.847, 0.153, 1.000]], [0.847, [0.847, 0.153, 1.000]], [0.849, [0.851, 0.149, 1.000]], [0.851, [0.851, 0.149, 1.000]], [0.853, [0.855, 0.145, 1.000]], [0.855, [0.855, 0.145, 1.000]], [0.857, [0.859, 0.141, 1.000]], [0.859, [0.859, 0.141, 1.000]], [0.861, [0.863, 0.137, 1.000]], [0.863, [0.863, 0.137, 1.000]], [0.865, [0.867, 0.133, 1.000]], [0.867, [0.867, 0.133, 1.000]], [0.869, [0.871, 0.129, 1.000]], [0.871, [0.871, 0.129, 1.000]], [0.873, [0.875, 0.125, 1.000]], [0.875, [0.875, 0.125, 1.000]], [0.877, [0.878, 0.122, 1.000]], [0.879, [0.878, 0.122, 1.000]], [0.881, [0.882, 0.118, 1.000]], [0.883, [0.882, 0.118, 1.000]], [0.885, [0.886, 0.114, 1.000]], [0.886, [0.886, 0.114, 1.000]], [0.888, [0.890, 0.110, 1.000]], [0.890, [0.890, 0.110, 1.000]], [0.892, [0.894, 0.106, 1.000]], [0.894, [0.894, 0.106, 1.000]], [0.896, [0.898, 0.102, 1.000]], [0.898, [0.898, 0.102, 1.000]], [0.900, [0.902, 0.098, 1.000]], [0.902, [0.902, 0.098, 1.000]], [0.904, [0.906, 0.094, 1.000]], [0.906, [0.906, 0.094, 1.000]], [0.908, [0.910, 0.090, 1.000]], [0.910, [0.910, 0.090, 1.000]], [0.912, [0.914, 0.086, 1.000]], [0.914, [0.914, 0.086, 1.000]], [0.916, [0.918, 0.082, 1.000]], [0.918, [0.918, 0.082, 1.000]], [0.920, [0.922, 0.078, 1.000]], [0.922, [0.922, 0.078, 1.000]], [0.924, [0.925, 0.075, 1.000]], [0.926, [0.925, 0.075, 1.000]], [0.928, [0.929, 0.071, 1.000]], [0.930, [0.929, 0.071, 1.000]], [0.932, [0.933, 0.067, 1.000]], [0.933, [0.933, 0.067, 1.000]], [0.935, [0.937, 0.063, 1.000]], [0.937, [0.937, 0.063, 1.000]], [0.939, [0.941, 0.059, 1.000]], [0.941, [0.941, 0.059, 1.000]], [0.943, [0.945, 0.055, 1.000]], [0.945, [0.945, 0.055, 1.000]], [0.947, [0.949, 0.051, 1.000]], [0.949, [0.949, 0.051, 1.000]], [0.951, [0.953, 0.047, 1.000]], [0.953, [0.953, 0.047, 1.000]], [0.955, [0.957, 0.043, 1.000]], [0.957, [0.957, 0.043, 1.000]], [0.959, [0.961, 0.039, 1.000]], [0.961, [0.961, 0.039, 1.000]], [0.963, [0.965, 0.035, 1.000]], [0.965, [0.965, 0.035, 1.000]], [0.967, [0.969, 0.031, 1.000]], [0.969, [0.969, 0.031, 1.000]], [0.971, [0.973, 0.027, 1.000]], [0.973, [0.973, 0.027, 1.000]], [0.975, [0.976, 0.024, 1.000]], [0.977, [0.976, 0.024, 1.000]], [0.978, [0.980, 0.020, 1.000]], [0.980, [0.980, 0.020, 1.000]], [0.982, [0.984, 0.016, 1.000]], [0.984, [0.984, 0.016, 1.000]], [0.986, [0.988, 0.012, 1.000]], [0.988, [0.988, 0.012, 1.000]], [0.990, [0.992, 0.008, 1.000]], [0.992, [0.992, 0.008, 1.000]], [0.994, [0.996, 0.004, 1.000]], [0.996, [0.996, 0.004, 1.000]], [0.998, [1.000, 0.000, 1.000]], [1.000, [1.000, 0.000, 1.000]]];
H.colormap_coolwarm = [[0.000, [0.230, 0.299, 0.754]], [0.002, [0.230, 0.299, 0.754]], [0.004, [0.234, 0.306, 0.760]], [0.006, [0.234, 0.306, 0.760]], [0.008, [0.239, 0.312, 0.766]], [0.010, [0.239, 0.312, 0.766]], [0.012, [0.244, 0.319, 0.772]], [0.014, [0.244, 0.319, 0.772]], [0.016, [0.248, 0.326, 0.778]], [0.018, [0.248, 0.326, 0.778]], [0.020, [0.253, 0.333, 0.784]], [0.022, [0.253, 0.333, 0.784]], [0.023, [0.257, 0.340, 0.790]], [0.025, [0.257, 0.340, 0.790]], [0.027, [0.262, 0.346, 0.796]], [0.029, [0.262, 0.346, 0.796]], [0.031, [0.266, 0.353, 0.802]], [0.033, [0.266, 0.353, 0.802]], [0.035, [0.271, 0.360, 0.807]], [0.037, [0.271, 0.360, 0.807]], [0.039, [0.276, 0.367, 0.813]], [0.041, [0.276, 0.367, 0.813]], [0.043, [0.281, 0.373, 0.818]], [0.045, [0.281, 0.373, 0.818]], [0.047, [0.285, 0.380, 0.823]], [0.049, [0.285, 0.380, 0.823]], [0.051, [0.290, 0.387, 0.829]], [0.053, [0.290, 0.387, 0.829]], [0.055, [0.295, 0.394, 0.834]], [0.057, [0.295, 0.394, 0.834]], [0.059, [0.299, 0.400, 0.840]], [0.061, [0.299, 0.400, 0.840]], [0.063, [0.304, 0.407, 0.845]], [0.065, [0.304, 0.407, 0.845]], [0.067, [0.309, 0.413, 0.850]], [0.068, [0.309, 0.413, 0.850]], [0.070, [0.314, 0.420, 0.855]], [0.072, [0.314, 0.420, 0.855]], [0.074, [0.319, 0.427, 0.860]], [0.076, [0.319, 0.427, 0.860]], [0.078, [0.324, 0.433, 0.865]], [0.080, [0.324, 0.433, 0.865]], [0.082, [0.329, 0.440, 0.870]], [0.084, [0.329, 0.440, 0.870]], [0.086, [0.333, 0.446, 0.874]], [0.088, [0.333, 0.446, 0.874]], [0.090, [0.338, 0.453, 0.879]], [0.092, [0.338, 0.453, 0.879]], [0.094, [0.343, 0.459, 0.884]], [0.096, [0.343, 0.459, 0.884]], [0.098, [0.348, 0.466, 0.888]], [0.100, [0.348, 0.466, 0.888]], [0.102, [0.353, 0.472, 0.893]], [0.104, [0.353, 0.472, 0.893]], [0.106, [0.358, 0.478, 0.897]], [0.108, [0.358, 0.478, 0.897]], [0.110, [0.363, 0.485, 0.901]], [0.112, [0.363, 0.485, 0.901]], [0.114, [0.369, 0.491, 0.905]], [0.115, [0.369, 0.491, 0.905]], [0.117, [0.374, 0.497, 0.909]], [0.119, [0.374, 0.497, 0.909]], [0.121, [0.379, 0.504, 0.914]], [0.123, [0.379, 0.504, 0.914]], [0.125, [0.384, 0.510, 0.918]], [0.127, [0.384, 0.510, 0.918]], [0.129, [0.389, 0.516, 0.921]], [0.131, [0.389, 0.516, 0.921]], [0.133, [0.394, 0.522, 0.925]], [0.135, [0.394, 0.522, 0.925]], [0.137, [0.399, 0.529, 0.928]], [0.139, [0.399, 0.529, 0.928]], [0.141, [0.404, 0.535, 0.932]], [0.143, [0.404, 0.535, 0.932]], [0.145, [0.410, 0.541, 0.936]], [0.147, [0.410, 0.541, 0.936]], [0.149, [0.415, 0.547, 0.939]], [0.151, [0.415, 0.547, 0.939]], [0.153, [0.420, 0.553, 0.943]], [0.155, [0.420, 0.553, 0.943]], [0.157, [0.425, 0.559, 0.946]], [0.159, [0.425, 0.559, 0.946]], [0.160, [0.431, 0.565, 0.949]], [0.162, [0.431, 0.565, 0.949]], [0.164, [0.436, 0.571, 0.952]], [0.166, [0.436, 0.571, 0.952]], [0.168, [0.441, 0.577, 0.955]], [0.170, [0.441, 0.577, 0.955]], [0.172, [0.446, 0.582, 0.957]], [0.174, [0.446, 0.582, 0.957]], [0.176, [0.452, 0.588, 0.960]], [0.178, [0.452, 0.588, 0.960]], [0.180, [0.457, 0.594, 0.963]], [0.182, [0.457, 0.594, 0.963]], [0.184, [0.462, 0.600, 0.966]], [0.186, [0.462, 0.600, 0.966]], [0.188, [0.468, 0.606, 0.969]], [0.190, [0.468, 0.606, 0.969]], [0.192, [0.473, 0.611, 0.971]], [0.194, [0.473, 0.611, 0.971]], [0.196, [0.478, 0.617, 0.973]], [0.198, [0.478, 0.617, 0.973]], [0.200, [0.484, 0.622, 0.975]], [0.202, [0.484, 0.622, 0.975]], [0.204, [0.489, 0.628, 0.977]], [0.205, [0.489, 0.628, 0.977]], [0.207, [0.495, 0.633, 0.979]], [0.209, [0.495, 0.633, 0.979]], [0.211, [0.500, 0.639, 0.981]], [0.213, [0.500, 0.639, 0.981]], [0.215, [0.505, 0.644, 0.983]], [0.217, [0.505, 0.644, 0.983]], [0.219, [0.511, 0.649, 0.985]], [0.221, [0.511, 0.649, 0.985]], [0.223, [0.516, 0.654, 0.986]], [0.225, [0.516, 0.654, 0.986]], [0.227, [0.522, 0.660, 0.988]], [0.229, [0.522, 0.660, 0.988]], [0.231, [0.527, 0.665, 0.989]], [0.233, [0.527, 0.665, 0.989]], [0.235, [0.533, 0.670, 0.990]], [0.237, [0.533, 0.670, 0.990]], [0.239, [0.538, 0.675, 0.992]], [0.241, [0.538, 0.675, 0.992]], [0.243, [0.543, 0.680, 0.993]], [0.245, [0.543, 0.680, 0.993]], [0.247, [0.549, 0.685, 0.994]], [0.249, [0.549, 0.685, 0.994]], [0.250, [0.554, 0.690, 0.996]], [0.252, [0.554, 0.690, 0.996]], [0.254, [0.560, 0.695, 0.996]], [0.256, [0.560, 0.695, 0.996]], [0.258, [0.565, 0.699, 0.997]], [0.260, [0.565, 0.699, 0.997]], [0.262, [0.571, 0.704, 0.997]], [0.264, [0.571, 0.704, 0.997]], [0.266, [0.576, 0.709, 0.998]], [0.268, [0.576, 0.709, 0.998]], [0.270, [0.581, 0.713, 0.998]], [0.272, [0.581, 0.713, 0.998]], [0.274, [0.587, 0.718, 0.999]], [0.276, [0.587, 0.718, 0.999]], [0.278, [0.592, 0.723, 0.999]], [0.280, [0.592, 0.723, 0.999]], [0.282, [0.598, 0.727, 1.000]], [0.284, [0.598, 0.727, 1.000]], [0.286, [0.603, 0.732, 1.000]], [0.288, [0.603, 0.732, 1.000]], [0.290, [0.609, 0.736, 0.999]], [0.292, [0.609, 0.736, 0.999]], [0.294, [0.614, 0.740, 0.999]], [0.295, [0.614, 0.740, 0.999]], [0.297, [0.619, 0.744, 0.999]], [0.299, [0.619, 0.744, 0.999]], [0.301, [0.625, 0.748, 0.999]], [0.303, [0.625, 0.748, 0.999]], [0.305, [0.630, 0.753, 0.999]], [0.307, [0.630, 0.753, 0.999]], [0.309, [0.635, 0.757, 0.998]], [0.311, [0.635, 0.757, 0.998]], [0.313, [0.641, 0.761, 0.998]], [0.315, [0.641, 0.761, 0.998]], [0.317, [0.646, 0.764, 0.997]], [0.319, [0.646, 0.764, 0.997]], [0.321, [0.651, 0.768, 0.996]], [0.323, [0.651, 0.768, 0.996]], [0.325, [0.657, 0.772, 0.995]], [0.327, [0.657, 0.772, 0.995]], [0.329, [0.662, 0.775, 0.994]], [0.331, [0.662, 0.775, 0.994]], [0.333, [0.667, 0.779, 0.993]], [0.335, [0.667, 0.779, 0.993]], [0.337, [0.673, 0.783, 0.992]], [0.339, [0.673, 0.783, 0.992]], [0.341, [0.678, 0.787, 0.991]], [0.342, [0.678, 0.787, 0.991]], [0.344, [0.683, 0.790, 0.990]], [0.346, [0.683, 0.790, 0.990]], [0.348, [0.688, 0.793, 0.988]], [0.350, [0.688, 0.793, 0.988]], [0.352, [0.693, 0.796, 0.986]], [0.354, [0.693, 0.796, 0.986]], [0.356, [0.698, 0.799, 0.985]], [0.358, [0.698, 0.799, 0.985]], [0.360, [0.704, 0.803, 0.983]], [0.362, [0.704, 0.803, 0.983]], [0.364, [0.709, 0.806, 0.981]], [0.366, [0.709, 0.806, 0.981]], [0.368, [0.714, 0.809, 0.979]], [0.370, [0.714, 0.809, 0.979]], [0.372, [0.719, 0.812, 0.978]], [0.374, [0.719, 0.812, 0.978]], [0.376, [0.724, 0.815, 0.976]], [0.378, [0.724, 0.815, 0.976]], [0.380, [0.729, 0.817, 0.973]], [0.382, [0.729, 0.817, 0.973]], [0.384, [0.734, 0.820, 0.971]], [0.386, [0.734, 0.820, 0.971]], [0.387, [0.739, 0.823, 0.968]], [0.389, [0.739, 0.823, 0.968]], [0.391, [0.744, 0.825, 0.966]], [0.393, [0.744, 0.825, 0.966]], [0.395, [0.749, 0.828, 0.963]], [0.397, [0.749, 0.828, 0.963]], [0.399, [0.754, 0.830, 0.961]], [0.401, [0.754, 0.830, 0.961]], [0.403, [0.759, 0.833, 0.958]], [0.405, [0.759, 0.833, 0.958]], [0.407, [0.763, 0.835, 0.956]], [0.409, [0.763, 0.835, 0.956]], [0.411, [0.768, 0.837, 0.952]], [0.413, [0.768, 0.837, 0.952]], [0.415, [0.773, 0.839, 0.949]], [0.417, [0.773, 0.839, 0.949]], [0.419, [0.777, 0.841, 0.946]], [0.421, [0.777, 0.841, 0.946]], [0.423, [0.782, 0.843, 0.943]], [0.425, [0.782, 0.843, 0.943]], [0.427, [0.787, 0.845, 0.940]], [0.429, [0.787, 0.845, 0.940]], [0.431, [0.791, 0.847, 0.937]], [0.432, [0.791, 0.847, 0.937]], [0.434, [0.796, 0.849, 0.933]], [0.436, [0.796, 0.849, 0.933]], [0.438, [0.801, 0.850, 0.930]], [0.440, [0.801, 0.850, 0.930]], [0.442, [0.805, 0.852, 0.926]], [0.444, [0.805, 0.852, 0.926]], [0.446, [0.809, 0.853, 0.922]], [0.448, [0.809, 0.853, 0.922]], [0.450, [0.814, 0.854, 0.918]], [0.452, [0.814, 0.854, 0.918]], [0.454, [0.818, 0.856, 0.915]], [0.456, [0.818, 0.856, 0.915]], [0.458, [0.822, 0.857, 0.911]], [0.460, [0.822, 0.857, 0.911]], [0.462, [0.827, 0.858, 0.907]], [0.464, [0.827, 0.858, 0.907]], [0.466, [0.831, 0.860, 0.903]], [0.468, [0.831, 0.860, 0.903]], [0.470, [0.835, 0.861, 0.899]], [0.472, [0.835, 0.861, 0.899]], [0.474, [0.839, 0.861, 0.894]], [0.476, [0.839, 0.861, 0.894]], [0.477, [0.843, 0.862, 0.890]], [0.479, [0.843, 0.862, 0.890]], [0.481, [0.847, 0.862, 0.886]], [0.483, [0.847, 0.862, 0.886]], [0.485, [0.851, 0.863, 0.881]], [0.487, [0.851, 0.863, 0.881]], [0.489, [0.855, 0.864, 0.877]], [0.491, [0.855, 0.864, 0.877]], [0.493, [0.859, 0.864, 0.872]], [0.495, [0.859, 0.864, 0.872]], [0.497, [0.863, 0.865, 0.868]], [0.499, [0.863, 0.865, 0.868]], [0.501, [0.867, 0.864, 0.863]], [0.503, [0.867, 0.864, 0.863]], [0.505, [0.871, 0.862, 0.857]], [0.507, [0.871, 0.862, 0.857]], [0.509, [0.876, 0.860, 0.851]], [0.511, [0.876, 0.860, 0.851]], [0.513, [0.880, 0.858, 0.846]], [0.515, [0.880, 0.858, 0.846]], [0.517, [0.884, 0.856, 0.840]], [0.519, [0.884, 0.856, 0.840]], [0.521, [0.888, 0.854, 0.835]], [0.523, [0.888, 0.854, 0.835]], [0.524, [0.892, 0.852, 0.829]], [0.526, [0.892, 0.852, 0.829]], [0.528, [0.896, 0.850, 0.823]], [0.530, [0.896, 0.850, 0.823]], [0.532, [0.900, 0.848, 0.818]], [0.534, [0.900, 0.848, 0.818]], [0.536, [0.903, 0.845, 0.812]], [0.538, [0.903, 0.845, 0.812]], [0.540, [0.906, 0.842, 0.806]], [0.542, [0.906, 0.842, 0.806]], [0.544, [0.909, 0.839, 0.800]], [0.546, [0.909, 0.839, 0.800]], [0.548, [0.913, 0.837, 0.795]], [0.550, [0.913, 0.837, 0.795]], [0.552, [0.916, 0.834, 0.789]], [0.554, [0.916, 0.834, 0.789]], [0.556, [0.919, 0.831, 0.783]], [0.558, [0.919, 0.831, 0.783]], [0.560, [0.923, 0.829, 0.777]], [0.562, [0.923, 0.829, 0.777]], [0.564, [0.926, 0.826, 0.771]], [0.566, [0.926, 0.826, 0.771]], [0.568, [0.928, 0.822, 0.765]], [0.569, [0.928, 0.822, 0.765]], [0.571, [0.931, 0.819, 0.759]], [0.573, [0.931, 0.819, 0.759]], [0.575, [0.933, 0.816, 0.753]], [0.577, [0.933, 0.816, 0.753]], [0.579, [0.936, 0.812, 0.747]], [0.581, [0.936, 0.812, 0.747]], [0.583, [0.938, 0.809, 0.741]], [0.585, [0.938, 0.809, 0.741]], [0.587, [0.941, 0.806, 0.735]], [0.589, [0.941, 0.806, 0.735]], [0.591, [0.943, 0.802, 0.729]], [0.593, [0.943, 0.802, 0.729]], [0.595, [0.946, 0.799, 0.723]], [0.597, [0.946, 0.799, 0.723]], [0.599, [0.947, 0.795, 0.717]], [0.601, [0.947, 0.795, 0.717]], [0.603, [0.949, 0.791, 0.711]], [0.605, [0.949, 0.791, 0.711]], [0.607, [0.951, 0.787, 0.705]], [0.609, [0.951, 0.787, 0.705]], [0.611, [0.953, 0.783, 0.699]], [0.613, [0.953, 0.783, 0.699]], [0.614, [0.955, 0.779, 0.693]], [0.616, [0.955, 0.779, 0.693]], [0.618, [0.956, 0.775, 0.686]], [0.620, [0.956, 0.775, 0.686]], [0.622, [0.958, 0.771, 0.680]], [0.624, [0.958, 0.771, 0.680]], [0.626, [0.960, 0.767, 0.674]], [0.628, [0.960, 0.767, 0.674]], [0.630, [0.961, 0.763, 0.668]], [0.632, [0.961, 0.763, 0.668]], [0.634, [0.962, 0.758, 0.662]], [0.636, [0.962, 0.758, 0.662]], [0.638, [0.963, 0.754, 0.656]], [0.640, [0.963, 0.754, 0.656]], [0.642, [0.964, 0.749, 0.649]], [0.644, [0.964, 0.749, 0.649]], [0.646, [0.965, 0.745, 0.643]], [0.648, [0.965, 0.745, 0.643]], [0.650, [0.966, 0.740, 0.637]], [0.652, [0.966, 0.740, 0.637]], [0.654, [0.967, 0.736, 0.631]], [0.656, [0.967, 0.736, 0.631]], [0.658, [0.968, 0.731, 0.625]], [0.659, [0.968, 0.731, 0.625]], [0.661, [0.968, 0.726, 0.618]], [0.663, [0.968, 0.726, 0.618]], [0.665, [0.968, 0.721, 0.612]], [0.667, [0.968, 0.721, 0.612]], [0.669, [0.969, 0.716, 0.606]], [0.671, [0.969, 0.716, 0.606]], [0.673, [0.969, 0.711, 0.600]], [0.675, [0.969, 0.711, 0.600]], [0.677, [0.969, 0.706, 0.594]], [0.679, [0.969, 0.706, 0.594]], [0.681, [0.970, 0.701, 0.588]], [0.683, [0.970, 0.701, 0.588]], [0.685, [0.970, 0.696, 0.581]], [0.687, [0.970, 0.696, 0.581]], [0.689, [0.970, 0.690, 0.575]], [0.691, [0.970, 0.690, 0.575]], [0.693, [0.969, 0.685, 0.569]], [0.695, [0.969, 0.685, 0.569]], [0.697, [0.969, 0.679, 0.563]], [0.699, [0.969, 0.679, 0.563]], [0.701, [0.968, 0.674, 0.557]], [0.703, [0.968, 0.674, 0.557]], [0.705, [0.968, 0.668, 0.550]], [0.706, [0.968, 0.668, 0.550]], [0.708, [0.968, 0.663, 0.544]], [0.710, [0.968, 0.663, 0.544]], [0.712, [0.967, 0.657, 0.538]], [0.714, [0.967, 0.657, 0.538]], [0.716, [0.967, 0.652, 0.532]], [0.718, [0.967, 0.652, 0.532]], [0.720, [0.966, 0.646, 0.526]], [0.722, [0.966, 0.646, 0.526]], [0.724, [0.965, 0.640, 0.520]], [0.726, [0.965, 0.640, 0.520]], [0.728, [0.964, 0.634, 0.514]], [0.730, [0.964, 0.634, 0.514]], [0.732, [0.963, 0.628, 0.508]], [0.734, [0.963, 0.628, 0.508]], [0.736, [0.962, 0.622, 0.502]], [0.738, [0.962, 0.622, 0.502]], [0.740, [0.960, 0.616, 0.495]], [0.742, [0.960, 0.616, 0.495]], [0.744, [0.959, 0.610, 0.489]], [0.746, [0.959, 0.610, 0.489]], [0.748, [0.958, 0.604, 0.483]], [0.750, [0.958, 0.604, 0.483]], [0.751, [0.957, 0.598, 0.477]], [0.753, [0.957, 0.598, 0.477]], [0.755, [0.955, 0.592, 0.471]], [0.757, [0.955, 0.592, 0.471]], [0.759, [0.953, 0.585, 0.465]], [0.761, [0.953, 0.585, 0.465]], [0.763, [0.951, 0.579, 0.459]], [0.765, [0.951, 0.579, 0.459]], [0.767, [0.949, 0.572, 0.453]], [0.769, [0.949, 0.572, 0.453]], [0.771, [0.948, 0.566, 0.447]], [0.773, [0.948, 0.566, 0.447]], [0.775, [0.946, 0.560, 0.442]], [0.777, [0.946, 0.560, 0.442]], [0.779, [0.944, 0.553, 0.436]], [0.781, [0.944, 0.553, 0.436]], [0.783, [0.942, 0.546, 0.430]], [0.785, [0.942, 0.546, 0.430]], [0.787, [0.939, 0.540, 0.424]], [0.789, [0.939, 0.540, 0.424]], [0.791, [0.937, 0.533, 0.418]], [0.793, [0.937, 0.533, 0.418]], [0.795, [0.934, 0.526, 0.412]], [0.796, [0.934, 0.526, 0.412]], [0.798, [0.932, 0.519, 0.406]], [0.800, [0.932, 0.519, 0.406]], [0.802, [0.929, 0.512, 0.401]], [0.804, [0.929, 0.512, 0.401]], [0.806, [0.927, 0.505, 0.395]], [0.808, [0.927, 0.505, 0.395]], [0.810, [0.924, 0.499, 0.389]], [0.812, [0.924, 0.499, 0.389]], [0.814, [0.921, 0.491, 0.383]], [0.816, [0.921, 0.491, 0.383]], [0.818, [0.918, 0.484, 0.378]], [0.820, [0.918, 0.484, 0.378]], [0.822, [0.915, 0.477, 0.372]], [0.824, [0.915, 0.477, 0.372]], [0.826, [0.912, 0.470, 0.367]], [0.828, [0.912, 0.470, 0.367]], [0.830, [0.909, 0.462, 0.361]], [0.832, [0.909, 0.462, 0.361]], [0.834, [0.906, 0.455, 0.355]], [0.836, [0.906, 0.455, 0.355]], [0.838, [0.903, 0.448, 0.350]], [0.840, [0.903, 0.448, 0.350]], [0.841, [0.900, 0.441, 0.344]], [0.843, [0.900, 0.441, 0.344]], [0.845, [0.896, 0.433, 0.339]], [0.847, [0.896, 0.433, 0.339]], [0.849, [0.892, 0.425, 0.333]], [0.851, [0.892, 0.425, 0.333]], [0.853, [0.888, 0.418, 0.328]], [0.855, [0.888, 0.418, 0.328]], [0.857, [0.885, 0.410, 0.323]], [0.859, [0.885, 0.410, 0.323]], [0.861, [0.881, 0.402, 0.317]], [0.863, [0.881, 0.402, 0.317]], [0.865, [0.877, 0.395, 0.312]], [0.867, [0.877, 0.395, 0.312]], [0.869, [0.873, 0.387, 0.306]], [0.871, [0.873, 0.387, 0.306]], [0.873, [0.870, 0.379, 0.301]], [0.875, [0.870, 0.379, 0.301]], [0.877, [0.865, 0.371, 0.296]], [0.879, [0.865, 0.371, 0.296]], [0.881, [0.861, 0.363, 0.291]], [0.883, [0.861, 0.363, 0.291]], [0.885, [0.857, 0.355, 0.285]], [0.886, [0.857, 0.355, 0.285]], [0.888, [0.852, 0.346, 0.280]], [0.890, [0.852, 0.346, 0.280]], [0.892, [0.848, 0.338, 0.275]], [0.894, [0.848, 0.338, 0.275]], [0.896, [0.844, 0.330, 0.270]], [0.898, [0.844, 0.330, 0.270]], [0.900, [0.839, 0.322, 0.265]], [0.902, [0.839, 0.322, 0.265]], [0.904, [0.835, 0.314, 0.260]], [0.906, [0.835, 0.314, 0.260]], [0.908, [0.830, 0.305, 0.255]], [0.910, [0.830, 0.305, 0.255]], [0.912, [0.825, 0.296, 0.250]], [0.914, [0.825, 0.296, 0.250]], [0.916, [0.820, 0.287, 0.245]], [0.918, [0.820, 0.287, 0.245]], [0.920, [0.816, 0.278, 0.240]], [0.922, [0.816, 0.278, 0.240]], [0.924, [0.811, 0.269, 0.235]], [0.926, [0.811, 0.269, 0.235]], [0.928, [0.806, 0.260, 0.231]], [0.930, [0.806, 0.260, 0.231]], [0.932, [0.801, 0.251, 0.226]], [0.933, [0.801, 0.251, 0.226]], [0.935, [0.796, 0.242, 0.221]], [0.937, [0.796, 0.242, 0.221]], [0.939, [0.791, 0.231, 0.216]], [0.941, [0.791, 0.231, 0.216]], [0.943, [0.785, 0.221, 0.212]], [0.945, [0.785, 0.221, 0.212]], [0.947, [0.780, 0.210, 0.207]], [0.949, [0.780, 0.210, 0.207]], [0.951, [0.774, 0.200, 0.203]], [0.953, [0.774, 0.200, 0.203]], [0.955, [0.769, 0.189, 0.198]], [0.957, [0.769, 0.189, 0.198]], [0.959, [0.764, 0.179, 0.193]], [0.961, [0.764, 0.179, 0.193]], [0.963, [0.758, 0.168, 0.189]], [0.965, [0.758, 0.168, 0.189]], [0.967, [0.753, 0.158, 0.184]], [0.969, [0.753, 0.158, 0.184]], [0.971, [0.747, 0.140, 0.180]], [0.973, [0.747, 0.140, 0.180]], [0.975, [0.741, 0.122, 0.176]], [0.977, [0.741, 0.122, 0.176]], [0.978, [0.735, 0.104, 0.171]], [0.980, [0.735, 0.104, 0.171]], [0.982, [0.729, 0.087, 0.167]], [0.984, [0.729, 0.087, 0.167]], [0.986, [0.723, 0.069, 0.163]], [0.988, [0.723, 0.069, 0.163]], [0.990, [0.717, 0.051, 0.159]], [0.992, [0.717, 0.051, 0.159]], [0.994, [0.712, 0.033, 0.154]], [0.996, [0.712, 0.033, 0.154]], [0.998, [0.706, 0.016, 0.150]], [1.000, [0.706, 0.016, 0.150]]];
H.colormap_copper = [[0.000, [0.000, 0.000, 0.000]], [0.002, [0.000, 0.000, 0.000]], [0.004, [0.005, 0.003, 0.002]], [0.006, [0.005, 0.003, 0.002]], [0.008, [0.010, 0.006, 0.004]], [0.010, [0.010, 0.006, 0.004]], [0.012, [0.015, 0.009, 0.006]], [0.014, [0.015, 0.009, 0.006]], [0.016, [0.019, 0.012, 0.008]], [0.018, [0.019, 0.012, 0.008]], [0.020, [0.024, 0.015, 0.010]], [0.022, [0.024, 0.015, 0.010]], [0.023, [0.029, 0.018, 0.012]], [0.025, [0.029, 0.018, 0.012]], [0.027, [0.034, 0.021, 0.014]], [0.029, [0.034, 0.021, 0.014]], [0.031, [0.039, 0.025, 0.016]], [0.033, [0.039, 0.025, 0.016]], [0.035, [0.044, 0.028, 0.018]], [0.037, [0.044, 0.028, 0.018]], [0.039, [0.048, 0.031, 0.020]], [0.041, [0.048, 0.031, 0.020]], [0.043, [0.053, 0.034, 0.021]], [0.045, [0.053, 0.034, 0.021]], [0.047, [0.058, 0.037, 0.023]], [0.049, [0.058, 0.037, 0.023]], [0.051, [0.063, 0.040, 0.025]], [0.053, [0.063, 0.040, 0.025]], [0.055, [0.068, 0.043, 0.027]], [0.057, [0.068, 0.043, 0.027]], [0.059, [0.073, 0.046, 0.029]], [0.061, [0.073, 0.046, 0.029]], [0.063, [0.078, 0.049, 0.031]], [0.065, [0.078, 0.049, 0.031]], [0.067, [0.082, 0.052, 0.033]], [0.068, [0.082, 0.052, 0.033]], [0.070, [0.087, 0.055, 0.035]], [0.072, [0.087, 0.055, 0.035]], [0.074, [0.092, 0.058, 0.037]], [0.076, [0.092, 0.058, 0.037]], [0.078, [0.097, 0.061, 0.039]], [0.080, [0.097, 0.061, 0.039]], [0.082, [0.102, 0.064, 0.041]], [0.084, [0.102, 0.064, 0.041]], [0.086, [0.107, 0.067, 0.043]], [0.088, [0.107, 0.067, 0.043]], [0.090, [0.111, 0.070, 0.045]], [0.092, [0.111, 0.070, 0.045]], [0.094, [0.116, 0.074, 0.047]], [0.096, [0.116, 0.074, 0.047]], [0.098, [0.121, 0.077, 0.049]], [0.100, [0.121, 0.077, 0.049]], [0.102, [0.126, 0.080, 0.051]], [0.104, [0.126, 0.080, 0.051]], [0.106, [0.131, 0.083, 0.053]], [0.108, [0.131, 0.083, 0.053]], [0.110, [0.136, 0.086, 0.055]], [0.112, [0.136, 0.086, 0.055]], [0.114, [0.140, 0.089, 0.057]], [0.115, [0.140, 0.089, 0.057]], [0.117, [0.145, 0.092, 0.059]], [0.119, [0.145, 0.092, 0.059]], [0.121, [0.150, 0.095, 0.060]], [0.123, [0.150, 0.095, 0.060]], [0.125, [0.155, 0.098, 0.062]], [0.127, [0.155, 0.098, 0.062]], [0.129, [0.160, 0.101, 0.064]], [0.131, [0.160, 0.101, 0.064]], [0.133, [0.165, 0.104, 0.066]], [0.135, [0.165, 0.104, 0.066]], [0.137, [0.170, 0.107, 0.068]], [0.139, [0.170, 0.107, 0.068]], [0.141, [0.174, 0.110, 0.070]], [0.143, [0.174, 0.110, 0.070]], [0.145, [0.179, 0.113, 0.072]], [0.147, [0.179, 0.113, 0.072]], [0.149, [0.184, 0.116, 0.074]], [0.151, [0.184, 0.116, 0.074]], [0.153, [0.189, 0.119, 0.076]], [0.155, [0.189, 0.119, 0.076]], [0.157, [0.194, 0.123, 0.078]], [0.159, [0.194, 0.123, 0.078]], [0.160, [0.199, 0.126, 0.080]], [0.162, [0.199, 0.126, 0.080]], [0.164, [0.203, 0.129, 0.082]], [0.166, [0.203, 0.129, 0.082]], [0.168, [0.208, 0.132, 0.084]], [0.170, [0.208, 0.132, 0.084]], [0.172, [0.213, 0.135, 0.086]], [0.174, [0.213, 0.135, 0.086]], [0.176, [0.218, 0.138, 0.088]], [0.178, [0.218, 0.138, 0.088]], [0.180, [0.223, 0.141, 0.090]], [0.182, [0.223, 0.141, 0.090]], [0.184, [0.228, 0.144, 0.092]], [0.186, [0.228, 0.144, 0.092]], [0.188, [0.233, 0.147, 0.094]], [0.190, [0.233, 0.147, 0.094]], [0.192, [0.237, 0.150, 0.096]], [0.194, [0.237, 0.150, 0.096]], [0.196, [0.242, 0.153, 0.098]], [0.198, [0.242, 0.153, 0.098]], [0.200, [0.247, 0.156, 0.100]], [0.202, [0.247, 0.156, 0.100]], [0.204, [0.252, 0.159, 0.101]], [0.205, [0.252, 0.159, 0.101]], [0.207, [0.257, 0.162, 0.103]], [0.209, [0.257, 0.162, 0.103]], [0.211, [0.262, 0.165, 0.105]], [0.213, [0.262, 0.165, 0.105]], [0.215, [0.266, 0.168, 0.107]], [0.217, [0.266, 0.168, 0.107]], [0.219, [0.271, 0.172, 0.109]], [0.221, [0.271, 0.172, 0.109]], [0.223, [0.276, 0.175, 0.111]], [0.225, [0.276, 0.175, 0.111]], [0.227, [0.281, 0.178, 0.113]], [0.229, [0.281, 0.178, 0.113]], [0.231, [0.286, 0.181, 0.115]], [0.233, [0.286, 0.181, 0.115]], [0.235, [0.291, 0.184, 0.117]], [0.237, [0.291, 0.184, 0.117]], [0.239, [0.296, 0.187, 0.119]], [0.241, [0.296, 0.187, 0.119]], [0.243, [0.300, 0.190, 0.121]], [0.245, [0.300, 0.190, 0.121]], [0.247, [0.305, 0.193, 0.123]], [0.249, [0.305, 0.193, 0.123]], [0.250, [0.310, 0.196, 0.125]], [0.252, [0.310, 0.196, 0.125]], [0.254, [0.315, 0.199, 0.127]], [0.256, [0.315, 0.199, 0.127]], [0.258, [0.320, 0.202, 0.129]], [0.260, [0.320, 0.202, 0.129]], [0.262, [0.325, 0.205, 0.131]], [0.264, [0.325, 0.205, 0.131]], [0.266, [0.329, 0.208, 0.133]], [0.268, [0.329, 0.208, 0.133]], [0.270, [0.334, 0.211, 0.135]], [0.272, [0.334, 0.211, 0.135]], [0.274, [0.339, 0.214, 0.137]], [0.276, [0.339, 0.214, 0.137]], [0.278, [0.344, 0.218, 0.139]], [0.280, [0.344, 0.218, 0.139]], [0.282, [0.349, 0.221, 0.140]], [0.284, [0.349, 0.221, 0.140]], [0.286, [0.354, 0.224, 0.142]], [0.288, [0.354, 0.224, 0.142]], [0.290, [0.358, 0.227, 0.144]], [0.292, [0.358, 0.227, 0.144]], [0.294, [0.363, 0.230, 0.146]], [0.295, [0.363, 0.230, 0.146]], [0.297, [0.368, 0.233, 0.148]], [0.299, [0.368, 0.233, 0.148]], [0.301, [0.373, 0.236, 0.150]], [0.303, [0.373, 0.236, 0.150]], [0.305, [0.378, 0.239, 0.152]], [0.307, [0.378, 0.239, 0.152]], [0.309, [0.383, 0.242, 0.154]], [0.311, [0.383, 0.242, 0.154]], [0.313, [0.388, 0.245, 0.156]], [0.315, [0.388, 0.245, 0.156]], [0.317, [0.392, 0.248, 0.158]], [0.319, [0.392, 0.248, 0.158]], [0.321, [0.397, 0.251, 0.160]], [0.323, [0.397, 0.251, 0.160]], [0.325, [0.402, 0.254, 0.162]], [0.327, [0.402, 0.254, 0.162]], [0.329, [0.407, 0.257, 0.164]], [0.331, [0.407, 0.257, 0.164]], [0.333, [0.412, 0.260, 0.166]], [0.335, [0.412, 0.260, 0.166]], [0.337, [0.417, 0.263, 0.168]], [0.339, [0.417, 0.263, 0.168]], [0.341, [0.421, 0.267, 0.170]], [0.342, [0.421, 0.267, 0.170]], [0.344, [0.426, 0.270, 0.172]], [0.346, [0.426, 0.270, 0.172]], [0.348, [0.431, 0.273, 0.174]], [0.350, [0.431, 0.273, 0.174]], [0.352, [0.436, 0.276, 0.176]], [0.354, [0.436, 0.276, 0.176]], [0.356, [0.441, 0.279, 0.178]], [0.358, [0.441, 0.279, 0.178]], [0.360, [0.446, 0.282, 0.179]], [0.362, [0.446, 0.282, 0.179]], [0.364, [0.451, 0.285, 0.181]], [0.366, [0.451, 0.285, 0.181]], [0.368, [0.455, 0.288, 0.183]], [0.370, [0.455, 0.288, 0.183]], [0.372, [0.460, 0.291, 0.185]], [0.374, [0.460, 0.291, 0.185]], [0.376, [0.465, 0.294, 0.187]], [0.378, [0.465, 0.294, 0.187]], [0.380, [0.470, 0.297, 0.189]], [0.382, [0.470, 0.297, 0.189]], [0.384, [0.475, 0.300, 0.191]], [0.386, [0.475, 0.300, 0.191]], [0.387, [0.480, 0.303, 0.193]], [0.389, [0.480, 0.303, 0.193]], [0.391, [0.484, 0.306, 0.195]], [0.393, [0.484, 0.306, 0.195]], [0.395, [0.489, 0.309, 0.197]], [0.397, [0.489, 0.309, 0.197]], [0.399, [0.494, 0.312, 0.199]], [0.401, [0.494, 0.312, 0.199]], [0.403, [0.499, 0.316, 0.201]], [0.405, [0.499, 0.316, 0.201]], [0.407, [0.504, 0.319, 0.203]], [0.409, [0.504, 0.319, 0.203]], [0.411, [0.509, 0.322, 0.205]], [0.413, [0.509, 0.322, 0.205]], [0.415, [0.513, 0.325, 0.207]], [0.417, [0.513, 0.325, 0.207]], [0.419, [0.518, 0.328, 0.209]], [0.421, [0.518, 0.328, 0.209]], [0.423, [0.523, 0.331, 0.211]], [0.425, [0.523, 0.331, 0.211]], [0.427, [0.528, 0.334, 0.213]], [0.429, [0.528, 0.334, 0.213]], [0.431, [0.533, 0.337, 0.215]], [0.432, [0.533, 0.337, 0.215]], [0.434, [0.538, 0.340, 0.217]], [0.436, [0.538, 0.340, 0.217]], [0.438, [0.543, 0.343, 0.219]], [0.440, [0.543, 0.343, 0.219]], [0.442, [0.547, 0.346, 0.220]], [0.444, [0.547, 0.346, 0.220]], [0.446, [0.552, 0.349, 0.222]], [0.448, [0.552, 0.349, 0.222]], [0.450, [0.557, 0.352, 0.224]], [0.452, [0.557, 0.352, 0.224]], [0.454, [0.562, 0.355, 0.226]], [0.456, [0.562, 0.355, 0.226]], [0.458, [0.567, 0.358, 0.228]], [0.460, [0.567, 0.358, 0.228]], [0.462, [0.572, 0.361, 0.230]], [0.464, [0.572, 0.361, 0.230]], [0.466, [0.576, 0.365, 0.232]], [0.468, [0.576, 0.365, 0.232]], [0.470, [0.581, 0.368, 0.234]], [0.472, [0.581, 0.368, 0.234]], [0.474, [0.586, 0.371, 0.236]], [0.476, [0.586, 0.371, 0.236]], [0.477, [0.591, 0.374, 0.238]], [0.479, [0.591, 0.374, 0.238]], [0.481, [0.596, 0.377, 0.240]], [0.483, [0.596, 0.377, 0.240]], [0.485, [0.601, 0.380, 0.242]], [0.487, [0.601, 0.380, 0.242]], [0.489, [0.606, 0.383, 0.244]], [0.491, [0.606, 0.383, 0.244]], [0.493, [0.610, 0.386, 0.246]], [0.495, [0.610, 0.386, 0.246]], [0.497, [0.615, 0.389, 0.248]], [0.499, [0.615, 0.389, 0.248]], [0.501, [0.620, 0.392, 0.250]], [0.503, [0.620, 0.392, 0.250]], [0.505, [0.625, 0.395, 0.252]], [0.507, [0.625, 0.395, 0.252]], [0.509, [0.630, 0.398, 0.254]], [0.511, [0.630, 0.398, 0.254]], [0.513, [0.635, 0.401, 0.256]], [0.515, [0.635, 0.401, 0.256]], [0.517, [0.639, 0.404, 0.258]], [0.519, [0.639, 0.404, 0.258]], [0.521, [0.644, 0.407, 0.259]], [0.523, [0.644, 0.407, 0.259]], [0.524, [0.649, 0.411, 0.261]], [0.526, [0.649, 0.411, 0.261]], [0.528, [0.654, 0.414, 0.263]], [0.530, [0.654, 0.414, 0.263]], [0.532, [0.659, 0.417, 0.265]], [0.534, [0.659, 0.417, 0.265]], [0.536, [0.664, 0.420, 0.267]], [0.538, [0.664, 0.420, 0.267]], [0.540, [0.669, 0.423, 0.269]], [0.542, [0.669, 0.423, 0.269]], [0.544, [0.673, 0.426, 0.271]], [0.546, [0.673, 0.426, 0.271]], [0.548, [0.678, 0.429, 0.273]], [0.550, [0.678, 0.429, 0.273]], [0.552, [0.683, 0.432, 0.275]], [0.554, [0.683, 0.432, 0.275]], [0.556, [0.688, 0.435, 0.277]], [0.558, [0.688, 0.435, 0.277]], [0.560, [0.693, 0.438, 0.279]], [0.562, [0.693, 0.438, 0.279]], [0.564, [0.698, 0.441, 0.281]], [0.566, [0.698, 0.441, 0.281]], [0.568, [0.702, 0.444, 0.283]], [0.569, [0.702, 0.444, 0.283]], [0.571, [0.707, 0.447, 0.285]], [0.573, [0.707, 0.447, 0.285]], [0.575, [0.712, 0.450, 0.287]], [0.577, [0.712, 0.450, 0.287]], [0.579, [0.717, 0.453, 0.289]], [0.581, [0.717, 0.453, 0.289]], [0.583, [0.722, 0.456, 0.291]], [0.585, [0.722, 0.456, 0.291]], [0.587, [0.727, 0.460, 0.293]], [0.589, [0.727, 0.460, 0.293]], [0.591, [0.731, 0.463, 0.295]], [0.593, [0.731, 0.463, 0.295]], [0.595, [0.736, 0.466, 0.297]], [0.597, [0.736, 0.466, 0.297]], [0.599, [0.741, 0.469, 0.298]], [0.601, [0.741, 0.469, 0.298]], [0.603, [0.746, 0.472, 0.300]], [0.605, [0.746, 0.472, 0.300]], [0.607, [0.751, 0.475, 0.302]], [0.609, [0.751, 0.475, 0.302]], [0.611, [0.756, 0.478, 0.304]], [0.613, [0.756, 0.478, 0.304]], [0.614, [0.761, 0.481, 0.306]], [0.616, [0.761, 0.481, 0.306]], [0.618, [0.765, 0.484, 0.308]], [0.620, [0.765, 0.484, 0.308]], [0.622, [0.770, 0.487, 0.310]], [0.624, [0.770, 0.487, 0.310]], [0.626, [0.775, 0.490, 0.312]], [0.628, [0.775, 0.490, 0.312]], [0.630, [0.780, 0.493, 0.314]], [0.632, [0.780, 0.493, 0.314]], [0.634, [0.785, 0.496, 0.316]], [0.636, [0.785, 0.496, 0.316]], [0.638, [0.790, 0.499, 0.318]], [0.640, [0.790, 0.499, 0.318]], [0.642, [0.794, 0.502, 0.320]], [0.644, [0.794, 0.502, 0.320]], [0.646, [0.799, 0.505, 0.322]], [0.648, [0.799, 0.505, 0.322]], [0.650, [0.804, 0.509, 0.324]], [0.652, [0.804, 0.509, 0.324]], [0.654, [0.809, 0.512, 0.326]], [0.656, [0.809, 0.512, 0.326]], [0.658, [0.814, 0.515, 0.328]], [0.659, [0.814, 0.515, 0.328]], [0.661, [0.819, 0.518, 0.330]], [0.663, [0.819, 0.518, 0.330]], [0.665, [0.824, 0.521, 0.332]], [0.667, [0.824, 0.521, 0.332]], [0.669, [0.828, 0.524, 0.334]], [0.671, [0.828, 0.524, 0.334]], [0.673, [0.833, 0.527, 0.336]], [0.675, [0.833, 0.527, 0.336]], [0.677, [0.838, 0.530, 0.338]], [0.679, [0.838, 0.530, 0.338]], [0.681, [0.843, 0.533, 0.339]], [0.683, [0.843, 0.533, 0.339]], [0.685, [0.848, 0.536, 0.341]], [0.687, [0.848, 0.536, 0.341]], [0.689, [0.853, 0.539, 0.343]], [0.691, [0.853, 0.539, 0.343]], [0.693, [0.857, 0.542, 0.345]], [0.695, [0.857, 0.542, 0.345]], [0.697, [0.862, 0.545, 0.347]], [0.699, [0.862, 0.545, 0.347]], [0.701, [0.867, 0.548, 0.349]], [0.703, [0.867, 0.548, 0.349]], [0.705, [0.872, 0.551, 0.351]], [0.706, [0.872, 0.551, 0.351]], [0.708, [0.877, 0.554, 0.353]], [0.710, [0.877, 0.554, 0.353]], [0.712, [0.882, 0.558, 0.355]], [0.714, [0.882, 0.558, 0.355]], [0.716, [0.887, 0.561, 0.357]], [0.718, [0.887, 0.561, 0.357]], [0.720, [0.891, 0.564, 0.359]], [0.722, [0.891, 0.564, 0.359]], [0.724, [0.896, 0.567, 0.361]], [0.726, [0.896, 0.567, 0.361]], [0.728, [0.901, 0.570, 0.363]], [0.730, [0.901, 0.570, 0.363]], [0.732, [0.906, 0.573, 0.365]], [0.734, [0.906, 0.573, 0.365]], [0.736, [0.911, 0.576, 0.367]], [0.738, [0.911, 0.576, 0.367]], [0.740, [0.916, 0.579, 0.369]], [0.742, [0.916, 0.579, 0.369]], [0.744, [0.920, 0.582, 0.371]], [0.746, [0.920, 0.582, 0.371]], [0.748, [0.925, 0.585, 0.373]], [0.750, [0.925, 0.585, 0.373]], [0.751, [0.930, 0.588, 0.375]], [0.753, [0.930, 0.588, 0.375]], [0.755, [0.935, 0.591, 0.377]], [0.757, [0.935, 0.591, 0.377]], [0.759, [0.940, 0.594, 0.378]], [0.761, [0.940, 0.594, 0.378]], [0.763, [0.945, 0.597, 0.380]], [0.765, [0.945, 0.597, 0.380]], [0.767, [0.949, 0.600, 0.382]], [0.769, [0.949, 0.600, 0.382]], [0.771, [0.954, 0.604, 0.384]], [0.773, [0.954, 0.604, 0.384]], [0.775, [0.959, 0.607, 0.386]], [0.777, [0.959, 0.607, 0.386]], [0.779, [0.964, 0.610, 0.388]], [0.781, [0.964, 0.610, 0.388]], [0.783, [0.969, 0.613, 0.390]], [0.785, [0.969, 0.613, 0.390]], [0.787, [0.974, 0.616, 0.392]], [0.789, [0.974, 0.616, 0.392]], [0.791, [0.979, 0.619, 0.394]], [0.793, [0.979, 0.619, 0.394]], [0.795, [0.983, 0.622, 0.396]], [0.796, [0.983, 0.622, 0.396]], [0.798, [0.988, 0.625, 0.398]], [0.800, [0.988, 0.625, 0.398]], [0.802, [0.993, 0.628, 0.400]], [0.804, [0.993, 0.628, 0.400]], [0.806, [0.998, 0.631, 0.402]], [0.808, [0.998, 0.631, 0.402]], [0.810, [1.000, 0.634, 0.404]], [0.812, [1.000, 0.634, 0.404]], [0.814, [1.000, 0.637, 0.406]], [0.816, [1.000, 0.637, 0.406]], [0.818, [1.000, 0.640, 0.408]], [0.820, [1.000, 0.640, 0.408]], [0.822, [1.000, 0.643, 0.410]], [0.824, [1.000, 0.643, 0.410]], [0.826, [1.000, 0.646, 0.412]], [0.828, [1.000, 0.646, 0.412]], [0.830, [1.000, 0.649, 0.414]], [0.832, [1.000, 0.649, 0.414]], [0.834, [1.000, 0.653, 0.416]], [0.836, [1.000, 0.653, 0.416]], [0.838, [1.000, 0.656, 0.418]], [0.840, [1.000, 0.656, 0.418]], [0.841, [1.000, 0.659, 0.419]], [0.843, [1.000, 0.659, 0.419]], [0.845, [1.000, 0.662, 0.421]], [0.847, [1.000, 0.662, 0.421]], [0.849, [1.000, 0.665, 0.423]], [0.851, [1.000, 0.665, 0.423]], [0.853, [1.000, 0.668, 0.425]], [0.855, [1.000, 0.668, 0.425]], [0.857, [1.000, 0.671, 0.427]], [0.859, [1.000, 0.671, 0.427]], [0.861, [1.000, 0.674, 0.429]], [0.863, [1.000, 0.674, 0.429]], [0.865, [1.000, 0.677, 0.431]], [0.867, [1.000, 0.677, 0.431]], [0.869, [1.000, 0.680, 0.433]], [0.871, [1.000, 0.680, 0.433]], [0.873, [1.000, 0.683, 0.435]], [0.875, [1.000, 0.683, 0.435]], [0.877, [1.000, 0.686, 0.437]], [0.879, [1.000, 0.686, 0.437]], [0.881, [1.000, 0.689, 0.439]], [0.883, [1.000, 0.689, 0.439]], [0.885, [1.000, 0.692, 0.441]], [0.886, [1.000, 0.692, 0.441]], [0.888, [1.000, 0.695, 0.443]], [0.890, [1.000, 0.695, 0.443]], [0.892, [1.000, 0.698, 0.445]], [0.894, [1.000, 0.698, 0.445]], [0.896, [1.000, 0.702, 0.447]], [0.898, [1.000, 0.702, 0.447]], [0.900, [1.000, 0.705, 0.449]], [0.902, [1.000, 0.705, 0.449]], [0.904, [1.000, 0.708, 0.451]], [0.906, [1.000, 0.708, 0.451]], [0.908, [1.000, 0.711, 0.453]], [0.910, [1.000, 0.711, 0.453]], [0.912, [1.000, 0.714, 0.455]], [0.914, [1.000, 0.714, 0.455]], [0.916, [1.000, 0.717, 0.457]], [0.918, [1.000, 0.717, 0.457]], [0.920, [1.000, 0.720, 0.458]], [0.922, [1.000, 0.720, 0.458]], [0.924, [1.000, 0.723, 0.460]], [0.926, [1.000, 0.723, 0.460]], [0.928, [1.000, 0.726, 0.462]], [0.930, [1.000, 0.726, 0.462]], [0.932, [1.000, 0.729, 0.464]], [0.933, [1.000, 0.729, 0.464]], [0.935, [1.000, 0.732, 0.466]], [0.937, [1.000, 0.732, 0.466]], [0.939, [1.000, 0.735, 0.468]], [0.941, [1.000, 0.735, 0.468]], [0.943, [1.000, 0.738, 0.470]], [0.945, [1.000, 0.738, 0.470]], [0.947, [1.000, 0.741, 0.472]], [0.949, [1.000, 0.741, 0.472]], [0.951, [1.000, 0.744, 0.474]], [0.953, [1.000, 0.744, 0.474]], [0.955, [1.000, 0.748, 0.476]], [0.957, [1.000, 0.748, 0.476]], [0.959, [1.000, 0.751, 0.478]], [0.961, [1.000, 0.751, 0.478]], [0.963, [1.000, 0.754, 0.480]], [0.965, [1.000, 0.754, 0.480]], [0.967, [1.000, 0.757, 0.482]], [0.969, [1.000, 0.757, 0.482]], [0.971, [1.000, 0.760, 0.484]], [0.973, [1.000, 0.760, 0.484]], [0.975, [1.000, 0.763, 0.486]], [0.977, [1.000, 0.763, 0.486]], [0.978, [1.000, 0.766, 0.488]], [0.980, [1.000, 0.766, 0.488]], [0.982, [1.000, 0.769, 0.490]], [0.984, [1.000, 0.769, 0.490]], [0.986, [1.000, 0.772, 0.492]], [0.988, [1.000, 0.772, 0.492]], [0.990, [1.000, 0.775, 0.494]], [0.992, [1.000, 0.775, 0.494]], [0.994, [1.000, 0.778, 0.496]], [0.996, [1.000, 0.778, 0.496]], [0.998, [1.000, 0.781, 0.497]], [1.000, [1.000, 0.781, 0.497]]];
H.colormap_cubehelix = [[0.000, [0.000, 0.000, 0.000]], [0.002, [0.000, 0.000, 0.000]], [0.004, [0.007, 0.002, 0.006]], [0.006, [0.007, 0.002, 0.006]], [0.008, [0.013, 0.004, 0.012]], [0.010, [0.013, 0.004, 0.012]], [0.012, [0.020, 0.007, 0.019]], [0.014, [0.020, 0.007, 0.019]], [0.016, [0.026, 0.009, 0.025]], [0.018, [0.026, 0.009, 0.025]], [0.020, [0.032, 0.011, 0.032]], [0.022, [0.032, 0.011, 0.032]], [0.023, [0.037, 0.014, 0.039]], [0.025, [0.037, 0.014, 0.039]], [0.027, [0.043, 0.016, 0.046]], [0.029, [0.043, 0.016, 0.046]], [0.031, [0.048, 0.019, 0.053]], [0.033, [0.048, 0.019, 0.053]], [0.035, [0.053, 0.021, 0.061]], [0.037, [0.053, 0.021, 0.061]], [0.039, [0.058, 0.024, 0.068]], [0.041, [0.058, 0.024, 0.068]], [0.043, [0.063, 0.027, 0.076]], [0.045, [0.063, 0.027, 0.076]], [0.047, [0.067, 0.030, 0.083]], [0.049, [0.067, 0.030, 0.083]], [0.051, [0.071, 0.033, 0.091]], [0.053, [0.071, 0.033, 0.091]], [0.055, [0.075, 0.036, 0.099]], [0.057, [0.075, 0.036, 0.099]], [0.059, [0.079, 0.040, 0.107]], [0.061, [0.079, 0.040, 0.107]], [0.063, [0.082, 0.043, 0.115]], [0.065, [0.082, 0.043, 0.115]], [0.067, [0.085, 0.047, 0.123]], [0.068, [0.085, 0.047, 0.123]], [0.070, [0.088, 0.051, 0.131]], [0.072, [0.088, 0.051, 0.131]], [0.074, [0.090, 0.054, 0.139]], [0.076, [0.090, 0.054, 0.139]], [0.078, [0.093, 0.058, 0.146]], [0.080, [0.093, 0.058, 0.146]], [0.082, [0.095, 0.063, 0.154]], [0.084, [0.095, 0.063, 0.154]], [0.086, [0.097, 0.067, 0.162]], [0.088, [0.097, 0.067, 0.162]], [0.090, [0.099, 0.071, 0.170]], [0.092, [0.099, 0.071, 0.170]], [0.094, [0.100, 0.076, 0.177]], [0.096, [0.100, 0.076, 0.177]], [0.098, [0.101, 0.080, 0.185]], [0.100, [0.101, 0.080, 0.185]], [0.102, [0.102, 0.085, 0.192]], [0.104, [0.102, 0.085, 0.192]], [0.106, [0.103, 0.090, 0.199]], [0.108, [0.103, 0.090, 0.199]], [0.110, [0.104, 0.095, 0.206]], [0.112, [0.104, 0.095, 0.206]], [0.114, [0.104, 0.100, 0.213]], [0.115, [0.104, 0.100, 0.213]], [0.117, [0.104, 0.105, 0.220]], [0.119, [0.104, 0.105, 0.220]], [0.121, [0.104, 0.111, 0.226]], [0.123, [0.104, 0.111, 0.226]], [0.125, [0.104, 0.116, 0.233]], [0.127, [0.104, 0.116, 0.233]], [0.129, [0.104, 0.122, 0.239]], [0.131, [0.104, 0.122, 0.239]], [0.133, [0.104, 0.128, 0.245]], [0.135, [0.104, 0.128, 0.245]], [0.137, [0.103, 0.134, 0.251]], [0.139, [0.103, 0.134, 0.251]], [0.141, [0.102, 0.140, 0.256]], [0.143, [0.102, 0.140, 0.256]], [0.145, [0.102, 0.146, 0.261]], [0.147, [0.102, 0.146, 0.261]], [0.149, [0.101, 0.152, 0.266]], [0.151, [0.101, 0.152, 0.266]], [0.153, [0.100, 0.158, 0.271]], [0.155, [0.100, 0.158, 0.271]], [0.157, [0.099, 0.164, 0.275]], [0.159, [0.099, 0.164, 0.275]], [0.160, [0.098, 0.171, 0.280]], [0.162, [0.098, 0.171, 0.280]], [0.164, [0.096, 0.177, 0.283]], [0.166, [0.096, 0.177, 0.283]], [0.168, [0.095, 0.184, 0.287]], [0.170, [0.095, 0.184, 0.287]], [0.172, [0.094, 0.190, 0.290]], [0.174, [0.094, 0.190, 0.290]], [0.176, [0.093, 0.197, 0.293]], [0.178, [0.093, 0.197, 0.293]], [0.180, [0.092, 0.204, 0.296]], [0.182, [0.092, 0.204, 0.296]], [0.184, [0.090, 0.211, 0.299]], [0.186, [0.090, 0.211, 0.299]], [0.188, [0.089, 0.218, 0.301]], [0.190, [0.089, 0.218, 0.301]], [0.192, [0.088, 0.224, 0.303]], [0.194, [0.088, 0.224, 0.303]], [0.196, [0.087, 0.231, 0.304]], [0.198, [0.087, 0.231, 0.304]], [0.200, [0.086, 0.238, 0.306]], [0.202, [0.086, 0.238, 0.306]], [0.204, [0.085, 0.245, 0.307]], [0.205, [0.085, 0.245, 0.307]], [0.207, [0.084, 0.252, 0.307]], [0.209, [0.084, 0.252, 0.307]], [0.211, [0.084, 0.259, 0.308]], [0.213, [0.084, 0.259, 0.308]], [0.215, [0.083, 0.266, 0.308]], [0.217, [0.083, 0.266, 0.308]], [0.219, [0.083, 0.273, 0.308]], [0.221, [0.083, 0.273, 0.308]], [0.223, [0.082, 0.280, 0.307]], [0.225, [0.082, 0.280, 0.307]], [0.227, [0.082, 0.287, 0.307]], [0.229, [0.082, 0.287, 0.307]], [0.231, [0.082, 0.293, 0.306]], [0.233, [0.082, 0.293, 0.306]], [0.235, [0.082, 0.300, 0.304]], [0.237, [0.082, 0.300, 0.304]], [0.239, [0.083, 0.307, 0.303]], [0.241, [0.083, 0.307, 0.303]], [0.243, [0.083, 0.314, 0.301]], [0.245, [0.083, 0.314, 0.301]], [0.247, [0.084, 0.320, 0.299]], [0.249, [0.084, 0.320, 0.299]], [0.250, [0.085, 0.327, 0.297]], [0.252, [0.085, 0.327, 0.297]], [0.254, [0.087, 0.333, 0.295]], [0.256, [0.087, 0.333, 0.295]], [0.258, [0.088, 0.339, 0.292]], [0.260, [0.088, 0.339, 0.292]], [0.262, [0.090, 0.346, 0.290]], [0.264, [0.090, 0.346, 0.290]], [0.266, [0.092, 0.352, 0.287]], [0.268, [0.092, 0.352, 0.287]], [0.270, [0.094, 0.358, 0.284]], [0.272, [0.094, 0.358, 0.284]], [0.274, [0.097, 0.364, 0.281]], [0.276, [0.097, 0.364, 0.281]], [0.278, [0.099, 0.370, 0.277]], [0.280, [0.099, 0.370, 0.277]], [0.282, [0.103, 0.375, 0.274]], [0.284, [0.103, 0.375, 0.274]], [0.286, [0.106, 0.381, 0.270]], [0.288, [0.106, 0.381, 0.270]], [0.290, [0.110, 0.386, 0.266]], [0.292, [0.110, 0.386, 0.266]], [0.294, [0.114, 0.392, 0.263]], [0.295, [0.114, 0.392, 0.263]], [0.297, [0.118, 0.397, 0.259]], [0.299, [0.118, 0.397, 0.259]], [0.301, [0.122, 0.402, 0.255]], [0.303, [0.122, 0.402, 0.255]], [0.305, [0.127, 0.407, 0.251]], [0.307, [0.127, 0.407, 0.251]], [0.309, [0.133, 0.412, 0.247]], [0.311, [0.133, 0.412, 0.247]], [0.313, [0.138, 0.416, 0.243]], [0.315, [0.138, 0.416, 0.243]], [0.317, [0.144, 0.421, 0.239]], [0.319, [0.144, 0.421, 0.239]], [0.321, [0.150, 0.425, 0.235]], [0.323, [0.150, 0.425, 0.235]], [0.325, [0.156, 0.429, 0.231]], [0.327, [0.156, 0.429, 0.231]], [0.329, [0.163, 0.433, 0.228]], [0.331, [0.163, 0.433, 0.228]], [0.333, [0.170, 0.437, 0.224]], [0.335, [0.170, 0.437, 0.224]], [0.337, [0.177, 0.440, 0.220]], [0.339, [0.177, 0.440, 0.220]], [0.341, [0.185, 0.444, 0.216]], [0.342, [0.185, 0.444, 0.216]], [0.344, [0.193, 0.447, 0.213]], [0.346, [0.193, 0.447, 0.213]], [0.348, [0.201, 0.450, 0.210]], [0.350, [0.201, 0.450, 0.210]], [0.352, [0.209, 0.453, 0.206]], [0.354, [0.209, 0.453, 0.206]], [0.356, [0.218, 0.456, 0.203]], [0.358, [0.218, 0.456, 0.203]], [0.360, [0.227, 0.459, 0.200]], [0.362, [0.227, 0.459, 0.200]], [0.364, [0.236, 0.461, 0.198]], [0.366, [0.236, 0.461, 0.198]], [0.368, [0.246, 0.463, 0.195]], [0.370, [0.246, 0.463, 0.195]], [0.372, [0.255, 0.466, 0.193]], [0.374, [0.255, 0.466, 0.193]], [0.376, [0.265, 0.468, 0.191]], [0.378, [0.265, 0.468, 0.191]], [0.380, [0.276, 0.469, 0.189]], [0.382, [0.276, 0.469, 0.189]], [0.384, [0.286, 0.471, 0.187]], [0.386, [0.286, 0.471, 0.187]], [0.387, [0.296, 0.473, 0.186]], [0.389, [0.296, 0.473, 0.186]], [0.391, [0.307, 0.474, 0.185]], [0.393, [0.307, 0.474, 0.185]], [0.395, [0.318, 0.475, 0.184]], [0.397, [0.318, 0.475, 0.184]], [0.399, [0.329, 0.476, 0.184]], [0.401, [0.329, 0.476, 0.184]], [0.403, [0.341, 0.477, 0.184]], [0.405, [0.341, 0.477, 0.184]], [0.407, [0.352, 0.478, 0.184]], [0.409, [0.352, 0.478, 0.184]], [0.411, [0.363, 0.479, 0.184]], [0.413, [0.363, 0.479, 0.184]], [0.415, [0.375, 0.479, 0.185]], [0.417, [0.375, 0.479, 0.185]], [0.419, [0.387, 0.480, 0.186]], [0.421, [0.387, 0.480, 0.186]], [0.423, [0.399, 0.480, 0.187]], [0.425, [0.399, 0.480, 0.187]], [0.427, [0.411, 0.480, 0.189]], [0.429, [0.411, 0.480, 0.189]], [0.431, [0.423, 0.481, 0.191]], [0.432, [0.423, 0.481, 0.191]], [0.434, [0.435, 0.481, 0.194]], [0.436, [0.435, 0.481, 0.194]], [0.438, [0.447, 0.481, 0.197]], [0.440, [0.447, 0.481, 0.197]], [0.442, [0.459, 0.481, 0.200]], [0.444, [0.459, 0.481, 0.200]], [0.446, [0.471, 0.480, 0.203]], [0.448, [0.471, 0.480, 0.203]], [0.450, [0.483, 0.480, 0.207]], [0.452, [0.483, 0.480, 0.207]], [0.454, [0.495, 0.480, 0.211]], [0.456, [0.495, 0.480, 0.211]], [0.458, [0.507, 0.480, 0.216]], [0.460, [0.507, 0.480, 0.216]], [0.462, [0.519, 0.479, 0.221]], [0.464, [0.519, 0.479, 0.221]], [0.466, [0.531, 0.479, 0.227]], [0.468, [0.531, 0.479, 0.227]], [0.470, [0.543, 0.478, 0.232]], [0.472, [0.543, 0.478, 0.232]], [0.474, [0.554, 0.478, 0.238]], [0.476, [0.554, 0.478, 0.238]], [0.477, [0.566, 0.477, 0.245]], [0.479, [0.566, 0.477, 0.245]], [0.481, [0.578, 0.477, 0.252]], [0.483, [0.578, 0.477, 0.252]], [0.485, [0.589, 0.476, 0.259]], [0.487, [0.589, 0.476, 0.259]], [0.489, [0.600, 0.476, 0.266]], [0.491, [0.600, 0.476, 0.266]], [0.493, [0.611, 0.476, 0.274]], [0.495, [0.611, 0.476, 0.274]], [0.497, [0.622, 0.475, 0.282]], [0.499, [0.622, 0.475, 0.282]], [0.501, [0.633, 0.475, 0.291]], [0.503, [0.633, 0.475, 0.291]], [0.505, [0.643, 0.474, 0.299]], [0.507, [0.643, 0.474, 0.299]], [0.509, [0.654, 0.474, 0.309]], [0.511, [0.654, 0.474, 0.309]], [0.513, [0.664, 0.474, 0.318]], [0.515, [0.664, 0.474, 0.318]], [0.517, [0.674, 0.474, 0.328]], [0.519, [0.674, 0.474, 0.328]], [0.521, [0.683, 0.474, 0.338]], [0.523, [0.683, 0.474, 0.338]], [0.524, [0.693, 0.474, 0.348]], [0.526, [0.693, 0.474, 0.348]], [0.528, [0.702, 0.474, 0.358]], [0.530, [0.702, 0.474, 0.358]], [0.532, [0.711, 0.474, 0.369]], [0.534, [0.711, 0.474, 0.369]], [0.536, [0.719, 0.474, 0.380]], [0.538, [0.719, 0.474, 0.380]], [0.540, [0.727, 0.474, 0.391]], [0.542, [0.727, 0.474, 0.391]], [0.544, [0.735, 0.475, 0.403]], [0.546, [0.735, 0.475, 0.403]], [0.548, [0.743, 0.475, 0.414]], [0.550, [0.743, 0.475, 0.414]], [0.552, [0.751, 0.476, 0.426]], [0.554, [0.751, 0.476, 0.426]], [0.556, [0.758, 0.477, 0.438]], [0.558, [0.758, 0.477, 0.438]], [0.560, [0.764, 0.478, 0.450]], [0.562, [0.764, 0.478, 0.450]], [0.564, [0.771, 0.479, 0.462]], [0.566, [0.771, 0.479, 0.462]], [0.568, [0.777, 0.480, 0.474]], [0.569, [0.777, 0.480, 0.474]], [0.571, [0.783, 0.482, 0.487]], [0.573, [0.783, 0.482, 0.487]], [0.575, [0.788, 0.483, 0.499]], [0.577, [0.788, 0.483, 0.499]], [0.579, [0.794, 0.485, 0.512]], [0.581, [0.794, 0.485, 0.512]], [0.583, [0.798, 0.487, 0.524]], [0.585, [0.798, 0.487, 0.524]], [0.587, [0.803, 0.489, 0.537]], [0.589, [0.803, 0.489, 0.537]], [0.591, [0.807, 0.491, 0.550]], [0.593, [0.807, 0.491, 0.550]], [0.595, [0.811, 0.493, 0.563]], [0.597, [0.811, 0.493, 0.563]], [0.599, [0.815, 0.495, 0.575]], [0.601, [0.815, 0.495, 0.575]], [0.603, [0.818, 0.498, 0.588]], [0.605, [0.818, 0.498, 0.588]], [0.607, [0.821, 0.501, 0.601]], [0.609, [0.821, 0.501, 0.601]], [0.611, [0.823, 0.504, 0.613]], [0.613, [0.823, 0.504, 0.613]], [0.614, [0.826, 0.507, 0.626]], [0.616, [0.826, 0.507, 0.626]], [0.618, [0.828, 0.510, 0.638]], [0.620, [0.828, 0.510, 0.638]], [0.622, [0.829, 0.514, 0.651]], [0.624, [0.829, 0.514, 0.651]], [0.626, [0.831, 0.518, 0.663]], [0.628, [0.831, 0.518, 0.663]], [0.630, [0.832, 0.521, 0.675]], [0.632, [0.832, 0.521, 0.675]], [0.634, [0.833, 0.525, 0.687]], [0.636, [0.833, 0.525, 0.687]], [0.638, [0.833, 0.530, 0.699]], [0.640, [0.833, 0.530, 0.699]], [0.642, [0.833, 0.534, 0.710]], [0.644, [0.833, 0.534, 0.710]], [0.646, [0.833, 0.538, 0.722]], [0.648, [0.833, 0.538, 0.722]], [0.650, [0.833, 0.543, 0.733]], [0.652, [0.833, 0.543, 0.733]], [0.654, [0.833, 0.548, 0.744]], [0.656, [0.833, 0.548, 0.744]], [0.658, [0.832, 0.553, 0.755]], [0.659, [0.832, 0.553, 0.755]], [0.661, [0.831, 0.558, 0.766]], [0.663, [0.831, 0.558, 0.766]], [0.665, [0.830, 0.563, 0.776]], [0.667, [0.830, 0.563, 0.776]], [0.669, [0.829, 0.569, 0.786]], [0.671, [0.829, 0.569, 0.786]], [0.673, [0.827, 0.574, 0.796]], [0.675, [0.827, 0.574, 0.796]], [0.677, [0.825, 0.580, 0.806]], [0.679, [0.825, 0.580, 0.806]], [0.681, [0.824, 0.586, 0.815]], [0.683, [0.824, 0.586, 0.815]], [0.685, [0.822, 0.592, 0.824]], [0.687, [0.822, 0.592, 0.824]], [0.689, [0.819, 0.598, 0.833]], [0.691, [0.819, 0.598, 0.833]], [0.693, [0.817, 0.604, 0.842]], [0.695, [0.817, 0.604, 0.842]], [0.697, [0.815, 0.610, 0.850]], [0.699, [0.815, 0.610, 0.850]], [0.701, [0.812, 0.617, 0.858]], [0.703, [0.812, 0.617, 0.858]], [0.705, [0.810, 0.623, 0.865]], [0.706, [0.810, 0.623, 0.865]], [0.708, [0.807, 0.630, 0.873]], [0.710, [0.807, 0.630, 0.873]], [0.712, [0.805, 0.637, 0.880]], [0.714, [0.805, 0.637, 0.880]], [0.716, [0.802, 0.643, 0.886]], [0.718, [0.802, 0.643, 0.886]], [0.720, [0.799, 0.650, 0.893]], [0.722, [0.799, 0.650, 0.893]], [0.724, [0.796, 0.657, 0.899]], [0.726, [0.796, 0.657, 0.899]], [0.728, [0.794, 0.664, 0.904]], [0.730, [0.794, 0.664, 0.904]], [0.732, [0.791, 0.671, 0.910]], [0.734, [0.791, 0.671, 0.910]], [0.736, [0.788, 0.678, 0.915]], [0.738, [0.788, 0.678, 0.915]], [0.740, [0.786, 0.685, 0.919]], [0.742, [0.786, 0.685, 0.919]], [0.744, [0.783, 0.693, 0.924]], [0.746, [0.783, 0.693, 0.924]], [0.748, [0.780, 0.700, 0.928]], [0.750, [0.780, 0.700, 0.928]], [0.751, [0.778, 0.707, 0.931]], [0.753, [0.778, 0.707, 0.931]], [0.755, [0.776, 0.714, 0.935]], [0.757, [0.776, 0.714, 0.935]], [0.759, [0.773, 0.721, 0.938]], [0.761, [0.773, 0.721, 0.938]], [0.763, [0.771, 0.729, 0.941]], [0.765, [0.771, 0.729, 0.941]], [0.767, [0.769, 0.736, 0.943]], [0.769, [0.769, 0.736, 0.943]], [0.771, [0.767, 0.743, 0.946]], [0.773, [0.767, 0.743, 0.946]], [0.775, [0.765, 0.750, 0.948]], [0.777, [0.765, 0.750, 0.948]], [0.779, [0.764, 0.757, 0.949]], [0.781, [0.764, 0.757, 0.949]], [0.783, [0.762, 0.764, 0.951]], [0.785, [0.762, 0.764, 0.951]], [0.787, [0.761, 0.771, 0.952]], [0.789, [0.761, 0.771, 0.952]], [0.791, [0.760, 0.778, 0.953]], [0.793, [0.760, 0.778, 0.953]], [0.795, [0.759, 0.785, 0.954]], [0.796, [0.759, 0.785, 0.954]], [0.798, [0.759, 0.792, 0.954]], [0.800, [0.759, 0.792, 0.954]], [0.802, [0.758, 0.799, 0.955]], [0.804, [0.758, 0.799, 0.955]], [0.806, [0.758, 0.806, 0.955]], [0.808, [0.758, 0.806, 0.955]], [0.810, [0.758, 0.812, 0.955]], [0.812, [0.758, 0.812, 0.955]], [0.814, [0.758, 0.819, 0.955]], [0.816, [0.758, 0.819, 0.955]], [0.818, [0.759, 0.825, 0.954]], [0.820, [0.759, 0.825, 0.954]], [0.822, [0.760, 0.832, 0.954]], [0.824, [0.760, 0.832, 0.954]], [0.826, [0.761, 0.838, 0.953]], [0.828, [0.761, 0.838, 0.953]], [0.830, [0.762, 0.844, 0.952]], [0.832, [0.762, 0.844, 0.952]], [0.834, [0.763, 0.850, 0.952]], [0.836, [0.763, 0.850, 0.952]], [0.838, [0.765, 0.856, 0.951]], [0.840, [0.765, 0.856, 0.951]], [0.841, [0.767, 0.862, 0.950]], [0.843, [0.767, 0.862, 0.950]], [0.845, [0.769, 0.868, 0.949]], [0.847, [0.769, 0.868, 0.949]], [0.849, [0.772, 0.873, 0.947]], [0.851, [0.772, 0.873, 0.947]], [0.853, [0.775, 0.879, 0.946]], [0.855, [0.775, 0.879, 0.946]], [0.857, [0.778, 0.884, 0.945]], [0.859, [0.778, 0.884, 0.945]], [0.861, [0.781, 0.889, 0.944]], [0.863, [0.781, 0.889, 0.944]], [0.865, [0.784, 0.894, 0.943]], [0.867, [0.784, 0.894, 0.943]], [0.869, [0.788, 0.899, 0.942]], [0.871, [0.788, 0.899, 0.942]], [0.873, [0.792, 0.904, 0.941]], [0.875, [0.792, 0.904, 0.941]], [0.877, [0.796, 0.909, 0.940]], [0.879, [0.796, 0.909, 0.940]], [0.881, [0.801, 0.913, 0.939]], [0.883, [0.801, 0.913, 0.939]], [0.885, [0.806, 0.918, 0.938]], [0.886, [0.806, 0.918, 0.938]], [0.888, [0.811, 0.922, 0.937]], [0.890, [0.811, 0.922, 0.937]], [0.892, [0.816, 0.926, 0.937]], [0.894, [0.816, 0.926, 0.937]], [0.896, [0.821, 0.930, 0.936]], [0.898, [0.821, 0.930, 0.936]], [0.900, [0.827, 0.934, 0.936]], [0.902, [0.827, 0.934, 0.936]], [0.904, [0.833, 0.938, 0.936]], [0.906, [0.833, 0.938, 0.936]], [0.908, [0.839, 0.941, 0.936]], [0.910, [0.839, 0.941, 0.936]], [0.912, [0.845, 0.945, 0.936]], [0.914, [0.845, 0.945, 0.936]], [0.916, [0.851, 0.948, 0.936]], [0.918, [0.851, 0.948, 0.936]], [0.920, [0.857, 0.951, 0.937]], [0.922, [0.857, 0.951, 0.937]], [0.924, [0.864, 0.954, 0.938]], [0.926, [0.864, 0.954, 0.938]], [0.928, [0.871, 0.957, 0.939]], [0.930, [0.871, 0.957, 0.939]], [0.932, [0.878, 0.960, 0.940]], [0.933, [0.878, 0.960, 0.940]], [0.935, [0.885, 0.963, 0.941]], [0.937, [0.885, 0.963, 0.941]], [0.939, [0.892, 0.966, 0.943]], [0.941, [0.892, 0.966, 0.943]], [0.943, [0.899, 0.969, 0.945]], [0.945, [0.899, 0.969, 0.945]], [0.947, [0.906, 0.971, 0.947]], [0.949, [0.906, 0.971, 0.947]], [0.951, [0.913, 0.974, 0.949]], [0.953, [0.913, 0.974, 0.949]], [0.955, [0.921, 0.976, 0.952]], [0.957, [0.921, 0.976, 0.952]], [0.959, [0.928, 0.979, 0.955]], [0.961, [0.928, 0.979, 0.955]], [0.963, [0.935, 0.981, 0.958]], [0.965, [0.935, 0.981, 0.958]], [0.967, [0.943, 0.983, 0.962]], [0.969, [0.943, 0.983, 0.962]], [0.971, [0.950, 0.985, 0.966]], [0.973, [0.950, 0.985, 0.966]], [0.975, [0.957, 0.987, 0.970]], [0.977, [0.957, 0.987, 0.970]], [0.978, [0.965, 0.990, 0.974]], [0.980, [0.965, 0.990, 0.974]], [0.982, [0.972, 0.992, 0.979]], [0.984, [0.972, 0.992, 0.979]], [0.986, [0.979, 0.994, 0.984]], [0.988, [0.979, 0.994, 0.984]], [0.990, [0.986, 0.996, 0.989]], [0.992, [0.986, 0.996, 0.989]], [0.994, [0.993, 0.998, 0.994]], [0.996, [0.993, 0.998, 0.994]], [0.998, [1.000, 1.000, 1.000]], [1.000, [1.000, 1.000, 1.000]]];
H.colormap_curl = [[0.002,[0.08225560,0.11492441,0.26479017]],[0.004,[0.08312617,0.11903837,0.26686289]],[0.006,[0.08400181,0.12310749,0.26895267]],[0.008,[0.08487294,0.12713875,0.27105417]],[0.010,[0.08574385,0.13113332,0.27316912]],[0.012,[0.08661249,0.13509450,0.27529614]],[0.014,[0.08747533,0.13902581,0.27743329]],[0.016,[0.08833859,0.14292709,0.27958315]],[0.018,[0.08919013,0.14680436,0.28174002]],[0.020,[0.09004100,0.15065551,0.28390867]],[0.021,[0.09088232,0.15448500,0.28608501]],[0.023,[0.09171714,0.15829319,0.28827028]],[0.025,[0.09254608,0.16208117,0.29046458]],[0.027,[0.09336173,0.16585233,0.29266480]],[0.029,[0.09417284,0.16960508,0.29487442]],[0.031,[0.09496900,0.17334347,0.29708922]],[0.033,[0.09575619,0.17706663,0.29931153]],[0.035,[0.09653316,0.18077576,0.30154079]],[0.037,[0.09729329,0.18447344,0.30377451]],[0.039,[0.09804493,0.18815809,0.30601574]],[0.041,[0.09877832,0.19183299,0.30826092]],[0.043,[0.09949804,0.19549751,0.31051168]],[0.045,[0.10020549,0.19915186,0.31276843]],[0.047,[0.10089002,0.20279929,0.31502756]],[0.049,[0.10156203,0.20643764,0.31729251]],[0.051,[0.10221505,0.21006899,0.31956112]],[0.053,[0.10284688,0.21369428,0.32183267]],[0.055,[0.10346375,0.21731242,0.32410904]],[0.057,[0.10405562,0.22092615,0.32638711]],[0.059,[0.10462727,0.22453468,0.32866827]],[0.061,[0.10518146,0.22813774,0.33095325]],[0.063,[0.10570551,0.23173845,0.33323831]],[0.064,[0.10620936,0.23533489,0.33552622]],[0.066,[0.10669272,0.23892742,0.33781678]],[0.068,[0.10714289,0.24251899,0.34010639]],[0.070,[0.10757131,0.24610739,0.34239809]],[0.072,[0.10797639,0.24969322,0.34469128]],[0.074,[0.10834600,0.25327913,0.34698268]],[0.076,[0.10869133,0.25686304,0.34927505]],[0.078,[0.10901163,0.26044532,0.35156802]],[0.080,[0.10929328,0.26402876,0.35385806]],[0.082,[0.10954788,0.26761128,0.35614786]],[0.084,[0.10977489,0.27119314,0.35843709]],[0.086,[0.10996353,0.27477648,0.36072299]],[0.088,[0.11011983,0.27836030,0.36300681]],[0.090,[0.11024602,0.28194432,0.36528883]],[0.092,[0.11033616,0.28552972,0.36756748]],[0.094,[0.11038673,0.28911718,0.36984175]],[0.096,[0.11040471,0.29270558,0.37211295]],[0.098,[0.11038934,0.29629516,0.37438064]],[0.100,[0.11032908,0.29988791,0.37664208]],[0.102,[0.11023173,0.30348258,0.37889869]],[0.104,[0.11009863,0.30707904,0.38115045]],[0.105,[0.10992866,0.31067752,0.38339682]],[0.107,[0.10970926,0.31428004,0.38563492]],[0.109,[0.10945183,0.31788484,0.38786678]],[0.111,[0.10915570,0.32149208,0.39009193]],[0.113,[0.10882021,0.32510190,0.39230988]],[0.115,[0.10843373,0.32871604,0.39451799]],[0.117,[0.10800528,0.33233317,0.39671769]],[0.119,[0.10753553,0.33595323,0.39890871]],[0.121,[0.10702392,0.33957631,0.40109056]],[0.123,[0.10646662,0.34320298,0.40326210]],[0.125,[0.10585824,0.34683394,0.40542188]],[0.127,[0.10520656,0.35046815,0.40757096]],[0.129,[0.10451122,0.35410566,0.40970881]],[0.131,[0.10377192,0.35774653,0.41183489]],[0.133,[0.10298843,0.36139080,0.41394866]],[0.135,[0.10215131,0.36503965,0.41604787]],[0.137,[0.10126892,0.36869202,0.41813352]],[0.139,[0.10034231,0.37234779,0.42020525]],[0.141,[0.09937170,0.37600698,0.42226250]],[0.143,[0.09835742,0.37966955,0.42430469]],[0.145,[0.09729997,0.38333550,0.42633126]],[0.146,[0.09620004,0.38700476,0.42834163]],[0.148,[0.09505173,0.39067803,0.43033399]],[0.150,[0.09386234,0.39435455,0.43230887]],[0.152,[0.09263427,0.39803412,0.43426586]],[0.154,[0.09136928,0.40171665,0.43620437]],[0.156,[0.09006946,0.40540204,0.43812379]],[0.158,[0.08873731,0.40909016,0.44002354]],[0.160,[0.08737577,0.41278087,0.44190300]],[0.162,[0.08598831,0.41647400,0.44376159]],[0.164,[0.08457895,0.42016939,0.44559868]],[0.166,[0.08315236,0.42386684,0.44741369]],[0.168,[0.08171394,0.42756614,0.44920601]],[0.170,[0.08026988,0.43126706,0.45097504]],[0.172,[0.07882726,0.43496935,0.45272018]],[0.174,[0.07739416,0.43867274,0.45444085]],[0.176,[0.07597972,0.44237693,0.45613645]],[0.178,[0.07459424,0.44608161,0.45780643]],[0.180,[0.07324931,0.44978644,0.45945021]],[0.182,[0.07195782,0.45349106,0.46106724]],[0.184,[0.07073404,0.45719509,0.46265700]],[0.186,[0.06959365,0.46089811,0.46421897]],[0.188,[0.06855375,0.46459968,0.46575265]],[0.189,[0.06763273,0.46829936,0.46725759]],[0.191,[0.06685020,0.47199664,0.46873333]],[0.193,[0.06622677,0.47569101,0.47017948]],[0.195,[0.06577674,0.47938244,0.47159416]],[0.197,[0.06552566,0.48307007,0.47297774]],[0.199,[0.06549821,0.48675309,0.47433054]],[0.201,[0.06571558,0.49043087,0.47565232]],[0.203,[0.06619782,0.49410277,0.47694291]],[0.205,[0.06696294,0.49776810,0.47820211]],[0.207,[0.06801611,0.50142699,0.47942671]],[0.209,[0.06938288,0.50507783,0.48061980]],[0.211,[0.07107372,0.50871983,0.48178149]],[0.213,[0.07309574,0.51235222,0.48291199]],[0.215,[0.07544313,0.51597502,0.48400767]],[0.217,[0.07812721,0.51958652,0.48507257]],[0.219,[0.08114572,0.52318584,0.48610736]],[0.221,[0.08448833,0.52677264,0.48710972]],[0.223,[0.08815110,0.53034572,0.48808171]],[0.225,[0.09212706,0.53390388,0.48902580]],[0.227,[0.09640117,0.53744678,0.48993927]],[0.229,[0.10096511,0.54097304,0.49082601]],[0.230,[0.10580589,0.54448174,0.49168732]],[0.232,[0.11090917,0.54797225,0.49252203]],[0.234,[0.11626318,0.55144324,0.49333556]],[0.236,[0.12185356,0.55489421,0.49412566]],[0.238,[0.12766727,0.55832396,0.49489786]],[0.240,[0.13369121,0.56173186,0.49565192]],[0.242,[0.13991195,0.56511701,0.49639184]],[0.244,[0.14631713,0.56847874,0.49711902]],[0.246,[0.15289371,0.57181634,0.49783712]],[0.248,[0.15963000,0.57512924,0.49854817]],[0.250,[0.16651330,0.57841691,0.49925615]],[0.252,[0.17353288,0.58167892,0.49996313]],[0.254,[0.18067610,0.58491493,0.50067365]],[0.256,[0.18793344,0.58812469,0.50138963]],[0.258,[0.19529246,0.59130810,0.50211590]],[0.260,[0.20274431,0.59446505,0.50285464]],[0.262,[0.21027766,0.59759568,0.50361022]],[0.264,[0.21788350,0.60070012,0.50438554]],[0.266,[0.22555217,0.60377865,0.50518416]],[0.268,[0.23327491,0.60683163,0.50600926]],[0.270,[0.24104301,0.60985952,0.50686415]],[0.271,[0.24884894,0.61286282,0.50775157]],[0.273,[0.25668402,0.61584223,0.50867505]],[0.275,[0.26454253,0.61879831,0.50963658]],[0.277,[0.27241623,0.62173194,0.51063959]],[0.279,[0.28030037,0.62464378,0.51168577]],[0.281,[0.28818811,0.62753476,0.51277795]],[0.283,[0.29607483,0.63040570,0.51391788]],[0.285,[0.30395552,0.63325751,0.51510756]],[0.287,[0.31182548,0.63609115,0.51634887]],[0.289,[0.31968144,0.63890744,0.51764306]],[0.291,[0.32751881,0.64170747,0.51899197]],[0.293,[0.33533556,0.64449201,0.52039636]],[0.295,[0.34312773,0.64726215,0.52185776]],[0.297,[0.35089362,0.65001870,0.52337683]],[0.299,[0.35863089,0.65276260,0.52495444]],[0.301,[0.36633683,0.65549486,0.52659157]],[0.303,[0.37401197,0.65821602,0.52828804]],[0.305,[0.38165106,0.66092757,0.53004568]],[0.307,[0.38925805,0.66362950,0.53186311]],[0.309,[0.39682619,0.66632361,0.53374255]],[0.311,[0.40435935,0.66900988,0.53568268]],[0.313,[0.41185545,0.67168934,0.53768413]],[0.314,[0.41931195,0.67436313,0.53974757]],[0.316,[0.42673260,0.67703119,0.54187183]],[0.318,[0.43411299,0.67969503,0.54405806]],[0.320,[0.44145473,0.68235501,0.54630566]],[0.322,[0.44875982,0.68501134,0.54861400]],[0.324,[0.45602407,0.68766556,0.55098397]],[0.326,[0.46324986,0.69031781,0.55341478]],[0.328,[0.47043894,0.69296834,0.55590587]],[0.330,[0.47758904,0.69561826,0.55845753]],[0.332,[0.48469972,0.69826831,0.56106956]],[0.334,[0.49177413,0.70091838,0.56374112]],[0.336,[0.49881245,0.70356902,0.56647195]],[0.338,[0.50581153,0.70622159,0.56926226]],[0.340,[0.51277388,0.70887607,0.57211131]],[0.342,[0.51970103,0.71153267,0.57501859]],[0.344,[0.52659327,0.71419186,0.57798374]],[0.346,[0.53344948,0.71685451,0.58100655]],[0.348,[0.54026906,0.71952134,0.58408665]],[0.350,[0.54705487,0.72219215,0.58722338]],[0.352,[0.55380726,0.72486737,0.59041634]],[0.354,[0.56052657,0.72754743,0.59366511]],[0.355,[0.56721317,0.73023276,0.59696926]],[0.357,[0.57386499,0.73292445,0.60032836]],[0.359,[0.58048457,0.73562232,0.60374187]],[0.361,[0.58707274,0.73832661,0.60720930]],[0.363,[0.59362989,0.74103770,0.61073019]],[0.365,[0.60015641,0.74375596,0.61430405]],[0.367,[0.60665269,0.74648175,0.61793039]],[0.369,[0.61311912,0.74921542,0.62160871]],[0.371,[0.61955610,0.75195731,0.62533849]],[0.373,[0.62596359,0.75470790,0.62911918]],[0.375,[0.63234144,0.75746769,0.63295016]],[0.377,[0.63869119,0.76023665,0.63683100]],[0.379,[0.64501324,0.76301508,0.64076119]],[0.381,[0.65130797,0.76580329,0.64474018]],[0.383,[0.65757580,0.76860157,0.64876743]],[0.385,[0.66381711,0.77141023,0.65284240]],[0.387,[0.67003230,0.77422953,0.65696453]],[0.389,[0.67622177,0.77705976,0.66113327]],[0.391,[0.68238592,0.77990119,0.66534806]],[0.393,[0.68852514,0.78275408,0.66960833]],[0.395,[0.69463984,0.78561869,0.67391352]],[0.396,[0.70073040,0.78849528,0.67826307]],[0.398,[0.70679722,0.79138408,0.68265641]],[0.400,[0.71284071,0.79428535,0.68709296]],[0.402,[0.71886125,0.79719932,0.69157216]],[0.404,[0.72485924,0.80012621,0.69609343]],[0.406,[0.73083509,0.80306624,0.70065621]],[0.408,[0.73678917,0.80601965,0.70525992]],[0.410,[0.74272190,0.80898665,0.70990399]],[0.412,[0.74863273,0.81196780,0.71458740]],[0.414,[0.75452231,0.81496323,0.71930966]],[0.416,[0.76039158,0.81797292,0.72407043]],[0.418,[0.76624094,0.82099707,0.72886914]],[0.420,[0.77207078,0.82403586,0.73370523]],[0.422,[0.77788150,0.82708949,0.73857810]],[0.424,[0.78367350,0.83015814,0.74348721]],[0.426,[0.78944716,0.83324197,0.74843197]],[0.428,[0.79520290,0.83634117,0.75341183]],[0.430,[0.80094018,0.83945630,0.75842558]],[0.432,[0.80665847,0.84258795,0.76347196]],[0.434,[0.81235991,0.84573553,0.76855153]],[0.436,[0.81804489,0.84889920,0.77366371]],[0.438,[0.82371383,0.85207911,0.77880793]],[0.439,[0.82936712,0.85527541,0.78398361]],[0.441,[0.83500487,0.85848838,0.78918994]],[0.443,[0.84062467,0.86171948,0.79442393]],[0.445,[0.84622998,0.86496746,0.79968738]],[0.447,[0.85182123,0.86823244,0.80497972]],[0.449,[0.85739886,0.87151457,0.81030033]],[0.451,[0.86296333,0.87481394,0.81564861]],[0.453,[0.86851129,0.87813251,0.82102020]],[0.455,[0.87404693,0.88146862,0.82641787]],[0.457,[0.87957085,0.88482234,0.83184102]],[0.459,[0.88508363,0.88819370,0.83728899]],[0.461,[0.89058366,0.89158388,0.84275871]],[0.463,[0.89607183,0.89499282,0.84824952]],[0.465,[0.90155093,0.89841950,0.85376285]],[0.467,[0.90702184,0.90186385,0.85929802]],[0.469,[0.91248330,0.90532691,0.86485172]],[0.471,[0.91793653,0.90880848,0.87042326]],[0.473,[0.92338518,0.91230711,0.87601483]],[0.475,[0.92883088,0.91582235,0.88162632]],[0.477,[0.93427164,0.91935565,0.88725314]],[0.479,[0.93971244,0.92290477,0.89289983]],[0.480,[0.94515638,0.92646829,0.89856977]],[0.482,[0.95060356,0.93004618,0.90426466]],[0.484,[0.95605310,0.93363854,0.90998868]],[0.486,[0.96150666,0.93724342,0.91575606]],[0.488,[0.96695738,0.94086247,0.92157953]],[0.490,[0.97238707,0.94450246,0.92746703]],[0.492,[0.97777857,0.94816875,0.93343649]],[0.494,[0.98310507,0.95187277,0.93948603]],[0.496,[0.98834174,0.95562829,0.94558363]],[0.498,[0.99349184,0.95943756,0.95169832]],[0.500,[0.99857633,0.96329654,0.95778950]],[0.502,[0.99421147,0.96494148,0.95917135]],[0.504,[0.99169155,0.96006773,0.95274067]],[0.506,[0.98920738,0.95520176,0.94627024]],[0.508,[0.98677194,0.95033807,0.93975862]],[0.510,[0.98437391,0.94547881,0.93322656]],[0.512,[0.98201829,0.94062171,0.92667310]],[0.514,[0.97970195,0.93576702,0.92010507]],[0.516,[0.97742080,0.93091541,0.91352937]],[0.518,[0.97518156,0.92606439,0.90693990]],[0.520,[0.97297049,0.92121764,0.90035362]],[0.521,[0.97080349,0.91636994,0.89375329]],[0.523,[0.96866357,0.91152607,0.88715902]],[0.525,[0.96655947,0.90668298,0.88056151]],[0.527,[0.96448728,0.90184151,0.87396567]],[0.529,[0.96244207,0.89700286,0.86737746]],[0.531,[0.96043456,0.89216329,0.86078529]],[0.533,[0.95844981,0.88732720,0.85420614]],[0.535,[0.95649898,0.88249069,0.84762790]],[0.537,[0.95457496,0.87765571,0.84105874]],[0.539,[0.95267455,0.87282297,0.83450240]],[0.541,[0.95080878,0.86798852,0.82794705]],[0.543,[0.94896310,0.86315684,0.82140881]],[0.545,[0.94714576,0.85832485,0.81487893]],[0.547,[0.94535503,0.85349280,0.80835951]],[0.549,[0.94358303,0.84866304,0.80185918]],[0.551,[0.94184257,0.84383087,0.79536454]],[0.553,[0.94012241,0.83899979,0.78888773]],[0.555,[0.93842059,0.83417022,0.78243098]],[0.557,[0.93675010,0.82933722,0.77598096]],[0.559,[0.93509628,0.82450566,0.76955320]],[0.561,[0.93346107,0.81967454,0.76314584]],[0.563,[0.93185391,0.81484010,0.75674949]],[0.564,[0.93026226,0.81000656,0.75037722]],[0.566,[0.92868761,0.80517307,0.74402771]],[0.568,[0.92713958,0.80033571,0.73769161]],[0.570,[0.92560593,0.79549870,0.73138149]],[0.572,[0.92408634,0.79066188,0.72509782]],[0.574,[0.92259257,0.78582038,0.71882946]],[0.576,[0.92111262,0.78097847,0.71258846]],[0.578,[0.91964557,0.77613620,0.70637599]],[0.580,[0.91819790,0.77129068,0.70018617]],[0.582,[0.91676720,0.76644249,0.69402174]],[0.584,[0.91534816,0.76159342,0.68788806]],[0.586,[0.91394046,0.75674328,0.68178577]],[0.588,[0.91255393,0.75188769,0.67570624]],[0.590,[0.91117810,0.74703058,0.66965958]],[0.592,[0.90981225,0.74217193,0.66364681]],[0.594,[0.90845631,0.73731145,0.65766843]],[0.596,[0.90711857,0.73244522,0.65171762]],[0.598,[0.90578934,0.72757702,0.64580349]],[0.600,[0.90446821,0.72270670,0.63992685]],[0.602,[0.90315480,0.71783410,0.63408853]],[0.604,[0.90185363,0.71295684,0.62828530]],[0.605,[0.90056181,0.70807582,0.62252022]],[0.607,[0.89927597,0.70319221,0.61679672]],[0.609,[0.89799564,0.69830590,0.61111575]],[0.611,[0.89672032,0.69341676,0.60547834]],[0.613,[0.89545267,0.68852319,0.59988306]],[0.615,[0.89419156,0.68362534,0.59433158]],[0.617,[0.89293342,0.67872453,0.58882738]],[0.619,[0.89167767,0.67382071,0.58337159]],[0.621,[0.89042371,0.66891382,0.57796541]],[0.623,[0.88917090,0.66400384,0.57261005]],[0.625,[0.88791872,0.65909067,0.56730668]],[0.627,[0.88667005,0.65417250,0.56205414]],[0.629,[0.88542008,0.64925139,0.55685666]],[0.631,[0.88416808,0.64432738,0.55171557]],[0.633,[0.88291328,0.63940055,0.54663223]],[0.635,[0.88165490,0.63447097,0.54160802]],[0.637,[0.88039211,0.62953874,0.53664435]],[0.639,[0.87912408,0.62460401,0.53174263]],[0.641,[0.87784992,0.61966691,0.52690431]],[0.643,[0.87656874,0.61472764,0.52213085]],[0.645,[0.87527962,0.60978640,0.51742369]],[0.646,[0.87398160,0.60484341,0.51278430]],[0.648,[0.87267379,0.59989890,0.50821409]],[0.650,[0.87135575,0.59495282,0.50371428]],[0.652,[0.87002561,0.59000599,0.49928670]],[0.654,[0.86868234,0.58505874,0.49493276]],[0.656,[0.86732494,0.58011144,0.49065382]],[0.658,[0.86595233,0.57516447,0.48645122]],[0.660,[0.86456348,0.57021827,0.48232627]],[0.662,[0.86315731,0.56527328,0.47828022]],[0.664,[0.86173275,0.56032997,0.47431426]],[0.666,[0.86028873,0.55538883,0.47042955]],[0.668,[0.85882442,0.55045025,0.46662711]],[0.670,[0.85733888,0.54551465,0.46290794]],[0.672,[0.85583071,0.54058284,0.45927307]],[0.674,[0.85429886,0.53565540,0.45572335]],[0.676,[0.85274227,0.53073296,0.45225954]],[0.678,[0.85115991,0.52581613,0.44888233]],[0.680,[0.84955078,0.52090556,0.44559226]],[0.682,[0.84791390,0.51600192,0.44238981]],[0.684,[0.84624832,0.51110586,0.43927533]],[0.686,[0.84455311,0.50621807,0.43624906]],[0.688,[0.84282741,0.50133921,0.43331112]],[0.689,[0.84107035,0.49646996,0.43046153]],[0.691,[0.83928115,0.49161102,0.42770018]],[0.693,[0.83745936,0.48676280,0.42502690]],[0.695,[0.83560431,0.48192593,0.42244142]],[0.697,[0.83371489,0.47710144,0.41994320]],[0.699,[0.83179047,0.47228997,0.41753164]],[0.701,[0.82983048,0.46749218,0.41520606]],[0.703,[0.82783443,0.46270870,0.41296566]],[0.705,[0.82580183,0.45794015,0.41080953]],[0.707,[0.82373229,0.45318712,0.40873667]],[0.709,[0.82162569,0.44844998,0.40674611]],[0.711,[0.81948157,0.44372941,0.40483662]],[0.713,[0.81729951,0.43902609,0.40300681]],[0.715,[0.81507930,0.43434053,0.40125532]],[0.717,[0.81282080,0.42967323,0.39958071]],[0.719,[0.81052390,0.42502464,0.39798147]],[0.721,[0.80818855,0.42039519,0.39645606]],[0.723,[0.80581485,0.41578517,0.39500298]],[0.725,[0.80340270,0.41119510,0.39362043]],[0.727,[0.80095214,0.40662536,0.39230669]],[0.729,[0.79846329,0.40207627,0.39106003]],[0.730,[0.79593630,0.39754813,0.38987866]],[0.732,[0.79337135,0.39304120,0.38876082]],[0.734,[0.79076866,0.38855573,0.38770470]],[0.736,[0.78812845,0.38409196,0.38670846]],[0.738,[0.78545100,0.37965010,0.38577027]],[0.740,[0.78273660,0.37523032,0.38488831]],[0.742,[0.77998556,0.37083276,0.38406076]],[0.744,[0.77719822,0.36645754,0.38328582]],[0.746,[0.77437495,0.36210479,0.38256169]],[0.748,[0.77151605,0.35777464,0.38188648]],[0.750,[0.76862195,0.35346712,0.38125850]],[0.752,[0.76569305,0.34918228,0.38067601]],[0.754,[0.76272975,0.34492014,0.38013731]],[0.756,[0.75973246,0.34068073,0.37964068]],[0.758,[0.75670159,0.33646406,0.37918448]],[0.760,[0.75363755,0.33227014,0.37876700]],[0.762,[0.75054072,0.32809900,0.37838654]],[0.764,[0.74741157,0.32395055,0.37804166]],[0.766,[0.74425052,0.31982476,0.37773081]],[0.768,[0.74105798,0.31572158,0.37745245]],[0.770,[0.73783435,0.31164097,0.37720511]],[0.771,[0.73458005,0.30758288,0.37698731]],[0.773,[0.73129546,0.30354729,0.37679757]],[0.775,[0.72798098,0.29953413,0.37663448]],[0.777,[0.72463700,0.29554332,0.37649676]],[0.779,[0.72126390,0.29157480,0.37638306]],[0.781,[0.71786206,0.28762852,0.37629208]],[0.783,[0.71443181,0.28370442,0.37622252]],[0.785,[0.71097352,0.27980245,0.37617313]],[0.787,[0.70748750,0.27592259,0.37614266]],[0.789,[0.70397409,0.27206478,0.37612990]],[0.791,[0.70043360,0.26822899,0.37613371]],[0.793,[0.69686632,0.26441520,0.37615291]],[0.795,[0.69327254,0.26062340,0.37618635]],[0.797,[0.68965253,0.25685360,0.37623291]],[0.799,[0.68600655,0.25310580,0.37629145]],[0.801,[0.68233484,0.24938002,0.37636095]],[0.803,[0.67863762,0.24567630,0.37644035]],[0.805,[0.67491512,0.24199472,0.37652853]],[0.807,[0.67116753,0.23833535,0.37662440]],[0.809,[0.66739504,0.23469830,0.37672691]],[0.811,[0.66359781,0.23108369,0.37683500]],[0.813,[0.65977600,0.22749166,0.37694762]],[0.814,[0.65592975,0.22392235,0.37706391]],[0.816,[0.65205918,0.22037597,0.37718281]],[0.818,[0.64816439,0.21685275,0.37730312]],[0.820,[0.64424550,0.21335297,0.37742379]],[0.822,[0.64030257,0.20987692,0.37754374]],[0.824,[0.63633567,0.20642491,0.37766190]],[0.826,[0.63234486,0.20299730,0.37777720]],[0.828,[0.62833011,0.19959444,0.37788907]],[0.830,[0.62429150,0.19621684,0.37799588]],[0.832,[0.62022902,0.19286498,0.37809649]],[0.834,[0.61614266,0.18953940,0.37818974]],[0.836,[0.61203242,0.18624067,0.37827444]],[0.838,[0.60789824,0.18296943,0.37834937]],[0.840,[0.60374000,0.17972635,0.37841404]],[0.842,[0.59955770,0.17651220,0.37846653]],[0.844,[0.59535127,0.17332779,0.37850546]],[0.846,[0.59112064,0.17017398,0.37852950]],[0.848,[0.58686572,0.16705170,0.37853726]],[0.850,[0.58258634,0.16396195,0.37852760]],[0.852,[0.57828232,0.16090583,0.37849943]],[0.854,[0.57395365,0.15788445,0.37845058]],[0.855,[0.56960020,0.15489902,0.37837948]],[0.857,[0.56522185,0.15195079,0.37828450]],[0.859,[0.56081843,0.14904112,0.37816410]],[0.861,[0.55638960,0.14617156,0.37801733]],[0.863,[0.55193545,0.14334348,0.37784149]],[0.865,[0.54745584,0.14055843,0.37763473]],[0.867,[0.54295065,0.13781801,0.37739515]],[0.869,[0.53841965,0.13512398,0.37712110]],[0.871,[0.53386261,0.13247818,0.37681091]],[0.873,[0.52927965,0.12988221,0.37646180]],[0.875,[0.52467068,0.12733788,0.37607164]],[0.877,[0.52003564,0.12484701,0.37563826]],[0.879,[0.51537424,0.12241171,0.37516003]],[0.881,[0.51068666,0.12003365,0.37463413]],[0.883,[0.50597299,0.11771456,0.37405808]],[0.885,[0.50123327,0.11545624,0.37342952]],[0.887,[0.49646750,0.11326054,0.37274632]],[0.889,[0.49167582,0.11112909,0.37200598]],[0.891,[0.48685856,0.10906325,0.37120582]],[0.893,[0.48201596,0.10706442,0.37034344]],[0.895,[0.47714828,0.10513387,0.36941650]],[0.896,[0.47225593,0.10327260,0.36842255]],[0.898,[0.46733939,0.10148133,0.36735917]],[0.900,[0.46239915,0.09976065,0.36622412]],[0.902,[0.45743580,0.09811082,0.36501514]],[0.904,[0.45245022,0.09653153,0.36372988]],[0.906,[0.44744296,0.09502266,0.36236656]],[0.908,[0.44241480,0.09358362,0.36092332]],[0.910,[0.43736661,0.09221344,0.35939846]],[0.912,[0.43230001,0.09090969,0.35778975]],[0.914,[0.42721549,0.08967152,0.35609639]],[0.916,[0.42211410,0.08849693,0.35431721]],[0.918,[0.41699698,0.08738362,0.35245124]],[0.920,[0.41186583,0.08632804,0.35049732]],[0.922,[0.40672217,0.08532677,0.34845483]],[0.924,[0.40156669,0.08437758,0.34632390]],[0.926,[0.39640071,0.08347702,0.34410442]],[0.928,[0.39122561,0.08262142,0.34179654]],[0.930,[0.38604309,0.08180633,0.33940046]],[0.932,[0.38085553,0.08102606,0.33691649]],[0.934,[0.37566316,0.08027858,0.33434595]],[0.936,[0.37046736,0.07955978,0.33168987]],[0.938,[0.36526951,0.07886553,0.32894943]],[0.939,[0.36007097,0.07819169,0.32612604]],[0.941,[0.35487306,0.07753419,0.32322125]],[0.943,[0.34967708,0.07688902,0.32023675]],[0.945,[0.34448536,0.07625034,0.31717438]],[0.947,[0.33929826,0.07561586,0.31403622]],[0.949,[0.33411661,0.07498254,0.31082433]],[0.951,[0.32894146,0.07434697,0.30754086]],[0.953,[0.32377380,0.07370590,0.30418800]],[0.955,[0.31861455,0.07305628,0.30076800]],[0.957,[0.31346457,0.07239524,0.29728315]],[0.959,[0.30832464,0.07172011,0.29373575]],[0.961,[0.30319545,0.07102842,0.29012809]],[0.963,[0.29807765,0.07031788,0.28646248]],[0.965,[0.29297177,0.06958642,0.28274117]],[0.967,[0.28787829,0.06883212,0.27896641]],[0.969,[0.28279763,0.06805326,0.27514038]],[0.971,[0.27773011,0.06724828,0.27126523]],[0.973,[0.27267598,0.06641579,0.26734303]],[0.975,[0.26763544,0.06555455,0.26337578]],[0.977,[0.26260976,0.06466150,0.25936605]],[0.979,[0.25759927,0.06373523,0.25531596]],[0.980,[0.25260288,0.06277675,0.25122673]],[0.982,[0.24762052,0.06178533,0.24710008]],[0.984,[0.24265208,0.06076033,0.24293764]],[0.986,[0.23769737,0.05970120,0.23874094]],[0.988,[0.23275618,0.05860748,0.23451143]],[0.990,[0.22782852,0.05747825,0.23025069]],[0.992,[0.22291807,0.05630663,0.22596300]],[0.994,[0.21802045,0.05509893,0.22164676]],[0.996,[0.21313526,0.05385492,0.21730306]],[0.998,[0.20826202,0.05257439,0.21293290]],[1.000,[0.20340025,0.05125715,0.20853721]]]
H.colormap_Dark2 = [[0.000, [0.106, 0.620, 0.467]], [0.002, [0.106, 0.620, 0.467]], [0.004, [0.126, 0.613, 0.454]], [0.006, [0.126, 0.613, 0.454]], [0.008, [0.147, 0.606, 0.441]], [0.010, [0.147, 0.606, 0.441]], [0.012, [0.167, 0.599, 0.429]], [0.014, [0.167, 0.599, 0.429]], [0.016, [0.188, 0.592, 0.416]], [0.018, [0.188, 0.592, 0.416]], [0.020, [0.208, 0.586, 0.404]], [0.022, [0.208, 0.586, 0.404]], [0.023, [0.229, 0.579, 0.391]], [0.025, [0.229, 0.579, 0.391]], [0.027, [0.249, 0.572, 0.379]], [0.029, [0.249, 0.572, 0.379]], [0.031, [0.270, 0.565, 0.366]], [0.033, [0.270, 0.565, 0.366]], [0.035, [0.290, 0.559, 0.353]], [0.037, [0.290, 0.559, 0.353]], [0.039, [0.310, 0.552, 0.341]], [0.041, [0.310, 0.552, 0.341]], [0.043, [0.331, 0.545, 0.328]], [0.045, [0.331, 0.545, 0.328]], [0.047, [0.351, 0.538, 0.316]], [0.049, [0.351, 0.538, 0.316]], [0.051, [0.372, 0.531, 0.303]], [0.053, [0.372, 0.531, 0.303]], [0.055, [0.392, 0.525, 0.290]], [0.057, [0.392, 0.525, 0.290]], [0.059, [0.413, 0.518, 0.278]], [0.061, [0.413, 0.518, 0.278]], [0.063, [0.433, 0.511, 0.265]], [0.065, [0.433, 0.511, 0.265]], [0.067, [0.454, 0.504, 0.253]], [0.068, [0.454, 0.504, 0.253]], [0.070, [0.474, 0.498, 0.240]], [0.072, [0.474, 0.498, 0.240]], [0.074, [0.495, 0.491, 0.227]], [0.076, [0.495, 0.491, 0.227]], [0.078, [0.515, 0.484, 0.215]], [0.080, [0.515, 0.484, 0.215]], [0.082, [0.535, 0.477, 0.202]], [0.084, [0.535, 0.477, 0.202]], [0.086, [0.556, 0.470, 0.190]], [0.088, [0.556, 0.470, 0.190]], [0.090, [0.576, 0.464, 0.177]], [0.092, [0.576, 0.464, 0.177]], [0.094, [0.597, 0.457, 0.164]], [0.096, [0.597, 0.457, 0.164]], [0.098, [0.617, 0.450, 0.152]], [0.100, [0.617, 0.450, 0.152]], [0.102, [0.638, 0.443, 0.139]], [0.104, [0.638, 0.443, 0.139]], [0.106, [0.658, 0.436, 0.127]], [0.108, [0.658, 0.436, 0.127]], [0.110, [0.679, 0.430, 0.114]], [0.112, [0.679, 0.430, 0.114]], [0.114, [0.699, 0.423, 0.101]], [0.115, [0.699, 0.423, 0.101]], [0.117, [0.719, 0.416, 0.089]], [0.119, [0.719, 0.416, 0.089]], [0.121, [0.740, 0.409, 0.076]], [0.123, [0.740, 0.409, 0.076]], [0.125, [0.760, 0.403, 0.064]], [0.127, [0.760, 0.403, 0.064]], [0.129, [0.781, 0.396, 0.051]], [0.131, [0.781, 0.396, 0.051]], [0.133, [0.801, 0.389, 0.038]], [0.135, [0.801, 0.389, 0.038]], [0.137, [0.822, 0.382, 0.026]], [0.139, [0.822, 0.382, 0.026]], [0.141, [0.842, 0.375, 0.013]], [0.143, [0.842, 0.375, 0.013]], [0.145, [0.845, 0.374, 0.019]], [0.147, [0.845, 0.374, 0.019]], [0.149, [0.834, 0.375, 0.038]], [0.151, [0.834, 0.375, 0.038]], [0.153, [0.823, 0.377, 0.057]], [0.155, [0.823, 0.377, 0.057]], [0.157, [0.813, 0.379, 0.076]], [0.159, [0.813, 0.379, 0.076]], [0.160, [0.802, 0.381, 0.095]], [0.162, [0.802, 0.381, 0.095]], [0.164, [0.791, 0.383, 0.114]], [0.166, [0.791, 0.383, 0.114]], [0.168, [0.780, 0.385, 0.133]], [0.170, [0.780, 0.385, 0.133]], [0.172, [0.769, 0.386, 0.152]], [0.174, [0.769, 0.386, 0.152]], [0.176, [0.759, 0.388, 0.171]], [0.178, [0.759, 0.388, 0.171]], [0.180, [0.748, 0.390, 0.190]], [0.182, [0.748, 0.390, 0.190]], [0.184, [0.737, 0.392, 0.209]], [0.186, [0.737, 0.392, 0.209]], [0.188, [0.726, 0.394, 0.228]], [0.190, [0.726, 0.394, 0.228]], [0.192, [0.716, 0.396, 0.247]], [0.194, [0.716, 0.396, 0.247]], [0.196, [0.705, 0.397, 0.266]], [0.198, [0.705, 0.397, 0.266]], [0.200, [0.694, 0.399, 0.285]], [0.202, [0.694, 0.399, 0.285]], [0.204, [0.683, 0.401, 0.305]], [0.205, [0.683, 0.401, 0.305]], [0.207, [0.673, 0.403, 0.324]], [0.209, [0.673, 0.403, 0.324]], [0.211, [0.662, 0.405, 0.343]], [0.213, [0.662, 0.405, 0.343]], [0.215, [0.651, 0.407, 0.362]], [0.217, [0.651, 0.407, 0.362]], [0.219, [0.640, 0.408, 0.381]], [0.221, [0.640, 0.408, 0.381]], [0.223, [0.630, 0.410, 0.400]], [0.225, [0.630, 0.410, 0.400]], [0.227, [0.619, 0.412, 0.419]], [0.229, [0.619, 0.412, 0.419]], [0.231, [0.608, 0.414, 0.438]], [0.233, [0.608, 0.414, 0.438]], [0.235, [0.597, 0.416, 0.457]], [0.237, [0.597, 0.416, 0.457]], [0.239, [0.586, 0.418, 0.476]], [0.241, [0.586, 0.418, 0.476]], [0.243, [0.576, 0.419, 0.495]], [0.245, [0.576, 0.419, 0.495]], [0.247, [0.565, 0.421, 0.514]], [0.249, [0.565, 0.421, 0.514]], [0.250, [0.554, 0.423, 0.533]], [0.252, [0.554, 0.423, 0.533]], [0.254, [0.543, 0.425, 0.552]], [0.256, [0.543, 0.425, 0.552]], [0.258, [0.533, 0.427, 0.571]], [0.260, [0.533, 0.427, 0.571]], [0.262, [0.522, 0.428, 0.590]], [0.264, [0.522, 0.428, 0.590]], [0.266, [0.511, 0.430, 0.609]], [0.268, [0.511, 0.430, 0.609]], [0.270, [0.500, 0.432, 0.628]], [0.272, [0.500, 0.432, 0.628]], [0.274, [0.490, 0.434, 0.648]], [0.276, [0.490, 0.434, 0.648]], [0.278, [0.479, 0.436, 0.667]], [0.280, [0.479, 0.436, 0.667]], [0.282, [0.468, 0.438, 0.686]], [0.284, [0.468, 0.438, 0.686]], [0.286, [0.461, 0.438, 0.701]], [0.288, [0.461, 0.438, 0.701]], [0.290, [0.473, 0.430, 0.697]], [0.292, [0.473, 0.430, 0.697]], [0.294, [0.485, 0.423, 0.693]], [0.295, [0.485, 0.423, 0.693]], [0.297, [0.497, 0.415, 0.688]], [0.299, [0.497, 0.415, 0.688]], [0.301, [0.510, 0.408, 0.684]], [0.303, [0.510, 0.408, 0.684]], [0.305, [0.522, 0.400, 0.679]], [0.307, [0.522, 0.400, 0.679]], [0.309, [0.534, 0.392, 0.675]], [0.311, [0.534, 0.392, 0.675]], [0.313, [0.546, 0.385, 0.670]], [0.315, [0.546, 0.385, 0.670]], [0.317, [0.559, 0.377, 0.666]], [0.319, [0.559, 0.377, 0.666]], [0.321, [0.571, 0.369, 0.662]], [0.323, [0.571, 0.369, 0.662]], [0.325, [0.583, 0.362, 0.657]], [0.327, [0.583, 0.362, 0.657]], [0.329, [0.596, 0.354, 0.653]], [0.331, [0.596, 0.354, 0.653]], [0.333, [0.608, 0.346, 0.648]], [0.335, [0.608, 0.346, 0.648]], [0.337, [0.620, 0.339, 0.644]], [0.339, [0.620, 0.339, 0.644]], [0.341, [0.632, 0.331, 0.640]], [0.342, [0.632, 0.331, 0.640]], [0.344, [0.645, 0.323, 0.635]], [0.346, [0.645, 0.323, 0.635]], [0.348, [0.657, 0.316, 0.631]], [0.350, [0.657, 0.316, 0.631]], [0.352, [0.669, 0.308, 0.626]], [0.354, [0.669, 0.308, 0.626]], [0.356, [0.681, 0.301, 0.622]], [0.358, [0.681, 0.301, 0.622]], [0.360, [0.694, 0.293, 0.617]], [0.362, [0.694, 0.293, 0.617]], [0.364, [0.706, 0.285, 0.613]], [0.366, [0.706, 0.285, 0.613]], [0.368, [0.718, 0.278, 0.609]], [0.370, [0.718, 0.278, 0.609]], [0.372, [0.731, 0.270, 0.604]], [0.374, [0.731, 0.270, 0.604]], [0.376, [0.743, 0.262, 0.600]], [0.378, [0.743, 0.262, 0.600]], [0.380, [0.755, 0.255, 0.595]], [0.382, [0.755, 0.255, 0.595]], [0.384, [0.767, 0.247, 0.591]], [0.386, [0.767, 0.247, 0.591]], [0.387, [0.780, 0.239, 0.587]], [0.389, [0.780, 0.239, 0.587]], [0.391, [0.792, 0.232, 0.582]], [0.393, [0.792, 0.232, 0.582]], [0.395, [0.804, 0.224, 0.578]], [0.397, [0.804, 0.224, 0.578]], [0.399, [0.816, 0.216, 0.573]], [0.401, [0.816, 0.216, 0.573]], [0.403, [0.829, 0.209, 0.569]], [0.405, [0.829, 0.209, 0.569]], [0.407, [0.841, 0.201, 0.565]], [0.409, [0.841, 0.201, 0.565]], [0.411, [0.853, 0.194, 0.560]], [0.413, [0.853, 0.194, 0.560]], [0.415, [0.866, 0.186, 0.556]], [0.417, [0.866, 0.186, 0.556]], [0.419, [0.878, 0.178, 0.551]], [0.421, [0.878, 0.178, 0.551]], [0.423, [0.890, 0.171, 0.547]], [0.425, [0.890, 0.171, 0.547]], [0.427, [0.902, 0.163, 0.542]], [0.429, [0.902, 0.163, 0.542]], [0.431, [0.896, 0.170, 0.533]], [0.432, [0.896, 0.170, 0.533]], [0.434, [0.882, 0.184, 0.521]], [0.436, [0.882, 0.184, 0.521]], [0.438, [0.868, 0.197, 0.510]], [0.440, [0.868, 0.197, 0.510]], [0.442, [0.854, 0.211, 0.498]], [0.444, [0.854, 0.211, 0.498]], [0.446, [0.840, 0.224, 0.486]], [0.448, [0.840, 0.224, 0.486]], [0.450, [0.827, 0.238, 0.475]], [0.452, [0.827, 0.238, 0.475]], [0.454, [0.813, 0.251, 0.463]], [0.456, [0.813, 0.251, 0.463]], [0.458, [0.799, 0.265, 0.451]], [0.460, [0.799, 0.265, 0.451]], [0.462, [0.785, 0.278, 0.440]], [0.464, [0.785, 0.278, 0.440]], [0.466, [0.771, 0.292, 0.428]], [0.468, [0.771, 0.292, 0.428]], [0.470, [0.757, 0.305, 0.417]], [0.472, [0.757, 0.305, 0.417]], [0.474, [0.743, 0.318, 0.405]], [0.476, [0.743, 0.318, 0.405]], [0.477, [0.729, 0.332, 0.393]], [0.479, [0.729, 0.332, 0.393]], [0.481, [0.715, 0.345, 0.382]], [0.483, [0.715, 0.345, 0.382]], [0.485, [0.702, 0.359, 0.370]], [0.487, [0.702, 0.359, 0.370]], [0.489, [0.688, 0.372, 0.358]], [0.491, [0.688, 0.372, 0.358]], [0.493, [0.674, 0.386, 0.347]], [0.495, [0.674, 0.386, 0.347]], [0.497, [0.660, 0.399, 0.335]], [0.499, [0.660, 0.399, 0.335]], [0.501, [0.646, 0.413, 0.324]], [0.503, [0.646, 0.413, 0.324]], [0.505, [0.632, 0.426, 0.312]], [0.507, [0.632, 0.426, 0.312]], [0.509, [0.618, 0.440, 0.300]], [0.511, [0.618, 0.440, 0.300]], [0.513, [0.604, 0.453, 0.289]], [0.515, [0.604, 0.453, 0.289]], [0.517, [0.590, 0.466, 0.277]], [0.519, [0.590, 0.466, 0.277]], [0.521, [0.577, 0.480, 0.265]], [0.523, [0.577, 0.480, 0.265]], [0.524, [0.563, 0.493, 0.254]], [0.526, [0.563, 0.493, 0.254]], [0.528, [0.549, 0.507, 0.242]], [0.530, [0.549, 0.507, 0.242]], [0.532, [0.535, 0.520, 0.231]], [0.534, [0.535, 0.520, 0.231]], [0.536, [0.521, 0.534, 0.219]], [0.538, [0.521, 0.534, 0.219]], [0.540, [0.507, 0.547, 0.207]], [0.542, [0.507, 0.547, 0.207]], [0.544, [0.493, 0.561, 0.196]], [0.546, [0.493, 0.561, 0.196]], [0.548, [0.479, 0.574, 0.184]], [0.550, [0.479, 0.574, 0.184]], [0.552, [0.465, 0.588, 0.172]], [0.554, [0.465, 0.588, 0.172]], [0.556, [0.452, 0.601, 0.161]], [0.558, [0.452, 0.601, 0.161]], [0.560, [0.438, 0.614, 0.149]], [0.562, [0.438, 0.614, 0.149]], [0.564, [0.424, 0.628, 0.138]], [0.566, [0.424, 0.628, 0.138]], [0.568, [0.410, 0.641, 0.126]], [0.569, [0.410, 0.641, 0.126]], [0.571, [0.404, 0.651, 0.117]], [0.573, [0.404, 0.651, 0.117]], [0.575, [0.418, 0.652, 0.114]], [0.577, [0.418, 0.652, 0.114]], [0.579, [0.431, 0.652, 0.111]], [0.581, [0.431, 0.652, 0.111]], [0.583, [0.445, 0.653, 0.108]], [0.585, [0.445, 0.653, 0.108]], [0.587, [0.459, 0.653, 0.105]], [0.589, [0.459, 0.653, 0.105]], [0.591, [0.473, 0.654, 0.102]], [0.593, [0.473, 0.654, 0.102]], [0.595, [0.487, 0.654, 0.099]], [0.597, [0.487, 0.654, 0.099]], [0.599, [0.500, 0.655, 0.096]], [0.601, [0.500, 0.655, 0.096]], [0.603, [0.514, 0.655, 0.093]], [0.605, [0.514, 0.655, 0.093]], [0.607, [0.528, 0.656, 0.090]], [0.609, [0.528, 0.656, 0.090]], [0.611, [0.542, 0.657, 0.087]], [0.613, [0.542, 0.657, 0.087]], [0.614, [0.556, 0.657, 0.084]], [0.616, [0.556, 0.657, 0.084]], [0.618, [0.569, 0.658, 0.081]], [0.620, [0.569, 0.658, 0.081]], [0.622, [0.583, 0.658, 0.078]], [0.624, [0.583, 0.658, 0.078]], [0.626, [0.597, 0.659, 0.075]], [0.628, [0.597, 0.659, 0.075]], [0.630, [0.611, 0.659, 0.072]], [0.632, [0.611, 0.659, 0.072]], [0.634, [0.624, 0.660, 0.069]], [0.636, [0.624, 0.660, 0.069]], [0.638, [0.638, 0.660, 0.066]], [0.640, [0.638, 0.660, 0.066]], [0.642, [0.652, 0.661, 0.063]], [0.644, [0.652, 0.661, 0.063]], [0.646, [0.666, 0.661, 0.060]], [0.648, [0.666, 0.661, 0.060]], [0.650, [0.680, 0.662, 0.057]], [0.652, [0.680, 0.662, 0.057]], [0.654, [0.693, 0.662, 0.053]], [0.656, [0.693, 0.662, 0.053]], [0.658, [0.707, 0.663, 0.050]], [0.659, [0.707, 0.663, 0.050]], [0.661, [0.721, 0.664, 0.047]], [0.663, [0.721, 0.664, 0.047]], [0.665, [0.735, 0.664, 0.044]], [0.667, [0.735, 0.664, 0.044]], [0.669, [0.748, 0.665, 0.041]], [0.671, [0.748, 0.665, 0.041]], [0.673, [0.762, 0.665, 0.038]], [0.675, [0.762, 0.665, 0.038]], [0.677, [0.776, 0.666, 0.035]], [0.679, [0.776, 0.666, 0.035]], [0.681, [0.790, 0.666, 0.032]], [0.683, [0.790, 0.666, 0.032]], [0.685, [0.804, 0.667, 0.029]], [0.687, [0.804, 0.667, 0.029]], [0.689, [0.817, 0.667, 0.026]], [0.691, [0.817, 0.667, 0.026]], [0.693, [0.831, 0.668, 0.023]], [0.695, [0.831, 0.668, 0.023]], [0.697, [0.845, 0.668, 0.020]], [0.699, [0.845, 0.668, 0.020]], [0.701, [0.859, 0.669, 0.017]], [0.703, [0.859, 0.669, 0.017]], [0.705, [0.872, 0.669, 0.014]], [0.706, [0.872, 0.669, 0.014]], [0.708, [0.886, 0.670, 0.011]], [0.710, [0.886, 0.670, 0.011]], [0.712, [0.900, 0.671, 0.008]], [0.714, [0.900, 0.671, 0.008]], [0.716, [0.896, 0.666, 0.010]], [0.718, [0.896, 0.666, 0.010]], [0.720, [0.889, 0.660, 0.013]], [0.722, [0.889, 0.660, 0.013]], [0.724, [0.882, 0.654, 0.016]], [0.726, [0.882, 0.654, 0.016]], [0.728, [0.875, 0.649, 0.019]], [0.730, [0.875, 0.649, 0.019]], [0.732, [0.868, 0.643, 0.022]], [0.734, [0.868, 0.643, 0.022]], [0.736, [0.862, 0.637, 0.025]], [0.738, [0.862, 0.637, 0.025]], [0.740, [0.855, 0.631, 0.028]], [0.742, [0.855, 0.631, 0.028]], [0.744, [0.848, 0.626, 0.031]], [0.746, [0.848, 0.626, 0.031]], [0.748, [0.841, 0.620, 0.034]], [0.750, [0.841, 0.620, 0.034]], [0.751, [0.834, 0.614, 0.036]], [0.753, [0.834, 0.614, 0.036]], [0.755, [0.827, 0.609, 0.039]], [0.757, [0.827, 0.609, 0.039]], [0.759, [0.820, 0.603, 0.042]], [0.761, [0.820, 0.603, 0.042]], [0.763, [0.813, 0.597, 0.045]], [0.765, [0.813, 0.597, 0.045]], [0.767, [0.806, 0.592, 0.048]], [0.769, [0.806, 0.592, 0.048]], [0.771, [0.800, 0.586, 0.051]], [0.773, [0.800, 0.586, 0.051]], [0.775, [0.793, 0.580, 0.054]], [0.777, [0.793, 0.580, 0.054]], [0.779, [0.786, 0.574, 0.057]], [0.781, [0.786, 0.574, 0.057]], [0.783, [0.779, 0.569, 0.060]], [0.785, [0.779, 0.569, 0.060]], [0.787, [0.772, 0.563, 0.063]], [0.789, [0.772, 0.563, 0.063]], [0.791, [0.765, 0.557, 0.066]], [0.793, [0.765, 0.557, 0.066]], [0.795, [0.758, 0.552, 0.068]], [0.796, [0.758, 0.552, 0.068]], [0.798, [0.751, 0.546, 0.071]], [0.800, [0.751, 0.546, 0.071]], [0.802, [0.744, 0.540, 0.074]], [0.804, [0.744, 0.540, 0.074]], [0.806, [0.738, 0.534, 0.077]], [0.808, [0.738, 0.534, 0.077]], [0.810, [0.731, 0.529, 0.080]], [0.812, [0.731, 0.529, 0.080]], [0.814, [0.724, 0.523, 0.083]], [0.816, [0.724, 0.523, 0.083]], [0.818, [0.717, 0.517, 0.086]], [0.820, [0.717, 0.517, 0.086]], [0.822, [0.710, 0.512, 0.089]], [0.824, [0.710, 0.512, 0.089]], [0.826, [0.703, 0.506, 0.092]], [0.828, [0.703, 0.506, 0.092]], [0.830, [0.696, 0.500, 0.095]], [0.832, [0.696, 0.500, 0.095]], [0.834, [0.689, 0.495, 0.098]], [0.836, [0.689, 0.495, 0.098]], [0.838, [0.682, 0.489, 0.100]], [0.840, [0.682, 0.489, 0.100]], [0.841, [0.676, 0.483, 0.103]], [0.843, [0.676, 0.483, 0.103]], [0.845, [0.669, 0.477, 0.106]], [0.847, [0.669, 0.477, 0.106]], [0.849, [0.662, 0.472, 0.109]], [0.851, [0.662, 0.472, 0.109]], [0.853, [0.655, 0.466, 0.112]], [0.855, [0.655, 0.466, 0.112]], [0.857, [0.648, 0.462, 0.117]], [0.859, [0.648, 0.462, 0.117]], [0.861, [0.641, 0.460, 0.125]], [0.863, [0.641, 0.460, 0.125]], [0.865, [0.634, 0.459, 0.133]], [0.867, [0.634, 0.459, 0.133]], [0.869, [0.627, 0.457, 0.141]], [0.871, [0.627, 0.457, 0.141]], [0.873, [0.620, 0.455, 0.149]], [0.875, [0.620, 0.455, 0.149]], [0.877, [0.614, 0.453, 0.156]], [0.879, [0.614, 0.453, 0.156]], [0.881, [0.607, 0.452, 0.164]], [0.883, [0.607, 0.452, 0.164]], [0.885, [0.600, 0.450, 0.172]], [0.886, [0.600, 0.450, 0.172]], [0.888, [0.593, 0.448, 0.180]], [0.890, [0.593, 0.448, 0.180]], [0.892, [0.586, 0.447, 0.188]], [0.894, [0.586, 0.447, 0.188]], [0.896, [0.579, 0.445, 0.196]], [0.898, [0.579, 0.445, 0.196]], [0.900, [0.572, 0.443, 0.204]], [0.902, [0.572, 0.443, 0.204]], [0.904, [0.565, 0.441, 0.211]], [0.906, [0.565, 0.441, 0.211]], [0.908, [0.558, 0.440, 0.219]], [0.910, [0.558, 0.440, 0.219]], [0.912, [0.552, 0.438, 0.227]], [0.914, [0.552, 0.438, 0.227]], [0.916, [0.545, 0.436, 0.235]], [0.918, [0.545, 0.436, 0.235]], [0.920, [0.538, 0.434, 0.243]], [0.922, [0.538, 0.434, 0.243]], [0.924, [0.531, 0.433, 0.251]], [0.926, [0.531, 0.433, 0.251]], [0.928, [0.524, 0.431, 0.259]], [0.930, [0.524, 0.431, 0.259]], [0.932, [0.517, 0.429, 0.266]], [0.933, [0.517, 0.429, 0.266]], [0.935, [0.510, 0.428, 0.274]], [0.937, [0.510, 0.428, 0.274]], [0.939, [0.503, 0.426, 0.282]], [0.941, [0.503, 0.426, 0.282]], [0.943, [0.496, 0.424, 0.290]], [0.945, [0.496, 0.424, 0.290]], [0.947, [0.490, 0.422, 0.298]], [0.949, [0.490, 0.422, 0.298]], [0.951, [0.483, 0.421, 0.306]], [0.953, [0.483, 0.421, 0.306]], [0.955, [0.476, 0.419, 0.314]], [0.957, [0.476, 0.419, 0.314]], [0.959, [0.469, 0.417, 0.321]], [0.961, [0.469, 0.417, 0.321]], [0.963, [0.462, 0.416, 0.329]], [0.965, [0.462, 0.416, 0.329]], [0.967, [0.455, 0.414, 0.337]], [0.969, [0.455, 0.414, 0.337]], [0.971, [0.448, 0.412, 0.345]], [0.973, [0.448, 0.412, 0.345]], [0.975, [0.441, 0.410, 0.353]], [0.977, [0.441, 0.410, 0.353]], [0.978, [0.434, 0.409, 0.361]], [0.980, [0.434, 0.409, 0.361]], [0.982, [0.428, 0.407, 0.369]], [0.984, [0.428, 0.407, 0.369]], [0.986, [0.421, 0.405, 0.376]], [0.988, [0.421, 0.405, 0.376]], [0.990, [0.414, 0.403, 0.384]], [0.992, [0.414, 0.403, 0.384]], [0.994, [0.407, 0.402, 0.392]], [0.996, [0.407, 0.402, 0.392]], [0.998, [0.400, 0.400, 0.400]], [1.000, [0.400, 0.400, 0.400]]];
H.colormap_deep = [[0.000,[0.99283718,0.99437346,0.80013620]],[0.004,[0.98493745,0.99135452,0.79532716]],[0.008,[0.97704185,0.98834183,0.79057175]],[0.012,[0.96914884,0.98533575,0.78586971]],[0.016,[0.96123821,0.98234397,0.78121815]],[0.020,[0.95332337,0.97936076,0.77661978]],[0.024,[0.94540698,0.97638475,0.77207538]],[0.027,[0.93747992,0.97341911,0.76758435]],[0.031,[0.92953534,0.97046601,0.76314675]],[0.035,[0.92158503,0.96752052,0.75876468]],[0.039,[0.91362740,0.96458287,0.75443868]],[0.043,[0.90565146,0.96165671,0.75016880]],[0.047,[0.89765699,0.95874159,0.74595620]],[0.051,[0.88965121,0.95583441,0.74180237]],[0.055,[0.88163260,0.95293526,0.73770822]],[0.059,[0.87359867,0.95004456,0.73367476]],[0.063,[0.86553550,0.94716668,0.72970312]],[0.067,[0.85745594,0.94429655,0.72579485]],[0.071,[0.84935864,0.94143411,0.72195118]],[0.075,[0.84124229,0.93857930,0.71817346]],[0.078,[0.83310566,0.93573198,0.71446311]],[0.082,[0.82494386,0.93289321,0.71082186]],[0.086,[0.81675365,0.93006344,0.70725160]],[0.090,[0.80854079,0.92724016,0.70375359]],[0.094,[0.80030440,0.92442306,0.70032949]],[0.098,[0.79204369,0.92161178,0.69698104]],[0.102,[0.78375799,0.91880591,0.69371001]],[0.106,[0.77544679,0.91600497,0.69051825]],[0.110,[0.76710972,0.91320846,0.68740763]],[0.114,[0.75874656,0.91041576,0.68438007]],[0.118,[0.75035729,0.90762623,0.68143751]],[0.122,[0.74194210,0.90483916,0.67858190]],[0.125,[0.73350140,0.90205374,0.67581520]],[0.129,[0.72503584,0.89926913,0.67313935]],[0.133,[0.71654633,0.89648440,0.67055629]],[0.137,[0.70803409,0.89369855,0.66806789]],[0.141,[0.69950063,0.89091050,0.66567599]],[0.145,[0.69094781,0.88811911,0.66338232]],[0.149,[0.68237784,0.88532317,0.66118854]],[0.153,[0.67379331,0.88252137,0.65909617]],[0.157,[0.66519720,0.87971238,0.65710661]],[0.161,[0.65659293,0.87689477,0.65522105]],[0.165,[0.64798434,0.87406707,0.65344053]],[0.169,[0.63937570,0.87122773,0.65176583]],[0.173,[0.63076931,0.86837576,0.65019861]],[0.176,[0.62216818,0.86550998,0.64874031]],[0.180,[0.61358282,0.86262763,0.64738888]],[0.184,[0.60501947,0.85972701,0.64614391]],[0.188,[0.59648484,0.85680645,0.64500466]],[0.192,[0.58798410,0.85386466,0.64397109]],[0.196,[0.57952181,0.85090053,0.64304356]],[0.200,[0.57111152,0.84791128,0.64221712]],[0.204,[0.56276148,0.84489535,0.64148939]],[0.208,[0.55447837,0.84185159,0.64085880]],[0.212,[0.54626958,0.83877878,0.64032322]],[0.216,[0.53814812,0.83567489,0.63987637]],[0.220,[0.53012282,0.83253876,0.63951422]],[0.224,[0.52219973,0.82936979,0.63923462]],[0.227,[0.51439085,0.82616658,0.63903043]],[0.231,[0.50670501,0.82292834,0.63889632]],[0.235,[0.49914951,0.81965467,0.63882777]],[0.239,[0.49173307,0.81634505,0.63881848]],[0.243,[0.48446331,0.81299926,0.63886245]],[0.247,[0.47734697,0.80961729,0.63895382]],[0.251,[0.47039042,0.80619928,0.63908644]],[0.255,[0.46359865,0.80274561,0.63925487]],[0.259,[0.45697666,0.79925675,0.63945293]],[0.263,[0.45052876,0.79573333,0.63967426]],[0.267,[0.44425693,0.79217623,0.63991482]],[0.271,[0.43816347,0.78858638,0.64016943]],[0.275,[0.43225139,0.78496472,0.64043042]],[0.278,[0.42651956,0.78131247,0.64069607]],[0.282,[0.42096796,0.77763083,0.64096223]],[0.286,[0.41559684,0.77392103,0.64122273]],[0.290,[0.41040452,0.77018443,0.64147423]],[0.294,[0.40538835,0.76642231,0.64171516]],[0.298,[0.40054593,0.76263603,0.64194247]],[0.302,[0.39587503,0.75882703,0.64215083]],[0.306,[0.39137183,0.75499667,0.64233873]],[0.310,[0.38703226,0.75114621,0.64250555]],[0.314,[0.38285235,0.74727697,0.64264931]],[0.318,[0.37882784,0.74339025,0.64276831]],[0.322,[0.37495428,0.73948763,0.64285736]],[0.325,[0.37122661,0.73557007,0.64291896]],[0.329,[0.36763999,0.73163877,0.64295205]],[0.333,[0.36418945,0.72769490,0.64295573]],[0.337,[0.36086992,0.72373958,0.64292927]],[0.341,[0.35767625,0.71977391,0.64287199]],[0.345,[0.35460272,0.71579925,0.64278108]],[0.349,[0.35164460,0.71181627,0.64265896]],[0.353,[0.34879674,0.70782594,0.64250547]],[0.357,[0.34605405,0.70382918,0.64232058]],[0.361,[0.34341147,0.69982684,0.64210435]],[0.365,[0.34086403,0.69581978,0.64185693]],[0.369,[0.33840684,0.69180878,0.64157857]],[0.373,[0.33603510,0.68779458,0.64126960]],[0.376,[0.33374413,0.68377791,0.64093040]],[0.380,[0.33152913,0.67975951,0.64056102]],[0.384,[0.32938557,0.67574005,0.64016185]],[0.388,[0.32730951,0.67171999,0.63973418]],[0.392,[0.32529678,0.66769992,0.63927863]],[0.396,[0.32334339,0.66368034,0.63879587]],[0.400,[0.32144548,0.65966175,0.63828660]],[0.404,[0.31959934,0.65564462,0.63775156]],[0.408,[0.31780141,0.65162937,0.63719152]],[0.412,[0.31604829,0.64761640,0.63660727]],[0.416,[0.31433675,0.64360608,0.63599965]],[0.420,[0.31266369,0.63959874,0.63536950]],[0.424,[0.31102618,0.63559469,0.63471769]],[0.427,[0.30942143,0.63159422,0.63404509]],[0.431,[0.30784684,0.62759757,0.63335259]],[0.435,[0.30629992,0.62360498,0.63264111]],[0.439,[0.30477834,0.61961664,0.63191155]],[0.443,[0.30327995,0.61563273,0.63116484]],[0.447,[0.30180270,0.61165340,0.63040190]],[0.451,[0.30034472,0.60767877,0.62962366]],[0.455,[0.29890426,0.60370894,0.62883105]],[0.459,[0.29747971,0.59974400,0.62802499]],[0.463,[0.29606961,0.59578401,0.62720640]],[0.467,[0.29467261,0.59182898,0.62637622]],[0.471,[0.29328753,0.58787895,0.62553534]],[0.475,[0.29191327,0.58393389,0.62468468]],[0.478,[0.29054888,0.57999377,0.62382514]],[0.482,[0.28919353,0.57605855,0.62295759]],[0.486,[0.28784651,0.57212815,0.62208291]],[0.490,[0.28650717,0.56820249,0.62120191]],[0.494,[0.28517499,0.56428149,0.62031537]],[0.498,[0.28384971,0.56036495,0.61942427]],[0.502,[0.28253107,0.55645275,0.61852942]],[0.506,[0.28121892,0.55254470,0.61763160]],[0.510,[0.27991319,0.54864062,0.61673159]],[0.514,[0.27861393,0.54474030,0.61583014]],[0.518,[0.27732128,0.54084353,0.61492795]],[0.522,[0.27603547,0.53695005,0.61402574]],[0.525,[0.27475681,0.53305961,0.61312416]],[0.529,[0.27348573,0.52917194,0.61222386]],[0.533,[0.27222271,0.52528675,0.61132543]],[0.537,[0.27096833,0.52140372,0.61042947]],[0.541,[0.26972326,0.51752253,0.60953651]],[0.545,[0.26848824,0.51364284,0.60864705]],[0.549,[0.26726407,0.50976430,0.60776157]],[0.553,[0.26605166,0.50588653,0.60688050]],[0.557,[0.26485195,0.50200914,0.60600423]],[0.561,[0.26366598,0.49813174,0.60513310]],[0.565,[0.26249484,0.49425390,0.60426741]],[0.569,[0.26133970,0.49037520,0.60340742]],[0.573,[0.26020178,0.48649518,0.60255336]],[0.576,[0.25908258,0.48261330,0.60170558]],[0.580,[0.25798324,0.47872916,0.60086398]],[0.584,[0.25690514,0.47484228,0.60002857]],[0.588,[0.25584972,0.47095213,0.59919934]],[0.592,[0.25481847,0.46705822,0.59837617]],[0.596,[0.25381294,0.46316000,0.59755890]],[0.600,[0.25283469,0.45925694,0.59674727]],[0.604,[0.25188534,0.45534848,0.59594094]],[0.608,[0.25096657,0.45143404,0.59513951]],[0.612,[0.25008005,0.44751306,0.59434245]],[0.616,[0.24922752,0.44358493,0.59354913]],[0.620,[0.24841072,0.43964906,0.59275883]],[0.624,[0.24763144,0.43570484,0.59197068]],[0.627,[0.24689148,0.43175165,0.59118371]],[0.631,[0.24619263,0.42778886,0.59039677]],[0.635,[0.24553674,0.42381585,0.58960858]],[0.639,[0.24492561,0.41983198,0.58881765]],[0.643,[0.24436114,0.41583660,0.58802239]],[0.647,[0.24384618,0.41182872,0.58722185]],[0.651,[0.24338171,0.40780801,0.58641316]],[0.655,[0.24296954,0.40377384,0.58559395]],[0.659,[0.24261144,0.39972561,0.58476160]],[0.663,[0.24230913,0.39566275,0.58391314]],[0.667,[0.24206427,0.39158472,0.58304526]],[0.671,[0.24187844,0.38749100,0.58215425]],[0.675,[0.24175313,0.38338117,0.58123598]],[0.678,[0.24168970,0.37925483,0.58028581]],[0.682,[0.24169076,0.37511123,0.57929958]],[0.686,[0.24175956,0.37094938,0.57827294]],[0.690,[0.24189401,0.36677027,0.57719727]],[0.694,[0.24209470,0.36257399,0.57606540]],[0.698,[0.24236192,0.35836085,0.57486937]],[0.702,[0.24269783,0.35413056,0.57360160]],[0.706,[0.24310562,0.34988262,0.57225403]],[0.710,[0.24357904,0.34561997,0.57081275]],[0.714,[0.24411647,0.34134410,0.56926586]],[0.718,[0.24472203,0.33705469,0.56760298]],[0.722,[0.24538978,0.33275513,0.56580822]],[0.725,[0.24611215,0.32844959,0.56386485]],[0.729,[0.24689121,0.32413920,0.56175861]],[0.733,[0.24771570,0.31982991,0.55947045]],[0.737,[0.24857612,0.31552728,0.55698221]],[0.741,[0.24946824,0.31123536,0.55427663]],[0.745,[0.25037292,0.30696328,0.55133524]],[0.749,[0.25128177,0.30271674,0.54814227]],[0.753,[0.25217537,0.29850489,0.54468392]],[0.757,[0.25303784,0.29433557,0.54094998]],[0.761,[0.25385147,0.29021676,0.53693454]],[0.765,[0.25459786,0.28615608,0.53263702]],[0.769,[0.25525973,0.28216003,0.52806240]],[0.773,[0.25582540,0.27823281,0.52321900]],[0.776,[0.25627372,0.27437999,0.51812616]],[0.780,[0.25660517,0.27060089,0.51279636]],[0.784,[0.25680712,0.26689714,0.50725418]],[0.788,[0.25687291,0.26326808,0.50152514]],[0.792,[0.25680888,0.25970984,0.49562536]],[0.796,[0.25661512,0.25621955,0.48957708]],[0.800,[0.25628796,0.25279443,0.48340873]],[0.804,[0.25583228,0.24943005,0.47713997]],[0.808,[0.25525721,0.24612144,0.47078343]],[0.812,[0.25456757,0.24286438,0.46435576]],[0.816,[0.25376865,0.23965469,0.45787181]],[0.820,[0.25286600,0.23648829,0.45134461]],[0.824,[0.25186528,0.23336132,0.44478539]],[0.827,[0.25077214,0.23027012,0.43820368]],[0.831,[0.24959215,0.22721132,0.43160747]],[0.835,[0.24833066,0.22418177,0.42500332]],[0.839,[0.24699281,0.22117861,0.41839657]],[0.843,[0.24558180,0.21819916,0.41179552]],[0.847,[0.24409630,0.21524071,0.40521875]],[0.851,[0.24254746,0.21230118,0.39865318]],[0.855,[0.24093942,0.20937861,0.39210045]],[0.859,[0.23927601,0.20647121,0.38556163]],[0.863,[0.23755595,0.20357690,0.37905130]],[0.867,[0.23577916,0.20069365,0.37258104]],[0.871,[0.23395668,0.19782084,0.36612828]],[0.875,[0.23209137,0.19495728,0.35969247]],[0.878,[0.23017343,0.19210006,0.35331317]],[0.882,[0.22821552,0.18924937,0.34695853]],[0.886,[0.22622210,0.18640462,0.34062032]],[0.890,[0.22418213,0.18356266,0.33434315]],[0.894,[0.22210836,0.18072434,0.32809006]],[0.898,[0.22000279,0.17788891,0.32185935]],[0.902,[0.21785541,0.17505333,0.31569323]],[0.906,[0.21568192,0.17221954,0.30953956]],[0.910,[0.21347308,0.16938469,0.30343772]],[0.914,[0.21123508,0.16654905,0.29736908]],[0.918,[0.20897027,0.16371219,0.29132868]],[0.922,[0.20667286,0.16087193,0.28534375]],[0.925,[0.20435511,0.15803011,0.27936892]],[0.929,[0.20200284,0.15518269,0.27346550]],[0.933,[0.19963336,0.15233276,0.26756593]],[0.937,[0.19723196,0.14947616,0.26173441]],[0.941,[0.19481375,0.14661556,0.25591070]],[0.945,[0.19236658,0.14374739,0.25014898]],[0.949,[0.18990318,0.14087380,0.24439758]],[0.953,[0.18741252,0.13799155,0.23870629]],[0.957,[0.18490718,0.13510267,0.23302318]],[0.961,[0.18237518,0.13220381,0.22740210]],[0.965,[0.17983088,0.12929727,0.22178284]],[0.969,[0.17725957,0.12637929,0.21623094]],[0.973,[0.17467698,0.12345223,0.21067979]],[0.976,[0.17207033,0.12051292,0.20518607]],[0.980,[0.16945091,0.11756264,0.19970233]],[0.984,[0.16681176,0.11459941,0.19425947]],[0.988,[0.16415718,0.11162318,0.18883992]],[0.992,[0.16148781,0.10863318,0.18344165]],[0.996,[0.15879951,0.10562813,0.17808215]],[1.000,[0.15610197,0.10260825,0.17272157]]]
H.colormap_delta = [[0.002,[0.06597739,0.12386005,0.24948116]],[0.004,[0.06865758,0.12663250,0.25557624]],[0.006,[0.07132312,0.12939515,0.26166391]],[0.008,[0.07396584,0.13214058,0.26779480]],[0.010,[0.07658629,0.13486916,0.27396904]],[0.012,[0.07919242,0.13758843,0.28014206]],[0.014,[0.08176925,0.14028419,0.28640499]],[0.016,[0.08433407,0.14297318,0.29265629]],[0.018,[0.08687299,0.14564215,0.29898019]],[0.020,[0.08939564,0.14830082,0.30531941]],[0.021,[0.09189721,0.15094484,0.31170300]],[0.023,[0.09437767,0.15357460,0.31813071]],[0.025,[0.09684032,0.15619402,0.32458157]],[0.027,[0.09927797,0.15879644,0.33109756]],[0.029,[0.10169939,0.16139154,0.33762358]],[0.031,[0.10409298,0.16396840,0.34422672]],[0.033,[0.10647003,0.16653949,0.35083602]],[0.035,[0.10881765,0.16909286,0.35752405]],[0.037,[0.11114624,0.17164030,0.36422476]],[0.039,[0.11344526,0.17417268,0.37099405]],[0.041,[0.11572015,0.17669703,0.37779407]],[0.043,[0.11796711,0.17921142,0.38463932]],[0.045,[0.12018172,0.18171361,0.39154591]],[0.047,[0.12237222,0.18421369,0.39845983]],[0.049,[0.12451836,0.18669519,0.40547913]],[0.051,[0.12663654,0.18917624,0.41250469]],[0.053,[0.12871435,0.19164859,0.41958831]],[0.055,[0.13074695,0.19411179,0.42673806]],[0.057,[0.13274084,0.19657524,0.43390608]],[0.059,[0.13468282,0.19903239,0.44113668]],[0.061,[0.13656674,0.20148370,0.44843501]],[0.063,[0.13839602,0.20393744,0.45576220]],[0.064,[0.14016368,0.20639447,0.46312314]],[0.066,[0.14185409,0.20885126,0.47055044]],[0.068,[0.14345986,0.21131167,0.47803591]],[0.070,[0.14497642,0.21378230,0.48555700]],[0.072,[0.14639100,0.21626634,0.49311434]],[0.074,[0.14768864,0.21876800,0.50070638]],[0.076,[0.14885173,0.22129285,0.50832846]],[0.078,[0.14985965,0.22384818,0.51597154]],[0.080,[0.15068840,0.22644340,0.52362079]],[0.082,[0.15131023,0.22909058,0.53125369]],[0.084,[0.15168425,0.23180303,0.53885457]],[0.086,[0.15175702,0.23459819,0.54640144]],[0.088,[0.15150762,0.23750367,0.55379602]],[0.090,[0.15085272,0.24054407,0.56100954]],[0.092,[0.14977800,0.24375297,0.56790391]],[0.094,[0.14824130,0.24715977,0.57437788]],[0.096,[0.14626774,0.25078506,0.58029534]],[0.098,[0.14393556,0.25462901,0.58555075]],[0.100,[0.14135408,0.25866955,0.59010335]],[0.102,[0.13864079,0.26286871,0.59397852]],[0.104,[0.13589174,0.26718438,0.59724867]],[0.105,[0.13319563,0.27157423,0.60000635]],[0.107,[0.13058114,0.27601030,0.60234289]],[0.109,[0.12806719,0.28047115,0.60433583]],[0.111,[0.12569199,0.28493491,0.60605594]],[0.113,[0.12343537,0.28939604,0.60755039]],[0.115,[0.12131237,0.29384382,0.60886431]],[0.117,[0.11933140,0.29827105,0.61003449]],[0.119,[0.11747335,0.30267840,0.61108156]],[0.121,[0.11574105,0.30706267,0.61202824]],[0.123,[0.11415261,0.31141804,0.61290024]],[0.125,[0.11269166,0.31574724,0.61370617]],[0.127,[0.11135538,0.32005035,0.61445721]],[0.129,[0.11014377,0.32432716,0.61516380]],[0.131,[0.10905648,0.32857778,0.61583463]],[0.133,[0.10809281,0.33280260,0.61647697]],[0.135,[0.10725185,0.33700217,0.61709693]],[0.137,[0.10653241,0.34117717,0.61769964]],[0.139,[0.10593314,0.34532836,0.61828945]],[0.141,[0.10545250,0.34945656,0.61887003]],[0.143,[0.10508879,0.35356261,0.61944452]],[0.145,[0.10484013,0.35764738,0.62001559]],[0.146,[0.10470452,0.36171173,0.62058554]],[0.148,[0.10467981,0.36575652,0.62115635]],[0.150,[0.10476371,0.36978259,0.62172971]],[0.152,[0.10495382,0.37379076,0.62230709]],[0.154,[0.10524762,0.37778184,0.62288978]],[0.156,[0.10564252,0.38175660,0.62347886]],[0.158,[0.10613580,0.38571579,0.62407531]],[0.160,[0.10672471,0.38966014,0.62467996]],[0.162,[0.10740642,0.39359035,0.62529352]],[0.164,[0.10817806,0.39750711,0.62591662]],[0.166,[0.10903675,0.40141105,0.62654981]],[0.168,[0.10998202,0.40530231,0.62719516]],[0.170,[0.11100819,0.40918206,0.62785128]],[0.172,[0.11211222,0.41305092,0.62851837]],[0.174,[0.11329127,0.41690943,0.62919672]],[0.176,[0.11454253,0.42075813,0.62988653]],[0.178,[0.11586327,0.42459754,0.63058799]],[0.180,[0.11725083,0.42842816,0.63130122]],[0.182,[0.11870260,0.43225046,0.63202632]],[0.184,[0.12021702,0.43606470,0.63276403]],[0.186,[0.12179033,0.43987161,0.63351340]],[0.188,[0.12342020,0.44367161,0.63427436]],[0.189,[0.12510445,0.44746510,0.63504690]],[0.191,[0.12684102,0.45125247,0.63583095]],[0.193,[0.12862799,0.45503408,0.63662642]],[0.195,[0.13046351,0.45881028,0.63743320]],[0.197,[0.13234563,0.46258148,0.63825092]],[0.199,[0.13427263,0.46634802,0.63907929]],[0.201,[0.13624311,0.47011020,0.63991816]],[0.203,[0.13825578,0.47386832,0.64076733]],[0.205,[0.14030945,0.47762263,0.64162657]],[0.207,[0.14240307,0.48137341,0.64249562]],[0.209,[0.14453572,0.48512091,0.64337422]],[0.211,[0.14670608,0.48886546,0.64426159]],[0.213,[0.14891319,0.49260737,0.64515709]],[0.215,[0.15115711,0.49634669,0.64606096]],[0.217,[0.15343746,0.50008362,0.64697283]],[0.219,[0.15575396,0.50381833,0.64789234]],[0.221,[0.15810648,0.50755096,0.64881909]],[0.223,[0.16049500,0.51128167,0.64975267]],[0.225,[0.16291965,0.51501059,0.65069263]],[0.227,[0.16538066,0.51873781,0.65163850]],[0.229,[0.16787709,0.52246378,0.65258827]],[0.230,[0.17041079,0.52618823,0.65354289]],[0.232,[0.17298246,0.52991124,0.65450185]],[0.234,[0.17559291,0.53363281,0.65546464]],[0.236,[0.17824310,0.53735298,0.65643069]],[0.238,[0.18093416,0.54107173,0.65739946]],[0.240,[0.18366735,0.54478903,0.65837034]],[0.242,[0.18644408,0.54850484,0.65934275]],[0.244,[0.18926596,0.55221906,0.66031605]],[0.246,[0.19213472,0.55593160,0.66128961]],[0.248,[0.19505228,0.55964231,0.66226278]],[0.250,[0.19802076,0.56335105,0.66323489]],[0.252,[0.20104242,0.56705760,0.66420528]],[0.254,[0.20411976,0.57076173,0.66517325]],[0.256,[0.20725543,0.57446319,0.66613812]],[0.258,[0.21045232,0.57816165,0.66709920]],[0.260,[0.21371350,0.58185676,0.66805579]],[0.262,[0.21704227,0.58554813,0.66900720]],[0.264,[0.22044214,0.58923531,0.66995277]],[0.266,[0.22391686,0.59291779,0.67089183]],[0.268,[0.22747037,0.59659503,0.67182375]],[0.270,[0.23110686,0.60026640,0.67274791]],[0.271,[0.23483073,0.60393124,0.67366376]],[0.273,[0.23864660,0.60758879,0.67457077]],[0.275,[0.24255928,0.61123826,0.67546847]],[0.277,[0.24657379,0.61487875,0.67635647]],[0.279,[0.25069532,0.61850931,0.67723446]],[0.281,[0.25492963,0.62212933,0.67809791]],[0.283,[0.25928228,0.62573723,0.67895065]],[0.285,[0.26375886,0.62933183,0.67979274]],[0.287,[0.26836502,0.63291182,0.68062438]],[0.289,[0.27310635,0.63647586,0.68144595]],[0.291,[0.27799067,0.64002284,0.68225204]],[0.293,[0.28302187,0.64355084,0.68304906]],[0.295,[0.28820489,0.64705829,0.68383831]],[0.297,[0.29354581,0.65054365,0.68461866]],[0.299,[0.29905039,0.65400523,0.68538993]],[0.301,[0.30471967,0.65744127,0.68615859]],[0.303,[0.31055832,0.66085014,0.68692427]],[0.305,[0.31656915,0.66423017,0.68768878]],[0.307,[0.32274951,0.66757995,0.68845924]],[0.309,[0.32910283,0.67089793,0.68923459]],[0.311,[0.33562308,0.67418311,0.69002275]],[0.313,[0.34230732,0.67743451,0.69082687]],[0.314,[0.34914976,0.68065146,0.69165158]],[0.316,[0.35614127,0.68383379,0.69250293]],[0.318,[0.36327369,0.68698145,0.69338491]],[0.320,[0.37053484,0.69009497,0.69430340]],[0.322,[0.37791226,0.69317522,0.69526327]],[0.324,[0.38539385,0.69622324,0.69626827]],[0.326,[0.39296332,0.69924082,0.69732400]],[0.328,[0.40060940,0.70222938,0.69843223]],[0.330,[0.40831594,0.70519122,0.69959724]],[0.332,[0.41607015,0.70812840,0.70082090]],[0.334,[0.42386201,0.71104276,0.70210342]],[0.336,[0.43167256,0.71393771,0.70344961]],[0.338,[0.43949947,0.71681422,0.70485557]],[0.340,[0.44732849,0.71967527,0.70632366]],[0.342,[0.45514951,0.72252334,0.70785413]],[0.344,[0.46296115,0.72535947,0.70944335]],[0.346,[0.47075349,0.72818626,0.71109189]],[0.348,[0.47851694,0.73100635,0.71280025]],[0.350,[0.48625412,0.73382019,0.71456376]],[0.352,[0.49396102,0.73662941,0.71638100]],[0.354,[0.50163106,0.73943622,0.71825179]],[0.355,[0.50925965,0.74224248,0.72017521]],[0.357,[0.51685029,0.74504841,0.72214731]],[0.359,[0.52440134,0.74785523,0.72416643]],[0.361,[0.53191155,0.75066408,0.72623094]],[0.363,[0.53938005,0.75347600,0.72833923]],[0.365,[0.54680444,0.75629239,0.73049037]],[0.367,[0.55418394,0.75911426,0.73268299]],[0.369,[0.56152150,0.76194178,0.73491438]],[0.371,[0.56881727,0.76477570,0.73718308]],[0.373,[0.57607152,0.76761672,0.73948764]],[0.375,[0.58328469,0.77046550,0.74182668]],[0.377,[0.59045730,0.77332263,0.74419886]],[0.379,[0.59758995,0.77618869,0.74660289]],[0.381,[0.60468333,0.77906419,0.74903750]],[0.383,[0.61173817,0.78194964,0.75150151]],[0.385,[0.61875522,0.78484550,0.75399375]],[0.387,[0.62573528,0.78775220,0.75651310]],[0.389,[0.63267915,0.79067016,0.75905849]],[0.391,[0.63958763,0.79359978,0.76162887]],[0.393,[0.64646151,0.79654145,0.76422323]],[0.395,[0.65330160,0.79949552,0.76684059]],[0.396,[0.66010867,0.80246236,0.76948001]],[0.398,[0.66688348,0.80544232,0.77214056]],[0.400,[0.67362676,0.80843573,0.77482134]],[0.402,[0.68033922,0.81144292,0.77752145]],[0.404,[0.68702155,0.81446423,0.78024002]],[0.406,[0.69367439,0.81749998,0.78297620]],[0.408,[0.70029750,0.82055075,0.78572944]],[0.410,[0.70689165,0.82361681,0.78849881]],[0.412,[0.71345823,0.82669826,0.79128316]],[0.414,[0.71999780,0.82979542,0.79408159]],[0.416,[0.72651088,0.83290861,0.79689320]],[0.418,[0.73299796,0.83603816,0.79971707]],[0.420,[0.73945951,0.83918440,0.80255223]],[0.422,[0.74589598,0.84234767,0.80539770]],[0.424,[0.75230780,0.84552831,0.80825242]],[0.426,[0.75869517,0.84872673,0.81111536]],[0.428,[0.76505775,0.85194348,0.81398568]],[0.430,[0.77139709,0.85517859,0.81686163]],[0.432,[0.77771359,0.85843239,0.81974187]],[0.434,[0.78400765,0.86170526,0.82262493]],[0.436,[0.79027967,0.86499755,0.82550921]],[0.438,[0.79653012,0.86830960,0.82839299]],[0.439,[0.80275950,0.87164177,0.83127437]],[0.441,[0.80896806,0.87499448,0.83415141]],[0.443,[0.81515670,0.87836796,0.83702171]],[0.445,[0.82132643,0.88176244,0.83988264]],[0.447,[0.82747812,0.88517819,0.84273144]],[0.449,[0.83361281,0.88861542,0.84556510]],[0.451,[0.83973174,0.89207431,0.84838033]],[0.453,[0.84583638,0.89555495,0.85117353]],[0.455,[0.85192854,0.89905734,0.85394079]],[0.457,[0.85801043,0.90258135,0.85667786]],[0.459,[0.86408444,0.90612679,0.85938032]],[0.461,[0.87015339,0.90969330,0.86204351]],[0.463,[0.87622047,0.91328040,0.86466260]],[0.465,[0.88228934,0.91688740,0.86723268]],[0.467,[0.88836402,0.92051348,0.86974885]],[0.469,[0.89444909,0.92415756,0.87220619]],[0.471,[0.90054949,0.92781839,0.87459995]],[0.473,[0.90666975,0.93149475,0.87692634]],[0.475,[0.91281478,0.93518523,0.87918186]],[0.477,[0.91898934,0.93888836,0.88136368]],[0.479,[0.92519787,0.94260271,0.88346979]],[0.480,[0.93144429,0.94632694,0.88549899]],[0.482,[0.93773184,0.95005986,0.88745092]],[0.484,[0.94406341,0.95380038,0.88932539]],[0.486,[0.95044015,0.95754793,0.89112376]],[0.488,[0.95686223,0.96130226,0.89284794]],[0.490,[0.96332900,0.96506343,0.89449990]],[0.492,[0.96983887,0.96883187,0.89608183]],[0.494,[0.97638938,0.97260834,0.89759591]],[0.496,[0.98297732,0.97639393,0.89904421]],[0.498,[0.98959887,0.98019003,0.90042859]],[0.500,[0.99624974,0.98399826,0.90175064]],[0.502,[0.99962532,0.99137112,0.80410124]],[0.504,[0.99693130,0.98658659,0.79581965]],[0.506,[0.99425336,0.98181358,0.78753178]],[0.508,[0.99158968,0.97705259,0.77923744]],[0.510,[0.98893848,0.97230412,0.77093649]],[0.512,[0.98629803,0.96756863,0.76262887]],[0.514,[0.98366662,0.96284660,0.75431452]],[0.516,[0.98104259,0.95813849,0.74599345]],[0.518,[0.97842373,0.95344486,0.73766705]],[0.520,[0.97580917,0.94876601,0.72933356]],[0.521,[0.97319768,0.94410230,0.72099216]],[0.523,[0.97058766,0.93945419,0.71264291]],[0.525,[0.96797753,0.93482212,0.70428588]],[0.527,[0.96536576,0.93020653,0.69592114]],[0.529,[0.96275088,0.92560786,0.68754852]],[0.531,[0.96013179,0.92102646,0.67916692]],[0.533,[0.95750683,0.91646282,0.67077672]],[0.535,[0.95487445,0.91191742,0.66237802]],[0.537,[0.95223308,0.90739072,0.65397092]],[0.539,[0.94958118,0.90288322,0.64555550]],[0.541,[0.94691718,0.89839541,0.63713184]],[0.543,[0.94424022,0.89392765,0.62869796]],[0.545,[0.94154864,0.88948047,0.62025400]],[0.547,[0.93884038,0.88505451,0.61180142]],[0.549,[0.93611377,0.88065031,0.60334038]],[0.551,[0.93336714,0.87626844,0.59487104]],[0.553,[0.93059881,0.87190949,0.58639360]],[0.555,[0.92780705,0.86757406,0.57790823]],[0.557,[0.92499010,0.86326276,0.56941517]],[0.559,[0.92214698,0.85897609,0.56091165]],[0.561,[0.91927530,0.85471481,0.55239974]],[0.563,[0.91637286,0.85047967,0.54388105]],[0.564,[0.91343769,0.84627138,0.53535605]],[0.566,[0.91046780,0.84209066,0.52682531]],[0.568,[0.90746117,0.83793825,0.51828947]],[0.570,[0.90441569,0.83381493,0.50974926]],[0.572,[0.90132924,0.82972148,0.50120551]],[0.574,[0.89819963,0.82565871,0.49265916]],[0.576,[0.89502462,0.82162744,0.48411130]],[0.578,[0.89180194,0.81762851,0.47556314]],[0.580,[0.88852927,0.81366275,0.46701603]],[0.582,[0.88520428,0.80973103,0.45847151]],[0.584,[0.88182459,0.80583419,0.44993127]],[0.586,[0.87838781,0.80197310,0.44139720]],[0.588,[0.87489155,0.79814860,0.43287135]],[0.590,[0.87133343,0.79436152,0.42435598]],[0.592,[0.86771108,0.79061266,0.41585355]],[0.594,[0.86402220,0.78690280,0.40736670]],[0.596,[0.86026452,0.78323268,0.39889826]],[0.598,[0.85643585,0.77960299,0.39045126]],[0.600,[0.85253410,0.77601436,0.38202889]],[0.602,[0.84855731,0.77246735,0.37363449]],[0.604,[0.84450364,0.76896245,0.36527157]],[0.605,[0.84037142,0.76550008,0.35694373]],[0.607,[0.83615916,0.76208053,0.34865469]],[0.609,[0.83186554,0.75870402,0.34040823]],[0.611,[0.82748950,0.75537065,0.33220817]],[0.613,[0.82303017,0.75208041,0.32405836]],[0.615,[0.81848682,0.74883326,0.31596178]],[0.617,[0.81385901,0.74562899,0.30792214]],[0.619,[0.80914682,0.74246709,0.29994435]],[0.621,[0.80435041,0.73934706,0.29203197]],[0.623,[0.79947022,0.73626828,0.28418840]],[0.625,[0.79450691,0.73323004,0.27641686]],[0.627,[0.78946140,0.73023149,0.26872033]],[0.629,[0.78433484,0.72727172,0.26110160]],[0.631,[0.77912853,0.72434970,0.25356307]],[0.633,[0.77384408,0.72146431,0.24610720]],[0.635,[0.76848332,0.71861432,0.23873620]],[0.637,[0.76304813,0.71579850,0.23145177]],[0.639,[0.75754052,0.71301555,0.22425532]],[0.641,[0.75196261,0.71026417,0.21714799]],[0.643,[0.74631660,0.70754299,0.21013070]],[0.645,[0.74060474,0.70485066,0.20320411]],[0.646,[0.73482974,0.70218562,0.19636930]],[0.648,[0.72899368,0.69954660,0.18962605]],[0.650,[0.72309885,0.69693228,0.18297431]],[0.652,[0.71714753,0.69434130,0.17641399]],[0.654,[0.71114201,0.69177235,0.16994487]],[0.656,[0.70508453,0.68922412,0.16356662]],[0.658,[0.69897728,0.68669535,0.15727889]],[0.660,[0.69282238,0.68418481,0.15108128]],[0.662,[0.68662205,0.68169124,0.14497353]],[0.664,[0.68037867,0.67921331,0.13895556]],[0.666,[0.67409362,0.67675013,0.13302663]],[0.668,[0.66776872,0.67430062,0.12718656]],[0.670,[0.66140573,0.67186375,0.12143540]],[0.672,[0.65500629,0.66943851,0.11577336]],[0.674,[0.64857199,0.66702394,0.11020095]],[0.676,[0.64210433,0.66461911,0.10471901]],[0.678,[0.63560473,0.66222315,0.09932877]],[0.680,[0.62907452,0.65983518,0.09403193]],[0.682,[0.62251497,0.65745441,0.08883077]],[0.684,[0.61592727,0.65508003,0.08372822]],[0.686,[0.60931267,0.65271125,0.07872800]],[0.688,[0.60267232,0.65034731,0.07383470]],[0.689,[0.59600693,0.64798759,0.06905401]],[0.691,[0.58931743,0.64563142,0.06439288]],[0.693,[0.58260468,0.64327815,0.05985969]],[0.695,[0.57586950,0.64092715,0.05546448]],[0.697,[0.56911267,0.63857780,0.05121917]],[0.699,[0.56233489,0.63622950,0.04713774]],[0.701,[0.55553684,0.63388168,0.04323651]],[0.703,[0.54871918,0.63153377,0.03952488]],[0.705,[0.54188249,0.62918522,0.03612051]],[0.707,[0.53502735,0.62683550,0.03311400]],[0.709,[0.52815431,0.62448406,0.03049096]],[0.711,[0.52126388,0.62213041,0.02823776]],[0.713,[0.51435656,0.61977401,0.02634145]],[0.715,[0.50743284,0.61741438,0.02478977]],[0.717,[0.50049318,0.61505101,0.02357107]],[0.719,[0.49353805,0.61268341,0.02267429]],[0.721,[0.48656773,0.61031113,0.02208919]],[0.723,[0.47958278,0.60793365,0.02180565]],[0.725,[0.47258366,0.60555050,0.02181419]],[0.727,[0.46557081,0.60316118,0.02210580]],[0.729,[0.45854471,0.60076521,0.02267188]],[0.730,[0.45150585,0.59836210,0.02350422]],[0.732,[0.44445471,0.59595137,0.02459500]],[0.734,[0.43739183,0.59353253,0.02593670]],[0.736,[0.43031775,0.59110510,0.02752213]],[0.738,[0.42323306,0.58866858,0.02934437]],[0.740,[0.41613836,0.58622247,0.03139676]],[0.742,[0.40903431,0.58376629,0.03367283]],[0.744,[0.40192160,0.58129953,0.03616635]],[0.746,[0.39480098,0.57882170,0.03887120]],[0.748,[0.38767326,0.57633228,0.04174672]],[0.750,[0.38053866,0.57383092,0.04468567]],[0.752,[0.37339864,0.57131697,0.04768050]],[0.754,[0.36625424,0.56878993,0.05071836]],[0.756,[0.35910650,0.56624928,0.05378828]],[0.758,[0.35195658,0.56369452,0.05688086]],[0.760,[0.34480568,0.56112513,0.05998797]],[0.762,[0.33765509,0.55854062,0.06310264]],[0.764,[0.33050620,0.55594049,0.06621880]],[0.766,[0.32336047,0.55332424,0.06933118]],[0.768,[0.31621948,0.55069139,0.07243519]],[0.770,[0.30908460,0.54804150,0.07552722]],[0.771,[0.30195743,0.54537413,0.07860394]],[0.773,[0.29484032,0.54268874,0.08166129]],[0.775,[0.28773525,0.53998488,0.08469633]],[0.777,[0.28064430,0.53726212,0.08770643]],[0.779,[0.27356965,0.53452006,0.09068917]],[0.781,[0.26651361,0.53175830,0.09364228]],[0.783,[0.25947856,0.52897647,0.09656369]],[0.785,[0.25246703,0.52617424,0.09945144]],[0.787,[0.24548136,0.52335131,0.10230412]],[0.789,[0.23852458,0.52050736,0.10511948]],[0.791,[0.23159967,0.51764210,0.10789570]],[0.793,[0.22470961,0.51475531,0.11063114]],[0.795,[0.21785748,0.51184679,0.11332427]],[0.797,[0.21104652,0.50891636,0.11597358]],[0.799,[0.20428009,0.50596389,0.11857764]],[0.801,[0.19756167,0.50298929,0.12113505]],[0.803,[0.19089503,0.49999248,0.12364426]],[0.805,[0.18428396,0.49697343,0.12610400]],[0.807,[0.17773240,0.49393216,0.12851305]],[0.809,[0.17124448,0.49086871,0.13087024]],[0.811,[0.16482456,0.48778316,0.13317442]],[0.813,[0.15847719,0.48467561,0.13542453]],[0.814,[0.15220721,0.48154623,0.13761954]],[0.816,[0.14601973,0.47839518,0.13975846]],[0.818,[0.13992049,0.47522266,0.14183978]],[0.820,[0.13391510,0.47202893,0.14386292]],[0.822,[0.12800964,0.46881425,0.14582732]],[0.824,[0.12221076,0.46557892,0.14773227]],[0.826,[0.11652565,0.46232325,0.14957707]],[0.828,[0.11096207,0.45904759,0.15136111]],[0.830,[0.10552844,0.45575227,0.15308384]],[0.832,[0.10023389,0.45243770,0.15474474]],[0.834,[0.09508832,0.44910425,0.15634337]],[0.836,[0.09010251,0.44575233,0.15787909]],[0.838,[0.08528802,0.44238240,0.15935107]],[0.840,[0.08065728,0.43899485,0.16075975]],[0.842,[0.07622371,0.43559013,0.16210488]],[0.844,[0.07200158,0.43216868,0.16338628]],[0.846,[0.06800589,0.42873094,0.16460379]],[0.848,[0.06425218,0.42527736,0.16575730]],[0.850,[0.06075626,0.42180841,0.16684671]],[0.852,[0.05753382,0.41832454,0.16787201]],[0.854,[0.05459993,0.41482619,0.16883316]],[0.855,[0.05196846,0.41131384,0.16973019]],[0.857,[0.04965139,0.40778792,0.17056314]],[0.859,[0.04765813,0.40424888,0.17133208]],[0.861,[0.04599481,0.40069717,0.17203710]],[0.863,[0.04466372,0.39713324,0.17267831]],[0.865,[0.04366274,0.39355751,0.17325577]],[0.867,[0.04298497,0.38997047,0.17376937]],[0.869,[0.04262018,0.38637248,0.17421963]],[0.871,[0.04255352,0.38276397,0.17460669]],[0.873,[0.04276673,0.37914535,0.17493074]],[0.875,[0.04323878,0.37551702,0.17519196]],[0.877,[0.04394675,0.37187939,0.17539051]],[0.879,[0.04486662,0.36823283,0.17552659]],[0.881,[0.04597406,0.36457776,0.17560040]],[0.883,[0.04724506,0.36091453,0.17561211]],[0.885,[0.04865644,0.35724353,0.17556193]],[0.887,[0.05018627,0.35356513,0.17545005]],[0.889,[0.05181408,0.34987969,0.17527666]],[0.891,[0.05352104,0.34618758,0.17504196]],[0.893,[0.05528998,0.34248913,0.17474614]],[0.895,[0.05710539,0.33878471,0.17438940]],[0.896,[0.05895335,0.33507466,0.17397193]],[0.898,[0.06082143,0.33135932,0.17349393]],[0.900,[0.06269859,0.32763902,0.17295560]],[0.902,[0.06457505,0.32391411,0.17235714]],[0.904,[0.06644218,0.32018490,0.17169874]],[0.906,[0.06829236,0.31645172,0.17098061]],[0.908,[0.07011887,0.31271491,0.17020297]],[0.910,[0.07191583,0.30897477,0.16936603]],[0.912,[0.07367740,0.30523170,0.16846982]],[0.914,[0.07539909,0.30148601,0.16751459]],[0.916,[0.07707731,0.29773796,0.16650073]],[0.918,[0.07870853,0.29398786,0.16542850]],[0.920,[0.08028966,0.29023603,0.16429815]],[0.922,[0.08181798,0.28648275,0.16310997]],[0.924,[0.08329110,0.28272833,0.16186426]],[0.926,[0.08470696,0.27897306,0.16056134]],[0.928,[0.08606372,0.27521722,0.15920155]],[0.930,[0.08735983,0.27146109,0.15778524]],[0.932,[0.08859393,0.26770495,0.15631280]],[0.934,[0.08976486,0.26394904,0.15478462]],[0.936,[0.09087165,0.26019363,0.15320113]],[0.938,[0.09191348,0.25643894,0.15156278]],[0.939,[0.09288704,0.25268563,0.14986937]],[0.941,[0.09379283,0.24893377,0.14812169]],[0.943,[0.09463164,0.24518338,0.14632057]],[0.945,[0.09540319,0.24143464,0.14446653]],[0.947,[0.09610733,0.23768772,0.14256015]],[0.949,[0.09674403,0.23394277,0.14060198]],[0.951,[0.09731337,0.23019990,0.13859263]],[0.953,[0.09781527,0.22645927,0.13653262]],[0.955,[0.09824359,0.22272214,0.13442135]],[0.957,[0.09860476,0.21898749,0.13226069]],[0.959,[0.09889926,0.21525533,0.13005125]],[0.961,[0.09912769,0.21152567,0.12779367]],[0.963,[0.09929071,0.20779846,0.12548854]],[0.965,[0.09938537,0.20407438,0.12313591]],[0.967,[0.09940988,0.20035390,0.12073611]],[0.969,[0.09937074,0.19663577,0.11829057]],[0.971,[0.09926900,0.19291982,0.11579981]],[0.973,[0.09910575,0.18920581,0.11326433]],[0.975,[0.09887273,0.18549555,0.11068374]],[0.977,[0.09857703,0.18178753,0.10805922]],[0.979,[0.09822270,0.17808082,0.10539142]],[0.980,[0.09781114,0.17437504,0.10268064]],[0.982,[0.09733238,0.17067237,0.09992671]],[0.984,[0.09679537,0.16697070,0.09713043]],[0.986,[0.09620477,0.16326879,0.09429209]],[0.988,[0.09555840,0.15956697,0.09141177]],[0.990,[0.09484852,0.15586693,0.08848984]],[0.992,[0.09408911,0.15216506,0.08552629]],[0.994,[0.09328192,0.14846061,0.08252095]],[0.996,[0.09241015,0.14475747,0.07947497]],[0.998,[0.09149314,0.14105046,0.07638733]],[1.000,[0.09053276,0.13733861,0.07325761]]]
H.colormap_dense = [[0.000,[0.90220216,0.94417980,0.94380273]],[0.004,[0.89544454,0.94095789,0.94106488]],[0.008,[0.88868558,0.93774038,0.93840987]],[0.012,[0.88192751,0.93452625,0.93583728]],[0.016,[0.87517248,0.93131455,0.93334654]],[0.020,[0.86842255,0.92810438,0.93093690]],[0.024,[0.86167970,0.92489490,0.92860749]],[0.027,[0.85494584,0.92168533,0.92635732]],[0.031,[0.84822279,0.91847494,0.92418529]],[0.035,[0.84151229,0.91526306,0.92209023]],[0.039,[0.83481598,0.91204906,0.92007088]],[0.043,[0.82813543,0.90883237,0.91812595]],[0.047,[0.82147215,0.90561245,0.91625407]],[0.051,[0.81482754,0.90238881,0.91445386]],[0.055,[0.80820295,0.89916100,0.91272391]],[0.059,[0.80159965,0.89592859,0.91106281]],[0.063,[0.79501887,0.89269119,0.90946910]],[0.067,[0.78846179,0.88944845,0.90794134]],[0.071,[0.78192947,0.88620003,0.90647814]],[0.075,[0.77542295,0.88294564,0.90507810]],[0.078,[0.76894320,0.87968498,0.90373988]],[0.082,[0.76249117,0.87641781,0.90246212]],[0.086,[0.75606778,0.87314387,0.90124351]],[0.090,[0.74967389,0.86986292,0.90008279]],[0.094,[0.74331039,0.86657473,0.89897869]],[0.098,[0.73697811,0.86327910,0.89793000]],[0.102,[0.73067788,0.85997580,0.89693553]],[0.106,[0.72441053,0.85666464,0.89599414]],[0.110,[0.71817690,0.85334541,0.89510469]],[0.114,[0.71197782,0.85001791,0.89426610]],[0.118,[0.70581423,0.84668191,0.89347718]],[0.122,[0.69968688,0.84333724,0.89273702]],[0.125,[0.69359663,0.83998369,0.89204464]],[0.129,[0.68754438,0.83662105,0.89139904]],[0.133,[0.68153106,0.83324911,0.89079928]],[0.137,[0.67555762,0.82986764,0.89024441]],[0.141,[0.66962506,0.82647642,0.88973352]],[0.145,[0.66373440,0.82307522,0.88926568]],[0.149,[0.65788673,0.81966379,0.88884001]],[0.153,[0.65208315,0.81624189,0.88845562]],[0.157,[0.64632485,0.81280925,0.88811162]],[0.161,[0.64061303,0.80936562,0.88780715]],[0.165,[0.63494897,0.80591071,0.88754133]],[0.169,[0.62933401,0.80244424,0.88731328]],[0.173,[0.62376953,0.79896592,0.88712212]],[0.176,[0.61825699,0.79547544,0.88696697]],[0.180,[0.61279785,0.79197249,0.88684700]],[0.184,[0.60739371,0.78845676,0.88676131]],[0.188,[0.60204624,0.78492789,0.88670892]],[0.192,[0.59675713,0.78138555,0.88668891]],[0.196,[0.59152819,0.77782940,0.88670031]],[0.200,[0.58636126,0.77425906,0.88674212]],[0.204,[0.58125826,0.77067417,0.88681333]],[0.208,[0.57622118,0.76707435,0.88691290]],[0.212,[0.57125208,0.76345922,0.88703974]],[0.216,[0.56635309,0.75982839,0.88719273]],[0.220,[0.56152638,0.75618144,0.88737072]],[0.224,[0.55677422,0.75251799,0.88757251]],[0.227,[0.55209890,0.74883762,0.88779685]],[0.231,[0.54750281,0.74513991,0.88804246]],[0.235,[0.54298830,0.74142444,0.88830811]],[0.239,[0.53855780,0.73769077,0.88859267]],[0.243,[0.53421391,0.73393850,0.88889434]],[0.247,[0.52995915,0.73016720,0.88921160]],[0.251,[0.52579610,0.72637645,0.88954287]],[0.255,[0.52172732,0.72256583,0.88988650]],[0.259,[0.51775541,0.71873493,0.89024078]],[0.263,[0.51388294,0.71488334,0.89060393]],[0.267,[0.51011248,0.71101066,0.89097410]],[0.271,[0.50644655,0.70711649,0.89134936]],[0.275,[0.50288765,0.70320047,0.89172772]],[0.278,[0.49943822,0.69926217,0.89210744]],[0.282,[0.49610063,0.69530122,0.89248647]],[0.286,[0.49287720,0.69131735,0.89286215]],[0.290,[0.48977007,0.68731025,0.89323218]],[0.294,[0.48678129,0.68327963,0.89359417]],[0.298,[0.48391278,0.67922522,0.89394566]],[0.302,[0.48116628,0.67514678,0.89428415]],[0.306,[0.47854335,0.67104413,0.89460702]],[0.310,[0.47604536,0.66691708,0.89491161]],[0.314,[0.47367364,0.66276538,0.89519579]],[0.318,[0.47142903,0.65858902,0.89545627]],[0.322,[0.46931216,0.65438798,0.89569008]],[0.325,[0.46732345,0.65016224,0.89589433]],[0.329,[0.46546305,0.64591186,0.89606608]],[0.333,[0.46373081,0.64163690,0.89620239]],[0.337,[0.46212629,0.63733750,0.89630027]],[0.341,[0.46064879,0.63301382,0.89635684]],[0.345,[0.45929732,0.62866605,0.89636919]],[0.349,[0.45807033,0.62429458,0.89633399]],[0.353,[0.45696613,0.61989976,0.89624827]],[0.357,[0.45598269,0.61548199,0.89610905]],[0.361,[0.45511768,0.61104174,0.89591342]],[0.365,[0.45436847,0.60657953,0.89565850]],[0.369,[0.45373211,0.60209592,0.89534144]],[0.373,[0.45320531,0.59759159,0.89495941]],[0.376,[0.45278458,0.59306722,0.89450974]],[0.380,[0.45246621,0.58852353,0.89398987]],[0.384,[0.45224622,0.58396130,0.89339735]],[0.388,[0.45212047,0.57938135,0.89272981]],[0.392,[0.45208461,0.57478456,0.89198505]],[0.396,[0.45213406,0.57017185,0.89116092]],[0.400,[0.45226366,0.56554440,0.89025507]],[0.404,[0.45246908,0.56090297,0.88926607]],[0.408,[0.45274551,0.55624857,0.88819230]],[0.412,[0.45308803,0.55158223,0.88703226]],[0.416,[0.45349173,0.54690499,0.88578463]],[0.420,[0.45395166,0.54221790,0.88444824]],[0.424,[0.45446291,0.53752203,0.88302210]],[0.427,[0.45502044,0.53281852,0.88150529]],[0.431,[0.45561856,0.52810881,0.87989676]],[0.435,[0.45625342,0.52339359,0.87819649]],[0.439,[0.45692037,0.51867392,0.87640412]],[0.443,[0.45761487,0.51395086,0.87451947]],[0.447,[0.45833250,0.50922545,0.87254251]],[0.451,[0.45906898,0.50449872,0.87047333]],[0.455,[0.45982017,0.49977167,0.86831217]],[0.459,[0.46058208,0.49504528,0.86605942]],[0.463,[0.46135090,0.49032052,0.86371555]],[0.467,[0.46212297,0.48559831,0.86128120]],[0.471,[0.46289481,0.48087955,0.85875708]],[0.475,[0.46366216,0.47616550,0.85614385]],[0.478,[0.46442285,0.47145661,0.85344263]],[0.482,[0.46517394,0.46675366,0.85065444]],[0.486,[0.46591265,0.46205743,0.84778034]],[0.490,[0.46663636,0.45736864,0.84482148]],[0.494,[0.46734263,0.45268799,0.84177905]],[0.498,[0.46802917,0.44801616,0.83865432]],[0.502,[0.46869383,0.44335376,0.83544858]],[0.506,[0.46933466,0.43870139,0.83216318]],[0.510,[0.46994980,0.43405962,0.82879947]],[0.514,[0.47053758,0.42942898,0.82535887]],[0.518,[0.47109642,0.42480997,0.82184277]],[0.522,[0.47162490,0.42020304,0.81825263]],[0.525,[0.47212171,0.41560865,0.81458986]],[0.529,[0.47258566,0.41102721,0.81085591]],[0.533,[0.47301567,0.40645908,0.80705223]],[0.537,[0.47341074,0.40190463,0.80318024]],[0.541,[0.47376999,0.39736419,0.79924139]],[0.545,[0.47409263,0.39283807,0.79523708]],[0.549,[0.47437795,0.38832654,0.79116870]],[0.553,[0.47462530,0.38382989,0.78703766]],[0.557,[0.47483412,0.37934834,0.78284530]],[0.561,[0.47500393,0.37488213,0.77859297]],[0.565,[0.47513427,0.37043147,0.77428199]],[0.569,[0.47522479,0.36599656,0.76991363]],[0.573,[0.47527514,0.36157758,0.76548918]],[0.576,[0.47528466,0.35717487,0.76101004]],[0.580,[0.47525316,0.35278857,0.75647742]],[0.584,[0.47518080,0.34841867,0.75189235]],[0.588,[0.47506742,0.34406531,0.74725597]],[0.592,[0.47491290,0.33972863,0.74256938]],[0.596,[0.47471715,0.33540873,0.73783366]],[0.600,[0.47448009,0.33110575,0.73304987]],[0.604,[0.47420168,0.32681981,0.72821900]],[0.608,[0.47388188,0.32255100,0.72334205]],[0.612,[0.47352067,0.31829946,0.71841996]],[0.616,[0.47311806,0.31406530,0.71345366]],[0.620,[0.47267406,0.30984863,0.70844403]],[0.624,[0.47218867,0.30564956,0.70339194]],[0.627,[0.47166137,0.30146848,0.69829868]],[0.631,[0.47109270,0.29730529,0.69316468]],[0.635,[0.47048281,0.29316004,0.68799058]],[0.639,[0.46983176,0.28903289,0.68277713]],[0.643,[0.46913959,0.28492398,0.67752502]],[0.647,[0.46840632,0.28083345,0.67223496]],[0.651,[0.46763200,0.27676148,0.66690758]],[0.655,[0.46681665,0.27270825,0.66154354]],[0.659,[0.46596031,0.26867393,0.65614343]],[0.663,[0.46506286,0.26465880,0.65070800]],[0.667,[0.46412426,0.26066310,0.64523790]],[0.671,[0.46314479,0.25668693,0.63973335]],[0.675,[0.46212445,0.25273054,0.63419487]],[0.678,[0.46106323,0.24879421,0.62862296]],[0.682,[0.45996110,0.24487823,0.62301809]],[0.686,[0.45881803,0.24098289,0.61738074]],[0.690,[0.45763398,0.23710854,0.61171135]],[0.694,[0.45640887,0.23325554,0.60601037]],[0.698,[0.45514261,0.22942427,0.60027826]],[0.702,[0.45383521,0.22561510,0.59451528]],[0.706,[0.45248658,0.22182847,0.58872183]],[0.710,[0.45109659,0.21806485,0.58289828]],[0.714,[0.44966511,0.21432473,0.57704502]],[0.718,[0.44819199,0.21060865,0.57116243]],[0.722,[0.44667705,0.20691717,0.56525088]],[0.725,[0.44512012,0.20325090,0.55931077]],[0.729,[0.44352106,0.19961045,0.55334230]],[0.733,[0.44187976,0.19599648,0.54734563]],[0.737,[0.44019583,0.19240976,0.54132138]],[0.741,[0.43846903,0.18885105,0.53526994]],[0.745,[0.43669905,0.18532117,0.52919170]],[0.749,[0.43488561,0.18182099,0.52308708]],[0.753,[0.43302838,0.17835141,0.51695650]],[0.757,[0.43112700,0.17491341,0.51080040]],[0.761,[0.42918111,0.17150798,0.50461925]],[0.765,[0.42719043,0.16813620,0.49841321]],[0.769,[0.42515465,0.16479918,0.49218247]],[0.773,[0.42307313,0.16149814,0.48592814]],[0.776,[0.42094540,0.15823432,0.47965080]],[0.780,[0.41877098,0.15500903,0.47335108]],[0.784,[0.41654936,0.15182361,0.46702967]],[0.788,[0.41428002,0.14867950,0.46068730]],[0.792,[0.41196239,0.14557814,0.45432475]],[0.796,[0.40959590,0.14252107,0.44794287]],[0.800,[0.40717995,0.13950986,0.44154258]],[0.804,[0.40471394,0.13654614,0.43512488]],[0.808,[0.40219729,0.13363161,0.42869038]],[0.812,[0.39962936,0.13076802,0.42224018]],[0.816,[0.39700936,0.12795703,0.41577611]],[0.820,[0.39433660,0.12520039,0.40929955]],[0.824,[0.39161037,0.12249987,0.40281200]],[0.827,[0.38882999,0.11985720,0.39631510]],[0.831,[0.38599472,0.11727411,0.38981058]],[0.835,[0.38310387,0.11475229,0.38330035]],[0.839,[0.38015674,0.11229336,0.37678646]],[0.843,[0.37715263,0.10989888,0.37027108]],[0.847,[0.37409088,0.10757029,0.36375657]],[0.851,[0.37097085,0.10530889,0.35724546]],[0.855,[0.36779195,0.10311585,0.35074041]],[0.859,[0.36455362,0.10099212,0.34424427]],[0.863,[0.36125536,0.09893846,0.33776007]],[0.867,[0.35789677,0.09695535,0.33129096]],[0.871,[0.35447749,0.09504303,0.32484029]],[0.875,[0.35099729,0.09320140,0.31841152]],[0.878,[0.34745604,0.09143006,0.31200825]],[0.882,[0.34385372,0.08972821,0.30563417]],[0.886,[0.34019047,0.08809468,0.29929318]],[0.890,[0.33646657,0.08652789,0.29298920]],[0.894,[0.33268245,0.08502593,0.28672608]],[0.898,[0.32883870,0.08358647,0.28050768]],[0.902,[0.32493609,0.08220684,0.27433782]],[0.906,[0.32097556,0.08088399,0.26822019]],[0.910,[0.31695820,0.07961456,0.26215837]],[0.914,[0.31288529,0.07839490,0.25615575]],[0.918,[0.30875826,0.07722111,0.25021549]],[0.922,[0.30457867,0.07608911,0.24434046]],[0.925,[0.30034822,0.07499465,0.23853326]],[0.929,[0.29606871,0.07393344,0.23279613]],[0.933,[0.29174204,0.07290112,0.22713094]],[0.937,[0.28737014,0.07189340,0.22153921]],[0.941,[0.28295501,0.07090603,0.21602205]],[0.945,[0.27849993,0.06993211,0.21058327]],[0.949,[0.27400681,0.06896804,0.20522255]],[0.953,[0.26947709,0.06801140,0.19993831]],[0.957,[0.26491272,0.06705861,0.19473015]],[0.961,[0.26031556,0.06610638,0.18959733]],[0.965,[0.25568737,0.06515168,0.18453880]],[0.969,[0.25103114,0.06418929,0.17955550]],[0.973,[0.24635153,0.06321115,0.17465056]],[0.976,[0.24164654,0.06222163,0.16981600]],[0.980,[0.23691745,0.06121879,0.16504980]],[0.984,[0.23216536,0.06020099,0.16034977]],[0.988,[0.22739756,0.05915624,0.15572185]],[0.992,[0.22261214,0.05808842,0.15115908]],[0.996,[0.21780744,0.05700050,0.14665582]],[1.000,[0.21298394,0.05589169,0.14220951]]]
H.colormap_density = [[0.000,[0.21298394,0.05589169,0.14220951]],[0.004,[0.21780744,0.05700050,0.14665582]],[0.008,[0.22261214,0.05808842,0.15115908]],[0.012,[0.22739756,0.05915624,0.15572185]],[0.016,[0.23216536,0.06020099,0.16034977]],[0.020,[0.23691745,0.06121879,0.16504980]],[0.024,[0.24164654,0.06222163,0.16981600]],[0.027,[0.24635153,0.06321115,0.17465056]],[0.031,[0.25103114,0.06418929,0.17955550]],[0.035,[0.25568737,0.06515168,0.18453880]],[0.039,[0.26031556,0.06610638,0.18959733]],[0.043,[0.26491272,0.06705861,0.19473015]],[0.047,[0.26947709,0.06801140,0.19993831]],[0.051,[0.27400681,0.06896804,0.20522255]],[0.055,[0.27849993,0.06993211,0.21058327]],[0.059,[0.28295501,0.07090603,0.21602205]],[0.063,[0.28737014,0.07189340,0.22153921]],[0.067,[0.29174204,0.07290112,0.22713094]],[0.071,[0.29606871,0.07393344,0.23279613]],[0.075,[0.30034822,0.07499465,0.23853326]],[0.078,[0.30457867,0.07608911,0.24434046]],[0.082,[0.30875826,0.07722111,0.25021549]],[0.086,[0.31288529,0.07839490,0.25615575]],[0.090,[0.31695820,0.07961456,0.26215837]],[0.094,[0.32097556,0.08088399,0.26822019]],[0.098,[0.32493609,0.08220684,0.27433782]],[0.102,[0.32883870,0.08358647,0.28050768]],[0.106,[0.33268245,0.08502593,0.28672608]],[0.110,[0.33646657,0.08652789,0.29298920]],[0.114,[0.34019047,0.08809468,0.29929318]],[0.118,[0.34385372,0.08972821,0.30563417]],[0.122,[0.34745604,0.09143006,0.31200825]],[0.125,[0.35099729,0.09320140,0.31841152]],[0.129,[0.35447749,0.09504303,0.32484029]],[0.133,[0.35789677,0.09695535,0.33129096]],[0.137,[0.36125536,0.09893846,0.33776007]],[0.141,[0.36455362,0.10099212,0.34424427]],[0.145,[0.36779195,0.10311585,0.35074041]],[0.149,[0.37097085,0.10530889,0.35724546]],[0.153,[0.37409088,0.10757029,0.36375657]],[0.157,[0.37715263,0.10989888,0.37027108]],[0.161,[0.38015674,0.11229336,0.37678646]],[0.165,[0.38310387,0.11475229,0.38330035]],[0.169,[0.38599472,0.11727411,0.38981058]],[0.173,[0.38882999,0.11985720,0.39631510]],[0.176,[0.39161037,0.12249987,0.40281200]],[0.180,[0.39433660,0.12520039,0.40929955]],[0.184,[0.39700936,0.12795703,0.41577611]],[0.188,[0.39962936,0.13076802,0.42224018]],[0.192,[0.40219729,0.13363161,0.42869038]],[0.196,[0.40471394,0.13654614,0.43512488]],[0.200,[0.40717995,0.13950986,0.44154258]],[0.204,[0.40959590,0.14252107,0.44794287]],[0.208,[0.41196239,0.14557814,0.45432475]],[0.212,[0.41428002,0.14867950,0.46068730]],[0.216,[0.41654936,0.15182361,0.46702967]],[0.220,[0.41877098,0.15500903,0.47335108]],[0.224,[0.42094540,0.15823432,0.47965080]],[0.227,[0.42307313,0.16149814,0.48592814]],[0.231,[0.42515465,0.16479918,0.49218247]],[0.235,[0.42719043,0.16813620,0.49841321]],[0.239,[0.42918111,0.17150798,0.50461925]],[0.243,[0.43112700,0.17491341,0.51080040]],[0.247,[0.43302838,0.17835141,0.51695650]],[0.251,[0.43488561,0.18182099,0.52308708]],[0.255,[0.43669905,0.18532117,0.52919170]],[0.259,[0.43846903,0.18885105,0.53526994]],[0.263,[0.44019583,0.19240976,0.54132138]],[0.267,[0.44187976,0.19599648,0.54734563]],[0.271,[0.44352106,0.19961045,0.55334230]],[0.275,[0.44512012,0.20325090,0.55931077]],[0.278,[0.44667705,0.20691717,0.56525088]],[0.282,[0.44819199,0.21060865,0.57116243]],[0.286,[0.44966511,0.21432473,0.57704502]],[0.290,[0.45109659,0.21806485,0.58289828]],[0.294,[0.45248658,0.22182847,0.58872183]],[0.298,[0.45383521,0.22561510,0.59451528]],[0.302,[0.45514261,0.22942427,0.60027826]],[0.306,[0.45640887,0.23325554,0.60601037]],[0.310,[0.45763398,0.23710854,0.61171135]],[0.314,[0.45881803,0.24098289,0.61738074]],[0.318,[0.45996110,0.24487823,0.62301809]],[0.322,[0.46106323,0.24879421,0.62862296]],[0.325,[0.46212445,0.25273054,0.63419487]],[0.329,[0.46314479,0.25668693,0.63973335]],[0.333,[0.46412426,0.26066310,0.64523790]],[0.337,[0.46506286,0.26465880,0.65070800]],[0.341,[0.46596031,0.26867393,0.65614343]],[0.345,[0.46681665,0.27270825,0.66154354]],[0.349,[0.46763200,0.27676148,0.66690758]],[0.353,[0.46840632,0.28083345,0.67223496]],[0.357,[0.46913959,0.28492398,0.67752502]],[0.361,[0.46983176,0.28903289,0.68277713]],[0.365,[0.47048281,0.29316004,0.68799058]],[0.369,[0.47109270,0.29730529,0.69316468]],[0.373,[0.47166137,0.30146848,0.69829868]],[0.376,[0.47218867,0.30564956,0.70339194]],[0.380,[0.47267406,0.30984863,0.70844403]],[0.384,[0.47311806,0.31406530,0.71345366]],[0.388,[0.47352067,0.31829946,0.71841996]],[0.392,[0.47388188,0.32255100,0.72334205]],[0.396,[0.47420168,0.32681981,0.72821900]],[0.400,[0.47448009,0.33110575,0.73304987]],[0.404,[0.47471715,0.33540873,0.73783366]],[0.408,[0.47491290,0.33972863,0.74256938]],[0.412,[0.47506742,0.34406531,0.74725597]],[0.416,[0.47518080,0.34841867,0.75189235]],[0.420,[0.47525316,0.35278857,0.75647742]],[0.424,[0.47528466,0.35717487,0.76101004]],[0.427,[0.47527514,0.36157758,0.76548918]],[0.431,[0.47522479,0.36599656,0.76991363]],[0.435,[0.47513427,0.37043147,0.77428199]],[0.439,[0.47500393,0.37488213,0.77859297]],[0.443,[0.47483412,0.37934834,0.78284530]],[0.447,[0.47462530,0.38382989,0.78703766]],[0.451,[0.47437795,0.38832654,0.79116870]],[0.455,[0.47409263,0.39283807,0.79523708]],[0.459,[0.47376999,0.39736419,0.79924139]],[0.463,[0.47341074,0.40190463,0.80318024]],[0.467,[0.47301567,0.40645908,0.80705223]],[0.471,[0.47258566,0.41102721,0.81085591]],[0.475,[0.47212171,0.41560865,0.81458986]],[0.478,[0.47162490,0.42020304,0.81825263]],[0.482,[0.47109642,0.42480997,0.82184277]],[0.486,[0.47053758,0.42942898,0.82535887]],[0.490,[0.46994980,0.43405962,0.82879947]],[0.494,[0.46933466,0.43870139,0.83216318]],[0.498,[0.46869383,0.44335376,0.83544858]],[0.502,[0.46802917,0.44801616,0.83865432]],[0.506,[0.46734263,0.45268799,0.84177905]],[0.510,[0.46663636,0.45736864,0.84482148]],[0.514,[0.46591265,0.46205743,0.84778034]],[0.518,[0.46517394,0.46675366,0.85065444]],[0.522,[0.46442285,0.47145661,0.85344263]],[0.525,[0.46366216,0.47616550,0.85614385]],[0.529,[0.46289481,0.48087955,0.85875708]],[0.533,[0.46212297,0.48559831,0.86128120]],[0.537,[0.46135090,0.49032052,0.86371555]],[0.541,[0.46058208,0.49504528,0.86605942]],[0.545,[0.45982017,0.49977167,0.86831217]],[0.549,[0.45906898,0.50449872,0.87047333]],[0.553,[0.45833250,0.50922545,0.87254251]],[0.557,[0.45761487,0.51395086,0.87451947]],[0.561,[0.45692037,0.51867392,0.87640412]],[0.565,[0.45625342,0.52339359,0.87819649]],[0.569,[0.45561856,0.52810881,0.87989676]],[0.573,[0.45502044,0.53281852,0.88150529]],[0.576,[0.45446291,0.53752203,0.88302210]],[0.580,[0.45395166,0.54221790,0.88444824]],[0.584,[0.45349173,0.54690499,0.88578463]],[0.588,[0.45308803,0.55158223,0.88703226]],[0.592,[0.45274551,0.55624857,0.88819230]],[0.596,[0.45246908,0.56090297,0.88926607]],[0.600,[0.45226366,0.56554440,0.89025507]],[0.604,[0.45213406,0.57017185,0.89116092]],[0.608,[0.45208461,0.57478456,0.89198505]],[0.612,[0.45212047,0.57938135,0.89272981]],[0.616,[0.45224622,0.58396130,0.89339735]],[0.620,[0.45246621,0.58852353,0.89398987]],[0.624,[0.45278458,0.59306722,0.89450974]],[0.627,[0.45320531,0.59759159,0.89495941]],[0.631,[0.45373211,0.60209592,0.89534144]],[0.635,[0.45436847,0.60657953,0.89565850]],[0.639,[0.45511768,0.61104174,0.89591342]],[0.643,[0.45598269,0.61548199,0.89610905]],[0.647,[0.45696613,0.61989976,0.89624827]],[0.651,[0.45807033,0.62429458,0.89633399]],[0.655,[0.45929732,0.62866605,0.89636919]],[0.659,[0.46064879,0.63301382,0.89635684]],[0.663,[0.46212629,0.63733750,0.89630027]],[0.667,[0.46373081,0.64163690,0.89620239]],[0.671,[0.46546305,0.64591186,0.89606608]],[0.675,[0.46732345,0.65016224,0.89589433]],[0.678,[0.46931216,0.65438798,0.89569008]],[0.682,[0.47142903,0.65858902,0.89545627]],[0.686,[0.47367364,0.66276538,0.89519579]],[0.690,[0.47604536,0.66691708,0.89491161]],[0.694,[0.47854335,0.67104413,0.89460702]],[0.698,[0.48116628,0.67514678,0.89428415]],[0.702,[0.48391278,0.67922522,0.89394566]],[0.706,[0.48678129,0.68327963,0.89359417]],[0.710,[0.48977007,0.68731025,0.89323218]],[0.714,[0.49287720,0.69131735,0.89286215]],[0.718,[0.49610063,0.69530122,0.89248647]],[0.722,[0.49943822,0.69926217,0.89210744]],[0.725,[0.50288765,0.70320047,0.89172772]],[0.729,[0.50644655,0.70711649,0.89134936]],[0.733,[0.51011248,0.71101066,0.89097410]],[0.737,[0.51388294,0.71488334,0.89060393]],[0.741,[0.51775541,0.71873493,0.89024078]],[0.745,[0.52172732,0.72256583,0.88988650]],[0.749,[0.52579610,0.72637645,0.88954287]],[0.753,[0.52995915,0.73016720,0.88921160]],[0.757,[0.53421391,0.73393850,0.88889434]],[0.761,[0.53855780,0.73769077,0.88859267]],[0.765,[0.54298830,0.74142444,0.88830811]],[0.769,[0.54750281,0.74513991,0.88804246]],[0.773,[0.55209890,0.74883762,0.88779685]],[0.776,[0.55677422,0.75251799,0.88757251]],[0.780,[0.56152638,0.75618144,0.88737072]],[0.784,[0.56635309,0.75982839,0.88719273]],[0.788,[0.57125208,0.76345922,0.88703974]],[0.792,[0.57622118,0.76707435,0.88691290]],[0.796,[0.58125826,0.77067417,0.88681333]],[0.800,[0.58636126,0.77425906,0.88674212]],[0.804,[0.59152819,0.77782940,0.88670031]],[0.808,[0.59675713,0.78138555,0.88668891]],[0.812,[0.60204624,0.78492789,0.88670892]],[0.816,[0.60739371,0.78845676,0.88676131]],[0.820,[0.61279785,0.79197249,0.88684700]],[0.824,[0.61825699,0.79547544,0.88696697]],[0.827,[0.62376953,0.79896592,0.88712212]],[0.831,[0.62933401,0.80244424,0.88731328]],[0.835,[0.63494897,0.80591071,0.88754133]],[0.839,[0.64061303,0.80936562,0.88780715]],[0.843,[0.64632485,0.81280925,0.88811162]],[0.847,[0.65208315,0.81624189,0.88845562]],[0.851,[0.65788673,0.81966379,0.88884001]],[0.855,[0.66373440,0.82307522,0.88926568]],[0.859,[0.66962506,0.82647642,0.88973352]],[0.863,[0.67555762,0.82986764,0.89024441]],[0.867,[0.68153106,0.83324911,0.89079928]],[0.871,[0.68754438,0.83662105,0.89139904]],[0.875,[0.69359663,0.83998369,0.89204464]],[0.878,[0.69968688,0.84333724,0.89273702]],[0.882,[0.70581423,0.84668191,0.89347718]],[0.886,[0.71197782,0.85001791,0.89426610]],[0.890,[0.71817690,0.85334541,0.89510469]],[0.894,[0.72441053,0.85666464,0.89599414]],[0.898,[0.73067788,0.85997580,0.89693553]],[0.902,[0.73697811,0.86327910,0.89793000]],[0.906,[0.74331039,0.86657473,0.89897869]],[0.910,[0.74967389,0.86986292,0.90008279]],[0.914,[0.75606778,0.87314387,0.90124351]],[0.918,[0.76249117,0.87641781,0.90246212]],[0.922,[0.76894320,0.87968498,0.90373988]],[0.925,[0.77542295,0.88294564,0.90507810]],[0.929,[0.78192947,0.88620003,0.90647814]],[0.933,[0.78846179,0.88944845,0.90794134]],[0.937,[0.79501887,0.89269119,0.90946910]],[0.941,[0.80159965,0.89592859,0.91106281]],[0.945,[0.80820295,0.89916100,0.91272391]],[0.949,[0.81482754,0.90238881,0.91445386]],[0.953,[0.82147215,0.90561245,0.91625407]],[0.957,[0.82813543,0.90883237,0.91812595]],[0.961,[0.83481598,0.91204906,0.92007088]],[0.965,[0.84151229,0.91526306,0.92209023]],[0.969,[0.84822279,0.91847494,0.92418529]],[0.973,[0.85494584,0.92168533,0.92635732]],[0.976,[0.86167970,0.92489490,0.92860749]],[0.980,[0.86842255,0.92810438,0.93093690]],[0.984,[0.87517248,0.93131455,0.93334654]],[0.988,[0.88192751,0.93452625,0.93583728]],[0.992,[0.88868558,0.93774038,0.93840987]],[0.996,[0.89544454,0.94095789,0.94106488]],[1.000,[0.90220216,0.94417980,0.94380273]]]
H.colormap_diff = [[0.000,[0.03080165,0.13684870,0.24984644]],[0.004,[0.03427655,0.14371270,0.25732395]],[0.008,[0.03787814,0.15054024,0.26479020]],[0.012,[0.04156812,0.15733578,0.27224737]],[0.016,[0.04517180,0.16410351,0.27969798]],[0.020,[0.04870181,0.17084542,0.28714020]],[0.024,[0.05214717,0.17756592,0.29457873]],[0.027,[0.05551364,0.18426748,0.30201429]],[0.031,[0.05878267,0.19095468,0.30945313]],[0.035,[0.06203222,0.19762725,0.31684861]],[0.039,[0.06521945,0.20429238,0.32420737]],[0.043,[0.06833929,0.21095385,0.33152408]],[0.047,[0.07142526,0.21761094,0.33878750]],[0.051,[0.07444813,0.22426950,0.34599788]],[0.055,[0.07742364,0.23093086,0.35314408]],[0.059,[0.08038350,0.23759581,0.36020343]],[0.063,[0.08335927,0.24426578,0.36714807]],[0.067,[0.08636609,0.25094379,0.37395314]],[0.071,[0.08948430,0.25762800,0.38056571]],[0.075,[0.09284059,0.26431497,0.38689901]],[0.078,[0.09668346,0.27098760,0.39283981]],[0.082,[0.10133886,0.27761558,0.39827604]],[0.086,[0.10726064,0.28413993,0.40313268]],[0.090,[0.11440215,0.29053068,0.40757049]],[0.094,[0.12249432,0.29678766,0.41175942]],[0.098,[0.13108669,0.30294465,0.41586318]],[0.102,[0.13992594,0.30902844,0.41994071]],[0.106,[0.14888808,0.31505487,0.42401665]],[0.110,[0.15785097,0.32104225,0.42811973]],[0.114,[0.16680025,0.32699698,0.43224216]],[0.118,[0.17567911,0.33293001,0.43640474]],[0.122,[0.18450676,0.33884370,0.44058958]],[0.125,[0.19328239,0.34474144,0.44479664]],[0.129,[0.20198705,0.35062906,0.44903573]],[0.133,[0.21062582,0.35650905,0.45330460]],[0.137,[0.21920997,0.36238299,0.45759600]],[0.141,[0.22772754,0.36825460,0.46192331]],[0.145,[0.23619391,0.37412458,0.46627605]],[0.149,[0.24461243,0.37999462,0.47065427]],[0.153,[0.25298746,0.38586610,0.47505773]],[0.157,[0.26133410,0.39173839,0.47947966]],[0.161,[0.26963943,0.39761537,0.48393035]],[0.165,[0.27790499,0.40349856,0.48841114]],[0.169,[0.28613640,0.40938877,0.49291963]],[0.173,[0.29433899,0.41528658,0.49745483]],[0.176,[0.30253343,0.42118972,0.50200461]],[0.180,[0.31069824,0.42710340,0.50658525]],[0.184,[0.31883683,0.43302846,0.51119596]],[0.188,[0.32696573,0.43896288,0.51582841]],[0.192,[0.33508164,0.44490858,0.52048560]],[0.196,[0.34317393,0.45086883,0.52517667]],[0.200,[0.35126561,0.45684025,0.52988681]],[0.204,[0.35935061,0.46282507,0.53462179]],[0.208,[0.36741725,0.46882678,0.53939133]],[0.212,[0.37549735,0.47483982,0.54417391]],[0.216,[0.38356256,0.48087095,0.54899226]],[0.220,[0.39162019,0.48691967,0.55384246]],[0.224,[0.39968886,0.49298299,0.55871138]],[0.227,[0.40774530,0.49906690,0.56361725]],[0.231,[0.41582384,0.50516476,0.56853570]],[0.235,[0.42388694,0.51128551,0.57349803]],[0.239,[0.43196177,0.51742418,0.57848333]],[0.243,[0.44004360,0.52358269,0.58349604]],[0.247,[0.44813128,0.52976211,0.58853835]],[0.251,[0.45622633,0.53596268,0.59361217]],[0.255,[0.46432398,0.54218659,0.59872027]],[0.259,[0.47244869,0.54842892,0.60384419]],[0.263,[0.48058223,0.55469484,0.60899805]],[0.267,[0.48871724,0.56098692,0.61418894]],[0.271,[0.49687040,0.56730226,0.61940177]],[0.275,[0.50502304,0.57364570,0.62465670]],[0.278,[0.51320200,0.58001204,0.62992819]],[0.282,[0.52138377,0.58640721,0.63524141]],[0.286,[0.52958408,0.59282842,0.64058181]],[0.290,[0.53779850,0.59927739,0.64595531]],[0.294,[0.54603106,0.60575390,0.65135913]],[0.298,[0.55428036,0.61225897,0.65679606]],[0.302,[0.56254279,0.61879417,0.66227123]],[0.306,[0.57083184,0.62535706,0.66777194]],[0.310,[0.57913266,0.63195181,0.67331500]],[0.314,[0.58745942,0.63857581,0.67888693]],[0.318,[0.59580220,0.64523211,0.68449945]],[0.322,[0.60416695,0.65192000,0.69014763]],[0.325,[0.61256057,0.65863855,0.69582544]],[0.329,[0.62097026,0.66539154,0.70154780]],[0.333,[0.62940865,0.67217663,0.70730255]],[0.337,[0.63786912,0.67899615,0.71309808]],[0.341,[0.64635294,0.68585052,0.71893436]],[0.345,[0.65486673,0.69273883,0.72480554]],[0.349,[0.66340473,0.69966323,0.73071918]],[0.353,[0.67197064,0.70662354,0.73667257]],[0.357,[0.68056913,0.71361932,0.74266195]],[0.361,[0.68919017,0.72065383,0.74869956]],[0.365,[0.69784174,0.72772581,0.75477804]],[0.369,[0.70652668,0.73483529,0.76089560]],[0.373,[0.71523957,0.74198439,0.76705952]],[0.376,[0.72398214,0.74917342,0.77326922]],[0.380,[0.73275910,0.75640193,0.77952083]],[0.384,[0.74157141,0.76367037,0.78581453]],[0.388,[0.75041122,0.77098147,0.79216025]],[0.392,[0.75928581,0.77833395,0.79855101]],[0.396,[0.76819581,0.78572815,0.80498699]],[0.400,[0.77714159,0.79316426,0.81146832]],[0.404,[0.78612102,0.80064282,0.81799739]],[0.408,[0.79513010,0.80816438,0.82457790]],[0.412,[0.80417285,0.81572661,0.83120322]],[0.416,[0.81324566,0.82332807,0.83787344]],[0.420,[0.82234879,0.83096468,0.84458153]],[0.424,[0.83147392,0.83863239,0.85132637]],[0.427,[0.84061302,0.84632399,0.85810123]],[0.431,[0.84975449,0.85402906,0.86489649]],[0.435,[0.85888484,0.86173240,0.87169568]],[0.439,[0.86798356,0.86941395,0.87847889]],[0.443,[0.87702013,0.87704820,0.88522387]],[0.447,[0.88596485,0.88459977,0.89189106]],[0.451,[0.89476870,0.89202761,0.89844455]],[0.455,[0.90338502,0.89927811,0.90482555]],[0.459,[0.91174543,0.90629128,0.91097930]],[0.463,[0.91977727,0.91299624,0.91683555]],[0.467,[0.92739894,0.91931378,0.92231608]],[0.471,[0.93452651,0.92515679,0.92733088]],[0.475,[0.94105683,0.93043831,0.93180331]],[0.478,[0.94690545,0.93506539,0.93563385]],[0.482,[0.95197823,0.93895210,0.93874147]],[0.486,[0.95618552,0.94202123,0.94105684]],[0.490,[0.95945839,0.94420534,0.94251299]],[0.494,[0.96173596,0.94545535,0.94306856]],[0.498,[0.96296556,0.94574464,0.94271461]],[0.502,[0.96297173,0.94516301,0.94110787]],[0.506,[0.96190862,0.94369695,0.93794271]],[0.510,[0.95991633,0.94128704,0.93371587]],[0.514,[0.95703841,0.93798462,0.92851359]],[0.518,[0.95333545,0.93385710,0.92243538]],[0.522,[0.94888651,0.92898409,0.91556853]],[0.525,[0.94377948,0.92345292,0.90800433]],[0.529,[0.93810214,0.91735432,0.89985148]],[0.533,[0.93194920,0.91077840,0.89118826]],[0.537,[0.92540383,0.90381124,0.88211806]],[0.541,[0.91854965,0.89653225,0.87270927]],[0.545,[0.91145403,0.88901241,0.86305192]],[0.549,[0.90418206,0.88131327,0.85319798]],[0.553,[0.89678696,0.87348673,0.84319788]],[0.557,[0.88930981,0.86557539,0.83310305]],[0.561,[0.88178484,0.85761328,0.82294925]],[0.565,[0.87424020,0.84962687,0.81275830]],[0.569,[0.86669454,0.84163623,0.80255729]],[0.573,[0.85916429,0.83365615,0.79235577]],[0.576,[0.85166065,0.82569722,0.78216299]],[0.580,[0.84418817,0.81776686,0.77199787]],[0.584,[0.83675460,0.80986993,0.76185486]],[0.588,[0.82936281,0.80200958,0.75173859]],[0.592,[0.82201230,0.79418777,0.74166048]],[0.596,[0.81470558,0.78640543,0.73161589]],[0.600,[0.80744287,0.77866300,0.72160620]],[0.604,[0.80022395,0.77096048,0.71163244]],[0.608,[0.79304860,0.76329765,0.70169451]],[0.612,[0.78591554,0.75567414,0.69179561]],[0.616,[0.77882398,0.74808949,0.68193660]],[0.620,[0.77177617,0.74054304,0.67210615]],[0.624,[0.76476951,0.73303431,0.66231172]],[0.627,[0.75780248,0.72556276,0.65255659]],[0.631,[0.75087470,0.71812779,0.64283935]],[0.635,[0.74398603,0.71072881,0.63315787]],[0.639,[0.73713804,0.70336510,0.62350324]],[0.643,[0.73032673,0.69603627,0.61388825]],[0.647,[0.72355164,0.68874173,0.60431200]],[0.651,[0.71681366,0.68148084,0.59476830]],[0.655,[0.71011323,0.67425296,0.58525272]],[0.659,[0.70344648,0.66705773,0.57577765]],[0.663,[0.69681342,0.65989456,0.56634041]],[0.667,[0.69021755,0.65276262,0.55692472]],[0.671,[0.68365302,0.64566173,0.54755068]],[0.675,[0.67711919,0.63859138,0.53821820]],[0.678,[0.67062134,0.63155054,0.52890410]],[0.682,[0.66415344,0.62453914,0.51962926]],[0.686,[0.65771486,0.61755664,0.51039347]],[0.690,[0.65131060,0.61060203,0.50117475]],[0.694,[0.64493394,0.60367533,0.49199666]],[0.698,[0.63858617,0.59677585,0.48285160]],[0.702,[0.63226783,0.58990297,0.47373484]],[0.706,[0.62597673,0.58305693,0.46464529]],[0.710,[0.61970166,0.57623988,0.45560528]],[0.714,[0.61344740,0.56945043,0.44659794]],[0.718,[0.60721787,0.56268714,0.43761113]],[0.722,[0.60100125,0.55595209,0.42867195]],[0.725,[0.59480556,0.54924295,0.41975755]],[0.729,[0.58863261,0.54255886,0.41085915]],[0.733,[0.58247021,0.53590183,0.40200795]],[0.737,[0.57632483,0.52926993,0.39318375]],[0.741,[0.57019723,0.52266237,0.38438241]],[0.745,[0.56408313,0.51607966,0.37561163]],[0.749,[0.55797744,0.50952245,0.36688222]],[0.753,[0.55188603,0.50298887,0.35817538]],[0.757,[0.54580706,0.49647878,0.34949312]],[0.761,[0.53973913,0.48999205,0.34083524]],[0.765,[0.53367306,0.48353040,0.33222314]],[0.769,[0.52761524,0.47709184,0.32363561]],[0.773,[0.52156486,0.47067625,0.31506823]],[0.776,[0.51551898,0.46428377,0.30652652]],[0.780,[0.50947512,0.45791453,0.29801343]],[0.784,[0.50343103,0.45156867,0.28953026]],[0.788,[0.49738476,0.44524641,0.28107555]],[0.792,[0.49133524,0.43894802,0.27264101]],[0.796,[0.48527742,0.43267404,0.26424077]],[0.800,[0.47920953,0.42642498,0.25586749]],[0.804,[0.47312839,0.42020161,0.24751978]],[0.808,[0.46702969,0.41400484,0.23920121]],[0.812,[0.46090951,0.40783588,0.23090895]],[0.816,[0.45476016,0.40169737,0.22264356]],[0.820,[0.44856824,0.39559319,0.21442962]],[0.824,[0.44233426,0.38952402,0.20623908]],[0.827,[0.43602968,0.38349927,0.19812086]],[0.831,[0.42964585,0.37752308,0.19006060]],[0.835,[0.42314746,0.37160878,0.18209575]],[0.839,[0.41648682,0.36577372,0.17429727]],[0.843,[0.40959739,0.36004275,0.16675921]],[0.847,[0.40238386,0.35444718,0.15970549]],[0.851,[0.39478141,0.34899957,0.15345503]],[0.855,[0.38687663,0.34364901,0.14822473]],[0.859,[0.37886592,0.33831429,0.14385337]],[0.863,[0.37087896,0.33295193,0.14003542]],[0.867,[0.36295729,0.32755412,0.13654614]],[0.871,[0.35510851,0.32212312,0.13326249]],[0.875,[0.34732479,0.31666542,0.13011196]],[0.878,[0.33960720,0.31118284,0.12703542]],[0.882,[0.33193940,0.30568151,0.12403849]],[0.886,[0.32432823,0.30016051,0.12106402]],[0.890,[0.31676221,0.29462370,0.11811746]],[0.894,[0.30923251,0.28907379,0.11520255]],[0.898,[0.30173245,0.28351405,0.11228958]],[0.902,[0.29425277,0.27794856,0.10935197]],[0.906,[0.28678981,0.27237750,0.10639414]],[0.910,[0.27934627,0.26679888,0.10340931]],[0.914,[0.27191946,0.26121246,0.10040001]],[0.918,[0.26450723,0.25561777,0.09736770]],[0.922,[0.25711047,0.25001328,0.09430849]],[0.925,[0.24972787,0.24439815,0.09122222]],[0.929,[0.24235634,0.23877204,0.08811156]],[0.933,[0.23500061,0.23313204,0.08496581]],[0.937,[0.22765232,0.22747935,0.08179625]],[0.941,[0.22031795,0.22181039,0.07858901]],[0.945,[0.21299026,0.21612582,0.07535305]],[0.949,[0.20567016,0.21042365,0.07208351]],[0.953,[0.19835734,0.20470218,0.06877729]],[0.957,[0.19104987,0.19896009,0.06543378]],[0.961,[0.18374444,0.19319637,0.06205438]],[0.965,[0.17644246,0.18740844,0.05863231]],[0.969,[0.16914017,0.18159511,0.05516899]],[0.973,[0.16183560,0.17575451,0.05166249]],[0.976,[0.15452733,0.16988441,0.04810943]],[0.980,[0.14721361,0.16398245,0.04450649]],[0.984,[0.13989156,0.15804640,0.04085151]],[0.988,[0.13255719,0.15207402,0.03716810]],[0.992,[0.12520844,0.14606224,0.03362553]],[0.996,[0.11783842,0.14000896,0.03023931]],[1.000,[0.11042102,0.13391667,0.02703940]]]
H.colormap_flag = [[0.000, [1.000, 0.000, 0.000]], [0.002, [1.000, 0.000, 0.000]], [0.004, [1.000, 0.378, 0.210]], [0.006, [1.000, 0.378, 0.210]], [0.008, [1.000, 0.701, 0.493]], [0.010, [1.000, 0.701, 0.493]], [0.012, [1.000, 0.918, 0.777]], [0.014, [1.000, 0.918, 0.777]], [0.016, [1.000, 1.000, 1.000]], [0.018, [1.000, 1.000, 1.000]], [0.020, [0.803, 0.932, 1.000]], [0.022, [0.803, 0.932, 1.000]], [0.023, [0.521, 0.726, 1.000]], [0.025, [0.521, 0.726, 1.000]], [0.027, [0.236, 0.412, 1.000]], [0.029, [0.236, 0.412, 1.000]], [0.031, [0.000, 0.037, 1.000]], [0.033, [0.000, 0.037, 1.000]], [0.035, [0.000, 0.000, 0.816]], [0.037, [0.000, 0.000, 0.816]], [0.039, [0.000, 0.000, 0.535]], [0.041, [0.000, 0.000, 0.535]], [0.043, [0.000, 0.000, 0.249]], [0.045, [0.000, 0.000, 0.249]], [0.047, [0.000, 0.000, 0.000]], [0.049, [0.000, 0.000, 0.000]], [0.051, [0.172, 0.000, 0.000]], [0.053, [0.172, 0.000, 0.000]], [0.055, [0.452, 0.000, 0.000]], [0.057, [0.452, 0.000, 0.000]], [0.059, [0.738, 0.000, 0.000]], [0.061, [0.738, 0.000, 0.000]], [0.063, [0.990, 0.000, 0.000]], [0.065, [0.990, 0.000, 0.000]], [0.067, [1.000, 0.309, 0.160]], [0.068, [1.000, 0.309, 0.160]], [0.070, [1.000, 0.646, 0.438]], [0.072, [1.000, 0.646, 0.438]], [0.074, [1.000, 0.887, 0.725]], [0.076, [1.000, 0.887, 0.725]], [0.078, [1.000, 0.996, 0.979]], [0.080, [1.000, 0.996, 0.979]], [0.082, [0.853, 0.957, 1.000]], [0.084, [0.853, 0.957, 1.000]], [0.086, [0.576, 0.775, 1.000]], [0.088, [0.576, 0.775, 1.000]], [0.090, [0.288, 0.479, 1.000]], [0.092, [0.288, 0.479, 1.000]], [0.094, [0.032, 0.111, 1.000]], [0.096, [0.032, 0.111, 1.000]], [0.098, [0.000, 0.000, 0.865]], [0.100, [0.000, 0.000, 0.865]], [0.102, [0.000, 0.000, 0.590]], [0.104, [0.000, 0.000, 0.590]], [0.106, [0.000, 0.000, 0.301]], [0.108, [0.000, 0.000, 0.301]], [0.110, [0.000, 0.000, 0.043]], [0.112, [0.000, 0.000, 0.043]], [0.114, [0.123, 0.000, 0.000]], [0.115, [0.123, 0.000, 0.000]], [0.117, [0.396, 0.000, 0.000]], [0.119, [0.396, 0.000, 0.000]], [0.121, [0.685, 0.000, 0.000]], [0.123, [0.685, 0.000, 0.000]], [0.125, [0.946, 0.000, 0.000]], [0.127, [0.946, 0.000, 0.000]], [0.129, [1.000, 0.238, 0.111]], [0.131, [1.000, 0.238, 0.111]], [0.133, [1.000, 0.588, 0.383]], [0.135, [1.000, 0.588, 0.383]], [0.137, [1.000, 0.850, 0.672]], [0.139, [1.000, 0.850, 0.672]], [0.141, [1.000, 0.986, 0.935]], [0.143, [1.000, 0.986, 0.935]], [0.145, [0.901, 0.976, 1.000]], [0.147, [0.901, 0.976, 1.000]], [0.149, [0.631, 0.820, 1.000]], [0.151, [0.631, 0.820, 1.000]], [0.153, [0.342, 0.542, 1.000]], [0.155, [0.342, 0.542, 1.000]], [0.157, [0.076, 0.184, 1.000]], [0.159, [0.076, 0.184, 1.000]], [0.160, [0.000, 0.000, 0.912]], [0.162, [0.000, 0.000, 0.912]], [0.164, [0.000, 0.000, 0.645]], [0.166, [0.000, 0.000, 0.645]], [0.168, [0.000, 0.000, 0.355]], [0.170, [0.000, 0.000, 0.355]], [0.172, [0.000, 0.000, 0.088]], [0.174, [0.000, 0.000, 0.088]], [0.176, [0.076, 0.000, 0.000]], [0.178, [0.076, 0.000, 0.000]], [0.180, [0.342, 0.000, 0.000]], [0.182, [0.342, 0.000, 0.000]], [0.184, [0.631, 0.000, 0.000]], [0.186, [0.631, 0.000, 0.000]], [0.188, [0.901, 0.000, 0.000]], [0.190, [0.901, 0.000, 0.000]], [0.192, [1.000, 0.166, 0.065]], [0.194, [1.000, 0.166, 0.065]], [0.196, [1.000, 0.526, 0.328]], [0.198, [1.000, 0.526, 0.328]], [0.200, [1.000, 0.809, 0.617]], [0.202, [1.000, 0.809, 0.617]], [0.204, [1.000, 0.971, 0.889]], [0.205, [1.000, 0.971, 0.889]], [0.207, [0.946, 0.989, 1.000]], [0.209, [0.946, 0.989, 1.000]], [0.211, [0.685, 0.860, 1.000]], [0.213, [0.685, 0.860, 1.000]], [0.215, [0.396, 0.603, 1.000]], [0.217, [0.396, 0.603, 1.000]], [0.219, [0.123, 0.256, 1.000]], [0.221, [0.123, 0.256, 1.000]], [0.223, [0.000, 0.000, 0.957]], [0.225, [0.000, 0.000, 0.957]], [0.227, [0.000, 0.000, 0.699]], [0.229, [0.000, 0.000, 0.699]], [0.231, [0.000, 0.000, 0.410]], [0.233, [0.000, 0.000, 0.410]], [0.235, [0.000, 0.000, 0.135]], [0.237, [0.000, 0.000, 0.135]], [0.239, [0.032, 0.000, 0.000]], [0.241, [0.032, 0.000, 0.000]], [0.243, [0.288, 0.000, 0.000]], [0.245, [0.288, 0.000, 0.000]], [0.247, [0.576, 0.000, 0.000]], [0.249, [0.576, 0.000, 0.000]], [0.250, [0.853, 0.000, 0.000]], [0.252, [0.853, 0.000, 0.000]], [0.254, [1.000, 0.092, 0.021]], [0.256, [1.000, 0.092, 0.021]], [0.258, [1.000, 0.462, 0.275]], [0.260, [1.000, 0.462, 0.275]], [0.262, [1.000, 0.763, 0.562]], [0.264, [1.000, 0.763, 0.562]], [0.266, [1.000, 0.951, 0.840]], [0.268, [1.000, 0.951, 0.840]], [0.270, [0.990, 0.997, 1.000]], [0.272, [0.990, 0.997, 1.000]], [0.274, [0.738, 0.895, 1.000]], [0.276, [0.738, 0.895, 1.000]], [0.278, [0.452, 0.660, 1.000]], [0.280, [0.452, 0.660, 1.000]], [0.282, [0.172, 0.327, 1.000]], [0.284, [0.172, 0.327, 1.000]], [0.286, [0.000, 0.000, 1.000]], [0.288, [0.000, 0.000, 1.000]], [0.290, [0.000, 0.000, 0.751]], [0.292, [0.000, 0.000, 0.751]], [0.294, [0.000, 0.000, 0.465]], [0.295, [0.000, 0.000, 0.465]], [0.297, [0.000, 0.000, 0.184]], [0.299, [0.000, 0.000, 0.184]], [0.301, [0.000, 0.000, 0.000]], [0.303, [0.000, 0.000, 0.000]], [0.305, [0.236, 0.000, 0.000]], [0.307, [0.236, 0.000, 0.000]], [0.309, [0.521, 0.000, 0.000]], [0.311, [0.521, 0.000, 0.000]], [0.313, [0.803, 0.000, 0.000]], [0.315, [0.803, 0.000, 0.000]], [0.317, [1.000, 0.018, 0.000]], [0.319, [1.000, 0.018, 0.000]], [0.321, [1.000, 0.395, 0.223]], [0.323, [1.000, 0.395, 0.223]], [0.325, [1.000, 0.714, 0.507]], [0.327, [1.000, 0.714, 0.507]], [0.329, [1.000, 0.926, 0.790]], [0.331, [1.000, 0.926, 0.790]], [0.333, [1.000, 1.000, 1.000]], [0.335, [1.000, 1.000, 1.000]], [0.337, [0.790, 0.926, 1.000]], [0.339, [0.790, 0.926, 1.000]], [0.341, [0.507, 0.714, 1.000]], [0.342, [0.507, 0.714, 1.000]], [0.344, [0.223, 0.395, 1.000]], [0.346, [0.223, 0.395, 1.000]], [0.348, [0.000, 0.018, 1.000]], [0.350, [0.000, 0.018, 1.000]], [0.352, [0.000, 0.000, 0.803]], [0.354, [0.000, 0.000, 0.803]], [0.356, [0.000, 0.000, 0.521]], [0.358, [0.000, 0.000, 0.521]], [0.360, [0.000, 0.000, 0.236]], [0.362, [0.000, 0.000, 0.236]], [0.364, [0.000, 0.000, 0.000]], [0.366, [0.000, 0.000, 0.000]], [0.368, [0.184, 0.000, 0.000]], [0.370, [0.184, 0.000, 0.000]], [0.372, [0.465, 0.000, 0.000]], [0.374, [0.465, 0.000, 0.000]], [0.376, [0.751, 0.000, 0.000]], [0.378, [0.751, 0.000, 0.000]], [0.380, [1.000, 0.000, 0.000]], [0.382, [1.000, 0.000, 0.000]], [0.384, [1.000, 0.327, 0.172]], [0.386, [1.000, 0.327, 0.172]], [0.387, [1.000, 0.660, 0.452]], [0.389, [1.000, 0.660, 0.452]], [0.391, [1.000, 0.895, 0.738]], [0.393, [1.000, 0.895, 0.738]], [0.395, [1.000, 0.997, 0.990]], [0.397, [1.000, 0.997, 0.990]], [0.399, [0.840, 0.951, 1.000]], [0.401, [0.840, 0.951, 1.000]], [0.403, [0.562, 0.763, 1.000]], [0.405, [0.562, 0.763, 1.000]], [0.407, [0.275, 0.462, 1.000]], [0.409, [0.275, 0.462, 1.000]], [0.411, [0.021, 0.092, 1.000]], [0.413, [0.021, 0.092, 1.000]], [0.415, [0.000, 0.000, 0.853]], [0.417, [0.000, 0.000, 0.853]], [0.419, [0.000, 0.000, 0.576]], [0.421, [0.000, 0.000, 0.576]], [0.423, [0.000, 0.000, 0.288]], [0.425, [0.000, 0.000, 0.288]], [0.427, [0.000, 0.000, 0.032]], [0.429, [0.000, 0.000, 0.032]], [0.431, [0.135, 0.000, 0.000]], [0.432, [0.135, 0.000, 0.000]], [0.434, [0.410, 0.000, 0.000]], [0.436, [0.410, 0.000, 0.000]], [0.438, [0.699, 0.000, 0.000]], [0.440, [0.699, 0.000, 0.000]], [0.442, [0.957, 0.000, 0.000]], [0.444, [0.957, 0.000, 0.000]], [0.446, [1.000, 0.256, 0.123]], [0.448, [1.000, 0.256, 0.123]], [0.450, [1.000, 0.603, 0.396]], [0.452, [1.000, 0.603, 0.396]], [0.454, [1.000, 0.860, 0.685]], [0.456, [1.000, 0.860, 0.685]], [0.458, [1.000, 0.989, 0.946]], [0.460, [1.000, 0.989, 0.946]], [0.462, [0.889, 0.971, 1.000]], [0.464, [0.889, 0.971, 1.000]], [0.466, [0.617, 0.809, 1.000]], [0.468, [0.617, 0.809, 1.000]], [0.470, [0.328, 0.526, 1.000]], [0.472, [0.328, 0.526, 1.000]], [0.474, [0.065, 0.166, 1.000]], [0.476, [0.065, 0.166, 1.000]], [0.477, [0.000, 0.000, 0.901]], [0.479, [0.000, 0.000, 0.901]], [0.481, [0.000, 0.000, 0.631]], [0.483, [0.000, 0.000, 0.631]], [0.485, [0.000, 0.000, 0.342]], [0.487, [0.000, 0.000, 0.342]], [0.489, [0.000, 0.000, 0.076]], [0.491, [0.000, 0.000, 0.076]], [0.493, [0.088, 0.000, 0.000]], [0.495, [0.088, 0.000, 0.000]], [0.497, [0.355, 0.000, 0.000]], [0.499, [0.355, 0.000, 0.000]], [0.501, [0.645, 0.000, 0.000]], [0.503, [0.645, 0.000, 0.000]], [0.505, [0.912, 0.000, 0.000]], [0.507, [0.912, 0.000, 0.000]], [0.509, [1.000, 0.184, 0.076]], [0.511, [1.000, 0.184, 0.076]], [0.513, [1.000, 0.542, 0.342]], [0.515, [1.000, 0.542, 0.342]], [0.517, [1.000, 0.820, 0.631]], [0.519, [1.000, 0.820, 0.631]], [0.521, [1.000, 0.976, 0.901]], [0.523, [1.000, 0.976, 0.901]], [0.524, [0.935, 0.986, 1.000]], [0.526, [0.935, 0.986, 1.000]], [0.528, [0.672, 0.850, 1.000]], [0.530, [0.672, 0.850, 1.000]], [0.532, [0.383, 0.588, 1.000]], [0.534, [0.383, 0.588, 1.000]], [0.536, [0.111, 0.238, 1.000]], [0.538, [0.111, 0.238, 1.000]], [0.540, [0.000, 0.000, 0.946]], [0.542, [0.000, 0.000, 0.946]], [0.544, [0.000, 0.000, 0.685]], [0.546, [0.000, 0.000, 0.685]], [0.548, [0.000, 0.000, 0.396]], [0.550, [0.000, 0.000, 0.396]], [0.552, [0.000, 0.000, 0.123]], [0.554, [0.000, 0.000, 0.123]], [0.556, [0.043, 0.000, 0.000]], [0.558, [0.043, 0.000, 0.000]], [0.560, [0.301, 0.000, 0.000]], [0.562, [0.301, 0.000, 0.000]], [0.564, [0.590, 0.000, 0.000]], [0.566, [0.590, 0.000, 0.000]], [0.568, [0.865, 0.000, 0.000]], [0.569, [0.865, 0.000, 0.000]], [0.571, [1.000, 0.111, 0.032]], [0.573, [1.000, 0.111, 0.032]], [0.575, [1.000, 0.479, 0.288]], [0.577, [1.000, 0.479, 0.288]], [0.579, [1.000, 0.775, 0.576]], [0.581, [1.000, 0.775, 0.576]], [0.583, [1.000, 0.957, 0.853]], [0.585, [1.000, 0.957, 0.853]], [0.587, [0.979, 0.996, 1.000]], [0.589, [0.979, 0.996, 1.000]], [0.591, [0.725, 0.887, 1.000]], [0.593, [0.725, 0.887, 1.000]], [0.595, [0.438, 0.646, 1.000]], [0.597, [0.438, 0.646, 1.000]], [0.599, [0.160, 0.309, 1.000]], [0.601, [0.160, 0.309, 1.000]], [0.603, [0.000, 0.000, 0.990]], [0.605, [0.000, 0.000, 0.990]], [0.607, [0.000, 0.000, 0.738]], [0.609, [0.000, 0.000, 0.738]], [0.611, [0.000, 0.000, 0.452]], [0.613, [0.000, 0.000, 0.452]], [0.614, [0.000, 0.000, 0.172]], [0.616, [0.000, 0.000, 0.172]], [0.618, [0.000, 0.000, 0.000]], [0.620, [0.000, 0.000, 0.000]], [0.622, [0.249, 0.000, 0.000]], [0.624, [0.249, 0.000, 0.000]], [0.626, [0.535, 0.000, 0.000]], [0.628, [0.535, 0.000, 0.000]], [0.630, [0.816, 0.000, 0.000]], [0.632, [0.816, 0.000, 0.000]], [0.634, [1.000, 0.037, 0.000]], [0.636, [1.000, 0.037, 0.000]], [0.638, [1.000, 0.412, 0.236]], [0.640, [1.000, 0.412, 0.236]], [0.642, [1.000, 0.726, 0.521]], [0.644, [1.000, 0.726, 0.521]], [0.646, [1.000, 0.932, 0.803]], [0.648, [1.000, 0.932, 0.803]], [0.650, [1.000, 1.000, 1.000]], [0.652, [1.000, 1.000, 1.000]], [0.654, [0.777, 0.918, 1.000]], [0.656, [0.777, 0.918, 1.000]], [0.658, [0.493, 0.701, 1.000]], [0.659, [0.493, 0.701, 1.000]], [0.661, [0.210, 0.378, 1.000]], [0.663, [0.210, 0.378, 1.000]], [0.665, [0.000, 0.000, 1.000]], [0.667, [0.000, 0.000, 1.000]], [0.669, [0.000, 0.000, 0.790]], [0.671, [0.000, 0.000, 0.790]], [0.673, [0.000, 0.000, 0.507]], [0.675, [0.000, 0.000, 0.507]], [0.677, [0.000, 0.000, 0.223]], [0.679, [0.000, 0.000, 0.223]], [0.681, [0.000, 0.000, 0.000]], [0.683, [0.000, 0.000, 0.000]], [0.685, [0.197, 0.000, 0.000]], [0.687, [0.197, 0.000, 0.000]], [0.689, [0.479, 0.000, 0.000]], [0.691, [0.479, 0.000, 0.000]], [0.693, [0.764, 0.000, 0.000]], [0.695, [0.764, 0.000, 0.000]], [0.697, [1.000, 0.000, 0.000]], [0.699, [1.000, 0.000, 0.000]], [0.701, [1.000, 0.344, 0.184]], [0.703, [1.000, 0.344, 0.184]], [0.705, [1.000, 0.674, 0.465]], [0.706, [1.000, 0.674, 0.465]], [0.708, [1.000, 0.903, 0.751]], [0.710, [1.000, 0.903, 0.751]], [0.712, [1.000, 0.998, 1.000]], [0.714, [1.000, 0.998, 1.000]], [0.716, [0.828, 0.945, 1.000]], [0.718, [0.828, 0.945, 1.000]], [0.720, [0.548, 0.751, 1.000]], [0.722, [0.548, 0.751, 1.000]], [0.724, [0.262, 0.446, 1.000]], [0.726, [0.262, 0.446, 1.000]], [0.728, [0.010, 0.074, 1.000]], [0.730, [0.010, 0.074, 1.000]], [0.732, [0.000, 0.000, 0.840]], [0.734, [0.000, 0.000, 0.840]], [0.736, [0.000, 0.000, 0.562]], [0.738, [0.000, 0.000, 0.562]], [0.740, [0.000, 0.000, 0.275]], [0.742, [0.000, 0.000, 0.275]], [0.744, [0.000, 0.000, 0.021]], [0.746, [0.000, 0.000, 0.021]], [0.748, [0.147, 0.000, 0.000]], [0.750, [0.147, 0.000, 0.000]], [0.751, [0.424, 0.000, 0.000]], [0.753, [0.424, 0.000, 0.000]], [0.755, [0.712, 0.000, 0.000]], [0.757, [0.712, 0.000, 0.000]], [0.759, [0.968, 0.000, 0.000]], [0.761, [0.968, 0.000, 0.000]], [0.763, [1.000, 0.274, 0.135]], [0.765, [1.000, 0.274, 0.135]], [0.767, [1.000, 0.617, 0.410]], [0.769, [1.000, 0.617, 0.410]], [0.771, [1.000, 0.869, 0.699]], [0.773, [1.000, 0.869, 0.699]], [0.775, [1.000, 0.992, 0.957]], [0.777, [1.000, 0.992, 0.957]], [0.779, [0.877, 0.967, 1.000]], [0.781, [0.877, 0.967, 1.000]], [0.783, [0.604, 0.798, 1.000]], [0.785, [0.604, 0.798, 1.000]], [0.787, [0.315, 0.511, 1.000]], [0.789, [0.315, 0.511, 1.000]], [0.791, [0.054, 0.147, 1.000]], [0.793, [0.054, 0.147, 1.000]], [0.795, [0.000, 0.000, 0.889]], [0.796, [0.000, 0.000, 0.889]], [0.798, [0.000, 0.000, 0.617]], [0.800, [0.000, 0.000, 0.617]], [0.802, [0.000, 0.000, 0.328]], [0.804, [0.000, 0.000, 0.328]], [0.806, [0.000, 0.000, 0.065]], [0.808, [0.000, 0.000, 0.065]], [0.810, [0.099, 0.000, 0.000]], [0.812, [0.099, 0.000, 0.000]], [0.814, [0.369, 0.000, 0.000]], [0.816, [0.369, 0.000, 0.000]], [0.818, [0.658, 0.000, 0.000]], [0.820, [0.658, 0.000, 0.000]], [0.822, [0.924, 0.000, 0.000]], [0.824, [0.924, 0.000, 0.000]], [0.826, [1.000, 0.202, 0.088]], [0.828, [1.000, 0.202, 0.088]], [0.830, [1.000, 0.557, 0.355]], [0.832, [1.000, 0.557, 0.355]], [0.834, [1.000, 0.830, 0.645]], [0.836, [1.000, 0.830, 0.645]], [0.838, [1.000, 0.979, 0.912]], [0.840, [1.000, 0.979, 0.912]], [0.841, [0.924, 0.983, 1.000]], [0.843, [0.924, 0.983, 1.000]], [0.845, [0.658, 0.840, 1.000]], [0.847, [0.658, 0.840, 1.000]], [0.849, [0.369, 0.573, 1.000]], [0.851, [0.369, 0.573, 1.000]], [0.853, [0.099, 0.220, 1.000]], [0.855, [0.099, 0.220, 1.000]], [0.857, [0.000, 0.000, 0.935]], [0.859, [0.000, 0.000, 0.935]], [0.861, [0.000, 0.000, 0.672]], [0.863, [0.000, 0.000, 0.672]], [0.865, [0.000, 0.000, 0.383]], [0.867, [0.000, 0.000, 0.383]], [0.869, [0.000, 0.000, 0.111]], [0.871, [0.000, 0.000, 0.111]], [0.873, [0.054, 0.000, 0.000]], [0.875, [0.054, 0.000, 0.000]], [0.877, [0.315, 0.000, 0.000]], [0.879, [0.315, 0.000, 0.000]], [0.881, [0.604, 0.000, 0.000]], [0.883, [0.604, 0.000, 0.000]], [0.885, [0.877, 0.000, 0.000]], [0.886, [0.877, 0.000, 0.000]], [0.888, [1.000, 0.129, 0.043]], [0.890, [1.000, 0.129, 0.043]], [0.892, [1.000, 0.495, 0.301]], [0.894, [1.000, 0.495, 0.301]], [0.896, [1.000, 0.787, 0.590]], [0.898, [1.000, 0.787, 0.590]], [0.900, [1.000, 0.962, 0.865]], [0.902, [1.000, 0.962, 0.865]], [0.904, [0.968, 0.994, 1.000]], [0.906, [0.968, 0.994, 1.000]], [0.908, [0.712, 0.878, 1.000]], [0.910, [0.712, 0.878, 1.000]], [0.912, [0.424, 0.632, 1.000]], [0.914, [0.424, 0.632, 1.000]], [0.916, [0.147, 0.291, 1.000]], [0.918, [0.147, 0.291, 1.000]], [0.920, [0.000, 0.000, 0.979]], [0.922, [0.000, 0.000, 0.979]], [0.924, [0.000, 0.000, 0.725]], [0.926, [0.000, 0.000, 0.725]], [0.928, [0.000, 0.000, 0.438]], [0.930, [0.000, 0.000, 0.438]], [0.932, [0.000, 0.000, 0.160]], [0.933, [0.000, 0.000, 0.160]], [0.935, [0.010, 0.000, 0.000]], [0.937, [0.010, 0.000, 0.000]], [0.939, [0.262, 0.000, 0.000]], [0.941, [0.262, 0.000, 0.000]], [0.943, [0.548, 0.000, 0.000]], [0.945, [0.548, 0.000, 0.000]], [0.947, [0.828, 0.000, 0.000]], [0.949, [0.828, 0.000, 0.000]], [0.951, [1.000, 0.055, 0.000]], [0.953, [1.000, 0.055, 0.000]], [0.955, [1.000, 0.429, 0.249]], [0.957, [1.000, 0.429, 0.249]], [0.959, [1.000, 0.739, 0.535]], [0.961, [1.000, 0.739, 0.535]], [0.963, [1.000, 0.939, 0.816]], [0.965, [1.000, 0.939, 0.816]], [0.967, [1.000, 0.999, 1.000]], [0.969, [1.000, 0.999, 1.000]], [0.971, [0.764, 0.911, 1.000]], [0.973, [0.764, 0.911, 1.000]], [0.975, [0.479, 0.687, 1.000]], [0.977, [0.479, 0.687, 1.000]], [0.978, [0.197, 0.361, 1.000]], [0.980, [0.197, 0.361, 1.000]], [0.982, [0.000, 0.000, 1.000]], [0.984, [0.000, 0.000, 1.000]], [0.986, [0.000, 0.000, 0.777]], [0.988, [0.000, 0.000, 0.777]], [0.990, [0.000, 0.000, 0.493]], [0.992, [0.000, 0.000, 0.493]], [0.994, [0.000, 0.000, 0.210]], [0.996, [0.000, 0.000, 0.210]], [0.998, [0.000, 0.000, 0.000]], [1.000, [0.000, 0.000, 0.000]]];
H.colormap_freesurface_blue = [[0.000,[0.11841710,0.01526684,0.43258407]],[0.004,[0.12067921,0.01695195,0.44019564]],[0.008,[0.12292561,0.01870061,0.44778812]],[0.012,[0.12516611,0.02042990,0.45544255]],[0.016,[0.12740178,0.02212366,0.46317121]],[0.020,[0.12962084,0.02388413,0.47087620]],[0.024,[0.13184428,0.02551152,0.47874043]],[0.027,[0.13405019,0.02720668,0.48657719]],[0.031,[0.13625161,0.02883854,0.49450308]],[0.035,[0.13844278,0.03045804,0.50247031]],[0.039,[0.14062205,0.03207814,0.51046645]],[0.043,[0.14279670,0.03361242,0.51856222]],[0.047,[0.14495350,0.03520311,0.52663757]],[0.051,[0.14710964,0.03664387,0.53485915]],[0.055,[0.14924490,0.03816736,0.54303770]],[0.059,[0.15137874,0.03952682,0.55136664]],[0.063,[0.15349186,0.04094643,0.55966145]],[0.067,[0.15560044,0.04218473,0.56808911]],[0.071,[0.15768855,0.04345215,0.57649466]],[0.075,[0.15977029,0.04455541,0.58502949]],[0.078,[0.16183005,0.04569489,0.59353876]],[0.082,[0.16388276,0.04665775,0.60218868]],[0.086,[0.16591060,0.04767989,0.61079711]],[0.090,[0.16793098,0.04850252,0.61956492]],[0.094,[0.16992592,0.04936978,0.62830444]],[0.098,[0.17190644,0.05010385,0.63715302]],[0.102,[0.17386413,0.05081207,0.64602908]],[0.106,[0.17579860,0.05148156,0.65494351]],[0.110,[0.17771337,0.05202943,0.66395927]],[0.114,[0.17959783,0.05260516,0.67296536]],[0.118,[0.18145903,0.05305518,0.68207710]],[0.122,[0.18328976,0.05346759,0.69123007]],[0.125,[0.18508507,0.05389685,0.70038651]],[0.129,[0.18684943,0.05420100,0.70965092]],[0.133,[0.18857478,0.05448010,0.71895267]],[0.137,[0.19025634,0.05477218,0.72826764]],[0.141,[0.19189171,0.05504984,0.73761861]],[0.145,[0.19347912,0.05523593,0.74706258]],[0.149,[0.19500927,0.05544767,0.75652204]],[0.153,[0.19647652,0.05569024,0.76599904]],[0.157,[0.19787421,0.05597203,0.77549431]],[0.161,[0.19919438,0.05630563,0.78500678]],[0.165,[0.20042756,0.05670906,0.79453302]],[0.169,[0.20156248,0.05720727,0.80406655]],[0.173,[0.20258574,0.05783365,0.81359700]],[0.176,[0.20348138,0.05863177,0.82310915]],[0.180,[0.20423053,0.05965689,0.83258175]],[0.184,[0.20481088,0.06097709,0.84198626]],[0.188,[0.20519624,0.06267363,0.85128544]],[0.192,[0.20535608,0.06483982,0.86043187]],[0.196,[0.20524597,0.06751231,0.86941942]],[0.200,[0.20482205,0.07083683,0.87815481]],[0.204,[0.20402781,0.07492401,0.88655917]],[0.208,[0.20280157,0.07990081,0.89451884]],[0.212,[0.20105818,0.08585484,0.90193183]],[0.216,[0.19873624,0.09290598,0.90860845]],[0.220,[0.19577427,0.10108763,0.91437814]],[0.224,[0.19214412,0.11035212,0.91907504]],[0.227,[0.18786629,0.12054514,0.92258204]],[0.231,[0.18301848,0.13141592,0.92486664]],[0.235,[0.17772066,0.14266598,0.92599399]],[0.239,[0.17209996,0.15401840,0.92610184]],[0.243,[0.16627460,0.16525594,0.92536036]],[0.247,[0.16034251,0.17623156,0.92393962]],[0.251,[0.15437891,0.18685945,0.92199054]],[0.255,[0.14843929,0.19709897,0.91963790]],[0.259,[0.14256438,0.20693917,0.91698076]],[0.263,[0.13678494,0.21638689,0.91409626]],[0.267,[0.13112573,0.22545863,0.91104404]],[0.271,[0.12560866,0.23417531,0.90787071]],[0.275,[0.12027291,0.24254932,0.90462742]],[0.278,[0.11511943,0.25061482,0.90132803]],[0.282,[0.11017434,0.25839092,0.89799932]],[0.286,[0.10546991,0.26589343,0.89466799]],[0.290,[0.10101201,0.27315039,0.89133411]],[0.294,[0.09684739,0.28016923,0.88802801]],[0.298,[0.09297879,0.28697717,0.88473930]],[0.302,[0.08945391,0.29357982,0.88149375]],[0.306,[0.08628097,0.29999926,0.87828076]],[0.310,[0.08350124,0.30624175,0.87511843]],[0.314,[0.08112903,0.31232340,0.87200060]],[0.318,[0.07919168,0.31825276,0.86893469]],[0.322,[0.07770808,0.32403948,0.86592315]],[0.325,[0.07668747,0.32969443,0.86296260]],[0.329,[0.07614566,0.33522255,0.86006266]],[0.333,[0.07607788,0.34063415,0.85721677]],[0.337,[0.07648042,0.34593570,0.85442643]],[0.341,[0.07734525,0.35113207,0.85169635]],[0.345,[0.07865155,0.35623095,0.84902118]],[0.349,[0.08037858,0.36123728,0.84640214]],[0.353,[0.08250226,0.36615523,0.84384177]],[0.357,[0.08499262,0.37099061,0.84133588]],[0.361,[0.08782078,0.37574754,0.83888445]],[0.365,[0.09095822,0.38042921,0.83648995]],[0.369,[0.09437482,0.38504023,0.83414844]],[0.373,[0.09804302,0.38958401,0.83185942]],[0.376,[0.10193714,0.39406326,0.82962414]],[0.380,[0.10603274,0.39848136,0.82744043]],[0.384,[0.11030778,0.40284121,0.82530706]],[0.388,[0.11474237,0.40714526,0.82322397]],[0.392,[0.11931856,0.41139587,0.82119087]],[0.396,[0.12402036,0.41559557,0.81920587]],[0.400,[0.12883364,0.41974649,0.81726827]],[0.404,[0.13374571,0.42385044,0.81537840]],[0.408,[0.13874558,0.42790946,0.81353471]],[0.412,[0.14382356,0.43192539,0.81173625]],[0.416,[0.14897104,0.43589985,0.80998256]],[0.420,[0.15418031,0.43983430,0.80827372]],[0.424,[0.15944493,0.44373037,0.80660816]],[0.427,[0.16475909,0.44758948,0.80498529]],[0.431,[0.17011750,0.45141288,0.80340503]],[0.435,[0.17551557,0.45520181,0.80186700]],[0.439,[0.18094947,0.45895755,0.80037004]],[0.443,[0.18641566,0.46268124,0.79891369]],[0.447,[0.19191066,0.46637387,0.79749827]],[0.451,[0.19743173,0.47003651,0.79612311]],[0.455,[0.20297650,0.47367020,0.79478734]],[0.459,[0.20854272,0.47727590,0.79349059]],[0.463,[0.21412783,0.48085441,0.79223357]],[0.467,[0.21973012,0.48440666,0.79101552]],[0.471,[0.22534809,0.48793355,0.78983567]],[0.475,[0.23098018,0.49143590,0.78869374]],[0.478,[0.23662436,0.49491442,0.78759055]],[0.482,[0.24227928,0.49836989,0.78652584]],[0.486,[0.24794409,0.50180315,0.78549856]],[0.490,[0.25361757,0.50521492,0.78450854]],[0.494,[0.25929841,0.50860589,0.78355594]],[0.498,[0.26498455,0.51197668,0.78264237]],[0.502,[0.27067599,0.51532809,0.78176581]],[0.506,[0.27637175,0.51866081,0.78092614]],[0.510,[0.28207087,0.52197550,0.78012328]],[0.514,[0.28777201,0.52527277,0.77935786]],[0.518,[0.29347355,0.52855324,0.77863104]],[0.522,[0.29917572,0.53181763,0.77794091]],[0.525,[0.30487771,0.53506656,0.77728742]],[0.529,[0.31057873,0.53830065,0.77667050]],[0.533,[0.31627805,0.54152052,0.77609009]],[0.537,[0.32197393,0.54472673,0.77554771]],[0.541,[0.32766595,0.54791990,0.77504283]],[0.545,[0.33335412,0.55110066,0.77457431]],[0.549,[0.33903784,0.55426957,0.77414209]],[0.553,[0.34471649,0.55742720,0.77374610]],[0.557,[0.35038951,0.56057412,0.77338624]],[0.561,[0.35605637,0.56371089,0.77306243]],[0.565,[0.36171657,0.56683805,0.77277458]],[0.569,[0.36736829,0.56995616,0.77252452]],[0.573,[0.37301239,0.57306575,0.77231023]],[0.576,[0.37864854,0.57616733,0.77213146]],[0.580,[0.38427639,0.57926141,0.77198808]],[0.584,[0.38989559,0.58234848,0.77187991]],[0.588,[0.39550584,0.58542905,0.77180681]],[0.592,[0.40110688,0.58850358,0.77176860]],[0.596,[0.40669845,0.59157255,0.77176510]],[0.600,[0.41228034,0.59463641,0.77179611]],[0.604,[0.41785238,0.59769562,0.77186144]],[0.608,[0.42341440,0.60075062,0.77196087]],[0.612,[0.42896628,0.60380182,0.77209418]],[0.616,[0.43450793,0.60684966,0.77226115]],[0.620,[0.44003926,0.60989453,0.77246153]],[0.624,[0.44556024,0.61293683,0.77269510]],[0.627,[0.45107084,0.61597694,0.77296158]],[0.631,[0.45657105,0.61901525,0.77326074]],[0.635,[0.46206091,0.62205211,0.77359230]],[0.639,[0.46754044,0.62508788,0.77395600]],[0.643,[0.47300972,0.62812290,0.77435157]],[0.647,[0.47846882,0.63115751,0.77477873]],[0.651,[0.48391785,0.63419203,0.77523721]],[0.655,[0.48935690,0.63722677,0.77572673]],[0.659,[0.49478611,0.64026205,0.77624701]],[0.663,[0.50020562,0.64329815,0.77679777]],[0.667,[0.50561558,0.64633537,0.77737874]],[0.671,[0.51101555,0.64937406,0.77799041]],[0.675,[0.51640493,0.65241459,0.77863354]],[0.678,[0.52178515,0.65545708,0.77930620]],[0.682,[0.52715641,0.65850178,0.78000811]],[0.686,[0.53251892,0.66154893,0.78073899]],[0.690,[0.53787287,0.66459878,0.78149858]],[0.694,[0.54321848,0.66765156,0.78228662]],[0.698,[0.54855597,0.67070750,0.78310284]],[0.702,[0.55388500,0.67376689,0.78394770]],[0.706,[0.55920404,0.67683023,0.78482325]],[0.710,[0.56451555,0.67989738,0.78572632]],[0.714,[0.56981976,0.68296857,0.78665668]],[0.718,[0.57511690,0.68604397,0.78761410]],[0.722,[0.58040721,0.68912379,0.78859835]],[0.725,[0.58569045,0.69220828,0.78960981]],[0.729,[0.59096442,0.69529804,0.79065140]],[0.733,[0.59623220,0.69839278,0.79171922]],[0.737,[0.60149404,0.70149268,0.79281308]],[0.741,[0.60675016,0.70459789,0.79393280]],[0.745,[0.61200077,0.70770859,0.79507818]],[0.749,[0.61724247,0.71082560,0.79625374]],[0.753,[0.62247912,0.71394843,0.79745462]],[0.757,[0.62771092,0.71707723,0.79868068]],[0.761,[0.63293811,0.72021217,0.79993176]],[0.765,[0.63815932,0.72335368,0.80120973]],[0.769,[0.64337408,0.72650206,0.80251531]],[0.773,[0.64858488,0.72965701,0.80384548]],[0.776,[0.65379190,0.73281869,0.80520013]],[0.780,[0.65899459,0.73598738,0.80658010]],[0.784,[0.66419075,0.73916370,0.80798836]],[0.788,[0.66938376,0.74234716,0.80942073]],[0.792,[0.67457379,0.74553790,0.81087716]],[0.796,[0.67976007,0.74873625,0.81235878]],[0.800,[0.68494079,0.75194275,0.81386804]],[0.804,[0.69011911,0.75515692,0.81540108]],[0.808,[0.69529520,0.75837890,0.81695786]],[0.812,[0.70046724,0.76160923,0.81854083]],[0.816,[0.70563549,0.76484803,0.82014984]],[0.820,[0.71080204,0.76809501,0.82178240]],[0.824,[0.71596700,0.77135030,0.82343853]],[0.827,[0.72112701,0.77461480,0.82512266]],[0.831,[0.72628554,0.77788792,0.82683057]],[0.835,[0.73144297,0.78116972,0.82856197]],[0.839,[0.73659759,0.78446073,0.83031917]],[0.843,[0.74174954,0.78776109,0.83210217]],[0.847,[0.74690081,0.79107050,0.83390864]],[0.851,[0.75205090,0.79438922,0.83573939]],[0.855,[0.75719758,0.79771792,0.83759740]],[0.859,[0.76234396,0.80105604,0.83947894]],[0.863,[0.76749008,0.80440370,0.84138415]],[0.867,[0.77263291,0.80776177,0.84331700]],[0.871,[0.77777552,0.81112968,0.84527384]],[0.875,[0.78291815,0.81450751,0.84725454]],[0.878,[0.78805839,0.81789599,0.84926230]],[0.882,[0.79319816,0.82129481,0.85129492]],[0.886,[0.79833817,0.82470394,0.85335169]],[0.890,[0.80347637,0.82812402,0.85543536]],[0.894,[0.80861403,0.83155488,0.85754452]],[0.898,[0.81375203,0.83499646,0.85967827]],[0.902,[0.81888853,0.83844935,0.86183910]],[0.906,[0.82402452,0.84191346,0.86402595]],[0.910,[0.82916086,0.84538871,0.86623798]],[0.914,[0.83429573,0.84887570,0.86847759]],[0.918,[0.83943012,0.85237433,0.87074375]],[0.922,[0.84456470,0.85588457,0.87303586]],[0.925,[0.84969761,0.85940704,0.87535638]],[0.929,[0.85482997,0.86294159,0.87770411]],[0.933,[0.85996213,0.86648830,0.88007884]],[0.937,[0.86509212,0.87004779,0.88248314]],[0.941,[0.87022126,0.87361989,0.88491561]],[0.945,[0.87534946,0.87720476,0.88737656]],[0.949,[0.88047462,0.88080310,0.88986869]],[0.953,[0.88559813,0.88441470,0.89239053]],[0.957,[0.89071914,0.88803992,0.89494329]],[0.961,[0.89583606,0.89167935,0.89752907]],[0.965,[0.90094937,0.89533301,0.90014746]],[0.969,[0.90605758,0.89900147,0.90280044]],[0.973,[0.91115913,0.90268529,0.90549004]],[0.976,[0.91625315,0.90638489,0.90821747]],[0.980,[0.92133683,0.91010119,0.91098624]],[0.984,[0.92640723,0.91383519,0.91379998]],[0.988,[0.93145998,0.91758827,0.91666400]],[0.992,[0.93648664,0.92136298,0.91958839]],[0.996,[0.94147150,0.92516389,0.92259171]],[1.000,[0.94634709,0.92901013,0.92575324]]]
H.colormap_freesurface_red = [[0.000,[0.23605636,0.03529748,0.06943744]],[0.004,[0.24100716,0.03664550,0.07093641]],[0.008,[0.24595260,0.03800641,0.07241714]],[0.012,[0.25090340,0.03936202,0.07386826]],[0.016,[0.25585309,0.04071754,0.07529764]],[0.020,[0.26080496,0.04203632,0.07670212]],[0.024,[0.26576047,0.04332636,0.07808053]],[0.027,[0.27071430,0.04459770,0.07943946]],[0.031,[0.27567706,0.04583263,0.08076716]],[0.035,[0.28063775,0.04705096,0.08207671]],[0.039,[0.28560487,0.04823854,0.08335867]],[0.043,[0.29057488,0.04940214,0.08461748]],[0.047,[0.29554566,0.05054612,0.08585600]],[0.051,[0.30052609,0.05165528,0.08706404]],[0.055,[0.30550643,0.05274743,0.08825339]],[0.059,[0.31049277,0.05381220,0.08941707]],[0.063,[0.31548518,0.05484987,0.09055518]],[0.067,[0.32047859,0.05587007,0.09167406]],[0.071,[0.32548137,0.05685797,0.09276372]],[0.075,[0.33048827,0.05782350,0.09383067]],[0.078,[0.33549718,0.05877098,0.09487770]],[0.082,[0.34051687,0.05968444,0.09589399]],[0.086,[0.34554046,0.06057698,0.09688817]],[0.090,[0.35056696,0.06145082,0.09786159]],[0.094,[0.35560365,0.06229245,0.09880504]],[0.098,[0.36064578,0.06311109,0.09972452]],[0.102,[0.36569165,0.06391033,0.10062225]],[0.106,[0.37074502,0.06468313,0.10149332]],[0.110,[0.37580723,0.06542701,0.10233586]],[0.114,[0.38087388,0.06615078,0.10315552]],[0.118,[0.38594528,0.06685410,0.10395184]],[0.122,[0.39102665,0.06752673,0.10471769]],[0.125,[0.39611513,0.06817445,0.10545665]],[0.129,[0.40120891,0.06880108,0.10617097]],[0.133,[0.40630826,0.06940630,0.10686010]],[0.137,[0.41141561,0.06998523,0.10752041]],[0.141,[0.41653225,0.07053523,0.10814974]],[0.145,[0.42165482,0.07106338,0.10875243]],[0.149,[0.42678353,0.07156940,0.10932784]],[0.153,[0.43191855,0.07205306,0.10987533]],[0.157,[0.43706005,0.07251411,0.11039422]],[0.161,[0.44221111,0.07294594,0.11087949]],[0.165,[0.44736935,0.07335374,0.11133402]],[0.169,[0.45253406,0.07373915,0.11175827]],[0.173,[0.45770533,0.07410210,0.11215148]],[0.176,[0.46288321,0.07444262,0.11251290]],[0.180,[0.46806770,0.07476076,0.11284174]],[0.184,[0.47325880,0.07505667,0.11313719]],[0.188,[0.47845647,0.07533058,0.11339844]],[0.192,[0.48366061,0.07558282,0.11362463]],[0.196,[0.48887111,0.07581382,0.11381491]],[0.200,[0.49408780,0.07602416,0.11396840]],[0.204,[0.49931047,0.07621457,0.11408421]],[0.208,[0.50453883,0.07638593,0.11416144]],[0.212,[0.50977257,0.07653932,0.11419919]],[0.216,[0.51501130,0.07667605,0.11419653]],[0.220,[0.52025455,0.07679768,0.11415256]],[0.224,[0.52550177,0.07690603,0.11406635]],[0.227,[0.53075236,0.07700327,0.11393703]],[0.231,[0.53600739,0.07708717,0.11376027]],[0.235,[0.54126690,0.07715821,0.11353335]],[0.239,[0.54652771,0.07722560,0.11325957]],[0.243,[0.55178873,0.07729327,0.11293812]],[0.247,[0.55705126,0.07735880,0.11256303]],[0.251,[0.56231549,0.07742288,0.11212994]],[0.255,[0.56757608,0.07750158,0.11164576]],[0.259,[0.57283634,0.07758744,0.11109863]],[0.263,[0.57809224,0.07769353,0.11049180]],[0.267,[0.58334302,0.07782425,0.10982081]],[0.271,[0.58858654,0.07798816,0.10908346]],[0.275,[0.59382205,0.07819019,0.10827304]],[0.278,[0.59904386,0.07844999,0.10739406]],[0.282,[0.60425238,0.07877012,0.10643397]],[0.286,[0.60944301,0.07916809,0.10539092]],[0.290,[0.61461016,0.07966497,0.10426379]],[0.294,[0.61974864,0.08028124,0.10304728]],[0.298,[0.62485149,0.08104315,0.10173715]],[0.302,[0.62990947,0.08198423,0.10033109]],[0.306,[0.63491247,0.08314096,0.09882123]],[0.310,[0.63984420,0.08456761,0.09721146]],[0.314,[0.64468435,0.08632922,0.09550730]],[0.318,[0.64940540,0.08850866,0.09372537]],[0.322,[0.65397108,0.09120770,0.09189703]],[0.325,[0.65833339,0.09454784,0.09009202]],[0.329,[0.66243651,0.09864878,0.08842866]],[0.333,[0.66622885,0.10358333,0.08708307]],[0.337,[0.66968657,0.10931333,0.08625839]],[0.341,[0.67283171,0.11566769,0.08610729]],[0.345,[0.67572030,0.12241372,0.08666976]],[0.349,[0.67841932,0.12933456,0.08789535]],[0.353,[0.68098053,0.13629052,0.08968512]],[0.357,[0.68344163,0.14319787,0.09193958]],[0.361,[0.68583135,0.15000536,0.09457167]],[0.365,[0.68816291,0.15670160,0.09751128]],[0.369,[0.69045161,0.16327156,0.10070151]],[0.373,[0.69270196,0.16972257,0.10409997]],[0.376,[0.69492052,0.17605644,0.10767181]],[0.380,[0.69711150,0.18227855,0.11138953]],[0.384,[0.69927740,0.18839616,0.11523156]],[0.388,[0.70141951,0.19441742,0.11918104]],[0.392,[0.70353886,0.20034973,0.12322434]],[0.396,[0.70564258,0.20618991,0.12734437]],[0.400,[0.70772377,0.21195649,0.13153872]],[0.404,[0.70978728,0.21764841,0.13579560]],[0.408,[0.71183309,0.22327171,0.14010893]],[0.412,[0.71386148,0.22883139,0.14447333]],[0.416,[0.71587167,0.23433333,0.14888530]],[0.420,[0.71786835,0.23977551,0.15333627]],[0.424,[0.71984546,0.24517019,0.15782950]],[0.427,[0.72180819,0.25051406,0.16235679]],[0.431,[0.72375695,0.25581008,0.16691534]],[0.435,[0.72568839,0.26106558,0.17150678]],[0.439,[0.72760326,0.26628236,0.17612862]],[0.443,[0.72950484,0.27145906,0.18077571]],[0.447,[0.73139331,0.27659801,0.18544650]],[0.451,[0.73326636,0.28170419,0.19014240]],[0.455,[0.73512444,0.28677915,0.19486192]],[0.459,[0.73696794,0.29182437,0.19960372]],[0.463,[0.73879722,0.29684126,0.20436661]],[0.467,[0.74061257,0.30183120,0.20914956]],[0.471,[0.74241428,0.30679550,0.21395164]],[0.475,[0.74420258,0.31173541,0.21877203]],[0.478,[0.74597769,0.31665214,0.22360999]],[0.482,[0.74773979,0.32154685,0.22846487]],[0.486,[0.74948906,0.32642063,0.23333611]],[0.490,[0.75122564,0.33127454,0.23822317]],[0.494,[0.75294966,0.33610958,0.24312560]],[0.498,[0.75466125,0.34092672,0.24804299]],[0.502,[0.75636051,0.34572688,0.25297497]],[0.506,[0.75804753,0.35051093,0.25792121]],[0.510,[0.75972242,0.35527971,0.26288139]],[0.514,[0.76138524,0.36003402,0.26785526]],[0.518,[0.76303608,0.36477461,0.27284255]],[0.522,[0.76467502,0.36950222,0.27784304]],[0.525,[0.76630212,0.37421753,0.28285652]],[0.529,[0.76791746,0.37892121,0.28788279]],[0.533,[0.76952314,0.38361222,0.29291941]],[0.537,[0.77111955,0.38829095,0.29796588]],[0.541,[0.77270462,0.39295977,0.30302441]],[0.545,[0.77427840,0.39761922,0.30809485]],[0.549,[0.77584097,0.40226986,0.31317706]],[0.553,[0.77739238,0.40691217,0.31827091]],[0.557,[0.77893512,0.41154481,0.32337366]],[0.561,[0.78047016,0.41616762,0.32848423]],[0.565,[0.78199439,0.42078349,0.33360594]],[0.569,[0.78350789,0.42539284,0.33873868]],[0.573,[0.78501073,0.42999609,0.34388233]],[0.576,[0.78650668,0.43459097,0.34903287]],[0.580,[0.78799506,0.43917847,0.35419100]],[0.584,[0.78947313,0.44376102,0.35935965]],[0.588,[0.79094096,0.44833894,0.36453871]],[0.592,[0.79240077,0.45291112,0.36972583]],[0.596,[0.79385565,0.45747587,0.37491782]],[0.600,[0.79530063,0.46203701,0.38011987]],[0.604,[0.79673584,0.46659481,0.38533185]],[0.608,[0.79816448,0.47114749,0.39055045]],[0.612,[0.79958815,0.47569443,0.39577406]],[0.616,[0.80100240,0.48023890,0.40100727]],[0.620,[0.80240737,0.48478113,0.40624996]],[0.624,[0.80380944,0.48931741,0.41149566]],[0.627,[0.80520425,0.49385086,0.41674883]],[0.631,[0.80659018,0.49838283,0.42201115]],[0.635,[0.80797029,0.50291172,0.42727955]],[0.639,[0.80934717,0.50743629,0.43255150]],[0.643,[0.81071558,0.51196007,0.43783228]],[0.647,[0.81207638,0.51648280,0.44312105]],[0.651,[0.81343685,0.52100046,0.44841067]],[0.655,[0.81478930,0.52551795,0.45370880]],[0.659,[0.81613394,0.53003538,0.45901524]],[0.663,[0.81747897,0.53454830,0.46432204]],[0.667,[0.81881703,0.53906126,0.46963645]],[0.671,[0.82014780,0.54357471,0.47495881]],[0.675,[0.82147918,0.54808444,0.48028157]],[0.678,[0.82280449,0.55259451,0.48561123]],[0.682,[0.82412305,0.55710554,0.49094847]],[0.686,[0.82544320,0.56161322,0.49628544]],[0.690,[0.82675744,0.56612192,0.50162934]],[0.694,[0.82806604,0.57063173,0.50697994]],[0.698,[0.82937681,0.57513873,0.51233002]],[0.702,[0.83068173,0.57964746,0.51768714]],[0.706,[0.83198326,0.58415686,0.52304908]],[0.710,[0.83328588,0.58866484,0.52841180]],[0.714,[0.83458333,0.59317490,0.53378113]],[0.718,[0.83588010,0.59768496,0.53915303]],[0.722,[0.83717645,0.60219516,0.54452738]],[0.725,[0.83846835,0.60670775,0.54990789]],[0.729,[0.83976265,0.61121955,0.55528849]],[0.733,[0.84105470,0.61573311,0.56067344]],[0.737,[0.84234408,0.62024886,0.56606321]],[0.741,[0.84363717,0.62476392,0.57145221]],[0.745,[0.84492701,0.62928191,0.57684673]],[0.749,[0.84621797,0.63380094,0.58224299]],[0.753,[0.84751018,0.63832119,0.58764099]],[0.757,[0.84879999,0.64284461,0.59304400]],[0.761,[0.85009482,0.64736793,0.59844571]],[0.765,[0.85138839,0.65189431,0.60385164]],[0.769,[0.85268319,0.65642282,0.60925975]],[0.773,[0.85398149,0.66095265,0.61466822]],[0.776,[0.85527884,0.66548603,0.62008095]],[0.780,[0.85658162,0.67002030,0.62549264]],[0.784,[0.85788519,0.67455777,0.63090732]],[0.788,[0.85919114,0.67909794,0.63632378]],[0.792,[0.86050197,0.68363992,0.64174006]],[0.796,[0.86181344,0.68818579,0.64715977]],[0.800,[0.86313161,0.69273312,0.65257806]],[0.804,[0.86445197,0.69728408,0.65799876]],[0.808,[0.86577662,0.70183799,0.66342026]],[0.812,[0.86710699,0.70639443,0.66884154]],[0.816,[0.86843979,0.71095503,0.67426538]],[0.820,[0.86978110,0.71551742,0.67968704]],[0.824,[0.87112572,0.72008401,0.68511080]],[0.827,[0.87247699,0.72465360,0.69053414]],[0.831,[0.87383465,0.72922652,0.69595742]],[0.835,[0.87519745,0.73380350,0.70138174]],[0.839,[0.87656942,0.73838308,0.70680410]],[0.843,[0.87794657,0.74296713,0.71222776]],[0.847,[0.87933298,0.74755418,0.71764969]],[0.851,[0.88072655,0.75214529,0.72307166]],[0.855,[0.88212837,0.75674024,0.72849299]],[0.859,[0.88353983,0.76133869,0.73391278]],[0.863,[0.88495882,0.76594169,0.73933276]],[0.867,[0.88638969,0.77054772,0.74474984]],[0.871,[0.88782898,0.77515837,0.75016676]],[0.875,[0.88927961,0.77977269,0.75558150]],[0.878,[0.89074089,0.78439118,0.76099475]],[0.882,[0.89221327,0.78901387,0.76640633]],[0.886,[0.89369834,0.79364037,0.77181526]],[0.890,[0.89519472,0.79827141,0.77722272]],[0.894,[0.89670542,0.80290607,0.78262669]],[0.898,[0.89822870,0.80754523,0.78802864]],[0.902,[0.89976654,0.81218834,0.79342729]],[0.906,[0.90131894,0.81683563,0.79882287]],[0.910,[0.90288651,0.82148710,0.80421511]],[0.914,[0.90447050,0.82614249,0.80960336]],[0.918,[0.90607068,0.83080212,0.81498794]],[0.922,[0.90768898,0.83546549,0.82036775]],[0.925,[0.90932516,0.84013293,0.82574316]],[0.929,[0.91098071,0.84480410,0.83111336]],[0.933,[0.91265627,0.84947901,0.83647814]],[0.937,[0.91435297,0.85415748,0.84183697]],[0.941,[0.91607186,0.85883936,0.84718938]],[0.945,[0.91781428,0.86352441,0.85253473]],[0.949,[0.91958130,0.86821249,0.85787257]],[0.953,[0.92137476,0.87290318,0.86320196]],[0.957,[0.92319608,0.87759623,0.86852224]],[0.961,[0.92504735,0.88229114,0.87383237]],[0.965,[0.92693098,0.88698733,0.87913111]],[0.969,[0.92884915,0.89168430,0.88441740]],[0.973,[0.93080613,0.89638082,0.88968890]],[0.976,[0.93280442,0.90107632,0.89494445]],[0.980,[0.93485093,0.90576867,0.90018015]],[0.984,[0.93695162,0.91045614,0.90539280]],[0.988,[0.93911755,0.91513525,0.91057619]],[0.992,[0.94136572,0.91980053,0.91572063]],[0.996,[0.94372910,0.92444114,0.92080706]],[1.000,[0.94634709,0.92901013,0.92575324]]]
H.colormap_gist_earth = [[0.000, [0.000, 0.000, 0.000]], [0.002, [0.000, 0.000, 0.000]], [0.004, [0.003, 0.000, 0.169]], [0.006, [0.003, 0.000, 0.169]], [0.008, [0.005, 0.000, 0.222]], [0.010, [0.005, 0.000, 0.222]], [0.012, [0.008, 0.000, 0.264]], [0.014, [0.008, 0.000, 0.264]], [0.016, [0.010, 0.000, 0.306]], [0.018, [0.010, 0.000, 0.306]], [0.020, [0.013, 0.000, 0.348]], [0.022, [0.013, 0.000, 0.348]], [0.023, [0.016, 0.000, 0.390]], [0.025, [0.016, 0.000, 0.390]], [0.027, [0.018, 0.000, 0.432]], [0.029, [0.018, 0.000, 0.432]], [0.031, [0.021, 0.009, 0.455]], [0.033, [0.021, 0.009, 0.455]], [0.035, [0.024, 0.018, 0.456]], [0.037, [0.024, 0.018, 0.456]], [0.039, [0.026, 0.027, 0.456]], [0.041, [0.026, 0.027, 0.456]], [0.043, [0.029, 0.036, 0.457]], [0.045, [0.029, 0.036, 0.457]], [0.047, [0.031, 0.045, 0.458]], [0.049, [0.031, 0.045, 0.458]], [0.051, [0.034, 0.054, 0.458]], [0.053, [0.034, 0.054, 0.458]], [0.055, [0.037, 0.063, 0.459]], [0.057, [0.037, 0.063, 0.459]], [0.059, [0.039, 0.072, 0.460]], [0.061, [0.039, 0.072, 0.460]], [0.063, [0.042, 0.081, 0.461]], [0.065, [0.042, 0.081, 0.461]], [0.067, [0.044, 0.090, 0.461]], [0.068, [0.044, 0.090, 0.461]], [0.070, [0.047, 0.099, 0.462]], [0.072, [0.047, 0.099, 0.462]], [0.074, [0.050, 0.108, 0.463]], [0.076, [0.050, 0.108, 0.463]], [0.078, [0.052, 0.117, 0.463]], [0.080, [0.052, 0.117, 0.463]], [0.082, [0.055, 0.126, 0.464]], [0.084, [0.055, 0.126, 0.464]], [0.086, [0.057, 0.135, 0.465]], [0.088, [0.057, 0.135, 0.465]], [0.090, [0.060, 0.144, 0.466]], [0.092, [0.060, 0.144, 0.466]], [0.094, [0.063, 0.153, 0.466]], [0.096, [0.063, 0.153, 0.466]], [0.098, [0.065, 0.162, 0.467]], [0.100, [0.065, 0.162, 0.467]], [0.102, [0.068, 0.171, 0.468]], [0.104, [0.068, 0.171, 0.468]], [0.106, [0.071, 0.180, 0.468]], [0.108, [0.071, 0.180, 0.468]], [0.110, [0.073, 0.189, 0.469]], [0.112, [0.073, 0.189, 0.469]], [0.114, [0.076, 0.197, 0.470]], [0.115, [0.076, 0.197, 0.470]], [0.117, [0.078, 0.206, 0.471]], [0.119, [0.078, 0.206, 0.471]], [0.121, [0.081, 0.214, 0.471]], [0.123, [0.081, 0.214, 0.471]], [0.125, [0.084, 0.222, 0.472]], [0.127, [0.084, 0.222, 0.472]], [0.129, [0.086, 0.230, 0.473]], [0.131, [0.086, 0.230, 0.473]], [0.133, [0.089, 0.238, 0.473]], [0.135, [0.089, 0.238, 0.473]], [0.137, [0.091, 0.246, 0.474]], [0.139, [0.091, 0.246, 0.474]], [0.141, [0.094, 0.255, 0.475]], [0.143, [0.094, 0.255, 0.475]], [0.145, [0.097, 0.263, 0.476]], [0.147, [0.097, 0.263, 0.476]], [0.149, [0.099, 0.271, 0.476]], [0.151, [0.099, 0.271, 0.476]], [0.153, [0.102, 0.279, 0.477]], [0.155, [0.102, 0.279, 0.477]], [0.157, [0.105, 0.287, 0.478]], [0.159, [0.105, 0.287, 0.478]], [0.160, [0.107, 0.295, 0.478]], [0.162, [0.107, 0.295, 0.478]], [0.164, [0.110, 0.304, 0.479]], [0.166, [0.110, 0.304, 0.479]], [0.168, [0.112, 0.311, 0.480]], [0.170, [0.112, 0.311, 0.480]], [0.172, [0.115, 0.318, 0.480]], [0.174, [0.115, 0.318, 0.480]], [0.176, [0.118, 0.326, 0.481]], [0.178, [0.118, 0.326, 0.481]], [0.180, [0.120, 0.333, 0.482]], [0.182, [0.120, 0.333, 0.482]], [0.184, [0.123, 0.340, 0.483]], [0.186, [0.123, 0.340, 0.483]], [0.188, [0.125, 0.348, 0.483]], [0.190, [0.125, 0.348, 0.483]], [0.192, [0.128, 0.355, 0.484]], [0.194, [0.128, 0.355, 0.484]], [0.196, [0.131, 0.362, 0.485]], [0.198, [0.131, 0.362, 0.485]], [0.200, [0.133, 0.370, 0.485]], [0.202, [0.133, 0.370, 0.485]], [0.204, [0.136, 0.377, 0.486]], [0.205, [0.136, 0.377, 0.486]], [0.207, [0.139, 0.384, 0.487]], [0.209, [0.139, 0.384, 0.487]], [0.211, [0.141, 0.390, 0.488]], [0.213, [0.141, 0.390, 0.488]], [0.215, [0.144, 0.397, 0.488]], [0.217, [0.144, 0.397, 0.488]], [0.219, [0.146, 0.403, 0.489]], [0.221, [0.146, 0.403, 0.489]], [0.223, [0.149, 0.409, 0.490]], [0.225, [0.149, 0.409, 0.490]], [0.227, [0.152, 0.415, 0.490]], [0.229, [0.152, 0.415, 0.490]], [0.231, [0.154, 0.421, 0.491]], [0.233, [0.154, 0.421, 0.491]], [0.235, [0.157, 0.428, 0.492]], [0.237, [0.157, 0.428, 0.492]], [0.239, [0.159, 0.434, 0.493]], [0.241, [0.159, 0.434, 0.493]], [0.243, [0.162, 0.440, 0.493]], [0.245, [0.162, 0.440, 0.493]], [0.247, [0.165, 0.446, 0.494]], [0.249, [0.165, 0.446, 0.494]], [0.250, [0.167, 0.452, 0.495]], [0.252, [0.167, 0.452, 0.495]], [0.254, [0.170, 0.459, 0.495]], [0.256, [0.170, 0.459, 0.495]], [0.258, [0.172, 0.465, 0.496]], [0.260, [0.172, 0.465, 0.496]], [0.262, [0.175, 0.471, 0.497]], [0.264, [0.175, 0.471, 0.497]], [0.266, [0.178, 0.477, 0.498]], [0.268, [0.178, 0.477, 0.498]], [0.270, [0.180, 0.483, 0.498]], [0.272, [0.180, 0.483, 0.498]], [0.274, [0.183, 0.490, 0.499]], [0.276, [0.183, 0.490, 0.499]], [0.278, [0.186, 0.496, 0.500]], [0.280, [0.186, 0.496, 0.500]], [0.282, [0.188, 0.502, 0.500]], [0.284, [0.188, 0.502, 0.500]], [0.286, [0.190, 0.504, 0.496]], [0.288, [0.190, 0.504, 0.496]], [0.290, [0.192, 0.506, 0.491]], [0.292, [0.192, 0.506, 0.491]], [0.294, [0.194, 0.509, 0.486]], [0.295, [0.194, 0.509, 0.486]], [0.297, [0.196, 0.511, 0.481]], [0.299, [0.196, 0.511, 0.481]], [0.301, [0.197, 0.513, 0.476]], [0.303, [0.197, 0.513, 0.476]], [0.305, [0.199, 0.516, 0.472]], [0.307, [0.199, 0.516, 0.472]], [0.309, [0.201, 0.518, 0.467]], [0.311, [0.201, 0.518, 0.467]], [0.313, [0.203, 0.520, 0.462]], [0.315, [0.203, 0.520, 0.462]], [0.317, [0.205, 0.522, 0.457]], [0.319, [0.205, 0.522, 0.457]], [0.321, [0.207, 0.525, 0.452]], [0.323, [0.207, 0.525, 0.452]], [0.325, [0.209, 0.527, 0.448]], [0.327, [0.209, 0.527, 0.448]], [0.329, [0.210, 0.529, 0.443]], [0.331, [0.210, 0.529, 0.443]], [0.333, [0.212, 0.531, 0.438]], [0.335, [0.212, 0.531, 0.438]], [0.337, [0.214, 0.534, 0.433]], [0.339, [0.214, 0.534, 0.433]], [0.341, [0.216, 0.536, 0.428]], [0.342, [0.216, 0.536, 0.428]], [0.344, [0.218, 0.538, 0.424]], [0.346, [0.218, 0.538, 0.424]], [0.348, [0.220, 0.540, 0.419]], [0.350, [0.220, 0.540, 0.419]], [0.352, [0.221, 0.543, 0.414]], [0.354, [0.221, 0.543, 0.414]], [0.356, [0.223, 0.545, 0.409]], [0.358, [0.223, 0.545, 0.409]], [0.360, [0.225, 0.547, 0.404]], [0.362, [0.225, 0.547, 0.404]], [0.364, [0.227, 0.549, 0.400]], [0.366, [0.227, 0.549, 0.400]], [0.368, [0.229, 0.552, 0.395]], [0.370, [0.229, 0.552, 0.395]], [0.372, [0.231, 0.554, 0.390]], [0.374, [0.231, 0.554, 0.390]], [0.376, [0.233, 0.556, 0.385]], [0.378, [0.233, 0.556, 0.385]], [0.380, [0.234, 0.558, 0.380]], [0.382, [0.234, 0.558, 0.380]], [0.384, [0.236, 0.561, 0.376]], [0.386, [0.236, 0.561, 0.376]], [0.387, [0.238, 0.563, 0.371]], [0.389, [0.238, 0.563, 0.371]], [0.391, [0.240, 0.565, 0.366]], [0.393, [0.240, 0.565, 0.366]], [0.395, [0.242, 0.567, 0.361]], [0.397, [0.242, 0.567, 0.361]], [0.399, [0.244, 0.570, 0.356]], [0.401, [0.244, 0.570, 0.356]], [0.403, [0.246, 0.572, 0.352]], [0.405, [0.246, 0.572, 0.352]], [0.407, [0.247, 0.574, 0.347]], [0.409, [0.247, 0.574, 0.347]], [0.411, [0.249, 0.576, 0.342]], [0.413, [0.249, 0.576, 0.342]], [0.415, [0.251, 0.579, 0.337]], [0.417, [0.251, 0.579, 0.337]], [0.419, [0.253, 0.581, 0.332]], [0.421, [0.253, 0.581, 0.332]], [0.423, [0.255, 0.583, 0.328]], [0.425, [0.255, 0.583, 0.328]], [0.427, [0.257, 0.586, 0.323]], [0.429, [0.257, 0.586, 0.323]], [0.431, [0.258, 0.588, 0.318]], [0.432, [0.258, 0.588, 0.318]], [0.434, [0.260, 0.590, 0.313]], [0.436, [0.260, 0.590, 0.313]], [0.438, [0.262, 0.592, 0.308]], [0.440, [0.262, 0.592, 0.308]], [0.442, [0.264, 0.595, 0.304]], [0.444, [0.264, 0.595, 0.304]], [0.446, [0.266, 0.597, 0.299]], [0.448, [0.266, 0.597, 0.299]], [0.450, [0.268, 0.599, 0.294]], [0.452, [0.268, 0.599, 0.294]], [0.454, [0.270, 0.601, 0.289]], [0.456, [0.270, 0.601, 0.289]], [0.458, [0.271, 0.604, 0.284]], [0.460, [0.271, 0.604, 0.284]], [0.462, [0.280, 0.606, 0.280]], [0.464, [0.280, 0.606, 0.280]], [0.466, [0.289, 0.608, 0.275]], [0.468, [0.289, 0.608, 0.275]], [0.470, [0.298, 0.610, 0.277]], [0.472, [0.298, 0.610, 0.277]], [0.474, [0.306, 0.613, 0.279]], [0.476, [0.306, 0.613, 0.279]], [0.477, [0.315, 0.615, 0.282]], [0.479, [0.315, 0.615, 0.282]], [0.481, [0.324, 0.617, 0.284]], [0.483, [0.324, 0.617, 0.284]], [0.485, [0.332, 0.619, 0.286]], [0.487, [0.332, 0.619, 0.286]], [0.489, [0.341, 0.622, 0.288]], [0.491, [0.341, 0.622, 0.288]], [0.493, [0.350, 0.624, 0.291]], [0.495, [0.350, 0.624, 0.291]], [0.497, [0.359, 0.626, 0.293]], [0.499, [0.359, 0.626, 0.293]], [0.501, [0.367, 0.628, 0.295]], [0.503, [0.367, 0.628, 0.295]], [0.505, [0.376, 0.631, 0.298]], [0.507, [0.376, 0.631, 0.298]], [0.509, [0.385, 0.633, 0.300]], [0.511, [0.385, 0.633, 0.300]], [0.513, [0.393, 0.635, 0.302]], [0.515, [0.393, 0.635, 0.302]], [0.517, [0.402, 0.637, 0.304]], [0.519, [0.402, 0.637, 0.304]], [0.521, [0.411, 0.640, 0.307]], [0.523, [0.411, 0.640, 0.307]], [0.524, [0.420, 0.641, 0.309]], [0.526, [0.420, 0.641, 0.309]], [0.528, [0.428, 0.643, 0.311]], [0.530, [0.428, 0.643, 0.311]], [0.532, [0.437, 0.645, 0.314]], [0.534, [0.437, 0.645, 0.314]], [0.536, [0.446, 0.647, 0.316]], [0.538, [0.446, 0.647, 0.316]], [0.540, [0.455, 0.648, 0.318]], [0.542, [0.455, 0.648, 0.318]], [0.544, [0.463, 0.650, 0.320]], [0.546, [0.463, 0.650, 0.320]], [0.548, [0.472, 0.652, 0.322]], [0.550, [0.472, 0.652, 0.322]], [0.552, [0.478, 0.653, 0.323]], [0.554, [0.478, 0.653, 0.323]], [0.556, [0.485, 0.655, 0.324]], [0.558, [0.485, 0.655, 0.324]], [0.560, [0.491, 0.657, 0.325]], [0.562, [0.491, 0.657, 0.325]], [0.564, [0.498, 0.659, 0.327]], [0.566, [0.498, 0.659, 0.327]], [0.568, [0.504, 0.660, 0.328]], [0.569, [0.504, 0.660, 0.328]], [0.571, [0.511, 0.662, 0.329]], [0.573, [0.511, 0.662, 0.329]], [0.575, [0.517, 0.664, 0.330]], [0.577, [0.517, 0.664, 0.330]], [0.579, [0.524, 0.665, 0.332]], [0.581, [0.524, 0.665, 0.332]], [0.583, [0.530, 0.667, 0.333]], [0.585, [0.530, 0.667, 0.333]], [0.587, [0.537, 0.669, 0.334]], [0.589, [0.537, 0.669, 0.334]], [0.591, [0.543, 0.671, 0.335]], [0.593, [0.543, 0.671, 0.335]], [0.595, [0.550, 0.672, 0.337]], [0.597, [0.550, 0.672, 0.337]], [0.599, [0.556, 0.674, 0.338]], [0.601, [0.556, 0.674, 0.338]], [0.603, [0.562, 0.676, 0.339]], [0.605, [0.562, 0.676, 0.339]], [0.607, [0.569, 0.678, 0.340]], [0.609, [0.569, 0.678, 0.340]], [0.611, [0.575, 0.679, 0.342]], [0.613, [0.575, 0.679, 0.342]], [0.614, [0.582, 0.681, 0.343]], [0.616, [0.582, 0.681, 0.343]], [0.618, [0.588, 0.683, 0.344]], [0.620, [0.588, 0.683, 0.344]], [0.622, [0.595, 0.684, 0.345]], [0.624, [0.595, 0.684, 0.345]], [0.626, [0.601, 0.686, 0.347]], [0.628, [0.601, 0.686, 0.347]], [0.630, [0.608, 0.688, 0.348]], [0.632, [0.608, 0.688, 0.348]], [0.634, [0.614, 0.690, 0.349]], [0.636, [0.614, 0.690, 0.349]], [0.638, [0.621, 0.691, 0.350]], [0.640, [0.621, 0.691, 0.350]], [0.642, [0.627, 0.693, 0.351]], [0.644, [0.627, 0.693, 0.351]], [0.646, [0.634, 0.695, 0.353]], [0.648, [0.634, 0.695, 0.353]], [0.650, [0.640, 0.696, 0.354]], [0.652, [0.640, 0.696, 0.354]], [0.654, [0.647, 0.698, 0.355]], [0.656, [0.647, 0.698, 0.355]], [0.658, [0.653, 0.700, 0.356]], [0.659, [0.653, 0.700, 0.356]], [0.661, [0.659, 0.702, 0.358]], [0.663, [0.659, 0.702, 0.358]], [0.665, [0.666, 0.703, 0.359]], [0.667, [0.666, 0.703, 0.359]], [0.669, [0.672, 0.705, 0.360]], [0.671, [0.672, 0.705, 0.360]], [0.673, [0.679, 0.707, 0.361]], [0.675, [0.679, 0.707, 0.361]], [0.677, [0.685, 0.709, 0.363]], [0.679, [0.685, 0.709, 0.363]], [0.681, [0.692, 0.710, 0.364]], [0.683, [0.692, 0.710, 0.364]], [0.685, [0.698, 0.712, 0.365]], [0.687, [0.698, 0.712, 0.365]], [0.689, [0.705, 0.714, 0.366]], [0.691, [0.705, 0.714, 0.366]], [0.693, [0.711, 0.715, 0.368]], [0.695, [0.711, 0.715, 0.368]], [0.697, [0.718, 0.717, 0.369]], [0.699, [0.718, 0.717, 0.369]], [0.701, [0.719, 0.714, 0.370]], [0.703, [0.719, 0.714, 0.370]], [0.705, [0.721, 0.710, 0.371]], [0.706, [0.721, 0.710, 0.371]], [0.708, [0.723, 0.707, 0.373]], [0.710, [0.723, 0.707, 0.373]], [0.712, [0.724, 0.704, 0.374]], [0.714, [0.724, 0.704, 0.374]], [0.716, [0.726, 0.700, 0.375]], [0.718, [0.726, 0.700, 0.375]], [0.720, [0.727, 0.697, 0.376]], [0.722, [0.727, 0.697, 0.376]], [0.724, [0.729, 0.693, 0.378]], [0.726, [0.729, 0.693, 0.378]], [0.728, [0.731, 0.690, 0.379]], [0.730, [0.731, 0.690, 0.379]], [0.732, [0.732, 0.687, 0.380]], [0.734, [0.732, 0.687, 0.380]], [0.736, [0.734, 0.683, 0.381]], [0.738, [0.734, 0.683, 0.381]], [0.740, [0.736, 0.680, 0.382]], [0.742, [0.736, 0.680, 0.382]], [0.744, [0.737, 0.676, 0.384]], [0.746, [0.737, 0.676, 0.384]], [0.748, [0.739, 0.673, 0.385]], [0.750, [0.739, 0.673, 0.385]], [0.751, [0.741, 0.670, 0.386]], [0.753, [0.741, 0.670, 0.386]], [0.755, [0.742, 0.666, 0.387]], [0.757, [0.742, 0.666, 0.387]], [0.759, [0.744, 0.663, 0.389]], [0.761, [0.744, 0.663, 0.389]], [0.763, [0.745, 0.659, 0.390]], [0.765, [0.745, 0.659, 0.390]], [0.767, [0.747, 0.656, 0.391]], [0.769, [0.747, 0.656, 0.391]], [0.771, [0.749, 0.653, 0.392]], [0.773, [0.749, 0.653, 0.392]], [0.775, [0.750, 0.649, 0.394]], [0.777, [0.750, 0.649, 0.394]], [0.779, [0.752, 0.646, 0.395]], [0.781, [0.752, 0.646, 0.395]], [0.783, [0.754, 0.643, 0.396]], [0.785, [0.754, 0.643, 0.396]], [0.787, [0.755, 0.639, 0.406]], [0.789, [0.755, 0.639, 0.406]], [0.791, [0.760, 0.641, 0.415]], [0.793, [0.760, 0.641, 0.415]], [0.795, [0.764, 0.643, 0.425]], [0.796, [0.764, 0.643, 0.425]], [0.798, [0.768, 0.645, 0.435]], [0.800, [0.768, 0.645, 0.435]], [0.802, [0.773, 0.646, 0.444]], [0.804, [0.773, 0.646, 0.444]], [0.806, [0.777, 0.648, 0.454]], [0.808, [0.777, 0.648, 0.454]], [0.810, [0.782, 0.652, 0.463]], [0.812, [0.782, 0.652, 0.463]], [0.814, [0.786, 0.655, 0.473]], [0.816, [0.786, 0.655, 0.473]], [0.818, [0.790, 0.658, 0.483]], [0.820, [0.790, 0.658, 0.483]], [0.822, [0.795, 0.662, 0.492]], [0.824, [0.795, 0.662, 0.492]], [0.826, [0.799, 0.665, 0.502]], [0.828, [0.799, 0.665, 0.502]], [0.830, [0.804, 0.668, 0.511]], [0.832, [0.804, 0.668, 0.511]], [0.834, [0.808, 0.672, 0.521]], [0.836, [0.808, 0.672, 0.521]], [0.838, [0.812, 0.675, 0.531]], [0.840, [0.812, 0.675, 0.531]], [0.841, [0.817, 0.679, 0.540]], [0.843, [0.817, 0.679, 0.540]], [0.845, [0.821, 0.682, 0.550]], [0.847, [0.821, 0.682, 0.550]], [0.849, [0.826, 0.685, 0.559]], [0.851, [0.826, 0.685, 0.559]], [0.853, [0.830, 0.689, 0.569]], [0.855, [0.830, 0.689, 0.569]], [0.857, [0.834, 0.692, 0.579]], [0.859, [0.834, 0.692, 0.579]], [0.861, [0.839, 0.696, 0.588]], [0.863, [0.839, 0.696, 0.588]], [0.865, [0.843, 0.699, 0.598]], [0.867, [0.843, 0.699, 0.598]], [0.869, [0.847, 0.705, 0.607]], [0.871, [0.847, 0.705, 0.607]], [0.873, [0.852, 0.710, 0.617]], [0.875, [0.852, 0.710, 0.617]], [0.877, [0.856, 0.716, 0.627]], [0.879, [0.856, 0.716, 0.627]], [0.881, [0.861, 0.722, 0.636]], [0.883, [0.861, 0.722, 0.636]], [0.885, [0.865, 0.727, 0.646]], [0.886, [0.865, 0.727, 0.646]], [0.888, [0.869, 0.732, 0.656]], [0.890, [0.869, 0.732, 0.656]], [0.892, [0.874, 0.738, 0.665]], [0.894, [0.874, 0.738, 0.665]], [0.896, [0.878, 0.743, 0.677]], [0.898, [0.878, 0.743, 0.677]], [0.900, [0.883, 0.751, 0.689]], [0.902, [0.883, 0.751, 0.689]], [0.904, [0.887, 0.758, 0.701]], [0.906, [0.887, 0.758, 0.701]], [0.908, [0.891, 0.766, 0.712]], [0.910, [0.891, 0.766, 0.712]], [0.912, [0.896, 0.774, 0.724]], [0.914, [0.896, 0.774, 0.724]], [0.916, [0.900, 0.781, 0.736]], [0.918, [0.900, 0.781, 0.736]], [0.920, [0.904, 0.789, 0.748]], [0.922, [0.904, 0.789, 0.748]], [0.924, [0.909, 0.797, 0.760]], [0.926, [0.909, 0.797, 0.760]], [0.928, [0.913, 0.804, 0.772]], [0.930, [0.913, 0.804, 0.772]], [0.932, [0.918, 0.812, 0.783]], [0.933, [0.918, 0.812, 0.783]], [0.935, [0.922, 0.820, 0.795]], [0.937, [0.922, 0.820, 0.795]], [0.939, [0.926, 0.827, 0.807]], [0.941, [0.926, 0.827, 0.807]], [0.943, [0.931, 0.836, 0.819]], [0.945, [0.931, 0.836, 0.819]], [0.947, [0.935, 0.845, 0.831]], [0.949, [0.935, 0.845, 0.831]], [0.951, [0.940, 0.854, 0.842]], [0.953, [0.940, 0.854, 0.842]], [0.955, [0.944, 0.863, 0.854]], [0.957, [0.944, 0.863, 0.854]], [0.959, [0.948, 0.873, 0.866]], [0.961, [0.948, 0.873, 0.866]], [0.963, [0.953, 0.882, 0.878]], [0.965, [0.953, 0.882, 0.878]], [0.967, [0.957, 0.893, 0.890]], [0.969, [0.957, 0.893, 0.890]], [0.971, [0.961, 0.905, 0.902]], [0.973, [0.961, 0.905, 0.902]], [0.975, [0.966, 0.916, 0.913]], [0.977, [0.966, 0.916, 0.913]], [0.978, [0.970, 0.927, 0.925]], [0.980, [0.970, 0.927, 0.925]], [0.982, [0.975, 0.939, 0.937]], [0.984, [0.975, 0.939, 0.937]], [0.986, [0.979, 0.950, 0.949]], [0.988, [0.979, 0.950, 0.949]], [0.990, [0.983, 0.962, 0.961]], [0.992, [0.983, 0.962, 0.961]], [0.994, [0.988, 0.973, 0.972]], [0.996, [0.988, 0.973, 0.972]], [0.998, [0.992, 0.984, 0.984]], [1.000, [0.992, 0.984, 0.984]]];
H.colormap_gist_heat = [[0.000, [0.000, 0.000, 0.000]], [0.002, [0.000, 0.000, 0.000]], [0.004, [0.006, 0.000, 0.000]], [0.006, [0.006, 0.000, 0.000]], [0.008, [0.012, 0.000, 0.000]], [0.010, [0.012, 0.000, 0.000]], [0.012, [0.018, 0.000, 0.000]], [0.014, [0.018, 0.000, 0.000]], [0.016, [0.024, 0.000, 0.000]], [0.018, [0.024, 0.000, 0.000]], [0.020, [0.029, 0.000, 0.000]], [0.022, [0.029, 0.000, 0.000]], [0.023, [0.035, 0.000, 0.000]], [0.025, [0.035, 0.000, 0.000]], [0.027, [0.041, 0.000, 0.000]], [0.029, [0.041, 0.000, 0.000]], [0.031, [0.047, 0.000, 0.000]], [0.033, [0.047, 0.000, 0.000]], [0.035, [0.053, 0.000, 0.000]], [0.037, [0.053, 0.000, 0.000]], [0.039, [0.059, 0.000, 0.000]], [0.041, [0.059, 0.000, 0.000]], [0.043, [0.065, 0.000, 0.000]], [0.045, [0.065, 0.000, 0.000]], [0.047, [0.071, 0.000, 0.000]], [0.049, [0.071, 0.000, 0.000]], [0.051, [0.076, 0.000, 0.000]], [0.053, [0.076, 0.000, 0.000]], [0.055, [0.082, 0.000, 0.000]], [0.057, [0.082, 0.000, 0.000]], [0.059, [0.088, 0.000, 0.000]], [0.061, [0.088, 0.000, 0.000]], [0.063, [0.094, 0.000, 0.000]], [0.065, [0.094, 0.000, 0.000]], [0.067, [0.100, 0.000, 0.000]], [0.068, [0.100, 0.000, 0.000]], [0.070, [0.106, 0.000, 0.000]], [0.072, [0.106, 0.000, 0.000]], [0.074, [0.112, 0.000, 0.000]], [0.076, [0.112, 0.000, 0.000]], [0.078, [0.118, 0.000, 0.000]], [0.080, [0.118, 0.000, 0.000]], [0.082, [0.124, 0.000, 0.000]], [0.084, [0.124, 0.000, 0.000]], [0.086, [0.129, 0.000, 0.000]], [0.088, [0.129, 0.000, 0.000]], [0.090, [0.135, 0.000, 0.000]], [0.092, [0.135, 0.000, 0.000]], [0.094, [0.141, 0.000, 0.000]], [0.096, [0.141, 0.000, 0.000]], [0.098, [0.147, 0.000, 0.000]], [0.100, [0.147, 0.000, 0.000]], [0.102, [0.153, 0.000, 0.000]], [0.104, [0.153, 0.000, 0.000]], [0.106, [0.159, 0.000, 0.000]], [0.108, [0.159, 0.000, 0.000]], [0.110, [0.165, 0.000, 0.000]], [0.112, [0.165, 0.000, 0.000]], [0.114, [0.171, 0.000, 0.000]], [0.115, [0.171, 0.000, 0.000]], [0.117, [0.176, 0.000, 0.000]], [0.119, [0.176, 0.000, 0.000]], [0.121, [0.182, 0.000, 0.000]], [0.123, [0.182, 0.000, 0.000]], [0.125, [0.188, 0.000, 0.000]], [0.127, [0.188, 0.000, 0.000]], [0.129, [0.194, 0.000, 0.000]], [0.131, [0.194, 0.000, 0.000]], [0.133, [0.200, 0.000, 0.000]], [0.135, [0.200, 0.000, 0.000]], [0.137, [0.206, 0.000, 0.000]], [0.139, [0.206, 0.000, 0.000]], [0.141, [0.212, 0.000, 0.000]], [0.143, [0.212, 0.000, 0.000]], [0.145, [0.218, 0.000, 0.000]], [0.147, [0.218, 0.000, 0.000]], [0.149, [0.224, 0.000, 0.000]], [0.151, [0.224, 0.000, 0.000]], [0.153, [0.229, 0.000, 0.000]], [0.155, [0.229, 0.000, 0.000]], [0.157, [0.235, 0.000, 0.000]], [0.159, [0.235, 0.000, 0.000]], [0.160, [0.241, 0.000, 0.000]], [0.162, [0.241, 0.000, 0.000]], [0.164, [0.247, 0.000, 0.000]], [0.166, [0.247, 0.000, 0.000]], [0.168, [0.253, 0.000, 0.000]], [0.170, [0.253, 0.000, 0.000]], [0.172, [0.259, 0.000, 0.000]], [0.174, [0.259, 0.000, 0.000]], [0.176, [0.265, 0.000, 0.000]], [0.178, [0.265, 0.000, 0.000]], [0.180, [0.271, 0.000, 0.000]], [0.182, [0.271, 0.000, 0.000]], [0.184, [0.276, 0.000, 0.000]], [0.186, [0.276, 0.000, 0.000]], [0.188, [0.282, 0.000, 0.000]], [0.190, [0.282, 0.000, 0.000]], [0.192, [0.288, 0.000, 0.000]], [0.194, [0.288, 0.000, 0.000]], [0.196, [0.294, 0.000, 0.000]], [0.198, [0.294, 0.000, 0.000]], [0.200, [0.300, 0.000, 0.000]], [0.202, [0.300, 0.000, 0.000]], [0.204, [0.306, 0.000, 0.000]], [0.205, [0.306, 0.000, 0.000]], [0.207, [0.312, 0.000, 0.000]], [0.209, [0.312, 0.000, 0.000]], [0.211, [0.318, 0.000, 0.000]], [0.213, [0.318, 0.000, 0.000]], [0.215, [0.324, 0.000, 0.000]], [0.217, [0.324, 0.000, 0.000]], [0.219, [0.329, 0.000, 0.000]], [0.221, [0.329, 0.000, 0.000]], [0.223, [0.335, 0.000, 0.000]], [0.225, [0.335, 0.000, 0.000]], [0.227, [0.341, 0.000, 0.000]], [0.229, [0.341, 0.000, 0.000]], [0.231, [0.347, 0.000, 0.000]], [0.233, [0.347, 0.000, 0.000]], [0.235, [0.353, 0.000, 0.000]], [0.237, [0.353, 0.000, 0.000]], [0.239, [0.359, 0.000, 0.000]], [0.241, [0.359, 0.000, 0.000]], [0.243, [0.365, 0.000, 0.000]], [0.245, [0.365, 0.000, 0.000]], [0.247, [0.371, 0.000, 0.000]], [0.249, [0.371, 0.000, 0.000]], [0.250, [0.376, 0.000, 0.000]], [0.252, [0.376, 0.000, 0.000]], [0.254, [0.382, 0.000, 0.000]], [0.256, [0.382, 0.000, 0.000]], [0.258, [0.388, 0.000, 0.000]], [0.260, [0.388, 0.000, 0.000]], [0.262, [0.394, 0.000, 0.000]], [0.264, [0.394, 0.000, 0.000]], [0.266, [0.400, 0.000, 0.000]], [0.268, [0.400, 0.000, 0.000]], [0.270, [0.406, 0.000, 0.000]], [0.272, [0.406, 0.000, 0.000]], [0.274, [0.412, 0.000, 0.000]], [0.276, [0.412, 0.000, 0.000]], [0.278, [0.418, 0.000, 0.000]], [0.280, [0.418, 0.000, 0.000]], [0.282, [0.424, 0.000, 0.000]], [0.284, [0.424, 0.000, 0.000]], [0.286, [0.429, 0.000, 0.000]], [0.288, [0.429, 0.000, 0.000]], [0.290, [0.435, 0.000, 0.000]], [0.292, [0.435, 0.000, 0.000]], [0.294, [0.441, 0.000, 0.000]], [0.295, [0.441, 0.000, 0.000]], [0.297, [0.447, 0.000, 0.000]], [0.299, [0.447, 0.000, 0.000]], [0.301, [0.453, 0.000, 0.000]], [0.303, [0.453, 0.000, 0.000]], [0.305, [0.459, 0.000, 0.000]], [0.307, [0.459, 0.000, 0.000]], [0.309, [0.465, 0.000, 0.000]], [0.311, [0.465, 0.000, 0.000]], [0.313, [0.471, 0.000, 0.000]], [0.315, [0.471, 0.000, 0.000]], [0.317, [0.476, 0.000, 0.000]], [0.319, [0.476, 0.000, 0.000]], [0.321, [0.482, 0.000, 0.000]], [0.323, [0.482, 0.000, 0.000]], [0.325, [0.488, 0.000, 0.000]], [0.327, [0.488, 0.000, 0.000]], [0.329, [0.494, 0.000, 0.000]], [0.331, [0.494, 0.000, 0.000]], [0.333, [0.500, 0.000, 0.000]], [0.335, [0.500, 0.000, 0.000]], [0.337, [0.506, 0.000, 0.000]], [0.339, [0.506, 0.000, 0.000]], [0.341, [0.512, 0.000, 0.000]], [0.342, [0.512, 0.000, 0.000]], [0.344, [0.518, 0.000, 0.000]], [0.346, [0.518, 0.000, 0.000]], [0.348, [0.524, 0.000, 0.000]], [0.350, [0.524, 0.000, 0.000]], [0.352, [0.529, 0.000, 0.000]], [0.354, [0.529, 0.000, 0.000]], [0.356, [0.535, 0.000, 0.000]], [0.358, [0.535, 0.000, 0.000]], [0.360, [0.541, 0.000, 0.000]], [0.362, [0.541, 0.000, 0.000]], [0.364, [0.547, 0.000, 0.000]], [0.366, [0.547, 0.000, 0.000]], [0.368, [0.553, 0.000, 0.000]], [0.370, [0.553, 0.000, 0.000]], [0.372, [0.559, 0.000, 0.000]], [0.374, [0.559, 0.000, 0.000]], [0.376, [0.565, 0.000, 0.000]], [0.378, [0.565, 0.000, 0.000]], [0.380, [0.571, 0.000, 0.000]], [0.382, [0.571, 0.000, 0.000]], [0.384, [0.576, 0.000, 0.000]], [0.386, [0.576, 0.000, 0.000]], [0.387, [0.582, 0.000, 0.000]], [0.389, [0.582, 0.000, 0.000]], [0.391, [0.588, 0.000, 0.000]], [0.393, [0.588, 0.000, 0.000]], [0.395, [0.594, 0.000, 0.000]], [0.397, [0.594, 0.000, 0.000]], [0.399, [0.600, 0.000, 0.000]], [0.401, [0.600, 0.000, 0.000]], [0.403, [0.606, 0.000, 0.000]], [0.405, [0.606, 0.000, 0.000]], [0.407, [0.612, 0.000, 0.000]], [0.409, [0.612, 0.000, 0.000]], [0.411, [0.618, 0.000, 0.000]], [0.413, [0.618, 0.000, 0.000]], [0.415, [0.624, 0.000, 0.000]], [0.417, [0.624, 0.000, 0.000]], [0.419, [0.629, 0.000, 0.000]], [0.421, [0.629, 0.000, 0.000]], [0.423, [0.635, 0.000, 0.000]], [0.425, [0.635, 0.000, 0.000]], [0.427, [0.641, 0.000, 0.000]], [0.429, [0.641, 0.000, 0.000]], [0.431, [0.647, 0.000, 0.000]], [0.432, [0.647, 0.000, 0.000]], [0.434, [0.653, 0.000, 0.000]], [0.436, [0.653, 0.000, 0.000]], [0.438, [0.659, 0.000, 0.000]], [0.440, [0.659, 0.000, 0.000]], [0.442, [0.665, 0.000, 0.000]], [0.444, [0.665, 0.000, 0.000]], [0.446, [0.671, 0.000, 0.000]], [0.448, [0.671, 0.000, 0.000]], [0.450, [0.676, 0.000, 0.000]], [0.452, [0.676, 0.000, 0.000]], [0.454, [0.682, 0.000, 0.000]], [0.456, [0.682, 0.000, 0.000]], [0.458, [0.688, 0.000, 0.000]], [0.460, [0.688, 0.000, 0.000]], [0.462, [0.694, 0.000, 0.000]], [0.464, [0.694, 0.000, 0.000]], [0.466, [0.700, 0.000, 0.000]], [0.468, [0.700, 0.000, 0.000]], [0.470, [0.706, 0.000, 0.000]], [0.472, [0.706, 0.000, 0.000]], [0.474, [0.712, 0.000, 0.000]], [0.476, [0.712, 0.000, 0.000]], [0.477, [0.718, 0.000, 0.000]], [0.479, [0.718, 0.000, 0.000]], [0.481, [0.724, 0.000, 0.000]], [0.483, [0.724, 0.000, 0.000]], [0.485, [0.729, 0.000, 0.000]], [0.487, [0.729, 0.000, 0.000]], [0.489, [0.735, 0.000, 0.000]], [0.491, [0.735, 0.000, 0.000]], [0.493, [0.741, 0.000, 0.000]], [0.495, [0.741, 0.000, 0.000]], [0.497, [0.747, 0.000, 0.000]], [0.499, [0.747, 0.000, 0.000]], [0.501, [0.753, 0.004, 0.000]], [0.503, [0.753, 0.004, 0.000]], [0.505, [0.759, 0.012, 0.000]], [0.507, [0.759, 0.012, 0.000]], [0.509, [0.765, 0.020, 0.000]], [0.511, [0.765, 0.020, 0.000]], [0.513, [0.771, 0.027, 0.000]], [0.515, [0.771, 0.027, 0.000]], [0.517, [0.776, 0.035, 0.000]], [0.519, [0.776, 0.035, 0.000]], [0.521, [0.782, 0.043, 0.000]], [0.523, [0.782, 0.043, 0.000]], [0.524, [0.788, 0.051, 0.000]], [0.526, [0.788, 0.051, 0.000]], [0.528, [0.794, 0.059, 0.000]], [0.530, [0.794, 0.059, 0.000]], [0.532, [0.800, 0.067, 0.000]], [0.534, [0.800, 0.067, 0.000]], [0.536, [0.806, 0.075, 0.000]], [0.538, [0.806, 0.075, 0.000]], [0.540, [0.812, 0.082, 0.000]], [0.542, [0.812, 0.082, 0.000]], [0.544, [0.818, 0.090, 0.000]], [0.546, [0.818, 0.090, 0.000]], [0.548, [0.824, 0.098, 0.000]], [0.550, [0.824, 0.098, 0.000]], [0.552, [0.829, 0.106, 0.000]], [0.554, [0.829, 0.106, 0.000]], [0.556, [0.835, 0.114, 0.000]], [0.558, [0.835, 0.114, 0.000]], [0.560, [0.841, 0.122, 0.000]], [0.562, [0.841, 0.122, 0.000]], [0.564, [0.847, 0.129, 0.000]], [0.566, [0.847, 0.129, 0.000]], [0.568, [0.853, 0.137, 0.000]], [0.569, [0.853, 0.137, 0.000]], [0.571, [0.859, 0.145, 0.000]], [0.573, [0.859, 0.145, 0.000]], [0.575, [0.865, 0.153, 0.000]], [0.577, [0.865, 0.153, 0.000]], [0.579, [0.871, 0.161, 0.000]], [0.581, [0.871, 0.161, 0.000]], [0.583, [0.876, 0.169, 0.000]], [0.585, [0.876, 0.169, 0.000]], [0.587, [0.882, 0.176, 0.000]], [0.589, [0.882, 0.176, 0.000]], [0.591, [0.888, 0.184, 0.000]], [0.593, [0.888, 0.184, 0.000]], [0.595, [0.894, 0.192, 0.000]], [0.597, [0.894, 0.192, 0.000]], [0.599, [0.900, 0.200, 0.000]], [0.601, [0.900, 0.200, 0.000]], [0.603, [0.906, 0.208, 0.000]], [0.605, [0.906, 0.208, 0.000]], [0.607, [0.912, 0.216, 0.000]], [0.609, [0.912, 0.216, 0.000]], [0.611, [0.918, 0.224, 0.000]], [0.613, [0.918, 0.224, 0.000]], [0.614, [0.924, 0.231, 0.000]], [0.616, [0.924, 0.231, 0.000]], [0.618, [0.929, 0.239, 0.000]], [0.620, [0.929, 0.239, 0.000]], [0.622, [0.935, 0.247, 0.000]], [0.624, [0.935, 0.247, 0.000]], [0.626, [0.941, 0.255, 0.000]], [0.628, [0.941, 0.255, 0.000]], [0.630, [0.947, 0.263, 0.000]], [0.632, [0.947, 0.263, 0.000]], [0.634, [0.953, 0.271, 0.000]], [0.636, [0.953, 0.271, 0.000]], [0.638, [0.959, 0.278, 0.000]], [0.640, [0.959, 0.278, 0.000]], [0.642, [0.965, 0.286, 0.000]], [0.644, [0.965, 0.286, 0.000]], [0.646, [0.971, 0.294, 0.000]], [0.648, [0.971, 0.294, 0.000]], [0.650, [0.976, 0.302, 0.000]], [0.652, [0.976, 0.302, 0.000]], [0.654, [0.982, 0.310, 0.000]], [0.656, [0.982, 0.310, 0.000]], [0.658, [0.988, 0.318, 0.000]], [0.659, [0.988, 0.318, 0.000]], [0.661, [0.994, 0.325, 0.000]], [0.663, [0.994, 0.325, 0.000]], [0.665, [1.000, 0.333, 0.000]], [0.667, [1.000, 0.333, 0.000]], [0.669, [1.000, 0.341, 0.000]], [0.671, [1.000, 0.341, 0.000]], [0.673, [1.000, 0.349, 0.000]], [0.675, [1.000, 0.349, 0.000]], [0.677, [1.000, 0.357, 0.000]], [0.679, [1.000, 0.357, 0.000]], [0.681, [1.000, 0.365, 0.000]], [0.683, [1.000, 0.365, 0.000]], [0.685, [1.000, 0.373, 0.000]], [0.687, [1.000, 0.373, 0.000]], [0.689, [1.000, 0.380, 0.000]], [0.691, [1.000, 0.380, 0.000]], [0.693, [1.000, 0.388, 0.000]], [0.695, [1.000, 0.388, 0.000]], [0.697, [1.000, 0.396, 0.000]], [0.699, [1.000, 0.396, 0.000]], [0.701, [1.000, 0.404, 0.000]], [0.703, [1.000, 0.404, 0.000]], [0.705, [1.000, 0.412, 0.000]], [0.706, [1.000, 0.412, 0.000]], [0.708, [1.000, 0.420, 0.000]], [0.710, [1.000, 0.420, 0.000]], [0.712, [1.000, 0.427, 0.000]], [0.714, [1.000, 0.427, 0.000]], [0.716, [1.000, 0.435, 0.000]], [0.718, [1.000, 0.435, 0.000]], [0.720, [1.000, 0.443, 0.000]], [0.722, [1.000, 0.443, 0.000]], [0.724, [1.000, 0.451, 0.000]], [0.726, [1.000, 0.451, 0.000]], [0.728, [1.000, 0.459, 0.000]], [0.730, [1.000, 0.459, 0.000]], [0.732, [1.000, 0.467, 0.000]], [0.734, [1.000, 0.467, 0.000]], [0.736, [1.000, 0.475, 0.000]], [0.738, [1.000, 0.475, 0.000]], [0.740, [1.000, 0.482, 0.000]], [0.742, [1.000, 0.482, 0.000]], [0.744, [1.000, 0.490, 0.000]], [0.746, [1.000, 0.490, 0.000]], [0.748, [1.000, 0.498, 0.000]], [0.750, [1.000, 0.498, 0.000]], [0.751, [1.000, 0.506, 0.012]], [0.753, [1.000, 0.506, 0.012]], [0.755, [1.000, 0.514, 0.027]], [0.757, [1.000, 0.514, 0.027]], [0.759, [1.000, 0.522, 0.043]], [0.761, [1.000, 0.522, 0.043]], [0.763, [1.000, 0.529, 0.059]], [0.765, [1.000, 0.529, 0.059]], [0.767, [1.000, 0.537, 0.075]], [0.769, [1.000, 0.537, 0.075]], [0.771, [1.000, 0.545, 0.090]], [0.773, [1.000, 0.545, 0.090]], [0.775, [1.000, 0.553, 0.106]], [0.777, [1.000, 0.553, 0.106]], [0.779, [1.000, 0.561, 0.122]], [0.781, [1.000, 0.561, 0.122]], [0.783, [1.000, 0.569, 0.137]], [0.785, [1.000, 0.569, 0.137]], [0.787, [1.000, 0.576, 0.153]], [0.789, [1.000, 0.576, 0.153]], [0.791, [1.000, 0.584, 0.169]], [0.793, [1.000, 0.584, 0.169]], [0.795, [1.000, 0.592, 0.184]], [0.796, [1.000, 0.592, 0.184]], [0.798, [1.000, 0.600, 0.200]], [0.800, [1.000, 0.600, 0.200]], [0.802, [1.000, 0.608, 0.216]], [0.804, [1.000, 0.608, 0.216]], [0.806, [1.000, 0.616, 0.231]], [0.808, [1.000, 0.616, 0.231]], [0.810, [1.000, 0.624, 0.247]], [0.812, [1.000, 0.624, 0.247]], [0.814, [1.000, 0.631, 0.263]], [0.816, [1.000, 0.631, 0.263]], [0.818, [1.000, 0.639, 0.278]], [0.820, [1.000, 0.639, 0.278]], [0.822, [1.000, 0.647, 0.294]], [0.824, [1.000, 0.647, 0.294]], [0.826, [1.000, 0.655, 0.310]], [0.828, [1.000, 0.655, 0.310]], [0.830, [1.000, 0.663, 0.325]], [0.832, [1.000, 0.663, 0.325]], [0.834, [1.000, 0.671, 0.341]], [0.836, [1.000, 0.671, 0.341]], [0.838, [1.000, 0.678, 0.357]], [0.840, [1.000, 0.678, 0.357]], [0.841, [1.000, 0.686, 0.373]], [0.843, [1.000, 0.686, 0.373]], [0.845, [1.000, 0.694, 0.388]], [0.847, [1.000, 0.694, 0.388]], [0.849, [1.000, 0.702, 0.404]], [0.851, [1.000, 0.702, 0.404]], [0.853, [1.000, 0.710, 0.420]], [0.855, [1.000, 0.710, 0.420]], [0.857, [1.000, 0.718, 0.435]], [0.859, [1.000, 0.718, 0.435]], [0.861, [1.000, 0.725, 0.451]], [0.863, [1.000, 0.725, 0.451]], [0.865, [1.000, 0.733, 0.467]], [0.867, [1.000, 0.733, 0.467]], [0.869, [1.000, 0.741, 0.482]], [0.871, [1.000, 0.741, 0.482]], [0.873, [1.000, 0.749, 0.498]], [0.875, [1.000, 0.749, 0.498]], [0.877, [1.000, 0.757, 0.514]], [0.879, [1.000, 0.757, 0.514]], [0.881, [1.000, 0.765, 0.529]], [0.883, [1.000, 0.765, 0.529]], [0.885, [1.000, 0.773, 0.545]], [0.886, [1.000, 0.773, 0.545]], [0.888, [1.000, 0.780, 0.561]], [0.890, [1.000, 0.780, 0.561]], [0.892, [1.000, 0.788, 0.576]], [0.894, [1.000, 0.788, 0.576]], [0.896, [1.000, 0.796, 0.592]], [0.898, [1.000, 0.796, 0.592]], [0.900, [1.000, 0.804, 0.608]], [0.902, [1.000, 0.804, 0.608]], [0.904, [1.000, 0.812, 0.624]], [0.906, [1.000, 0.812, 0.624]], [0.908, [1.000, 0.820, 0.639]], [0.910, [1.000, 0.820, 0.639]], [0.912, [1.000, 0.827, 0.655]], [0.914, [1.000, 0.827, 0.655]], [0.916, [1.000, 0.835, 0.671]], [0.918, [1.000, 0.835, 0.671]], [0.920, [1.000, 0.843, 0.686]], [0.922, [1.000, 0.843, 0.686]], [0.924, [1.000, 0.851, 0.702]], [0.926, [1.000, 0.851, 0.702]], [0.928, [1.000, 0.859, 0.718]], [0.930, [1.000, 0.859, 0.718]], [0.932, [1.000, 0.867, 0.733]], [0.933, [1.000, 0.867, 0.733]], [0.935, [1.000, 0.875, 0.749]], [0.937, [1.000, 0.875, 0.749]], [0.939, [1.000, 0.882, 0.765]], [0.941, [1.000, 0.882, 0.765]], [0.943, [1.000, 0.890, 0.780]], [0.945, [1.000, 0.890, 0.780]], [0.947, [1.000, 0.898, 0.796]], [0.949, [1.000, 0.898, 0.796]], [0.951, [1.000, 0.906, 0.812]], [0.953, [1.000, 0.906, 0.812]], [0.955, [1.000, 0.914, 0.827]], [0.957, [1.000, 0.914, 0.827]], [0.959, [1.000, 0.922, 0.843]], [0.961, [1.000, 0.922, 0.843]], [0.963, [1.000, 0.929, 0.859]], [0.965, [1.000, 0.929, 0.859]], [0.967, [1.000, 0.937, 0.875]], [0.969, [1.000, 0.937, 0.875]], [0.971, [1.000, 0.945, 0.890]], [0.973, [1.000, 0.945, 0.890]], [0.975, [1.000, 0.953, 0.906]], [0.977, [1.000, 0.953, 0.906]], [0.978, [1.000, 0.961, 0.922]], [0.980, [1.000, 0.961, 0.922]], [0.982, [1.000, 0.969, 0.937]], [0.984, [1.000, 0.969, 0.937]], [0.986, [1.000, 0.976, 0.953]], [0.988, [1.000, 0.976, 0.953]], [0.990, [1.000, 0.984, 0.969]], [0.992, [1.000, 0.984, 0.969]], [0.994, [1.000, 0.992, 0.984]], [0.996, [1.000, 0.992, 0.984]], [0.998, [1.000, 1.000, 1.000]], [1.000, [1.000, 1.000, 1.000]]];
H.colormap_gist_ncar = [[0.000, [0.000, 0.000, 0.502]], [0.002, [0.000, 0.000, 0.502]], [0.004, [0.000, 0.029, 0.465]], [0.006, [0.000, 0.029, 0.465]], [0.008, [0.000, 0.057, 0.428]], [0.010, [0.000, 0.057, 0.428]], [0.012, [0.000, 0.086, 0.391]], [0.014, [0.000, 0.086, 0.391]], [0.016, [0.000, 0.114, 0.354]], [0.018, [0.000, 0.114, 0.354]], [0.020, [0.000, 0.143, 0.318]], [0.022, [0.000, 0.143, 0.318]], [0.023, [0.000, 0.172, 0.281]], [0.025, [0.000, 0.172, 0.281]], [0.027, [0.000, 0.200, 0.244]], [0.029, [0.000, 0.200, 0.244]], [0.031, [0.000, 0.229, 0.207]], [0.033, [0.000, 0.229, 0.207]], [0.035, [0.000, 0.258, 0.170]], [0.037, [0.000, 0.258, 0.170]], [0.039, [0.000, 0.286, 0.133]], [0.041, [0.000, 0.286, 0.133]], [0.043, [0.000, 0.315, 0.096]], [0.045, [0.000, 0.315, 0.096]], [0.047, [0.000, 0.343, 0.059]], [0.049, [0.000, 0.343, 0.059]], [0.051, [0.000, 0.372, 0.022]], [0.053, [0.000, 0.372, 0.022]], [0.055, [0.000, 0.346, 0.087]], [0.057, [0.000, 0.346, 0.087]], [0.059, [0.000, 0.319, 0.152]], [0.061, [0.000, 0.319, 0.152]], [0.063, [0.000, 0.293, 0.218]], [0.065, [0.000, 0.293, 0.218]], [0.067, [0.000, 0.266, 0.283]], [0.068, [0.000, 0.266, 0.283]], [0.070, [0.000, 0.239, 0.348]], [0.072, [0.000, 0.239, 0.348]], [0.074, [0.000, 0.213, 0.413]], [0.076, [0.000, 0.213, 0.413]], [0.078, [0.000, 0.186, 0.478]], [0.080, [0.000, 0.186, 0.478]], [0.082, [0.000, 0.160, 0.544]], [0.084, [0.000, 0.160, 0.544]], [0.086, [0.000, 0.133, 0.609]], [0.088, [0.000, 0.133, 0.609]], [0.090, [0.000, 0.106, 0.674]], [0.092, [0.000, 0.106, 0.674]], [0.094, [0.000, 0.080, 0.739]], [0.096, [0.000, 0.080, 0.739]], [0.098, [0.000, 0.053, 0.804]], [0.100, [0.000, 0.053, 0.804]], [0.102, [0.000, 0.027, 0.870]], [0.104, [0.000, 0.027, 0.870]], [0.106, [0.000, 0.000, 0.935]], [0.108, [0.000, 0.000, 0.935]], [0.110, [0.000, 0.055, 1.000]], [0.112, [0.000, 0.055, 1.000]], [0.114, [0.000, 0.111, 1.000]], [0.115, [0.000, 0.111, 1.000]], [0.117, [0.000, 0.166, 1.000]], [0.119, [0.000, 0.166, 1.000]], [0.121, [0.000, 0.221, 1.000]], [0.123, [0.000, 0.221, 1.000]], [0.125, [0.000, 0.277, 1.000]], [0.127, [0.000, 0.277, 1.000]], [0.129, [0.000, 0.332, 1.000]], [0.131, [0.000, 0.332, 1.000]], [0.133, [0.000, 0.387, 1.000]], [0.135, [0.000, 0.387, 1.000]], [0.137, [0.000, 0.443, 1.000]], [0.139, [0.000, 0.443, 1.000]], [0.141, [0.000, 0.498, 1.000]], [0.143, [0.000, 0.498, 1.000]], [0.145, [0.000, 0.554, 1.000]], [0.147, [0.000, 0.554, 1.000]], [0.149, [0.000, 0.609, 1.000]], [0.151, [0.000, 0.609, 1.000]], [0.153, [0.000, 0.664, 1.000]], [0.155, [0.000, 0.664, 1.000]], [0.157, [0.000, 0.720, 1.000]], [0.159, [0.000, 0.720, 1.000]], [0.160, [0.000, 0.754, 1.000]], [0.162, [0.000, 0.754, 1.000]], [0.164, [0.000, 0.775, 1.000]], [0.166, [0.000, 0.775, 1.000]], [0.168, [0.000, 0.793, 1.000]], [0.170, [0.000, 0.793, 1.000]], [0.172, [0.000, 0.810, 1.000]], [0.174, [0.000, 0.810, 1.000]], [0.176, [0.000, 0.827, 1.000]], [0.178, [0.000, 0.827, 1.000]], [0.180, [0.000, 0.844, 1.000]], [0.182, [0.000, 0.844, 1.000]], [0.184, [0.000, 0.862, 1.000]], [0.186, [0.000, 0.862, 1.000]], [0.188, [0.000, 0.879, 1.000]], [0.190, [0.000, 0.879, 1.000]], [0.192, [0.000, 0.896, 1.000]], [0.194, [0.000, 0.896, 1.000]], [0.196, [0.000, 0.914, 1.000]], [0.198, [0.000, 0.914, 1.000]], [0.200, [0.000, 0.931, 1.000]], [0.202, [0.000, 0.931, 1.000]], [0.204, [0.000, 0.948, 1.000]], [0.205, [0.000, 0.948, 1.000]], [0.207, [0.000, 0.965, 0.974]], [0.209, [0.000, 0.965, 0.974]], [0.211, [0.000, 0.983, 0.948]], [0.213, [0.000, 0.983, 0.948]], [0.215, [0.000, 1.000, 0.923]], [0.217, [0.000, 1.000, 0.923]], [0.219, [0.000, 0.998, 0.897]], [0.221, [0.000, 0.998, 0.897]], [0.223, [0.000, 0.996, 0.871]], [0.225, [0.000, 0.996, 0.871]], [0.227, [0.000, 0.995, 0.846]], [0.229, [0.000, 0.995, 0.846]], [0.231, [0.000, 0.993, 0.820]], [0.233, [0.000, 0.993, 0.820]], [0.235, [0.000, 0.991, 0.794]], [0.237, [0.000, 0.991, 0.794]], [0.239, [0.000, 0.989, 0.768]], [0.241, [0.000, 0.989, 0.768]], [0.243, [0.000, 0.988, 0.743]], [0.245, [0.000, 0.988, 0.743]], [0.247, [0.000, 0.986, 0.717]], [0.249, [0.000, 0.986, 0.717]], [0.250, [0.000, 0.984, 0.691]], [0.252, [0.000, 0.984, 0.691]], [0.254, [0.000, 0.982, 0.666]], [0.256, [0.000, 0.982, 0.666]], [0.258, [0.000, 0.980, 0.640]], [0.260, [0.000, 0.980, 0.640]], [0.262, [0.000, 0.980, 0.614]], [0.264, [0.000, 0.980, 0.614]], [0.266, [0.000, 0.980, 0.573]], [0.268, [0.000, 0.980, 0.573]], [0.270, [0.000, 0.980, 0.532]], [0.272, [0.000, 0.980, 0.532]], [0.274, [0.000, 0.982, 0.491]], [0.276, [0.000, 0.982, 0.491]], [0.278, [0.000, 0.984, 0.450]], [0.280, [0.000, 0.984, 0.450]], [0.282, [0.000, 0.985, 0.409]], [0.284, [0.000, 0.985, 0.409]], [0.286, [0.000, 0.987, 0.369]], [0.288, [0.000, 0.987, 0.369]], [0.290, [0.000, 0.989, 0.328]], [0.292, [0.000, 0.989, 0.328]], [0.294, [0.000, 0.990, 0.287]], [0.295, [0.000, 0.990, 0.287]], [0.297, [0.000, 0.992, 0.246]], [0.299, [0.000, 0.992, 0.246]], [0.301, [0.000, 0.993, 0.205]], [0.303, [0.000, 0.993, 0.205]], [0.305, [0.000, 0.995, 0.164]], [0.307, [0.000, 0.995, 0.164]], [0.309, [0.000, 0.997, 0.123]], [0.311, [0.000, 0.997, 0.123]], [0.313, [0.025, 0.998, 0.082]], [0.315, [0.025, 0.998, 0.082]], [0.317, [0.050, 1.000, 0.041]], [0.319, [0.050, 1.000, 0.041]], [0.321, [0.075, 0.985, 0.000]], [0.323, [0.075, 0.985, 0.000]], [0.325, [0.100, 0.970, 0.000]], [0.327, [0.100, 0.970, 0.000]], [0.329, [0.125, 0.956, 0.000]], [0.331, [0.125, 0.956, 0.000]], [0.333, [0.150, 0.941, 0.000]], [0.335, [0.150, 0.941, 0.000]], [0.337, [0.175, 0.926, 0.000]], [0.339, [0.175, 0.926, 0.000]], [0.341, [0.200, 0.911, 0.000]], [0.342, [0.200, 0.911, 0.000]], [0.344, [0.225, 0.897, 0.000]], [0.346, [0.225, 0.897, 0.000]], [0.348, [0.250, 0.882, 0.000]], [0.350, [0.250, 0.882, 0.000]], [0.352, [0.275, 0.867, 0.000]], [0.354, [0.275, 0.867, 0.000]], [0.356, [0.300, 0.852, 0.000]], [0.358, [0.300, 0.852, 0.000]], [0.360, [0.325, 0.838, 0.000]], [0.362, [0.325, 0.838, 0.000]], [0.364, [0.350, 0.823, 0.000]], [0.366, [0.350, 0.823, 0.000]], [0.368, [0.375, 0.808, 0.000]], [0.370, [0.375, 0.808, 0.000]], [0.372, [0.399, 0.821, 0.000]], [0.374, [0.399, 0.821, 0.000]], [0.376, [0.407, 0.834, 0.000]], [0.378, [0.407, 0.834, 0.000]], [0.380, [0.415, 0.847, 0.000]], [0.382, [0.415, 0.847, 0.000]], [0.384, [0.423, 0.859, 0.000]], [0.386, [0.423, 0.859, 0.000]], [0.387, [0.430, 0.872, 0.000]], [0.389, [0.430, 0.872, 0.000]], [0.391, [0.438, 0.885, 0.000]], [0.393, [0.438, 0.885, 0.000]], [0.395, [0.446, 0.898, 0.000]], [0.397, [0.446, 0.898, 0.000]], [0.399, [0.454, 0.910, 0.000]], [0.401, [0.454, 0.910, 0.000]], [0.403, [0.462, 0.923, 0.000]], [0.405, [0.462, 0.923, 0.000]], [0.407, [0.469, 0.936, 0.000]], [0.409, [0.469, 0.936, 0.000]], [0.411, [0.477, 0.949, 0.000]], [0.413, [0.477, 0.949, 0.000]], [0.415, [0.485, 0.962, 0.000]], [0.417, [0.485, 0.962, 0.000]], [0.419, [0.493, 0.974, 0.016]], [0.421, [0.493, 0.974, 0.016]], [0.423, [0.500, 0.987, 0.031]], [0.425, [0.500, 0.987, 0.031]], [0.427, [0.518, 1.000, 0.047]], [0.429, [0.518, 1.000, 0.047]], [0.431, [0.536, 1.000, 0.062]], [0.432, [0.536, 1.000, 0.062]], [0.434, [0.554, 1.000, 0.078]], [0.436, [0.554, 1.000, 0.078]], [0.438, [0.572, 1.000, 0.094]], [0.440, [0.572, 1.000, 0.094]], [0.442, [0.590, 1.000, 0.109]], [0.444, [0.590, 1.000, 0.109]], [0.446, [0.608, 1.000, 0.125]], [0.448, [0.608, 1.000, 0.125]], [0.450, [0.625, 1.000, 0.141]], [0.452, [0.625, 1.000, 0.141]], [0.454, [0.643, 1.000, 0.156]], [0.456, [0.643, 1.000, 0.156]], [0.458, [0.661, 1.000, 0.172]], [0.460, [0.661, 1.000, 0.172]], [0.462, [0.679, 1.000, 0.187]], [0.464, [0.679, 1.000, 0.187]], [0.466, [0.697, 1.000, 0.203]], [0.468, [0.697, 1.000, 0.203]], [0.470, [0.715, 1.000, 0.219]], [0.472, [0.715, 1.000, 0.219]], [0.474, [0.732, 1.000, 0.234]], [0.476, [0.732, 1.000, 0.234]], [0.477, [0.750, 1.000, 0.219]], [0.479, [0.750, 1.000, 0.219]], [0.481, [0.768, 1.000, 0.203]], [0.483, [0.768, 1.000, 0.203]], [0.485, [0.786, 1.000, 0.187]], [0.487, [0.786, 1.000, 0.187]], [0.489, [0.804, 1.000, 0.172]], [0.491, [0.804, 1.000, 0.172]], [0.493, [0.822, 1.000, 0.156]], [0.495, [0.822, 1.000, 0.156]], [0.497, [0.840, 1.000, 0.140]], [0.499, [0.840, 1.000, 0.140]], [0.501, [0.857, 1.000, 0.125]], [0.503, [0.857, 1.000, 0.125]], [0.505, [0.875, 1.000, 0.109]], [0.507, [0.875, 1.000, 0.109]], [0.509, [0.893, 1.000, 0.094]], [0.511, [0.893, 1.000, 0.094]], [0.513, [0.911, 1.000, 0.078]], [0.515, [0.911, 1.000, 0.078]], [0.517, [0.929, 1.000, 0.062]], [0.519, [0.929, 1.000, 0.062]], [0.521, [0.947, 1.000, 0.047]], [0.523, [0.947, 1.000, 0.047]], [0.524, [0.964, 0.990, 0.031]], [0.526, [0.964, 0.990, 0.031]], [0.528, [0.982, 0.981, 0.015]], [0.530, [0.982, 0.981, 0.015]], [0.532, [1.000, 0.971, 0.000]], [0.534, [1.000, 0.971, 0.000]], [0.536, [1.000, 0.961, 0.000]], [0.538, [1.000, 0.961, 0.000]], [0.540, [1.000, 0.952, 0.000]], [0.542, [1.000, 0.952, 0.000]], [0.544, [1.000, 0.942, 0.000]], [0.546, [1.000, 0.942, 0.000]], [0.548, [1.000, 0.932, 0.000]], [0.550, [1.000, 0.932, 0.000]], [0.552, [1.000, 0.923, 0.000]], [0.554, [1.000, 0.923, 0.000]], [0.556, [1.000, 0.913, 0.000]], [0.558, [1.000, 0.913, 0.000]], [0.560, [1.000, 0.903, 0.000]], [0.562, [1.000, 0.903, 0.000]], [0.564, [1.000, 0.894, 0.000]], [0.566, [1.000, 0.894, 0.000]], [0.568, [1.000, 0.884, 0.000]], [0.569, [1.000, 0.884, 0.000]], [0.571, [1.000, 0.874, 0.000]], [0.573, [1.000, 0.874, 0.000]], [0.575, [1.000, 0.865, 0.000]], [0.577, [1.000, 0.865, 0.000]], [0.579, [1.000, 0.855, 0.000]], [0.581, [1.000, 0.855, 0.000]], [0.583, [1.000, 0.845, 0.004]], [0.585, [1.000, 0.845, 0.004]], [0.587, [1.000, 0.836, 0.008]], [0.589, [1.000, 0.836, 0.008]], [0.591, [1.000, 0.826, 0.013]], [0.593, [1.000, 0.826, 0.013]], [0.595, [1.000, 0.816, 0.017]], [0.597, [1.000, 0.816, 0.017]], [0.599, [1.000, 0.807, 0.021]], [0.601, [1.000, 0.807, 0.021]], [0.603, [1.000, 0.797, 0.025]], [0.605, [1.000, 0.797, 0.025]], [0.607, [1.000, 0.787, 0.030]], [0.609, [1.000, 0.787, 0.030]], [0.611, [1.000, 0.778, 0.034]], [0.613, [1.000, 0.778, 0.034]], [0.614, [1.000, 0.768, 0.038]], [0.616, [1.000, 0.768, 0.038]], [0.618, [1.000, 0.758, 0.042]], [0.620, [1.000, 0.758, 0.042]], [0.622, [1.000, 0.749, 0.046]], [0.624, [1.000, 0.749, 0.046]], [0.626, [1.000, 0.739, 0.051]], [0.628, [1.000, 0.739, 0.051]], [0.630, [1.000, 0.729, 0.055]], [0.632, [1.000, 0.729, 0.055]], [0.634, [1.000, 0.697, 0.051]], [0.636, [1.000, 0.697, 0.051]], [0.638, [1.000, 0.665, 0.048]], [0.640, [1.000, 0.665, 0.048]], [0.642, [1.000, 0.633, 0.044]], [0.644, [1.000, 0.633, 0.044]], [0.646, [1.000, 0.601, 0.040]], [0.648, [1.000, 0.601, 0.040]], [0.650, [1.000, 0.569, 0.037]], [0.652, [1.000, 0.569, 0.037]], [0.654, [1.000, 0.537, 0.033]], [0.656, [1.000, 0.537, 0.033]], [0.658, [1.000, 0.505, 0.029]], [0.659, [1.000, 0.505, 0.029]], [0.661, [1.000, 0.473, 0.026]], [0.663, [1.000, 0.473, 0.026]], [0.665, [1.000, 0.440, 0.022]], [0.667, [1.000, 0.440, 0.022]], [0.669, [1.000, 0.408, 0.018]], [0.671, [1.000, 0.408, 0.018]], [0.673, [1.000, 0.376, 0.015]], [0.675, [1.000, 0.376, 0.015]], [0.677, [1.000, 0.344, 0.011]], [0.679, [1.000, 0.344, 0.011]], [0.681, [1.000, 0.312, 0.007]], [0.683, [1.000, 0.312, 0.007]], [0.685, [1.000, 0.280, 0.004]], [0.687, [1.000, 0.280, 0.004]], [0.689, [1.000, 0.261, 0.000]], [0.691, [1.000, 0.261, 0.000]], [0.693, [1.000, 0.242, 0.000]], [0.695, [1.000, 0.242, 0.000]], [0.697, [1.000, 0.224, 0.000]], [0.699, [1.000, 0.224, 0.000]], [0.701, [1.000, 0.205, 0.000]], [0.703, [1.000, 0.205, 0.000]], [0.705, [1.000, 0.186, 0.000]], [0.706, [1.000, 0.186, 0.000]], [0.708, [1.000, 0.168, 0.000]], [0.710, [1.000, 0.168, 0.000]], [0.712, [1.000, 0.149, 0.000]], [0.714, [1.000, 0.149, 0.000]], [0.716, [1.000, 0.131, 0.000]], [0.718, [1.000, 0.131, 0.000]], [0.720, [1.000, 0.112, 0.000]], [0.722, [1.000, 0.112, 0.000]], [0.724, [1.000, 0.093, 0.000]], [0.726, [1.000, 0.093, 0.000]], [0.728, [1.000, 0.075, 0.000]], [0.730, [1.000, 0.075, 0.000]], [0.732, [1.000, 0.056, 0.000]], [0.734, [1.000, 0.056, 0.000]], [0.736, [1.000, 0.037, 0.000]], [0.738, [1.000, 0.037, 0.000]], [0.740, [1.000, 0.019, 0.069]], [0.742, [1.000, 0.019, 0.069]], [0.744, [1.000, 0.000, 0.138]], [0.746, [1.000, 0.000, 0.138]], [0.748, [1.000, 0.000, 0.208]], [0.750, [1.000, 0.000, 0.208]], [0.751, [1.000, 0.000, 0.277]], [0.753, [1.000, 0.000, 0.277]], [0.755, [1.000, 0.000, 0.347]], [0.757, [1.000, 0.000, 0.347]], [0.759, [1.000, 0.000, 0.417]], [0.761, [1.000, 0.000, 0.417]], [0.763, [1.000, 0.000, 0.486]], [0.765, [1.000, 0.000, 0.486]], [0.767, [1.000, 0.000, 0.556]], [0.769, [1.000, 0.000, 0.556]], [0.771, [1.000, 0.000, 0.625]], [0.773, [1.000, 0.000, 0.625]], [0.775, [1.000, 0.000, 0.695]], [0.777, [1.000, 0.000, 0.695]], [0.779, [1.000, 0.000, 0.764]], [0.781, [1.000, 0.000, 0.764]], [0.783, [1.000, 0.000, 0.834]], [0.785, [1.000, 0.000, 0.834]], [0.787, [1.000, 0.000, 0.903]], [0.789, [1.000, 0.000, 0.903]], [0.791, [1.000, 0.000, 0.973]], [0.793, [1.000, 0.000, 0.973]], [0.795, [0.973, 0.013, 0.987]], [0.796, [0.973, 0.013, 0.987]], [0.798, [0.946, 0.027, 1.000]], [0.800, [0.946, 0.027, 1.000]], [0.802, [0.919, 0.040, 1.000]], [0.804, [0.919, 0.040, 1.000]], [0.806, [0.892, 0.054, 1.000]], [0.808, [0.892, 0.054, 1.000]], [0.810, [0.865, 0.067, 1.000]], [0.812, [0.865, 0.067, 1.000]], [0.814, [0.838, 0.081, 1.000]], [0.816, [0.838, 0.081, 1.000]], [0.818, [0.811, 0.094, 1.000]], [0.820, [0.811, 0.094, 1.000]], [0.822, [0.784, 0.108, 1.000]], [0.824, [0.784, 0.108, 1.000]], [0.826, [0.757, 0.121, 1.000]], [0.828, [0.757, 0.121, 1.000]], [0.830, [0.730, 0.135, 1.000]], [0.832, [0.730, 0.135, 1.000]], [0.834, [0.703, 0.148, 1.000]], [0.836, [0.703, 0.148, 1.000]], [0.838, [0.676, 0.162, 1.000]], [0.840, [0.676, 0.162, 1.000]], [0.841, [0.649, 0.176, 1.000]], [0.843, [0.649, 0.176, 1.000]], [0.845, [0.622, 0.199, 0.995]], [0.847, [0.622, 0.199, 0.995]], [0.849, [0.645, 0.222, 0.991]], [0.851, [0.645, 0.222, 0.991]], [0.853, [0.668, 0.245, 0.986]], [0.855, [0.668, 0.245, 0.986]], [0.857, [0.691, 0.268, 0.981]], [0.859, [0.691, 0.268, 0.981]], [0.861, [0.715, 0.291, 0.976]], [0.863, [0.715, 0.291, 0.976]], [0.865, [0.738, 0.315, 0.972]], [0.867, [0.738, 0.315, 0.972]], [0.869, [0.761, 0.338, 0.967]], [0.871, [0.761, 0.338, 0.967]], [0.873, [0.784, 0.361, 0.962]], [0.875, [0.784, 0.361, 0.962]], [0.877, [0.808, 0.384, 0.958]], [0.879, [0.808, 0.384, 0.958]], [0.881, [0.831, 0.407, 0.953]], [0.883, [0.831, 0.407, 0.953]], [0.885, [0.854, 0.431, 0.948]], [0.886, [0.854, 0.431, 0.948]], [0.888, [0.877, 0.454, 0.943]], [0.890, [0.877, 0.454, 0.943]], [0.892, [0.900, 0.477, 0.939]], [0.894, [0.900, 0.477, 0.939]], [0.896, [0.924, 0.500, 0.934]], [0.898, [0.924, 0.500, 0.934]], [0.900, [0.926, 0.518, 0.937]], [0.902, [0.926, 0.518, 0.937]], [0.904, [0.929, 0.537, 0.939]], [0.906, [0.929, 0.537, 0.939]], [0.908, [0.932, 0.555, 0.941]], [0.910, [0.932, 0.555, 0.941]], [0.912, [0.935, 0.573, 0.944]], [0.914, [0.935, 0.573, 0.944]], [0.916, [0.937, 0.591, 0.946]], [0.918, [0.937, 0.591, 0.946]], [0.920, [0.940, 0.609, 0.948]], [0.922, [0.940, 0.609, 0.948]], [0.924, [0.943, 0.627, 0.951]], [0.926, [0.943, 0.627, 0.951]], [0.928, [0.946, 0.646, 0.953]], [0.930, [0.946, 0.646, 0.953]], [0.932, [0.949, 0.664, 0.956]], [0.933, [0.949, 0.664, 0.956]], [0.935, [0.951, 0.682, 0.958]], [0.937, [0.951, 0.682, 0.958]], [0.939, [0.954, 0.700, 0.960]], [0.941, [0.954, 0.700, 0.960]], [0.943, [0.957, 0.718, 0.963]], [0.945, [0.957, 0.718, 0.963]], [0.947, [0.960, 0.736, 0.965]], [0.949, [0.960, 0.736, 0.965]], [0.951, [0.963, 0.755, 0.967]], [0.953, [0.963, 0.755, 0.967]], [0.955, [0.965, 0.773, 0.970]], [0.957, [0.965, 0.773, 0.970]], [0.959, [0.968, 0.791, 0.972]], [0.961, [0.968, 0.791, 0.972]], [0.963, [0.971, 0.809, 0.975]], [0.965, [0.971, 0.809, 0.975]], [0.967, [0.974, 0.827, 0.977]], [0.969, [0.974, 0.827, 0.977]], [0.971, [0.977, 0.845, 0.979]], [0.973, [0.977, 0.845, 0.979]], [0.975, [0.979, 0.864, 0.982]], [0.977, [0.979, 0.864, 0.982]], [0.978, [0.982, 0.882, 0.984]], [0.980, [0.982, 0.882, 0.984]], [0.982, [0.985, 0.900, 0.987]], [0.984, [0.985, 0.900, 0.987]], [0.986, [0.988, 0.918, 0.989]], [0.988, [0.988, 0.918, 0.989]], [0.990, [0.991, 0.936, 0.991]], [0.992, [0.991, 0.936, 0.991]], [0.994, [0.993, 0.954, 0.994]], [0.996, [0.993, 0.954, 0.994]], [0.998, [0.996, 0.973, 0.996]], [1.000, [0.996, 0.973, 0.996]]];
H.colormap_gist_rainbow = [[0.000, [1.000, 0.000, 0.160]], [0.002, [1.000, 0.000, 0.160]], [0.004, [1.000, 0.000, 0.139]], [0.006, [1.000, 0.000, 0.139]], [0.008, [1.000, 0.000, 0.118]], [0.010, [1.000, 0.000, 0.118]], [0.012, [1.000, 0.000, 0.097]], [0.014, [1.000, 0.000, 0.097]], [0.016, [1.000, 0.000, 0.076]], [0.018, [1.000, 0.000, 0.076]], [0.020, [1.000, 0.000, 0.055]], [0.022, [1.000, 0.000, 0.055]], [0.023, [1.000, 0.000, 0.035]], [0.025, [1.000, 0.000, 0.035]], [0.027, [1.000, 0.000, 0.014]], [0.029, [1.000, 0.000, 0.014]], [0.031, [1.000, 0.007, 0.000]], [0.033, [1.000, 0.007, 0.000]], [0.035, [1.000, 0.029, 0.000]], [0.037, [1.000, 0.029, 0.000]], [0.039, [1.000, 0.050, 0.000]], [0.041, [1.000, 0.050, 0.000]], [0.043, [1.000, 0.071, 0.000]], [0.045, [1.000, 0.071, 0.000]], [0.047, [1.000, 0.092, 0.000]], [0.049, [1.000, 0.092, 0.000]], [0.051, [1.000, 0.113, 0.000]], [0.053, [1.000, 0.113, 0.000]], [0.055, [1.000, 0.135, 0.000]], [0.057, [1.000, 0.135, 0.000]], [0.059, [1.000, 0.156, 0.000]], [0.061, [1.000, 0.156, 0.000]], [0.063, [1.000, 0.177, 0.000]], [0.065, [1.000, 0.177, 0.000]], [0.067, [1.000, 0.198, 0.000]], [0.068, [1.000, 0.198, 0.000]], [0.070, [1.000, 0.219, 0.000]], [0.072, [1.000, 0.219, 0.000]], [0.074, [1.000, 0.241, 0.000]], [0.076, [1.000, 0.241, 0.000]], [0.078, [1.000, 0.262, 0.000]], [0.080, [1.000, 0.262, 0.000]], [0.082, [1.000, 0.283, 0.000]], [0.084, [1.000, 0.283, 0.000]], [0.086, [1.000, 0.304, 0.000]], [0.088, [1.000, 0.304, 0.000]], [0.090, [1.000, 0.325, 0.000]], [0.092, [1.000, 0.325, 0.000]], [0.094, [1.000, 0.347, 0.000]], [0.096, [1.000, 0.347, 0.000]], [0.098, [1.000, 0.368, 0.000]], [0.100, [1.000, 0.368, 0.000]], [0.102, [1.000, 0.389, 0.000]], [0.104, [1.000, 0.389, 0.000]], [0.106, [1.000, 0.410, 0.000]], [0.108, [1.000, 0.410, 0.000]], [0.110, [1.000, 0.431, 0.000]], [0.112, [1.000, 0.431, 0.000]], [0.114, [1.000, 0.453, 0.000]], [0.115, [1.000, 0.453, 0.000]], [0.117, [1.000, 0.474, 0.000]], [0.119, [1.000, 0.474, 0.000]], [0.121, [1.000, 0.495, 0.000]], [0.123, [1.000, 0.495, 0.000]], [0.125, [1.000, 0.516, 0.000]], [0.127, [1.000, 0.516, 0.000]], [0.129, [1.000, 0.537, 0.000]], [0.131, [1.000, 0.537, 0.000]], [0.133, [1.000, 0.559, 0.000]], [0.135, [1.000, 0.559, 0.000]], [0.137, [1.000, 0.580, 0.000]], [0.139, [1.000, 0.580, 0.000]], [0.141, [1.000, 0.601, 0.000]], [0.143, [1.000, 0.601, 0.000]], [0.145, [1.000, 0.622, 0.000]], [0.147, [1.000, 0.622, 0.000]], [0.149, [1.000, 0.643, 0.000]], [0.151, [1.000, 0.643, 0.000]], [0.153, [1.000, 0.665, 0.000]], [0.155, [1.000, 0.665, 0.000]], [0.157, [1.000, 0.686, 0.000]], [0.159, [1.000, 0.686, 0.000]], [0.160, [1.000, 0.707, 0.000]], [0.162, [1.000, 0.707, 0.000]], [0.164, [1.000, 0.728, 0.000]], [0.166, [1.000, 0.728, 0.000]], [0.168, [1.000, 0.749, 0.000]], [0.170, [1.000, 0.749, 0.000]], [0.172, [1.000, 0.771, 0.000]], [0.174, [1.000, 0.771, 0.000]], [0.176, [1.000, 0.792, 0.000]], [0.178, [1.000, 0.792, 0.000]], [0.180, [1.000, 0.813, 0.000]], [0.182, [1.000, 0.813, 0.000]], [0.184, [1.000, 0.834, 0.000]], [0.186, [1.000, 0.834, 0.000]], [0.188, [1.000, 0.855, 0.000]], [0.190, [1.000, 0.855, 0.000]], [0.192, [1.000, 0.877, 0.000]], [0.194, [1.000, 0.877, 0.000]], [0.196, [1.000, 0.898, 0.000]], [0.198, [1.000, 0.898, 0.000]], [0.200, [1.000, 0.919, 0.000]], [0.202, [1.000, 0.919, 0.000]], [0.204, [1.000, 0.940, 0.000]], [0.205, [1.000, 0.940, 0.000]], [0.207, [1.000, 0.961, 0.000]], [0.209, [1.000, 0.961, 0.000]], [0.211, [1.000, 0.983, 0.000]], [0.213, [1.000, 0.983, 0.000]], [0.215, [0.996, 1.000, 0.000]], [0.217, [0.996, 1.000, 0.000]], [0.219, [0.975, 1.000, 0.000]], [0.221, [0.975, 1.000, 0.000]], [0.223, [0.954, 1.000, 0.000]], [0.225, [0.954, 1.000, 0.000]], [0.227, [0.933, 1.000, 0.000]], [0.229, [0.933, 1.000, 0.000]], [0.231, [0.911, 1.000, 0.000]], [0.233, [0.911, 1.000, 0.000]], [0.235, [0.890, 1.000, 0.000]], [0.237, [0.890, 1.000, 0.000]], [0.239, [0.869, 1.000, 0.000]], [0.241, [0.869, 1.000, 0.000]], [0.243, [0.848, 1.000, 0.000]], [0.245, [0.848, 1.000, 0.000]], [0.247, [0.827, 1.000, 0.000]], [0.249, [0.827, 1.000, 0.000]], [0.250, [0.806, 1.000, 0.000]], [0.252, [0.806, 1.000, 0.000]], [0.254, [0.784, 1.000, 0.000]], [0.256, [0.784, 1.000, 0.000]], [0.258, [0.763, 1.000, 0.000]], [0.260, [0.763, 1.000, 0.000]], [0.262, [0.742, 1.000, 0.000]], [0.264, [0.742, 1.000, 0.000]], [0.266, [0.721, 1.000, 0.000]], [0.268, [0.721, 1.000, 0.000]], [0.270, [0.700, 1.000, 0.000]], [0.272, [0.700, 1.000, 0.000]], [0.274, [0.678, 1.000, 0.000]], [0.276, [0.678, 1.000, 0.000]], [0.278, [0.657, 1.000, 0.000]], [0.280, [0.657, 1.000, 0.000]], [0.282, [0.636, 1.000, 0.000]], [0.284, [0.636, 1.000, 0.000]], [0.286, [0.615, 1.000, 0.000]], [0.288, [0.615, 1.000, 0.000]], [0.290, [0.594, 1.000, 0.000]], [0.292, [0.594, 1.000, 0.000]], [0.294, [0.572, 1.000, 0.000]], [0.295, [0.572, 1.000, 0.000]], [0.297, [0.551, 1.000, 0.000]], [0.299, [0.551, 1.000, 0.000]], [0.301, [0.530, 1.000, 0.000]], [0.303, [0.530, 1.000, 0.000]], [0.305, [0.509, 1.000, 0.000]], [0.307, [0.509, 1.000, 0.000]], [0.309, [0.488, 1.000, 0.000]], [0.311, [0.488, 1.000, 0.000]], [0.313, [0.466, 1.000, 0.000]], [0.315, [0.466, 1.000, 0.000]], [0.317, [0.445, 1.000, 0.000]], [0.319, [0.445, 1.000, 0.000]], [0.321, [0.424, 1.000, 0.000]], [0.323, [0.424, 1.000, 0.000]], [0.325, [0.403, 1.000, 0.000]], [0.327, [0.403, 1.000, 0.000]], [0.329, [0.382, 1.000, 0.000]], [0.331, [0.382, 1.000, 0.000]], [0.333, [0.360, 1.000, 0.000]], [0.335, [0.360, 1.000, 0.000]], [0.337, [0.339, 1.000, 0.000]], [0.339, [0.339, 1.000, 0.000]], [0.341, [0.318, 1.000, 0.000]], [0.342, [0.318, 1.000, 0.000]], [0.344, [0.297, 1.000, 0.000]], [0.346, [0.297, 1.000, 0.000]], [0.348, [0.276, 1.000, 0.000]], [0.350, [0.276, 1.000, 0.000]], [0.352, [0.254, 1.000, 0.000]], [0.354, [0.254, 1.000, 0.000]], [0.356, [0.233, 1.000, 0.000]], [0.358, [0.233, 1.000, 0.000]], [0.360, [0.212, 1.000, 0.000]], [0.362, [0.212, 1.000, 0.000]], [0.364, [0.191, 1.000, 0.000]], [0.366, [0.191, 1.000, 0.000]], [0.368, [0.170, 1.000, 0.000]], [0.370, [0.170, 1.000, 0.000]], [0.372, [0.148, 1.000, 0.000]], [0.374, [0.148, 1.000, 0.000]], [0.376, [0.127, 1.000, 0.000]], [0.378, [0.127, 1.000, 0.000]], [0.380, [0.106, 1.000, 0.000]], [0.382, [0.106, 1.000, 0.000]], [0.384, [0.085, 1.000, 0.000]], [0.386, [0.085, 1.000, 0.000]], [0.387, [0.064, 1.000, 0.000]], [0.389, [0.064, 1.000, 0.000]], [0.391, [0.042, 1.000, 0.000]], [0.393, [0.042, 1.000, 0.000]], [0.395, [0.021, 1.000, 0.000]], [0.397, [0.021, 1.000, 0.000]], [0.399, [0.000, 1.000, 0.000]], [0.401, [0.000, 1.000, 0.000]], [0.403, [0.000, 1.000, 0.021]], [0.405, [0.000, 1.000, 0.021]], [0.407, [0.000, 1.000, 0.042]], [0.409, [0.000, 1.000, 0.042]], [0.411, [0.000, 1.000, 0.063]], [0.413, [0.000, 1.000, 0.063]], [0.415, [0.000, 1.000, 0.084]], [0.417, [0.000, 1.000, 0.084]], [0.419, [0.000, 1.000, 0.105]], [0.421, [0.000, 1.000, 0.105]], [0.423, [0.000, 1.000, 0.127]], [0.425, [0.000, 1.000, 0.127]], [0.427, [0.000, 1.000, 0.148]], [0.429, [0.000, 1.000, 0.148]], [0.431, [0.000, 1.000, 0.169]], [0.432, [0.000, 1.000, 0.169]], [0.434, [0.000, 1.000, 0.190]], [0.436, [0.000, 1.000, 0.190]], [0.438, [0.000, 1.000, 0.211]], [0.440, [0.000, 1.000, 0.211]], [0.442, [0.000, 1.000, 0.232]], [0.444, [0.000, 1.000, 0.232]], [0.446, [0.000, 1.000, 0.253]], [0.448, [0.000, 1.000, 0.253]], [0.450, [0.000, 1.000, 0.274]], [0.452, [0.000, 1.000, 0.274]], [0.454, [0.000, 1.000, 0.295]], [0.456, [0.000, 1.000, 0.295]], [0.458, [0.000, 1.000, 0.316]], [0.460, [0.000, 1.000, 0.316]], [0.462, [0.000, 1.000, 0.337]], [0.464, [0.000, 1.000, 0.337]], [0.466, [0.000, 1.000, 0.358]], [0.468, [0.000, 1.000, 0.358]], [0.470, [0.000, 1.000, 0.380]], [0.472, [0.000, 1.000, 0.380]], [0.474, [0.000, 1.000, 0.401]], [0.476, [0.000, 1.000, 0.401]], [0.477, [0.000, 1.000, 0.422]], [0.479, [0.000, 1.000, 0.422]], [0.481, [0.000, 1.000, 0.443]], [0.483, [0.000, 1.000, 0.443]], [0.485, [0.000, 1.000, 0.464]], [0.487, [0.000, 1.000, 0.464]], [0.489, [0.000, 1.000, 0.485]], [0.491, [0.000, 1.000, 0.485]], [0.493, [0.000, 1.000, 0.506]], [0.495, [0.000, 1.000, 0.506]], [0.497, [0.000, 1.000, 0.527]], [0.499, [0.000, 1.000, 0.527]], [0.501, [0.000, 1.000, 0.548]], [0.503, [0.000, 1.000, 0.548]], [0.505, [0.000, 1.000, 0.569]], [0.507, [0.000, 1.000, 0.569]], [0.509, [0.000, 1.000, 0.590]], [0.511, [0.000, 1.000, 0.590]], [0.513, [0.000, 1.000, 0.611]], [0.515, [0.000, 1.000, 0.611]], [0.517, [0.000, 1.000, 0.633]], [0.519, [0.000, 1.000, 0.633]], [0.521, [0.000, 1.000, 0.654]], [0.523, [0.000, 1.000, 0.654]], [0.524, [0.000, 1.000, 0.675]], [0.526, [0.000, 1.000, 0.675]], [0.528, [0.000, 1.000, 0.696]], [0.530, [0.000, 1.000, 0.696]], [0.532, [0.000, 1.000, 0.717]], [0.534, [0.000, 1.000, 0.717]], [0.536, [0.000, 1.000, 0.738]], [0.538, [0.000, 1.000, 0.738]], [0.540, [0.000, 1.000, 0.759]], [0.542, [0.000, 1.000, 0.759]], [0.544, [0.000, 1.000, 0.780]], [0.546, [0.000, 1.000, 0.780]], [0.548, [0.000, 1.000, 0.801]], [0.550, [0.000, 1.000, 0.801]], [0.552, [0.000, 1.000, 0.822]], [0.554, [0.000, 1.000, 0.822]], [0.556, [0.000, 1.000, 0.843]], [0.558, [0.000, 1.000, 0.843]], [0.560, [0.000, 1.000, 0.864]], [0.562, [0.000, 1.000, 0.864]], [0.564, [0.000, 1.000, 0.886]], [0.566, [0.000, 1.000, 0.886]], [0.568, [0.000, 1.000, 0.907]], [0.569, [0.000, 1.000, 0.907]], [0.571, [0.000, 1.000, 0.928]], [0.573, [0.000, 1.000, 0.928]], [0.575, [0.000, 1.000, 0.949]], [0.577, [0.000, 1.000, 0.949]], [0.579, [0.000, 1.000, 0.970]], [0.581, [0.000, 1.000, 0.970]], [0.583, [0.000, 1.000, 0.991]], [0.585, [0.000, 1.000, 0.991]], [0.587, [0.000, 0.988, 1.000]], [0.589, [0.000, 0.988, 1.000]], [0.591, [0.000, 0.967, 1.000]], [0.593, [0.000, 0.967, 1.000]], [0.595, [0.000, 0.945, 1.000]], [0.597, [0.000, 0.945, 1.000]], [0.599, [0.000, 0.924, 1.000]], [0.601, [0.000, 0.924, 1.000]], [0.603, [0.000, 0.903, 1.000]], [0.605, [0.000, 0.903, 1.000]], [0.607, [0.000, 0.881, 1.000]], [0.609, [0.000, 0.881, 1.000]], [0.611, [0.000, 0.860, 1.000]], [0.613, [0.000, 0.860, 1.000]], [0.614, [0.000, 0.839, 1.000]], [0.616, [0.000, 0.839, 1.000]], [0.618, [0.000, 0.817, 1.000]], [0.620, [0.000, 0.817, 1.000]], [0.622, [0.000, 0.796, 1.000]], [0.624, [0.000, 0.796, 1.000]], [0.626, [0.000, 0.775, 1.000]], [0.628, [0.000, 0.775, 1.000]], [0.630, [0.000, 0.753, 1.000]], [0.632, [0.000, 0.753, 1.000]], [0.634, [0.000, 0.732, 1.000]], [0.636, [0.000, 0.732, 1.000]], [0.638, [0.000, 0.711, 1.000]], [0.640, [0.000, 0.711, 1.000]], [0.642, [0.000, 0.689, 1.000]], [0.644, [0.000, 0.689, 1.000]], [0.646, [0.000, 0.668, 1.000]], [0.648, [0.000, 0.668, 1.000]], [0.650, [0.000, 0.647, 1.000]], [0.652, [0.000, 0.647, 1.000]], [0.654, [0.000, 0.626, 1.000]], [0.656, [0.000, 0.626, 1.000]], [0.658, [0.000, 0.604, 1.000]], [0.659, [0.000, 0.604, 1.000]], [0.661, [0.000, 0.583, 1.000]], [0.663, [0.000, 0.583, 1.000]], [0.665, [0.000, 0.562, 1.000]], [0.667, [0.000, 0.562, 1.000]], [0.669, [0.000, 0.540, 1.000]], [0.671, [0.000, 0.540, 1.000]], [0.673, [0.000, 0.519, 1.000]], [0.675, [0.000, 0.519, 1.000]], [0.677, [0.000, 0.498, 1.000]], [0.679, [0.000, 0.498, 1.000]], [0.681, [0.000, 0.476, 1.000]], [0.683, [0.000, 0.476, 1.000]], [0.685, [0.000, 0.455, 1.000]], [0.687, [0.000, 0.455, 1.000]], [0.689, [0.000, 0.434, 1.000]], [0.691, [0.000, 0.434, 1.000]], [0.693, [0.000, 0.412, 1.000]], [0.695, [0.000, 0.412, 1.000]], [0.697, [0.000, 0.391, 1.000]], [0.699, [0.000, 0.391, 1.000]], [0.701, [0.000, 0.370, 1.000]], [0.703, [0.000, 0.370, 1.000]], [0.705, [0.000, 0.348, 1.000]], [0.706, [0.000, 0.348, 1.000]], [0.708, [0.000, 0.327, 1.000]], [0.710, [0.000, 0.327, 1.000]], [0.712, [0.000, 0.306, 1.000]], [0.714, [0.000, 0.306, 1.000]], [0.716, [0.000, 0.285, 1.000]], [0.718, [0.000, 0.285, 1.000]], [0.720, [0.000, 0.263, 1.000]], [0.722, [0.000, 0.263, 1.000]], [0.724, [0.000, 0.242, 1.000]], [0.726, [0.000, 0.242, 1.000]], [0.728, [0.000, 0.221, 1.000]], [0.730, [0.000, 0.221, 1.000]], [0.732, [0.000, 0.199, 1.000]], [0.734, [0.000, 0.199, 1.000]], [0.736, [0.000, 0.178, 1.000]], [0.738, [0.000, 0.178, 1.000]], [0.740, [0.000, 0.157, 1.000]], [0.742, [0.000, 0.157, 1.000]], [0.744, [0.000, 0.135, 1.000]], [0.746, [0.000, 0.135, 1.000]], [0.748, [0.000, 0.114, 1.000]], [0.750, [0.000, 0.114, 1.000]], [0.751, [0.000, 0.093, 1.000]], [0.753, [0.000, 0.093, 1.000]], [0.755, [0.000, 0.071, 1.000]], [0.757, [0.000, 0.071, 1.000]], [0.759, [0.000, 0.050, 1.000]], [0.761, [0.000, 0.050, 1.000]], [0.763, [0.000, 0.029, 1.000]], [0.765, [0.000, 0.029, 1.000]], [0.767, [0.000, 0.007, 1.000]], [0.769, [0.000, 0.007, 1.000]], [0.771, [0.014, 0.000, 1.000]], [0.773, [0.014, 0.000, 1.000]], [0.775, [0.035, 0.000, 1.000]], [0.777, [0.035, 0.000, 1.000]], [0.779, [0.056, 0.000, 1.000]], [0.781, [0.056, 0.000, 1.000]], [0.783, [0.078, 0.000, 1.000]], [0.785, [0.078, 0.000, 1.000]], [0.787, [0.099, 0.000, 1.000]], [0.789, [0.099, 0.000, 1.000]], [0.791, [0.120, 0.000, 1.000]], [0.793, [0.120, 0.000, 1.000]], [0.795, [0.142, 0.000, 1.000]], [0.796, [0.142, 0.000, 1.000]], [0.798, [0.163, 0.000, 1.000]], [0.800, [0.163, 0.000, 1.000]], [0.802, [0.184, 0.000, 1.000]], [0.804, [0.184, 0.000, 1.000]], [0.806, [0.206, 0.000, 1.000]], [0.808, [0.206, 0.000, 1.000]], [0.810, [0.227, 0.000, 1.000]], [0.812, [0.227, 0.000, 1.000]], [0.814, [0.248, 0.000, 1.000]], [0.816, [0.248, 0.000, 1.000]], [0.818, [0.270, 0.000, 1.000]], [0.820, [0.270, 0.000, 1.000]], [0.822, [0.291, 0.000, 1.000]], [0.824, [0.291, 0.000, 1.000]], [0.826, [0.312, 0.000, 1.000]], [0.828, [0.312, 0.000, 1.000]], [0.830, [0.334, 0.000, 1.000]], [0.832, [0.334, 0.000, 1.000]], [0.834, [0.355, 0.000, 1.000]], [0.836, [0.355, 0.000, 1.000]], [0.838, [0.376, 0.000, 1.000]], [0.840, [0.376, 0.000, 1.000]], [0.841, [0.397, 0.000, 1.000]], [0.843, [0.397, 0.000, 1.000]], [0.845, [0.419, 0.000, 1.000]], [0.847, [0.419, 0.000, 1.000]], [0.849, [0.440, 0.000, 1.000]], [0.851, [0.440, 0.000, 1.000]], [0.853, [0.461, 0.000, 1.000]], [0.855, [0.461, 0.000, 1.000]], [0.857, [0.483, 0.000, 1.000]], [0.859, [0.483, 0.000, 1.000]], [0.861, [0.504, 0.000, 1.000]], [0.863, [0.504, 0.000, 1.000]], [0.865, [0.525, 0.000, 1.000]], [0.867, [0.525, 0.000, 1.000]], [0.869, [0.547, 0.000, 1.000]], [0.871, [0.547, 0.000, 1.000]], [0.873, [0.568, 0.000, 1.000]], [0.875, [0.568, 0.000, 1.000]], [0.877, [0.589, 0.000, 1.000]], [0.879, [0.589, 0.000, 1.000]], [0.881, [0.611, 0.000, 1.000]], [0.883, [0.611, 0.000, 1.000]], [0.885, [0.632, 0.000, 1.000]], [0.886, [0.632, 0.000, 1.000]], [0.888, [0.653, 0.000, 1.000]], [0.890, [0.653, 0.000, 1.000]], [0.892, [0.675, 0.000, 1.000]], [0.894, [0.675, 0.000, 1.000]], [0.896, [0.696, 0.000, 1.000]], [0.898, [0.696, 0.000, 1.000]], [0.900, [0.717, 0.000, 1.000]], [0.902, [0.717, 0.000, 1.000]], [0.904, [0.738, 0.000, 1.000]], [0.906, [0.738, 0.000, 1.000]], [0.908, [0.760, 0.000, 1.000]], [0.910, [0.760, 0.000, 1.000]], [0.912, [0.781, 0.000, 1.000]], [0.914, [0.781, 0.000, 1.000]], [0.916, [0.802, 0.000, 1.000]], [0.918, [0.802, 0.000, 1.000]], [0.920, [0.824, 0.000, 1.000]], [0.922, [0.824, 0.000, 1.000]], [0.924, [0.845, 0.000, 1.000]], [0.926, [0.845, 0.000, 1.000]], [0.928, [0.866, 0.000, 1.000]], [0.930, [0.866, 0.000, 1.000]], [0.932, [0.888, 0.000, 1.000]], [0.933, [0.888, 0.000, 1.000]], [0.935, [0.909, 0.000, 1.000]], [0.937, [0.909, 0.000, 1.000]], [0.939, [0.930, 0.000, 1.000]], [0.941, [0.930, 0.000, 1.000]], [0.943, [0.952, 0.000, 1.000]], [0.945, [0.952, 0.000, 1.000]], [0.947, [0.973, 0.000, 1.000]], [0.949, [0.973, 0.000, 1.000]], [0.951, [0.994, 0.000, 1.000]], [0.953, [0.994, 0.000, 1.000]], [0.955, [1.000, 0.000, 0.984]], [0.957, [1.000, 0.000, 0.984]], [0.959, [1.000, 0.000, 0.963]], [0.961, [1.000, 0.000, 0.963]], [0.963, [1.000, 0.000, 0.942]], [0.965, [1.000, 0.000, 0.942]], [0.967, [1.000, 0.000, 0.921]], [0.969, [1.000, 0.000, 0.921]], [0.971, [1.000, 0.000, 0.899]], [0.973, [1.000, 0.000, 0.899]], [0.975, [1.000, 0.000, 0.878]], [0.977, [1.000, 0.000, 0.878]], [0.978, [1.000, 0.000, 0.857]], [0.980, [1.000, 0.000, 0.857]], [0.982, [1.000, 0.000, 0.835]], [0.984, [1.000, 0.000, 0.835]], [0.986, [1.000, 0.000, 0.814]], [0.988, [1.000, 0.000, 0.814]], [0.990, [1.000, 0.000, 0.793]], [0.992, [1.000, 0.000, 0.793]], [0.994, [1.000, 0.000, 0.771]], [0.996, [1.000, 0.000, 0.771]], [0.998, [1.000, 0.000, 0.750]], [1.000, [1.000, 0.000, 0.750]]];
H.colormap_gist_stern = [[0.000, [0.000, 0.000, 0.000]], [0.002, [0.000, 0.000, 0.000]], [0.004, [0.072, 0.004, 0.008]], [0.006, [0.072, 0.004, 0.008]], [0.008, [0.143, 0.008, 0.016]], [0.010, [0.143, 0.008, 0.016]], [0.012, [0.215, 0.012, 0.024]], [0.014, [0.215, 0.012, 0.024]], [0.016, [0.287, 0.016, 0.031]], [0.018, [0.287, 0.016, 0.031]], [0.020, [0.358, 0.020, 0.039]], [0.022, [0.358, 0.020, 0.039]], [0.023, [0.430, 0.024, 0.047]], [0.025, [0.430, 0.024, 0.047]], [0.027, [0.502, 0.027, 0.055]], [0.029, [0.502, 0.027, 0.055]], [0.031, [0.574, 0.031, 0.063]], [0.033, [0.574, 0.031, 0.063]], [0.035, [0.645, 0.035, 0.071]], [0.037, [0.645, 0.035, 0.071]], [0.039, [0.717, 0.039, 0.078]], [0.041, [0.717, 0.039, 0.078]], [0.043, [0.789, 0.043, 0.086]], [0.045, [0.789, 0.043, 0.086]], [0.047, [0.860, 0.047, 0.094]], [0.049, [0.860, 0.047, 0.094]], [0.051, [0.932, 0.051, 0.102]], [0.053, [0.932, 0.051, 0.102]], [0.055, [0.999, 0.055, 0.110]], [0.057, [0.999, 0.055, 0.110]], [0.059, [0.979, 0.059, 0.118]], [0.061, [0.979, 0.059, 0.118]], [0.063, [0.960, 0.063, 0.125]], [0.065, [0.960, 0.063, 0.125]], [0.067, [0.940, 0.067, 0.133]], [0.068, [0.940, 0.067, 0.133]], [0.070, [0.921, 0.071, 0.141]], [0.072, [0.921, 0.071, 0.141]], [0.074, [0.901, 0.075, 0.149]], [0.076, [0.901, 0.075, 0.149]], [0.078, [0.882, 0.078, 0.157]], [0.080, [0.882, 0.078, 0.157]], [0.082, [0.862, 0.082, 0.165]], [0.084, [0.862, 0.082, 0.165]], [0.086, [0.843, 0.086, 0.173]], [0.088, [0.843, 0.086, 0.173]], [0.090, [0.823, 0.090, 0.180]], [0.092, [0.823, 0.090, 0.180]], [0.094, [0.804, 0.094, 0.188]], [0.096, [0.804, 0.094, 0.188]], [0.098, [0.784, 0.098, 0.196]], [0.100, [0.784, 0.098, 0.196]], [0.102, [0.765, 0.102, 0.204]], [0.104, [0.765, 0.102, 0.204]], [0.106, [0.745, 0.106, 0.212]], [0.108, [0.745, 0.106, 0.212]], [0.110, [0.725, 0.110, 0.220]], [0.112, [0.725, 0.110, 0.220]], [0.114, [0.706, 0.114, 0.227]], [0.115, [0.706, 0.114, 0.227]], [0.117, [0.686, 0.118, 0.235]], [0.119, [0.686, 0.118, 0.235]], [0.121, [0.667, 0.122, 0.243]], [0.123, [0.667, 0.122, 0.243]], [0.125, [0.647, 0.125, 0.251]], [0.127, [0.647, 0.125, 0.251]], [0.129, [0.628, 0.129, 0.259]], [0.131, [0.628, 0.129, 0.259]], [0.133, [0.608, 0.133, 0.267]], [0.135, [0.608, 0.133, 0.267]], [0.137, [0.589, 0.137, 0.275]], [0.139, [0.589, 0.137, 0.275]], [0.141, [0.569, 0.141, 0.282]], [0.143, [0.569, 0.141, 0.282]], [0.145, [0.550, 0.145, 0.290]], [0.147, [0.550, 0.145, 0.290]], [0.149, [0.530, 0.149, 0.298]], [0.151, [0.530, 0.149, 0.298]], [0.153, [0.511, 0.153, 0.306]], [0.155, [0.511, 0.153, 0.306]], [0.157, [0.491, 0.157, 0.314]], [0.159, [0.491, 0.157, 0.314]], [0.160, [0.471, 0.161, 0.322]], [0.162, [0.471, 0.161, 0.322]], [0.164, [0.452, 0.165, 0.329]], [0.166, [0.452, 0.165, 0.329]], [0.168, [0.432, 0.169, 0.337]], [0.170, [0.432, 0.169, 0.337]], [0.172, [0.413, 0.173, 0.345]], [0.174, [0.413, 0.173, 0.345]], [0.176, [0.393, 0.176, 0.353]], [0.178, [0.393, 0.176, 0.353]], [0.180, [0.374, 0.180, 0.361]], [0.182, [0.374, 0.180, 0.361]], [0.184, [0.354, 0.184, 0.369]], [0.186, [0.354, 0.184, 0.369]], [0.188, [0.335, 0.188, 0.376]], [0.190, [0.335, 0.188, 0.376]], [0.192, [0.315, 0.192, 0.384]], [0.194, [0.315, 0.192, 0.384]], [0.196, [0.296, 0.196, 0.392]], [0.198, [0.296, 0.196, 0.392]], [0.200, [0.276, 0.200, 0.400]], [0.202, [0.276, 0.200, 0.400]], [0.204, [0.257, 0.204, 0.408]], [0.205, [0.257, 0.204, 0.408]], [0.207, [0.237, 0.208, 0.416]], [0.209, [0.237, 0.208, 0.416]], [0.211, [0.217, 0.212, 0.424]], [0.213, [0.217, 0.212, 0.424]], [0.215, [0.198, 0.216, 0.431]], [0.217, [0.198, 0.216, 0.431]], [0.219, [0.178, 0.220, 0.439]], [0.221, [0.178, 0.220, 0.439]], [0.223, [0.159, 0.224, 0.447]], [0.225, [0.159, 0.224, 0.447]], [0.227, [0.139, 0.227, 0.455]], [0.229, [0.139, 0.227, 0.455]], [0.231, [0.120, 0.231, 0.463]], [0.233, [0.120, 0.231, 0.463]], [0.235, [0.100, 0.235, 0.471]], [0.237, [0.100, 0.235, 0.471]], [0.239, [0.081, 0.239, 0.478]], [0.241, [0.081, 0.239, 0.478]], [0.243, [0.061, 0.243, 0.486]], [0.245, [0.061, 0.243, 0.486]], [0.247, [0.042, 0.247, 0.494]], [0.249, [0.042, 0.247, 0.494]], [0.250, [0.251, 0.251, 0.502]], [0.252, [0.251, 0.251, 0.502]], [0.254, [0.255, 0.255, 0.510]], [0.256, [0.255, 0.255, 0.510]], [0.258, [0.259, 0.259, 0.518]], [0.260, [0.259, 0.259, 0.518]], [0.262, [0.263, 0.263, 0.525]], [0.264, [0.263, 0.263, 0.525]], [0.266, [0.267, 0.267, 0.533]], [0.268, [0.267, 0.267, 0.533]], [0.270, [0.271, 0.271, 0.541]], [0.272, [0.271, 0.271, 0.541]], [0.274, [0.275, 0.275, 0.549]], [0.276, [0.275, 0.275, 0.549]], [0.278, [0.278, 0.278, 0.557]], [0.280, [0.278, 0.278, 0.557]], [0.282, [0.282, 0.282, 0.565]], [0.284, [0.282, 0.282, 0.565]], [0.286, [0.286, 0.286, 0.573]], [0.288, [0.286, 0.286, 0.573]], [0.290, [0.290, 0.290, 0.580]], [0.292, [0.290, 0.290, 0.580]], [0.294, [0.294, 0.294, 0.588]], [0.295, [0.294, 0.294, 0.588]], [0.297, [0.298, 0.298, 0.596]], [0.299, [0.298, 0.298, 0.596]], [0.301, [0.302, 0.302, 0.604]], [0.303, [0.302, 0.302, 0.604]], [0.305, [0.306, 0.306, 0.612]], [0.307, [0.306, 0.306, 0.612]], [0.309, [0.310, 0.310, 0.620]], [0.311, [0.310, 0.310, 0.620]], [0.313, [0.314, 0.314, 0.627]], [0.315, [0.314, 0.314, 0.627]], [0.317, [0.318, 0.318, 0.635]], [0.319, [0.318, 0.318, 0.635]], [0.321, [0.322, 0.322, 0.643]], [0.323, [0.322, 0.322, 0.643]], [0.325, [0.325, 0.325, 0.651]], [0.327, [0.325, 0.325, 0.651]], [0.329, [0.329, 0.329, 0.659]], [0.331, [0.329, 0.329, 0.659]], [0.333, [0.333, 0.333, 0.667]], [0.335, [0.333, 0.333, 0.667]], [0.337, [0.337, 0.337, 0.675]], [0.339, [0.337, 0.337, 0.675]], [0.341, [0.341, 0.341, 0.682]], [0.342, [0.341, 0.341, 0.682]], [0.344, [0.345, 0.345, 0.690]], [0.346, [0.345, 0.345, 0.690]], [0.348, [0.349, 0.349, 0.698]], [0.350, [0.349, 0.349, 0.698]], [0.352, [0.353, 0.353, 0.706]], [0.354, [0.353, 0.353, 0.706]], [0.356, [0.357, 0.357, 0.714]], [0.358, [0.357, 0.357, 0.714]], [0.360, [0.361, 0.361, 0.722]], [0.362, [0.361, 0.361, 0.722]], [0.364, [0.365, 0.365, 0.729]], [0.366, [0.365, 0.365, 0.729]], [0.368, [0.369, 0.369, 0.737]], [0.370, [0.369, 0.369, 0.737]], [0.372, [0.373, 0.373, 0.745]], [0.374, [0.373, 0.373, 0.745]], [0.376, [0.376, 0.376, 0.753]], [0.378, [0.376, 0.376, 0.753]], [0.380, [0.380, 0.380, 0.761]], [0.382, [0.380, 0.380, 0.761]], [0.384, [0.384, 0.384, 0.769]], [0.386, [0.384, 0.384, 0.769]], [0.387, [0.388, 0.388, 0.776]], [0.389, [0.388, 0.388, 0.776]], [0.391, [0.392, 0.392, 0.784]], [0.393, [0.392, 0.392, 0.784]], [0.395, [0.396, 0.396, 0.792]], [0.397, [0.396, 0.396, 0.792]], [0.399, [0.400, 0.400, 0.800]], [0.401, [0.400, 0.400, 0.800]], [0.403, [0.404, 0.404, 0.808]], [0.405, [0.404, 0.404, 0.808]], [0.407, [0.408, 0.408, 0.816]], [0.409, [0.408, 0.408, 0.816]], [0.411, [0.412, 0.412, 0.824]], [0.413, [0.412, 0.412, 0.824]], [0.415, [0.416, 0.416, 0.831]], [0.417, [0.416, 0.416, 0.831]], [0.419, [0.420, 0.420, 0.839]], [0.421, [0.420, 0.420, 0.839]], [0.423, [0.424, 0.424, 0.847]], [0.425, [0.424, 0.424, 0.847]], [0.427, [0.427, 0.427, 0.855]], [0.429, [0.427, 0.427, 0.855]], [0.431, [0.431, 0.431, 0.863]], [0.432, [0.431, 0.431, 0.863]], [0.434, [0.435, 0.435, 0.871]], [0.436, [0.435, 0.435, 0.871]], [0.438, [0.439, 0.439, 0.878]], [0.440, [0.439, 0.439, 0.878]], [0.442, [0.443, 0.443, 0.886]], [0.444, [0.443, 0.443, 0.886]], [0.446, [0.447, 0.447, 0.894]], [0.448, [0.447, 0.447, 0.894]], [0.450, [0.451, 0.451, 0.902]], [0.452, [0.451, 0.451, 0.902]], [0.454, [0.455, 0.455, 0.910]], [0.456, [0.455, 0.455, 0.910]], [0.458, [0.459, 0.459, 0.918]], [0.460, [0.459, 0.459, 0.918]], [0.462, [0.463, 0.463, 0.925]], [0.464, [0.463, 0.463, 0.925]], [0.466, [0.467, 0.467, 0.933]], [0.468, [0.467, 0.467, 0.933]], [0.470, [0.471, 0.471, 0.941]], [0.472, [0.471, 0.471, 0.941]], [0.474, [0.475, 0.475, 0.949]], [0.476, [0.475, 0.475, 0.949]], [0.477, [0.478, 0.478, 0.957]], [0.479, [0.478, 0.478, 0.957]], [0.481, [0.482, 0.482, 0.965]], [0.483, [0.482, 0.482, 0.965]], [0.485, [0.486, 0.486, 0.973]], [0.487, [0.486, 0.486, 0.973]], [0.489, [0.490, 0.490, 0.980]], [0.491, [0.490, 0.490, 0.980]], [0.493, [0.494, 0.494, 0.988]], [0.495, [0.494, 0.494, 0.988]], [0.497, [0.498, 0.498, 0.996]], [0.499, [0.498, 0.498, 0.996]], [0.501, [0.502, 0.502, 0.992]], [0.503, [0.502, 0.502, 0.992]], [0.505, [0.506, 0.506, 0.975]], [0.507, [0.506, 0.506, 0.975]], [0.509, [0.510, 0.510, 0.958]], [0.511, [0.510, 0.510, 0.958]], [0.513, [0.514, 0.514, 0.942]], [0.515, [0.514, 0.514, 0.942]], [0.517, [0.518, 0.518, 0.925]], [0.519, [0.518, 0.518, 0.925]], [0.521, [0.522, 0.522, 0.908]], [0.523, [0.522, 0.522, 0.908]], [0.524, [0.525, 0.525, 0.892]], [0.526, [0.525, 0.525, 0.892]], [0.528, [0.529, 0.529, 0.875]], [0.530, [0.529, 0.529, 0.875]], [0.532, [0.533, 0.533, 0.858]], [0.534, [0.533, 0.533, 0.858]], [0.536, [0.537, 0.537, 0.841]], [0.538, [0.537, 0.537, 0.841]], [0.540, [0.541, 0.541, 0.825]], [0.542, [0.541, 0.541, 0.825]], [0.544, [0.545, 0.545, 0.808]], [0.546, [0.545, 0.545, 0.808]], [0.548, [0.549, 0.549, 0.791]], [0.550, [0.549, 0.549, 0.791]], [0.552, [0.553, 0.553, 0.775]], [0.554, [0.553, 0.553, 0.775]], [0.556, [0.557, 0.557, 0.758]], [0.558, [0.557, 0.557, 0.758]], [0.560, [0.561, 0.561, 0.741]], [0.562, [0.561, 0.561, 0.741]], [0.564, [0.565, 0.565, 0.725]], [0.566, [0.565, 0.565, 0.725]], [0.568, [0.569, 0.569, 0.708]], [0.569, [0.569, 0.569, 0.708]], [0.571, [0.573, 0.573, 0.691]], [0.573, [0.573, 0.573, 0.691]], [0.575, [0.576, 0.576, 0.675]], [0.577, [0.576, 0.576, 0.675]], [0.579, [0.580, 0.580, 0.658]], [0.581, [0.580, 0.580, 0.658]], [0.583, [0.584, 0.584, 0.641]], [0.585, [0.584, 0.584, 0.641]], [0.587, [0.588, 0.588, 0.625]], [0.589, [0.588, 0.588, 0.625]], [0.591, [0.592, 0.592, 0.608]], [0.593, [0.592, 0.592, 0.608]], [0.595, [0.596, 0.596, 0.591]], [0.597, [0.596, 0.596, 0.591]], [0.599, [0.600, 0.600, 0.574]], [0.601, [0.600, 0.600, 0.574]], [0.603, [0.604, 0.604, 0.558]], [0.605, [0.604, 0.604, 0.558]], [0.607, [0.608, 0.608, 0.541]], [0.609, [0.608, 0.608, 0.541]], [0.611, [0.612, 0.612, 0.524]], [0.613, [0.612, 0.612, 0.524]], [0.614, [0.616, 0.616, 0.508]], [0.616, [0.616, 0.616, 0.508]], [0.618, [0.620, 0.620, 0.491]], [0.620, [0.620, 0.620, 0.491]], [0.622, [0.624, 0.624, 0.474]], [0.624, [0.624, 0.624, 0.474]], [0.626, [0.627, 0.627, 0.458]], [0.628, [0.627, 0.627, 0.458]], [0.630, [0.631, 0.631, 0.441]], [0.632, [0.631, 0.631, 0.441]], [0.634, [0.635, 0.635, 0.424]], [0.636, [0.635, 0.635, 0.424]], [0.638, [0.639, 0.639, 0.408]], [0.640, [0.639, 0.639, 0.408]], [0.642, [0.643, 0.643, 0.391]], [0.644, [0.643, 0.643, 0.391]], [0.646, [0.647, 0.647, 0.374]], [0.648, [0.647, 0.647, 0.374]], [0.650, [0.651, 0.651, 0.358]], [0.652, [0.651, 0.651, 0.358]], [0.654, [0.655, 0.655, 0.341]], [0.656, [0.655, 0.655, 0.341]], [0.658, [0.659, 0.659, 0.324]], [0.659, [0.659, 0.659, 0.324]], [0.661, [0.663, 0.663, 0.307]], [0.663, [0.663, 0.663, 0.307]], [0.665, [0.667, 0.667, 0.291]], [0.667, [0.667, 0.667, 0.291]], [0.669, [0.671, 0.671, 0.274]], [0.671, [0.671, 0.671, 0.274]], [0.673, [0.675, 0.675, 0.257]], [0.675, [0.675, 0.675, 0.257]], [0.677, [0.678, 0.678, 0.241]], [0.679, [0.678, 0.678, 0.241]], [0.681, [0.682, 0.682, 0.224]], [0.683, [0.682, 0.682, 0.224]], [0.685, [0.686, 0.686, 0.207]], [0.687, [0.686, 0.686, 0.207]], [0.689, [0.690, 0.690, 0.191]], [0.691, [0.690, 0.690, 0.191]], [0.693, [0.694, 0.694, 0.174]], [0.695, [0.694, 0.694, 0.174]], [0.697, [0.698, 0.698, 0.157]], [0.699, [0.698, 0.698, 0.157]], [0.701, [0.702, 0.702, 0.141]], [0.703, [0.702, 0.702, 0.141]], [0.705, [0.706, 0.706, 0.124]], [0.706, [0.706, 0.706, 0.124]], [0.708, [0.710, 0.710, 0.107]], [0.710, [0.710, 0.710, 0.107]], [0.712, [0.714, 0.714, 0.091]], [0.714, [0.714, 0.714, 0.091]], [0.716, [0.718, 0.718, 0.074]], [0.718, [0.718, 0.718, 0.074]], [0.720, [0.722, 0.722, 0.057]], [0.722, [0.722, 0.722, 0.057]], [0.724, [0.725, 0.725, 0.040]], [0.726, [0.725, 0.725, 0.040]], [0.728, [0.729, 0.729, 0.024]], [0.730, [0.729, 0.729, 0.024]], [0.732, [0.733, 0.733, 0.007]], [0.734, [0.733, 0.733, 0.007]], [0.736, [0.737, 0.737, 0.009]], [0.738, [0.737, 0.737, 0.009]], [0.740, [0.741, 0.741, 0.023]], [0.742, [0.741, 0.741, 0.023]], [0.744, [0.745, 0.745, 0.038]], [0.746, [0.745, 0.745, 0.038]], [0.748, [0.749, 0.749, 0.053]], [0.750, [0.749, 0.749, 0.053]], [0.751, [0.753, 0.753, 0.068]], [0.753, [0.753, 0.753, 0.068]], [0.755, [0.757, 0.757, 0.083]], [0.757, [0.757, 0.757, 0.083]], [0.759, [0.761, 0.761, 0.097]], [0.761, [0.761, 0.761, 0.097]], [0.763, [0.765, 0.765, 0.112]], [0.765, [0.765, 0.765, 0.112]], [0.767, [0.769, 0.769, 0.127]], [0.769, [0.769, 0.769, 0.127]], [0.771, [0.773, 0.773, 0.142]], [0.773, [0.773, 0.773, 0.142]], [0.775, [0.776, 0.776, 0.156]], [0.777, [0.776, 0.776, 0.156]], [0.779, [0.780, 0.780, 0.171]], [0.781, [0.780, 0.780, 0.171]], [0.783, [0.784, 0.784, 0.186]], [0.785, [0.784, 0.784, 0.186]], [0.787, [0.788, 0.788, 0.201]], [0.789, [0.788, 0.788, 0.201]], [0.791, [0.792, 0.792, 0.216]], [0.793, [0.792, 0.792, 0.216]], [0.795, [0.796, 0.796, 0.230]], [0.796, [0.796, 0.796, 0.230]], [0.798, [0.800, 0.800, 0.245]], [0.800, [0.800, 0.800, 0.245]], [0.802, [0.804, 0.804, 0.260]], [0.804, [0.804, 0.804, 0.260]], [0.806, [0.808, 0.808, 0.275]], [0.808, [0.808, 0.808, 0.275]], [0.810, [0.812, 0.812, 0.290]], [0.812, [0.812, 0.812, 0.290]], [0.814, [0.816, 0.816, 0.304]], [0.816, [0.816, 0.816, 0.304]], [0.818, [0.820, 0.820, 0.319]], [0.820, [0.820, 0.820, 0.319]], [0.822, [0.824, 0.824, 0.334]], [0.824, [0.824, 0.824, 0.334]], [0.826, [0.827, 0.827, 0.349]], [0.828, [0.827, 0.827, 0.349]], [0.830, [0.831, 0.831, 0.364]], [0.832, [0.831, 0.831, 0.364]], [0.834, [0.835, 0.835, 0.378]], [0.836, [0.835, 0.835, 0.378]], [0.838, [0.839, 0.839, 0.393]], [0.840, [0.839, 0.839, 0.393]], [0.841, [0.843, 0.843, 0.408]], [0.843, [0.843, 0.843, 0.408]], [0.845, [0.847, 0.847, 0.423]], [0.847, [0.847, 0.847, 0.423]], [0.849, [0.851, 0.851, 0.438]], [0.851, [0.851, 0.851, 0.438]], [0.853, [0.855, 0.855, 0.452]], [0.855, [0.855, 0.855, 0.452]], [0.857, [0.859, 0.859, 0.467]], [0.859, [0.859, 0.859, 0.467]], [0.861, [0.863, 0.863, 0.482]], [0.863, [0.863, 0.863, 0.482]], [0.865, [0.867, 0.867, 0.497]], [0.867, [0.867, 0.867, 0.497]], [0.869, [0.871, 0.871, 0.512]], [0.871, [0.871, 0.871, 0.512]], [0.873, [0.875, 0.875, 0.526]], [0.875, [0.875, 0.875, 0.526]], [0.877, [0.878, 0.878, 0.541]], [0.879, [0.878, 0.878, 0.541]], [0.881, [0.882, 0.882, 0.556]], [0.883, [0.882, 0.882, 0.556]], [0.885, [0.886, 0.886, 0.571]], [0.886, [0.886, 0.886, 0.571]], [0.888, [0.890, 0.890, 0.586]], [0.890, [0.890, 0.890, 0.586]], [0.892, [0.894, 0.894, 0.600]], [0.894, [0.894, 0.894, 0.600]], [0.896, [0.898, 0.898, 0.615]], [0.898, [0.898, 0.898, 0.615]], [0.900, [0.902, 0.902, 0.630]], [0.902, [0.902, 0.902, 0.630]], [0.904, [0.906, 0.906, 0.645]], [0.906, [0.906, 0.906, 0.645]], [0.908, [0.910, 0.910, 0.660]], [0.910, [0.910, 0.910, 0.660]], [0.912, [0.914, 0.914, 0.674]], [0.914, [0.914, 0.914, 0.674]], [0.916, [0.918, 0.918, 0.689]], [0.918, [0.918, 0.918, 0.689]], [0.920, [0.922, 0.922, 0.704]], [0.922, [0.922, 0.922, 0.704]], [0.924, [0.925, 0.925, 0.719]], [0.926, [0.925, 0.925, 0.719]], [0.928, [0.929, 0.929, 0.734]], [0.930, [0.929, 0.929, 0.734]], [0.932, [0.933, 0.933, 0.748]], [0.933, [0.933, 0.933, 0.748]], [0.935, [0.937, 0.937, 0.763]], [0.937, [0.937, 0.937, 0.763]], [0.939, [0.941, 0.941, 0.778]], [0.941, [0.941, 0.941, 0.778]], [0.943, [0.945, 0.945, 0.793]], [0.945, [0.945, 0.945, 0.793]], [0.947, [0.949, 0.949, 0.808]], [0.949, [0.949, 0.949, 0.808]], [0.951, [0.953, 0.953, 0.822]], [0.953, [0.953, 0.953, 0.822]], [0.955, [0.957, 0.957, 0.837]], [0.957, [0.957, 0.957, 0.837]], [0.959, [0.961, 0.961, 0.852]], [0.961, [0.961, 0.961, 0.852]], [0.963, [0.965, 0.965, 0.867]], [0.965, [0.965, 0.965, 0.867]], [0.967, [0.969, 0.969, 0.882]], [0.969, [0.969, 0.969, 0.882]], [0.971, [0.973, 0.973, 0.896]], [0.973, [0.973, 0.973, 0.896]], [0.975, [0.976, 0.976, 0.911]], [0.977, [0.976, 0.976, 0.911]], [0.978, [0.980, 0.980, 0.926]], [0.980, [0.980, 0.980, 0.926]], [0.982, [0.984, 0.984, 0.941]], [0.984, [0.984, 0.984, 0.941]], [0.986, [0.988, 0.988, 0.956]], [0.988, [0.988, 0.988, 0.956]], [0.990, [0.992, 0.992, 0.970]], [0.992, [0.992, 0.992, 0.970]], [0.994, [0.996, 0.996, 0.985]], [0.996, [0.996, 0.996, 0.985]], [0.998, [1.000, 1.000, 1.000]], [1.000, [1.000, 1.000, 1.000]]];
H.colormap_GnBu = [[0.000, [0.969, 0.988, 0.941]], [0.002, [0.969, 0.988, 0.941]], [0.004, [0.966, 0.987, 0.939]], [0.006, [0.966, 0.987, 0.939]], [0.008, [0.963, 0.986, 0.936]], [0.010, [0.963, 0.986, 0.936]], [0.012, [0.960, 0.985, 0.933]], [0.014, [0.960, 0.985, 0.933]], [0.016, [0.957, 0.984, 0.931]], [0.018, [0.957, 0.984, 0.931]], [0.020, [0.954, 0.983, 0.928]], [0.022, [0.954, 0.983, 0.928]], [0.023, [0.952, 0.982, 0.926]], [0.025, [0.952, 0.982, 0.926]], [0.027, [0.949, 0.980, 0.923]], [0.029, [0.949, 0.980, 0.923]], [0.031, [0.946, 0.979, 0.921]], [0.033, [0.946, 0.979, 0.921]], [0.035, [0.943, 0.978, 0.918]], [0.037, [0.943, 0.978, 0.918]], [0.039, [0.940, 0.977, 0.915]], [0.041, [0.940, 0.977, 0.915]], [0.043, [0.938, 0.976, 0.913]], [0.045, [0.938, 0.976, 0.913]], [0.047, [0.935, 0.975, 0.910]], [0.049, [0.935, 0.975, 0.910]], [0.051, [0.932, 0.974, 0.908]], [0.053, [0.932, 0.974, 0.908]], [0.055, [0.929, 0.973, 0.905]], [0.057, [0.929, 0.973, 0.905]], [0.059, [0.926, 0.972, 0.902]], [0.061, [0.926, 0.972, 0.902]], [0.063, [0.923, 0.971, 0.900]], [0.065, [0.923, 0.971, 0.900]], [0.067, [0.921, 0.969, 0.897]], [0.068, [0.921, 0.969, 0.897]], [0.070, [0.918, 0.968, 0.895]], [0.072, [0.918, 0.968, 0.895]], [0.074, [0.915, 0.967, 0.892]], [0.076, [0.915, 0.967, 0.892]], [0.078, [0.912, 0.966, 0.890]], [0.080, [0.912, 0.966, 0.890]], [0.082, [0.909, 0.965, 0.887]], [0.084, [0.909, 0.965, 0.887]], [0.086, [0.906, 0.964, 0.884]], [0.088, [0.906, 0.964, 0.884]], [0.090, [0.904, 0.963, 0.882]], [0.092, [0.904, 0.963, 0.882]], [0.094, [0.901, 0.962, 0.879]], [0.096, [0.901, 0.962, 0.879]], [0.098, [0.898, 0.961, 0.877]], [0.100, [0.898, 0.961, 0.877]], [0.102, [0.895, 0.959, 0.874]], [0.104, [0.895, 0.959, 0.874]], [0.106, [0.892, 0.958, 0.871]], [0.108, [0.892, 0.958, 0.871]], [0.110, [0.889, 0.957, 0.869]], [0.112, [0.889, 0.957, 0.869]], [0.114, [0.887, 0.956, 0.866]], [0.115, [0.887, 0.956, 0.866]], [0.117, [0.884, 0.955, 0.864]], [0.119, [0.884, 0.955, 0.864]], [0.121, [0.881, 0.954, 0.861]], [0.123, [0.881, 0.954, 0.861]], [0.125, [0.878, 0.953, 0.858]], [0.127, [0.878, 0.953, 0.858]], [0.129, [0.876, 0.952, 0.856]], [0.131, [0.876, 0.952, 0.856]], [0.133, [0.873, 0.951, 0.853]], [0.135, [0.873, 0.951, 0.853]], [0.137, [0.871, 0.950, 0.850]], [0.139, [0.871, 0.950, 0.850]], [0.141, [0.868, 0.949, 0.848]], [0.143, [0.868, 0.949, 0.848]], [0.145, [0.866, 0.948, 0.845]], [0.147, [0.866, 0.948, 0.845]], [0.149, [0.863, 0.947, 0.842]], [0.151, [0.863, 0.947, 0.842]], [0.153, [0.861, 0.946, 0.840]], [0.155, [0.861, 0.946, 0.840]], [0.157, [0.858, 0.945, 0.837]], [0.159, [0.858, 0.945, 0.837]], [0.160, [0.856, 0.944, 0.834]], [0.162, [0.856, 0.944, 0.834]], [0.164, [0.854, 0.943, 0.831]], [0.166, [0.854, 0.943, 0.831]], [0.168, [0.851, 0.942, 0.829]], [0.170, [0.851, 0.942, 0.829]], [0.172, [0.849, 0.941, 0.826]], [0.174, [0.849, 0.941, 0.826]], [0.176, [0.846, 0.940, 0.823]], [0.178, [0.846, 0.940, 0.823]], [0.180, [0.844, 0.939, 0.821]], [0.182, [0.844, 0.939, 0.821]], [0.184, [0.841, 0.938, 0.818]], [0.186, [0.841, 0.938, 0.818]], [0.188, [0.839, 0.937, 0.815]], [0.190, [0.839, 0.937, 0.815]], [0.192, [0.836, 0.936, 0.812]], [0.194, [0.836, 0.936, 0.812]], [0.196, [0.834, 0.935, 0.810]], [0.198, [0.834, 0.935, 0.810]], [0.200, [0.831, 0.934, 0.807]], [0.202, [0.831, 0.934, 0.807]], [0.204, [0.829, 0.933, 0.804]], [0.205, [0.829, 0.933, 0.804]], [0.207, [0.826, 0.932, 0.802]], [0.209, [0.826, 0.932, 0.802]], [0.211, [0.824, 0.931, 0.799]], [0.213, [0.824, 0.931, 0.799]], [0.215, [0.822, 0.930, 0.796]], [0.217, [0.822, 0.930, 0.796]], [0.219, [0.819, 0.929, 0.794]], [0.221, [0.819, 0.929, 0.794]], [0.223, [0.817, 0.928, 0.791]], [0.225, [0.817, 0.928, 0.791]], [0.227, [0.814, 0.927, 0.788]], [0.229, [0.814, 0.927, 0.788]], [0.231, [0.812, 0.926, 0.785]], [0.233, [0.812, 0.926, 0.785]], [0.235, [0.809, 0.925, 0.783]], [0.237, [0.809, 0.925, 0.783]], [0.239, [0.807, 0.924, 0.780]], [0.241, [0.807, 0.924, 0.780]], [0.243, [0.804, 0.923, 0.777]], [0.245, [0.804, 0.923, 0.777]], [0.247, [0.802, 0.922, 0.775]], [0.249, [0.802, 0.922, 0.775]], [0.250, [0.799, 0.921, 0.772]], [0.252, [0.799, 0.921, 0.772]], [0.254, [0.794, 0.919, 0.770]], [0.256, [0.794, 0.919, 0.770]], [0.258, [0.790, 0.918, 0.768]], [0.260, [0.790, 0.918, 0.768]], [0.262, [0.786, 0.916, 0.766]], [0.264, [0.786, 0.916, 0.766]], [0.266, [0.781, 0.914, 0.764]], [0.268, [0.781, 0.914, 0.764]], [0.270, [0.777, 0.913, 0.762]], [0.272, [0.777, 0.913, 0.762]], [0.274, [0.772, 0.911, 0.760]], [0.276, [0.772, 0.911, 0.760]], [0.278, [0.768, 0.909, 0.758]], [0.280, [0.768, 0.909, 0.758]], [0.282, [0.763, 0.907, 0.756]], [0.284, [0.763, 0.907, 0.756]], [0.286, [0.759, 0.906, 0.754]], [0.288, [0.759, 0.906, 0.754]], [0.290, [0.755, 0.904, 0.752]], [0.292, [0.755, 0.904, 0.752]], [0.294, [0.750, 0.902, 0.750]], [0.295, [0.750, 0.902, 0.750]], [0.297, [0.746, 0.900, 0.748]], [0.299, [0.746, 0.900, 0.748]], [0.301, [0.741, 0.899, 0.746]], [0.303, [0.741, 0.899, 0.746]], [0.305, [0.737, 0.897, 0.744]], [0.307, [0.737, 0.897, 0.744]], [0.309, [0.732, 0.895, 0.743]], [0.311, [0.732, 0.895, 0.743]], [0.313, [0.728, 0.894, 0.741]], [0.315, [0.728, 0.894, 0.741]], [0.317, [0.724, 0.892, 0.739]], [0.319, [0.724, 0.892, 0.739]], [0.321, [0.719, 0.890, 0.737]], [0.323, [0.719, 0.890, 0.737]], [0.325, [0.715, 0.888, 0.735]], [0.327, [0.715, 0.888, 0.735]], [0.329, [0.710, 0.887, 0.733]], [0.331, [0.710, 0.887, 0.733]], [0.333, [0.706, 0.885, 0.731]], [0.335, [0.706, 0.885, 0.731]], [0.337, [0.701, 0.883, 0.729]], [0.339, [0.701, 0.883, 0.729]], [0.341, [0.697, 0.882, 0.727]], [0.342, [0.697, 0.882, 0.727]], [0.344, [0.693, 0.880, 0.725]], [0.346, [0.693, 0.880, 0.725]], [0.348, [0.688, 0.878, 0.723]], [0.350, [0.688, 0.878, 0.723]], [0.352, [0.684, 0.876, 0.721]], [0.354, [0.684, 0.876, 0.721]], [0.356, [0.679, 0.875, 0.719]], [0.358, [0.679, 0.875, 0.719]], [0.360, [0.675, 0.873, 0.717]], [0.362, [0.675, 0.873, 0.717]], [0.364, [0.670, 0.871, 0.715]], [0.366, [0.670, 0.871, 0.715]], [0.368, [0.666, 0.869, 0.713]], [0.370, [0.666, 0.869, 0.713]], [0.372, [0.662, 0.868, 0.711]], [0.374, [0.662, 0.868, 0.711]], [0.376, [0.657, 0.866, 0.710]], [0.378, [0.657, 0.866, 0.710]], [0.380, [0.651, 0.864, 0.712]], [0.382, [0.651, 0.864, 0.712]], [0.384, [0.646, 0.862, 0.714]], [0.386, [0.646, 0.862, 0.714]], [0.387, [0.640, 0.860, 0.716]], [0.389, [0.640, 0.860, 0.716]], [0.391, [0.635, 0.858, 0.718]], [0.393, [0.635, 0.858, 0.718]], [0.395, [0.629, 0.855, 0.720]], [0.397, [0.629, 0.855, 0.720]], [0.399, [0.624, 0.853, 0.722]], [0.401, [0.624, 0.853, 0.722]], [0.403, [0.618, 0.851, 0.723]], [0.405, [0.618, 0.851, 0.723]], [0.407, [0.612, 0.849, 0.725]], [0.409, [0.612, 0.849, 0.725]], [0.411, [0.607, 0.847, 0.727]], [0.413, [0.607, 0.847, 0.727]], [0.415, [0.601, 0.845, 0.729]], [0.417, [0.601, 0.845, 0.729]], [0.419, [0.596, 0.843, 0.731]], [0.421, [0.596, 0.843, 0.731]], [0.423, [0.590, 0.841, 0.733]], [0.425, [0.590, 0.841, 0.733]], [0.427, [0.585, 0.839, 0.734]], [0.429, [0.585, 0.839, 0.734]], [0.431, [0.579, 0.837, 0.736]], [0.432, [0.579, 0.837, 0.736]], [0.434, [0.574, 0.835, 0.738]], [0.436, [0.574, 0.835, 0.738]], [0.438, [0.568, 0.832, 0.740]], [0.440, [0.568, 0.832, 0.740]], [0.442, [0.563, 0.830, 0.742]], [0.444, [0.563, 0.830, 0.742]], [0.446, [0.557, 0.828, 0.744]], [0.448, [0.557, 0.828, 0.744]], [0.450, [0.552, 0.826, 0.746]], [0.452, [0.552, 0.826, 0.746]], [0.454, [0.546, 0.824, 0.747]], [0.456, [0.546, 0.824, 0.747]], [0.458, [0.540, 0.822, 0.749]], [0.460, [0.540, 0.822, 0.749]], [0.462, [0.535, 0.820, 0.751]], [0.464, [0.535, 0.820, 0.751]], [0.466, [0.529, 0.818, 0.753]], [0.468, [0.529, 0.818, 0.753]], [0.470, [0.524, 0.816, 0.755]], [0.472, [0.524, 0.816, 0.755]], [0.474, [0.518, 0.814, 0.757]], [0.476, [0.518, 0.814, 0.757]], [0.477, [0.513, 0.812, 0.758]], [0.479, [0.513, 0.812, 0.758]], [0.481, [0.507, 0.809, 0.760]], [0.483, [0.507, 0.809, 0.760]], [0.485, [0.502, 0.807, 0.762]], [0.487, [0.502, 0.807, 0.762]], [0.489, [0.496, 0.805, 0.764]], [0.491, [0.496, 0.805, 0.764]], [0.493, [0.491, 0.803, 0.766]], [0.495, [0.491, 0.803, 0.766]], [0.497, [0.485, 0.801, 0.768]], [0.499, [0.485, 0.801, 0.768]], [0.501, [0.480, 0.798, 0.770]], [0.503, [0.480, 0.798, 0.770]], [0.505, [0.474, 0.795, 0.771]], [0.507, [0.474, 0.795, 0.771]], [0.509, [0.469, 0.792, 0.773]], [0.511, [0.469, 0.792, 0.773]], [0.513, [0.463, 0.789, 0.775]], [0.515, [0.463, 0.789, 0.775]], [0.517, [0.457, 0.786, 0.777]], [0.519, [0.457, 0.786, 0.777]], [0.521, [0.452, 0.783, 0.779]], [0.523, [0.452, 0.783, 0.779]], [0.524, [0.446, 0.780, 0.781]], [0.526, [0.446, 0.780, 0.781]], [0.528, [0.441, 0.777, 0.782]], [0.530, [0.441, 0.777, 0.782]], [0.532, [0.435, 0.774, 0.784]], [0.534, [0.435, 0.774, 0.784]], [0.536, [0.430, 0.771, 0.786]], [0.538, [0.430, 0.771, 0.786]], [0.540, [0.424, 0.768, 0.788]], [0.542, [0.424, 0.768, 0.788]], [0.544, [0.419, 0.765, 0.790]], [0.546, [0.419, 0.765, 0.790]], [0.548, [0.413, 0.762, 0.792]], [0.550, [0.413, 0.762, 0.792]], [0.552, [0.408, 0.758, 0.794]], [0.554, [0.408, 0.758, 0.794]], [0.556, [0.402, 0.755, 0.795]], [0.558, [0.402, 0.755, 0.795]], [0.560, [0.397, 0.752, 0.797]], [0.562, [0.397, 0.752, 0.797]], [0.564, [0.391, 0.749, 0.799]], [0.566, [0.391, 0.749, 0.799]], [0.568, [0.385, 0.746, 0.801]], [0.569, [0.385, 0.746, 0.801]], [0.571, [0.380, 0.743, 0.803]], [0.573, [0.380, 0.743, 0.803]], [0.575, [0.374, 0.740, 0.805]], [0.577, [0.374, 0.740, 0.805]], [0.579, [0.369, 0.737, 0.806]], [0.581, [0.369, 0.737, 0.806]], [0.583, [0.363, 0.734, 0.808]], [0.585, [0.363, 0.734, 0.808]], [0.587, [0.358, 0.731, 0.810]], [0.589, [0.358, 0.731, 0.810]], [0.591, [0.352, 0.728, 0.812]], [0.593, [0.352, 0.728, 0.812]], [0.595, [0.347, 0.725, 0.814]], [0.597, [0.347, 0.725, 0.814]], [0.599, [0.341, 0.722, 0.816]], [0.601, [0.341, 0.722, 0.816]], [0.603, [0.336, 0.718, 0.818]], [0.605, [0.336, 0.718, 0.818]], [0.607, [0.330, 0.715, 0.819]], [0.609, [0.330, 0.715, 0.819]], [0.611, [0.325, 0.712, 0.821]], [0.613, [0.325, 0.712, 0.821]], [0.614, [0.319, 0.709, 0.823]], [0.616, [0.319, 0.709, 0.823]], [0.618, [0.313, 0.706, 0.825]], [0.620, [0.313, 0.706, 0.825]], [0.622, [0.308, 0.703, 0.827]], [0.624, [0.308, 0.703, 0.827]], [0.626, [0.303, 0.699, 0.826]], [0.628, [0.303, 0.699, 0.826]], [0.630, [0.299, 0.694, 0.823]], [0.632, [0.299, 0.694, 0.823]], [0.634, [0.295, 0.689, 0.821]], [0.636, [0.295, 0.689, 0.821]], [0.638, [0.290, 0.685, 0.818]], [0.640, [0.290, 0.685, 0.818]], [0.642, [0.286, 0.680, 0.816]], [0.644, [0.286, 0.680, 0.816]], [0.646, [0.282, 0.675, 0.813]], [0.648, [0.282, 0.675, 0.813]], [0.650, [0.277, 0.670, 0.810]], [0.652, [0.277, 0.670, 0.810]], [0.654, [0.273, 0.665, 0.808]], [0.656, [0.273, 0.665, 0.808]], [0.658, [0.269, 0.661, 0.805]], [0.659, [0.269, 0.661, 0.805]], [0.661, [0.264, 0.656, 0.803]], [0.663, [0.264, 0.656, 0.803]], [0.665, [0.260, 0.651, 0.800]], [0.667, [0.260, 0.651, 0.800]], [0.669, [0.256, 0.646, 0.797]], [0.671, [0.256, 0.646, 0.797]], [0.673, [0.252, 0.641, 0.795]], [0.675, [0.252, 0.641, 0.795]], [0.677, [0.247, 0.637, 0.792]], [0.679, [0.247, 0.637, 0.792]], [0.681, [0.243, 0.632, 0.790]], [0.683, [0.243, 0.632, 0.790]], [0.685, [0.239, 0.627, 0.787]], [0.687, [0.239, 0.627, 0.787]], [0.689, [0.234, 0.622, 0.784]], [0.691, [0.234, 0.622, 0.784]], [0.693, [0.230, 0.617, 0.782]], [0.695, [0.230, 0.617, 0.782]], [0.697, [0.226, 0.613, 0.779]], [0.699, [0.226, 0.613, 0.779]], [0.701, [0.221, 0.608, 0.777]], [0.703, [0.221, 0.608, 0.777]], [0.705, [0.217, 0.603, 0.774]], [0.706, [0.217, 0.603, 0.774]], [0.708, [0.213, 0.598, 0.772]], [0.710, [0.213, 0.598, 0.772]], [0.712, [0.208, 0.593, 0.769]], [0.714, [0.208, 0.593, 0.769]], [0.716, [0.204, 0.589, 0.766]], [0.718, [0.204, 0.589, 0.766]], [0.720, [0.200, 0.584, 0.764]], [0.722, [0.200, 0.584, 0.764]], [0.724, [0.196, 0.579, 0.761]], [0.726, [0.196, 0.579, 0.761]], [0.728, [0.191, 0.574, 0.759]], [0.730, [0.191, 0.574, 0.759]], [0.732, [0.187, 0.569, 0.756]], [0.734, [0.187, 0.569, 0.756]], [0.736, [0.183, 0.565, 0.753]], [0.738, [0.183, 0.565, 0.753]], [0.740, [0.178, 0.560, 0.751]], [0.742, [0.178, 0.560, 0.751]], [0.744, [0.174, 0.555, 0.748]], [0.746, [0.174, 0.555, 0.748]], [0.748, [0.170, 0.550, 0.746]], [0.750, [0.170, 0.550, 0.746]], [0.751, [0.165, 0.546, 0.743]], [0.753, [0.165, 0.546, 0.743]], [0.755, [0.161, 0.541, 0.741]], [0.757, [0.161, 0.541, 0.741]], [0.759, [0.157, 0.537, 0.739]], [0.761, [0.157, 0.537, 0.739]], [0.763, [0.152, 0.532, 0.737]], [0.765, [0.152, 0.532, 0.737]], [0.767, [0.148, 0.528, 0.735]], [0.769, [0.148, 0.528, 0.735]], [0.771, [0.144, 0.524, 0.732]], [0.773, [0.144, 0.524, 0.732]], [0.775, [0.140, 0.519, 0.730]], [0.777, [0.140, 0.519, 0.730]], [0.779, [0.135, 0.515, 0.728]], [0.781, [0.135, 0.515, 0.728]], [0.783, [0.131, 0.510, 0.726]], [0.785, [0.131, 0.510, 0.726]], [0.787, [0.127, 0.506, 0.724]], [0.789, [0.127, 0.506, 0.724]], [0.791, [0.122, 0.501, 0.721]], [0.793, [0.122, 0.501, 0.721]], [0.795, [0.118, 0.497, 0.719]], [0.796, [0.118, 0.497, 0.719]], [0.798, [0.114, 0.493, 0.717]], [0.800, [0.114, 0.493, 0.717]], [0.802, [0.109, 0.488, 0.715]], [0.804, [0.109, 0.488, 0.715]], [0.806, [0.105, 0.484, 0.712]], [0.808, [0.105, 0.484, 0.712]], [0.810, [0.101, 0.479, 0.710]], [0.812, [0.101, 0.479, 0.710]], [0.814, [0.097, 0.475, 0.708]], [0.816, [0.097, 0.475, 0.708]], [0.818, [0.092, 0.470, 0.706]], [0.820, [0.092, 0.470, 0.706]], [0.822, [0.088, 0.466, 0.704]], [0.824, [0.088, 0.466, 0.704]], [0.826, [0.084, 0.462, 0.701]], [0.828, [0.084, 0.462, 0.701]], [0.830, [0.079, 0.457, 0.699]], [0.832, [0.079, 0.457, 0.699]], [0.834, [0.075, 0.453, 0.697]], [0.836, [0.075, 0.453, 0.697]], [0.838, [0.071, 0.448, 0.695]], [0.840, [0.071, 0.448, 0.695]], [0.841, [0.066, 0.444, 0.693]], [0.843, [0.066, 0.444, 0.693]], [0.845, [0.062, 0.439, 0.690]], [0.847, [0.062, 0.439, 0.690]], [0.849, [0.058, 0.435, 0.688]], [0.851, [0.058, 0.435, 0.688]], [0.853, [0.053, 0.431, 0.686]], [0.855, [0.053, 0.431, 0.686]], [0.857, [0.049, 0.426, 0.684]], [0.859, [0.049, 0.426, 0.684]], [0.861, [0.045, 0.422, 0.681]], [0.863, [0.045, 0.422, 0.681]], [0.865, [0.041, 0.417, 0.679]], [0.867, [0.041, 0.417, 0.679]], [0.869, [0.036, 0.413, 0.677]], [0.871, [0.036, 0.413, 0.677]], [0.873, [0.032, 0.408, 0.675]], [0.875, [0.032, 0.408, 0.675]], [0.877, [0.031, 0.404, 0.670]], [0.879, [0.031, 0.404, 0.670]], [0.881, [0.031, 0.399, 0.665]], [0.883, [0.031, 0.399, 0.665]], [0.885, [0.031, 0.394, 0.659]], [0.886, [0.031, 0.394, 0.659]], [0.888, [0.031, 0.389, 0.654]], [0.890, [0.031, 0.389, 0.654]], [0.892, [0.031, 0.384, 0.649]], [0.894, [0.031, 0.384, 0.649]], [0.896, [0.031, 0.379, 0.643]], [0.898, [0.031, 0.379, 0.643]], [0.900, [0.031, 0.374, 0.638]], [0.902, [0.031, 0.374, 0.638]], [0.904, [0.031, 0.369, 0.633]], [0.906, [0.031, 0.369, 0.633]], [0.908, [0.031, 0.364, 0.628]], [0.910, [0.031, 0.364, 0.628]], [0.912, [0.031, 0.359, 0.622]], [0.914, [0.031, 0.359, 0.622]], [0.916, [0.031, 0.354, 0.617]], [0.918, [0.031, 0.354, 0.617]], [0.920, [0.031, 0.349, 0.612]], [0.922, [0.031, 0.349, 0.612]], [0.924, [0.031, 0.344, 0.606]], [0.926, [0.031, 0.344, 0.606]], [0.928, [0.031, 0.340, 0.601]], [0.930, [0.031, 0.340, 0.601]], [0.932, [0.031, 0.335, 0.596]], [0.933, [0.031, 0.335, 0.596]], [0.935, [0.031, 0.330, 0.591]], [0.937, [0.031, 0.330, 0.591]], [0.939, [0.031, 0.325, 0.585]], [0.941, [0.031, 0.325, 0.585]], [0.943, [0.031, 0.320, 0.580]], [0.945, [0.031, 0.320, 0.580]], [0.947, [0.031, 0.315, 0.575]], [0.949, [0.031, 0.315, 0.575]], [0.951, [0.031, 0.310, 0.569]], [0.953, [0.031, 0.310, 0.569]], [0.955, [0.031, 0.305, 0.564]], [0.957, [0.031, 0.305, 0.564]], [0.959, [0.031, 0.300, 0.559]], [0.961, [0.031, 0.300, 0.559]], [0.963, [0.031, 0.295, 0.553]], [0.965, [0.031, 0.295, 0.553]], [0.967, [0.031, 0.290, 0.548]], [0.969, [0.031, 0.290, 0.548]], [0.971, [0.031, 0.285, 0.543]], [0.973, [0.031, 0.285, 0.543]], [0.975, [0.031, 0.281, 0.538]], [0.977, [0.031, 0.281, 0.538]], [0.978, [0.031, 0.276, 0.532]], [0.980, [0.031, 0.276, 0.532]], [0.982, [0.031, 0.271, 0.527]], [0.984, [0.031, 0.271, 0.527]], [0.986, [0.031, 0.266, 0.522]], [0.988, [0.031, 0.266, 0.522]], [0.990, [0.031, 0.261, 0.516]], [0.992, [0.031, 0.261, 0.516]], [0.994, [0.031, 0.256, 0.511]], [0.996, [0.031, 0.256, 0.511]], [0.998, [0.031, 0.251, 0.506]], [1.000, [0.031, 0.251, 0.506]]];
H.colormap_gnuplot = [[0.000, [0.000, 0.000, 0.000]], [0.002, [0.000, 0.000, 0.000]], [0.004, [0.063, 0.000, 0.025]], [0.006, [0.063, 0.000, 0.025]], [0.008, [0.089, 0.000, 0.049]], [0.010, [0.089, 0.000, 0.049]], [0.012, [0.108, 0.000, 0.074]], [0.014, [0.108, 0.000, 0.074]], [0.016, [0.125, 0.000, 0.098]], [0.018, [0.125, 0.000, 0.098]], [0.020, [0.140, 0.000, 0.123]], [0.022, [0.140, 0.000, 0.123]], [0.023, [0.153, 0.000, 0.147]], [0.025, [0.153, 0.000, 0.147]], [0.027, [0.166, 0.000, 0.172]], [0.029, [0.166, 0.000, 0.172]], [0.031, [0.177, 0.000, 0.196]], [0.033, [0.177, 0.000, 0.196]], [0.035, [0.188, 0.000, 0.220]], [0.037, [0.188, 0.000, 0.220]], [0.039, [0.198, 0.000, 0.244]], [0.041, [0.198, 0.000, 0.244]], [0.043, [0.208, 0.000, 0.268]], [0.045, [0.208, 0.000, 0.268]], [0.047, [0.217, 0.000, 0.291]], [0.049, [0.217, 0.000, 0.291]], [0.051, [0.226, 0.000, 0.315]], [0.053, [0.226, 0.000, 0.315]], [0.055, [0.234, 0.000, 0.338]], [0.057, [0.234, 0.000, 0.338]], [0.059, [0.243, 0.000, 0.361]], [0.061, [0.243, 0.000, 0.361]], [0.063, [0.250, 0.000, 0.384]], [0.065, [0.250, 0.000, 0.384]], [0.067, [0.258, 0.000, 0.407]], [0.068, [0.258, 0.000, 0.407]], [0.070, [0.266, 0.000, 0.429]], [0.072, [0.266, 0.000, 0.429]], [0.074, [0.273, 0.000, 0.451]], [0.076, [0.273, 0.000, 0.451]], [0.078, [0.280, 0.000, 0.473]], [0.080, [0.280, 0.000, 0.473]], [0.082, [0.287, 0.001, 0.495]], [0.084, [0.287, 0.001, 0.495]], [0.086, [0.294, 0.001, 0.516]], [0.088, [0.294, 0.001, 0.516]], [0.090, [0.300, 0.001, 0.537]], [0.092, [0.300, 0.001, 0.537]], [0.094, [0.307, 0.001, 0.557]], [0.096, [0.307, 0.001, 0.557]], [0.098, [0.313, 0.001, 0.578]], [0.100, [0.313, 0.001, 0.578]], [0.102, [0.319, 0.001, 0.598]], [0.104, [0.319, 0.001, 0.598]], [0.106, [0.325, 0.001, 0.617]], [0.108, [0.325, 0.001, 0.617]], [0.110, [0.331, 0.001, 0.636]], [0.112, [0.331, 0.001, 0.636]], [0.114, [0.337, 0.001, 0.655]], [0.115, [0.337, 0.001, 0.655]], [0.117, [0.343, 0.002, 0.674]], [0.119, [0.343, 0.002, 0.674]], [0.121, [0.349, 0.002, 0.692]], [0.123, [0.349, 0.002, 0.692]], [0.125, [0.354, 0.002, 0.709]], [0.127, [0.354, 0.002, 0.709]], [0.129, [0.360, 0.002, 0.726]], [0.131, [0.360, 0.002, 0.726]], [0.133, [0.365, 0.002, 0.743]], [0.135, [0.365, 0.002, 0.743]], [0.137, [0.370, 0.003, 0.759]], [0.139, [0.370, 0.003, 0.759]], [0.141, [0.376, 0.003, 0.775]], [0.143, [0.376, 0.003, 0.775]], [0.145, [0.381, 0.003, 0.791]], [0.147, [0.381, 0.003, 0.791]], [0.149, [0.386, 0.003, 0.805]], [0.151, [0.386, 0.003, 0.805]], [0.153, [0.391, 0.004, 0.820]], [0.155, [0.391, 0.004, 0.820]], [0.157, [0.396, 0.004, 0.834]], [0.159, [0.396, 0.004, 0.834]], [0.160, [0.401, 0.004, 0.847]], [0.162, [0.401, 0.004, 0.847]], [0.164, [0.406, 0.004, 0.860]], [0.166, [0.406, 0.004, 0.860]], [0.168, [0.411, 0.005, 0.872]], [0.170, [0.411, 0.005, 0.872]], [0.172, [0.415, 0.005, 0.884]], [0.174, [0.415, 0.005, 0.884]], [0.176, [0.420, 0.005, 0.895]], [0.178, [0.420, 0.005, 0.895]], [0.180, [0.425, 0.006, 0.906]], [0.182, [0.425, 0.006, 0.906]], [0.184, [0.429, 0.006, 0.916]], [0.186, [0.429, 0.006, 0.916]], [0.188, [0.434, 0.007, 0.926]], [0.190, [0.434, 0.007, 0.926]], [0.192, [0.438, 0.007, 0.935]], [0.194, [0.438, 0.007, 0.935]], [0.196, [0.443, 0.008, 0.943]], [0.198, [0.443, 0.008, 0.943]], [0.200, [0.447, 0.008, 0.951]], [0.202, [0.447, 0.008, 0.951]], [0.204, [0.452, 0.008, 0.958]], [0.205, [0.452, 0.008, 0.958]], [0.207, [0.456, 0.009, 0.965]], [0.209, [0.456, 0.009, 0.965]], [0.211, [0.460, 0.009, 0.971]], [0.213, [0.460, 0.009, 0.971]], [0.215, [0.464, 0.010, 0.977]], [0.217, [0.464, 0.010, 0.977]], [0.219, [0.469, 0.011, 0.982]], [0.221, [0.469, 0.011, 0.982]], [0.223, [0.473, 0.011, 0.986]], [0.225, [0.473, 0.011, 0.986]], [0.227, [0.477, 0.012, 0.990]], [0.229, [0.477, 0.012, 0.990]], [0.231, [0.481, 0.012, 0.993]], [0.233, [0.481, 0.012, 0.993]], [0.235, [0.485, 0.013, 0.996]], [0.237, [0.485, 0.013, 0.996]], [0.239, [0.489, 0.014, 0.998]], [0.241, [0.489, 0.014, 0.998]], [0.243, [0.493, 0.014, 0.999]], [0.245, [0.493, 0.014, 0.999]], [0.247, [0.497, 0.015, 1.000]], [0.249, [0.497, 0.015, 1.000]], [0.250, [0.501, 0.016, 1.000]], [0.252, [0.501, 0.016, 1.000]], [0.254, [0.505, 0.017, 1.000]], [0.256, [0.505, 0.017, 1.000]], [0.258, [0.509, 0.017, 0.998]], [0.260, [0.509, 0.017, 0.998]], [0.262, [0.513, 0.018, 0.997]], [0.264, [0.513, 0.018, 0.997]], [0.266, [0.516, 0.019, 0.995]], [0.268, [0.516, 0.019, 0.995]], [0.270, [0.520, 0.020, 0.992]], [0.272, [0.520, 0.020, 0.992]], [0.274, [0.524, 0.021, 0.988]], [0.276, [0.524, 0.021, 0.988]], [0.278, [0.528, 0.022, 0.984]], [0.280, [0.528, 0.022, 0.984]], [0.282, [0.531, 0.023, 0.979]], [0.284, [0.531, 0.023, 0.979]], [0.286, [0.535, 0.023, 0.974]], [0.288, [0.535, 0.023, 0.974]], [0.290, [0.539, 0.024, 0.968]], [0.292, [0.539, 0.024, 0.968]], [0.294, [0.542, 0.025, 0.962]], [0.295, [0.542, 0.025, 0.962]], [0.297, [0.546, 0.026, 0.955]], [0.299, [0.546, 0.026, 0.955]], [0.301, [0.550, 0.028, 0.947]], [0.303, [0.550, 0.028, 0.947]], [0.305, [0.553, 0.029, 0.939]], [0.307, [0.553, 0.029, 0.939]], [0.309, [0.557, 0.030, 0.930]], [0.311, [0.557, 0.030, 0.930]], [0.313, [0.560, 0.031, 0.921]], [0.315, [0.560, 0.031, 0.921]], [0.317, [0.564, 0.032, 0.911]], [0.319, [0.564, 0.032, 0.911]], [0.321, [0.567, 0.033, 0.901]], [0.323, [0.567, 0.033, 0.901]], [0.325, [0.571, 0.034, 0.890]], [0.327, [0.571, 0.034, 0.890]], [0.329, [0.574, 0.036, 0.878]], [0.331, [0.574, 0.036, 0.878]], [0.333, [0.577, 0.037, 0.866]], [0.335, [0.577, 0.037, 0.866]], [0.337, [0.581, 0.038, 0.853]], [0.339, [0.581, 0.038, 0.853]], [0.341, [0.584, 0.040, 0.840]], [0.342, [0.584, 0.040, 0.840]], [0.344, [0.587, 0.041, 0.827]], [0.346, [0.587, 0.041, 0.827]], [0.348, [0.591, 0.043, 0.813]], [0.350, [0.591, 0.043, 0.813]], [0.352, [0.594, 0.044, 0.798]], [0.354, [0.594, 0.044, 0.798]], [0.356, [0.597, 0.045, 0.783]], [0.358, [0.597, 0.045, 0.783]], [0.360, [0.601, 0.047, 0.767]], [0.362, [0.601, 0.047, 0.767]], [0.364, [0.604, 0.049, 0.751]], [0.366, [0.604, 0.049, 0.751]], [0.368, [0.607, 0.050, 0.735]], [0.370, [0.607, 0.050, 0.735]], [0.372, [0.610, 0.052, 0.718]], [0.374, [0.610, 0.052, 0.718]], [0.376, [0.614, 0.053, 0.701]], [0.378, [0.614, 0.053, 0.701]], [0.380, [0.617, 0.055, 0.683]], [0.382, [0.617, 0.055, 0.683]], [0.384, [0.620, 0.057, 0.665]], [0.386, [0.620, 0.057, 0.665]], [0.387, [0.623, 0.059, 0.646]], [0.389, [0.623, 0.059, 0.646]], [0.391, [0.626, 0.060, 0.627]], [0.393, [0.626, 0.060, 0.627]], [0.395, [0.629, 0.062, 0.608]], [0.397, [0.629, 0.062, 0.608]], [0.399, [0.632, 0.064, 0.588]], [0.401, [0.632, 0.064, 0.588]], [0.403, [0.636, 0.066, 0.568]], [0.405, [0.636, 0.066, 0.568]], [0.407, [0.639, 0.068, 0.547]], [0.409, [0.639, 0.068, 0.547]], [0.411, [0.642, 0.070, 0.526]], [0.413, [0.642, 0.070, 0.526]], [0.415, [0.645, 0.072, 0.505]], [0.417, [0.645, 0.072, 0.505]], [0.419, [0.648, 0.074, 0.484]], [0.421, [0.648, 0.074, 0.484]], [0.423, [0.651, 0.076, 0.462]], [0.425, [0.651, 0.076, 0.462]], [0.427, [0.654, 0.078, 0.440]], [0.429, [0.654, 0.078, 0.440]], [0.431, [0.657, 0.080, 0.418]], [0.432, [0.657, 0.080, 0.418]], [0.434, [0.660, 0.082, 0.395]], [0.436, [0.660, 0.082, 0.395]], [0.438, [0.663, 0.085, 0.373]], [0.440, [0.663, 0.085, 0.373]], [0.442, [0.666, 0.087, 0.350]], [0.444, [0.666, 0.087, 0.350]], [0.446, [0.669, 0.089, 0.327]], [0.448, [0.669, 0.089, 0.327]], [0.450, [0.672, 0.092, 0.303]], [0.452, [0.672, 0.092, 0.303]], [0.454, [0.674, 0.094, 0.280]], [0.456, [0.674, 0.094, 0.280]], [0.458, [0.677, 0.097, 0.256]], [0.460, [0.677, 0.097, 0.256]], [0.462, [0.680, 0.099, 0.232]], [0.464, [0.680, 0.099, 0.232]], [0.466, [0.683, 0.102, 0.208]], [0.468, [0.683, 0.102, 0.208]], [0.470, [0.686, 0.104, 0.184]], [0.472, [0.686, 0.104, 0.184]], [0.474, [0.689, 0.107, 0.159]], [0.476, [0.689, 0.107, 0.159]], [0.477, [0.692, 0.110, 0.135]], [0.479, [0.692, 0.110, 0.135]], [0.481, [0.695, 0.112, 0.111]], [0.483, [0.695, 0.112, 0.111]], [0.485, [0.697, 0.115, 0.086]], [0.487, [0.697, 0.115, 0.086]], [0.489, [0.700, 0.118, 0.062]], [0.491, [0.700, 0.118, 0.062]], [0.493, [0.703, 0.121, 0.037]], [0.495, [0.703, 0.121, 0.037]], [0.497, [0.706, 0.124, 0.012]], [0.499, [0.706, 0.124, 0.012]], [0.501, [0.708, 0.126, 0.000]], [0.503, [0.708, 0.126, 0.000]], [0.505, [0.711, 0.129, 0.000]], [0.507, [0.711, 0.129, 0.000]], [0.509, [0.714, 0.132, 0.000]], [0.511, [0.714, 0.132, 0.000]], [0.513, [0.717, 0.136, 0.000]], [0.515, [0.717, 0.136, 0.000]], [0.517, [0.719, 0.139, 0.000]], [0.519, [0.719, 0.139, 0.000]], [0.521, [0.722, 0.142, 0.000]], [0.523, [0.722, 0.142, 0.000]], [0.524, [0.725, 0.145, 0.000]], [0.526, [0.725, 0.145, 0.000]], [0.528, [0.728, 0.148, 0.000]], [0.530, [0.728, 0.148, 0.000]], [0.532, [0.730, 0.152, 0.000]], [0.534, [0.730, 0.152, 0.000]], [0.536, [0.733, 0.155, 0.000]], [0.538, [0.733, 0.155, 0.000]], [0.540, [0.736, 0.158, 0.000]], [0.542, [0.736, 0.158, 0.000]], [0.544, [0.738, 0.162, 0.000]], [0.546, [0.738, 0.162, 0.000]], [0.548, [0.741, 0.165, 0.000]], [0.550, [0.741, 0.165, 0.000]], [0.552, [0.744, 0.169, 0.000]], [0.554, [0.744, 0.169, 0.000]], [0.556, [0.746, 0.173, 0.000]], [0.558, [0.746, 0.173, 0.000]], [0.560, [0.749, 0.176, 0.000]], [0.562, [0.749, 0.176, 0.000]], [0.564, [0.751, 0.180, 0.000]], [0.566, [0.751, 0.180, 0.000]], [0.568, [0.754, 0.184, 0.000]], [0.569, [0.754, 0.184, 0.000]], [0.571, [0.757, 0.188, 0.000]], [0.573, [0.757, 0.188, 0.000]], [0.575, [0.759, 0.192, 0.000]], [0.577, [0.759, 0.192, 0.000]], [0.579, [0.762, 0.196, 0.000]], [0.581, [0.762, 0.196, 0.000]], [0.583, [0.764, 0.199, 0.000]], [0.585, [0.764, 0.199, 0.000]], [0.587, [0.767, 0.204, 0.000]], [0.589, [0.767, 0.204, 0.000]], [0.591, [0.770, 0.208, 0.000]], [0.593, [0.770, 0.208, 0.000]], [0.595, [0.772, 0.212, 0.000]], [0.597, [0.772, 0.212, 0.000]], [0.599, [0.775, 0.216, 0.000]], [0.601, [0.775, 0.216, 0.000]], [0.603, [0.777, 0.220, 0.000]], [0.605, [0.777, 0.220, 0.000]], [0.607, [0.780, 0.225, 0.000]], [0.609, [0.780, 0.225, 0.000]], [0.611, [0.782, 0.229, 0.000]], [0.613, [0.782, 0.229, 0.000]], [0.614, [0.785, 0.233, 0.000]], [0.616, [0.785, 0.233, 0.000]], [0.618, [0.787, 0.238, 0.000]], [0.620, [0.787, 0.238, 0.000]], [0.622, [0.790, 0.242, 0.000]], [0.624, [0.790, 0.242, 0.000]], [0.626, [0.792, 0.247, 0.000]], [0.628, [0.792, 0.247, 0.000]], [0.630, [0.795, 0.252, 0.000]], [0.632, [0.795, 0.252, 0.000]], [0.634, [0.797, 0.256, 0.000]], [0.636, [0.797, 0.256, 0.000]], [0.638, [0.800, 0.261, 0.000]], [0.640, [0.800, 0.261, 0.000]], [0.642, [0.802, 0.266, 0.000]], [0.644, [0.802, 0.266, 0.000]], [0.646, [0.804, 0.271, 0.000]], [0.648, [0.804, 0.271, 0.000]], [0.650, [0.807, 0.276, 0.000]], [0.652, [0.807, 0.276, 0.000]], [0.654, [0.809, 0.281, 0.000]], [0.656, [0.809, 0.281, 0.000]], [0.658, [0.812, 0.286, 0.000]], [0.659, [0.812, 0.286, 0.000]], [0.661, [0.814, 0.291, 0.000]], [0.663, [0.814, 0.291, 0.000]], [0.665, [0.816, 0.296, 0.000]], [0.667, [0.816, 0.296, 0.000]], [0.669, [0.819, 0.302, 0.000]], [0.671, [0.819, 0.302, 0.000]], [0.673, [0.821, 0.307, 0.000]], [0.675, [0.821, 0.307, 0.000]], [0.677, [0.824, 0.312, 0.000]], [0.679, [0.824, 0.312, 0.000]], [0.681, [0.826, 0.318, 0.000]], [0.683, [0.826, 0.318, 0.000]], [0.685, [0.828, 0.323, 0.000]], [0.687, [0.828, 0.323, 0.000]], [0.689, [0.831, 0.329, 0.000]], [0.691, [0.831, 0.329, 0.000]], [0.693, [0.833, 0.334, 0.000]], [0.695, [0.833, 0.334, 0.000]], [0.697, [0.835, 0.340, 0.000]], [0.699, [0.835, 0.340, 0.000]], [0.701, [0.838, 0.346, 0.000]], [0.703, [0.838, 0.346, 0.000]], [0.705, [0.840, 0.352, 0.000]], [0.706, [0.840, 0.352, 0.000]], [0.708, [0.842, 0.358, 0.000]], [0.710, [0.842, 0.358, 0.000]], [0.712, [0.845, 0.364, 0.000]], [0.714, [0.845, 0.364, 0.000]], [0.716, [0.847, 0.370, 0.000]], [0.718, [0.847, 0.370, 0.000]], [0.720, [0.849, 0.376, 0.000]], [0.722, [0.849, 0.376, 0.000]], [0.724, [0.852, 0.382, 0.000]], [0.726, [0.852, 0.382, 0.000]], [0.728, [0.854, 0.388, 0.000]], [0.730, [0.854, 0.388, 0.000]], [0.732, [0.856, 0.394, 0.000]], [0.734, [0.856, 0.394, 0.000]], [0.736, [0.859, 0.401, 0.000]], [0.738, [0.859, 0.401, 0.000]], [0.740, [0.861, 0.407, 0.000]], [0.742, [0.861, 0.407, 0.000]], [0.744, [0.863, 0.414, 0.000]], [0.746, [0.863, 0.414, 0.000]], [0.748, [0.865, 0.420, 0.000]], [0.750, [0.865, 0.420, 0.000]], [0.751, [0.868, 0.427, 0.000]], [0.753, [0.868, 0.427, 0.000]], [0.755, [0.870, 0.434, 0.000]], [0.757, [0.870, 0.434, 0.000]], [0.759, [0.872, 0.440, 0.000]], [0.761, [0.872, 0.440, 0.000]], [0.763, [0.874, 0.447, 0.000]], [0.765, [0.874, 0.447, 0.000]], [0.767, [0.877, 0.454, 0.000]], [0.769, [0.877, 0.454, 0.000]], [0.771, [0.879, 0.461, 0.000]], [0.773, [0.879, 0.461, 0.000]], [0.775, [0.881, 0.468, 0.000]], [0.777, [0.881, 0.468, 0.000]], [0.779, [0.883, 0.475, 0.000]], [0.781, [0.883, 0.475, 0.000]], [0.783, [0.886, 0.482, 0.000]], [0.785, [0.886, 0.482, 0.000]], [0.787, [0.888, 0.490, 0.000]], [0.789, [0.888, 0.490, 0.000]], [0.791, [0.890, 0.497, 0.000]], [0.793, [0.890, 0.497, 0.000]], [0.795, [0.892, 0.505, 0.000]], [0.796, [0.892, 0.505, 0.000]], [0.798, [0.894, 0.512, 0.000]], [0.800, [0.894, 0.512, 0.000]], [0.802, [0.897, 0.520, 0.000]], [0.804, [0.897, 0.520, 0.000]], [0.806, [0.899, 0.527, 0.000]], [0.808, [0.899, 0.527, 0.000]], [0.810, [0.901, 0.535, 0.000]], [0.812, [0.901, 0.535, 0.000]], [0.814, [0.903, 0.543, 0.000]], [0.816, [0.903, 0.543, 0.000]], [0.818, [0.905, 0.551, 0.000]], [0.820, [0.905, 0.551, 0.000]], [0.822, [0.907, 0.559, 0.000]], [0.824, [0.907, 0.559, 0.000]], [0.826, [0.910, 0.567, 0.000]], [0.828, [0.910, 0.567, 0.000]], [0.830, [0.912, 0.575, 0.000]], [0.832, [0.912, 0.575, 0.000]], [0.834, [0.914, 0.583, 0.000]], [0.836, [0.914, 0.583, 0.000]], [0.838, [0.916, 0.591, 0.000]], [0.840, [0.916, 0.591, 0.000]], [0.841, [0.918, 0.599, 0.000]], [0.843, [0.918, 0.599, 0.000]], [0.845, [0.920, 0.608, 0.000]], [0.847, [0.920, 0.608, 0.000]], [0.849, [0.922, 0.616, 0.000]], [0.851, [0.922, 0.616, 0.000]], [0.853, [0.925, 0.625, 0.000]], [0.855, [0.925, 0.625, 0.000]], [0.857, [0.927, 0.633, 0.000]], [0.859, [0.927, 0.633, 0.000]], [0.861, [0.929, 0.642, 0.000]], [0.863, [0.929, 0.642, 0.000]], [0.865, [0.931, 0.651, 0.000]], [0.867, [0.931, 0.651, 0.000]], [0.869, [0.933, 0.660, 0.000]], [0.871, [0.933, 0.660, 0.000]], [0.873, [0.935, 0.669, 0.000]], [0.875, [0.935, 0.669, 0.000]], [0.877, [0.937, 0.678, 0.000]], [0.879, [0.937, 0.678, 0.000]], [0.881, [0.939, 0.687, 0.000]], [0.883, [0.939, 0.687, 0.000]], [0.885, [0.941, 0.696, 0.000]], [0.886, [0.941, 0.696, 0.000]], [0.888, [0.944, 0.705, 0.000]], [0.890, [0.944, 0.705, 0.000]], [0.892, [0.946, 0.715, 0.000]], [0.894, [0.946, 0.715, 0.000]], [0.896, [0.948, 0.724, 0.000]], [0.898, [0.948, 0.724, 0.000]], [0.900, [0.950, 0.734, 0.000]], [0.902, [0.950, 0.734, 0.000]], [0.904, [0.952, 0.743, 0.000]], [0.906, [0.952, 0.743, 0.000]], [0.908, [0.954, 0.753, 0.000]], [0.910, [0.954, 0.753, 0.000]], [0.912, [0.956, 0.763, 0.000]], [0.914, [0.956, 0.763, 0.000]], [0.916, [0.958, 0.773, 0.000]], [0.918, [0.958, 0.773, 0.000]], [0.920, [0.960, 0.783, 0.000]], [0.922, [0.960, 0.783, 0.000]], [0.924, [0.962, 0.793, 0.000]], [0.926, [0.962, 0.793, 0.000]], [0.928, [0.964, 0.803, 0.000]], [0.930, [0.964, 0.803, 0.000]], [0.932, [0.966, 0.813, 0.000]], [0.933, [0.966, 0.813, 0.000]], [0.935, [0.968, 0.823, 0.000]], [0.937, [0.968, 0.823, 0.000]], [0.939, [0.970, 0.834, 0.000]], [0.941, [0.970, 0.834, 0.000]], [0.943, [0.972, 0.844, 0.000]], [0.945, [0.972, 0.844, 0.000]], [0.947, [0.974, 0.855, 0.000]], [0.949, [0.974, 0.855, 0.000]], [0.951, [0.976, 0.865, 0.000]], [0.953, [0.976, 0.865, 0.000]], [0.955, [0.978, 0.876, 0.000]], [0.957, [0.978, 0.876, 0.000]], [0.959, [0.980, 0.887, 0.000]], [0.961, [0.980, 0.887, 0.000]], [0.963, [0.982, 0.898, 0.000]], [0.965, [0.982, 0.898, 0.000]], [0.967, [0.984, 0.909, 0.000]], [0.969, [0.984, 0.909, 0.000]], [0.971, [0.986, 0.920, 0.000]], [0.973, [0.986, 0.920, 0.000]], [0.975, [0.988, 0.931, 0.000]], [0.977, [0.988, 0.931, 0.000]], [0.978, [0.990, 0.942, 0.000]], [0.980, [0.990, 0.942, 0.000]], [0.982, [0.992, 0.954, 0.000]], [0.984, [0.992, 0.954, 0.000]], [0.986, [0.994, 0.965, 0.000]], [0.988, [0.994, 0.965, 0.000]], [0.990, [0.996, 0.977, 0.000]], [0.992, [0.996, 0.977, 0.000]], [0.994, [0.998, 0.988, 0.000]], [0.996, [0.998, 0.988, 0.000]], [0.998, [1.000, 1.000, 0.000]], [1.000, [1.000, 1.000, 0.000]]];
H.colormap_gnuplot2 = [[0.000, [0.000, 0.000, 0.000]], [0.002, [0.000, 0.000, 0.000]], [0.004, [0.000, 0.000, 0.016]], [0.006, [0.000, 0.000, 0.016]], [0.008, [0.000, 0.000, 0.031]], [0.010, [0.000, 0.000, 0.031]], [0.012, [0.000, 0.000, 0.047]], [0.014, [0.000, 0.000, 0.047]], [0.016, [0.000, 0.000, 0.063]], [0.018, [0.000, 0.000, 0.063]], [0.020, [0.000, 0.000, 0.078]], [0.022, [0.000, 0.000, 0.078]], [0.023, [0.000, 0.000, 0.094]], [0.025, [0.000, 0.000, 0.094]], [0.027, [0.000, 0.000, 0.110]], [0.029, [0.000, 0.000, 0.110]], [0.031, [0.000, 0.000, 0.125]], [0.033, [0.000, 0.000, 0.125]], [0.035, [0.000, 0.000, 0.141]], [0.037, [0.000, 0.000, 0.141]], [0.039, [0.000, 0.000, 0.157]], [0.041, [0.000, 0.000, 0.157]], [0.043, [0.000, 0.000, 0.173]], [0.045, [0.000, 0.000, 0.173]], [0.047, [0.000, 0.000, 0.188]], [0.049, [0.000, 0.000, 0.188]], [0.051, [0.000, 0.000, 0.204]], [0.053, [0.000, 0.000, 0.204]], [0.055, [0.000, 0.000, 0.220]], [0.057, [0.000, 0.000, 0.220]], [0.059, [0.000, 0.000, 0.235]], [0.061, [0.000, 0.000, 0.235]], [0.063, [0.000, 0.000, 0.251]], [0.065, [0.000, 0.000, 0.251]], [0.067, [0.000, 0.000, 0.267]], [0.068, [0.000, 0.000, 0.267]], [0.070, [0.000, 0.000, 0.282]], [0.072, [0.000, 0.000, 0.282]], [0.074, [0.000, 0.000, 0.298]], [0.076, [0.000, 0.000, 0.298]], [0.078, [0.000, 0.000, 0.314]], [0.080, [0.000, 0.000, 0.314]], [0.082, [0.000, 0.000, 0.329]], [0.084, [0.000, 0.000, 0.329]], [0.086, [0.000, 0.000, 0.345]], [0.088, [0.000, 0.000, 0.345]], [0.090, [0.000, 0.000, 0.361]], [0.092, [0.000, 0.000, 0.361]], [0.094, [0.000, 0.000, 0.376]], [0.096, [0.000, 0.000, 0.376]], [0.098, [0.000, 0.000, 0.392]], [0.100, [0.000, 0.000, 0.392]], [0.102, [0.000, 0.000, 0.408]], [0.104, [0.000, 0.000, 0.408]], [0.106, [0.000, 0.000, 0.424]], [0.108, [0.000, 0.000, 0.424]], [0.110, [0.000, 0.000, 0.439]], [0.112, [0.000, 0.000, 0.439]], [0.114, [0.000, 0.000, 0.455]], [0.115, [0.000, 0.000, 0.455]], [0.117, [0.000, 0.000, 0.471]], [0.119, [0.000, 0.000, 0.471]], [0.121, [0.000, 0.000, 0.486]], [0.123, [0.000, 0.000, 0.486]], [0.125, [0.000, 0.000, 0.502]], [0.127, [0.000, 0.000, 0.502]], [0.129, [0.000, 0.000, 0.518]], [0.131, [0.000, 0.000, 0.518]], [0.133, [0.000, 0.000, 0.533]], [0.135, [0.000, 0.000, 0.533]], [0.137, [0.000, 0.000, 0.549]], [0.139, [0.000, 0.000, 0.549]], [0.141, [0.000, 0.000, 0.565]], [0.143, [0.000, 0.000, 0.565]], [0.145, [0.000, 0.000, 0.580]], [0.147, [0.000, 0.000, 0.580]], [0.149, [0.000, 0.000, 0.596]], [0.151, [0.000, 0.000, 0.596]], [0.153, [0.000, 0.000, 0.612]], [0.155, [0.000, 0.000, 0.612]], [0.157, [0.000, 0.000, 0.627]], [0.159, [0.000, 0.000, 0.627]], [0.160, [0.000, 0.000, 0.643]], [0.162, [0.000, 0.000, 0.643]], [0.164, [0.000, 0.000, 0.659]], [0.166, [0.000, 0.000, 0.659]], [0.168, [0.000, 0.000, 0.675]], [0.170, [0.000, 0.000, 0.675]], [0.172, [0.000, 0.000, 0.690]], [0.174, [0.000, 0.000, 0.690]], [0.176, [0.000, 0.000, 0.706]], [0.178, [0.000, 0.000, 0.706]], [0.180, [0.000, 0.000, 0.722]], [0.182, [0.000, 0.000, 0.722]], [0.184, [0.000, 0.000, 0.737]], [0.186, [0.000, 0.000, 0.737]], [0.188, [0.000, 0.000, 0.753]], [0.190, [0.000, 0.000, 0.753]], [0.192, [0.000, 0.000, 0.769]], [0.194, [0.000, 0.000, 0.769]], [0.196, [0.000, 0.000, 0.784]], [0.198, [0.000, 0.000, 0.784]], [0.200, [0.000, 0.000, 0.800]], [0.202, [0.000, 0.000, 0.800]], [0.204, [0.000, 0.000, 0.816]], [0.205, [0.000, 0.000, 0.816]], [0.207, [0.000, 0.000, 0.831]], [0.209, [0.000, 0.000, 0.831]], [0.211, [0.000, 0.000, 0.847]], [0.213, [0.000, 0.000, 0.847]], [0.215, [0.000, 0.000, 0.863]], [0.217, [0.000, 0.000, 0.863]], [0.219, [0.000, 0.000, 0.878]], [0.221, [0.000, 0.000, 0.878]], [0.223, [0.000, 0.000, 0.894]], [0.225, [0.000, 0.000, 0.894]], [0.227, [0.000, 0.000, 0.910]], [0.229, [0.000, 0.000, 0.910]], [0.231, [0.000, 0.000, 0.925]], [0.233, [0.000, 0.000, 0.925]], [0.235, [0.000, 0.000, 0.941]], [0.237, [0.000, 0.000, 0.941]], [0.239, [0.000, 0.000, 0.957]], [0.241, [0.000, 0.000, 0.957]], [0.243, [0.000, 0.000, 0.973]], [0.245, [0.000, 0.000, 0.973]], [0.247, [0.000, 0.000, 0.988]], [0.249, [0.000, 0.000, 0.988]], [0.250, [0.003, 0.000, 1.000]], [0.252, [0.003, 0.000, 1.000]], [0.254, [0.015, 0.000, 1.000]], [0.256, [0.015, 0.000, 1.000]], [0.258, [0.028, 0.000, 1.000]], [0.260, [0.028, 0.000, 1.000]], [0.262, [0.040, 0.000, 1.000]], [0.264, [0.040, 0.000, 1.000]], [0.266, [0.052, 0.000, 1.000]], [0.268, [0.052, 0.000, 1.000]], [0.270, [0.064, 0.000, 1.000]], [0.272, [0.064, 0.000, 1.000]], [0.274, [0.077, 0.000, 1.000]], [0.276, [0.077, 0.000, 1.000]], [0.278, [0.089, 0.000, 1.000]], [0.280, [0.089, 0.000, 1.000]], [0.282, [0.101, 0.000, 1.000]], [0.284, [0.101, 0.000, 1.000]], [0.286, [0.113, 0.000, 1.000]], [0.288, [0.113, 0.000, 1.000]], [0.290, [0.126, 0.000, 1.000]], [0.292, [0.126, 0.000, 1.000]], [0.294, [0.138, 0.000, 1.000]], [0.295, [0.138, 0.000, 1.000]], [0.297, [0.150, 0.000, 1.000]], [0.299, [0.150, 0.000, 1.000]], [0.301, [0.162, 0.000, 1.000]], [0.303, [0.162, 0.000, 1.000]], [0.305, [0.175, 0.000, 1.000]], [0.307, [0.175, 0.000, 1.000]], [0.309, [0.187, 0.000, 1.000]], [0.311, [0.187, 0.000, 1.000]], [0.313, [0.199, 0.000, 1.000]], [0.315, [0.199, 0.000, 1.000]], [0.317, [0.211, 0.000, 1.000]], [0.319, [0.211, 0.000, 1.000]], [0.321, [0.224, 0.000, 1.000]], [0.323, [0.224, 0.000, 1.000]], [0.325, [0.236, 0.000, 1.000]], [0.327, [0.236, 0.000, 1.000]], [0.329, [0.248, 0.000, 1.000]], [0.331, [0.248, 0.000, 1.000]], [0.333, [0.260, 0.000, 1.000]], [0.335, [0.260, 0.000, 1.000]], [0.337, [0.273, 0.000, 1.000]], [0.339, [0.273, 0.000, 1.000]], [0.341, [0.285, 0.000, 1.000]], [0.342, [0.285, 0.000, 1.000]], [0.344, [0.297, 0.000, 1.000]], [0.346, [0.297, 0.000, 1.000]], [0.348, [0.309, 0.000, 1.000]], [0.350, [0.309, 0.000, 1.000]], [0.352, [0.322, 0.000, 1.000]], [0.354, [0.322, 0.000, 1.000]], [0.356, [0.334, 0.000, 1.000]], [0.358, [0.334, 0.000, 1.000]], [0.360, [0.346, 0.000, 1.000]], [0.362, [0.346, 0.000, 1.000]], [0.364, [0.358, 0.000, 1.000]], [0.366, [0.358, 0.000, 1.000]], [0.368, [0.371, 0.000, 1.000]], [0.370, [0.371, 0.000, 1.000]], [0.372, [0.383, 0.000, 1.000]], [0.374, [0.383, 0.000, 1.000]], [0.376, [0.395, 0.000, 1.000]], [0.378, [0.395, 0.000, 1.000]], [0.380, [0.407, 0.000, 1.000]], [0.382, [0.407, 0.000, 1.000]], [0.384, [0.420, 0.000, 1.000]], [0.386, [0.420, 0.000, 1.000]], [0.387, [0.432, 0.000, 1.000]], [0.389, [0.432, 0.000, 1.000]], [0.391, [0.444, 0.000, 1.000]], [0.393, [0.444, 0.000, 1.000]], [0.395, [0.456, 0.000, 1.000]], [0.397, [0.456, 0.000, 1.000]], [0.399, [0.469, 0.000, 1.000]], [0.401, [0.469, 0.000, 1.000]], [0.403, [0.481, 0.000, 1.000]], [0.405, [0.481, 0.000, 1.000]], [0.407, [0.493, 0.000, 1.000]], [0.409, [0.493, 0.000, 1.000]], [0.411, [0.506, 0.000, 1.000]], [0.413, [0.506, 0.000, 1.000]], [0.415, [0.518, 0.000, 1.000]], [0.417, [0.518, 0.000, 1.000]], [0.419, [0.530, 0.000, 1.000]], [0.421, [0.530, 0.000, 1.000]], [0.423, [0.542, 0.007, 0.993]], [0.425, [0.542, 0.007, 0.993]], [0.427, [0.555, 0.015, 0.985]], [0.429, [0.555, 0.015, 0.985]], [0.431, [0.567, 0.023, 0.977]], [0.432, [0.567, 0.023, 0.977]], [0.434, [0.579, 0.031, 0.969]], [0.436, [0.579, 0.031, 0.969]], [0.438, [0.591, 0.038, 0.962]], [0.440, [0.591, 0.038, 0.962]], [0.442, [0.604, 0.046, 0.954]], [0.444, [0.604, 0.046, 0.954]], [0.446, [0.616, 0.054, 0.946]], [0.448, [0.616, 0.054, 0.946]], [0.450, [0.628, 0.062, 0.938]], [0.452, [0.628, 0.062, 0.938]], [0.454, [0.640, 0.070, 0.930]], [0.456, [0.640, 0.070, 0.930]], [0.458, [0.653, 0.078, 0.922]], [0.460, [0.653, 0.078, 0.922]], [0.462, [0.665, 0.085, 0.915]], [0.464, [0.665, 0.085, 0.915]], [0.466, [0.677, 0.093, 0.907]], [0.468, [0.677, 0.093, 0.907]], [0.470, [0.689, 0.101, 0.899]], [0.472, [0.689, 0.101, 0.899]], [0.474, [0.702, 0.109, 0.891]], [0.476, [0.702, 0.109, 0.891]], [0.477, [0.714, 0.117, 0.883]], [0.479, [0.714, 0.117, 0.883]], [0.481, [0.726, 0.125, 0.875]], [0.483, [0.726, 0.125, 0.875]], [0.485, [0.738, 0.133, 0.867]], [0.487, [0.738, 0.133, 0.867]], [0.489, [0.751, 0.140, 0.860]], [0.491, [0.751, 0.140, 0.860]], [0.493, [0.763, 0.148, 0.852]], [0.495, [0.763, 0.148, 0.852]], [0.497, [0.775, 0.156, 0.844]], [0.499, [0.775, 0.156, 0.844]], [0.501, [0.787, 0.164, 0.836]], [0.503, [0.787, 0.164, 0.836]], [0.505, [0.800, 0.172, 0.828]], [0.507, [0.800, 0.172, 0.828]], [0.509, [0.812, 0.180, 0.820]], [0.511, [0.812, 0.180, 0.820]], [0.513, [0.824, 0.187, 0.813]], [0.515, [0.824, 0.187, 0.813]], [0.517, [0.836, 0.195, 0.805]], [0.519, [0.836, 0.195, 0.805]], [0.521, [0.849, 0.203, 0.797]], [0.523, [0.849, 0.203, 0.797]], [0.524, [0.861, 0.211, 0.789]], [0.526, [0.861, 0.211, 0.789]], [0.528, [0.873, 0.219, 0.781]], [0.530, [0.873, 0.219, 0.781]], [0.532, [0.885, 0.227, 0.773]], [0.534, [0.885, 0.227, 0.773]], [0.536, [0.898, 0.235, 0.765]], [0.538, [0.898, 0.235, 0.765]], [0.540, [0.910, 0.242, 0.758]], [0.542, [0.910, 0.242, 0.758]], [0.544, [0.922, 0.250, 0.750]], [0.546, [0.922, 0.250, 0.750]], [0.548, [0.934, 0.258, 0.742]], [0.550, [0.934, 0.258, 0.742]], [0.552, [0.947, 0.266, 0.734]], [0.554, [0.947, 0.266, 0.734]], [0.556, [0.959, 0.274, 0.726]], [0.558, [0.959, 0.274, 0.726]], [0.560, [0.971, 0.282, 0.718]], [0.562, [0.971, 0.282, 0.718]], [0.564, [0.983, 0.289, 0.711]], [0.566, [0.983, 0.289, 0.711]], [0.568, [0.996, 0.297, 0.703]], [0.569, [0.996, 0.297, 0.703]], [0.571, [1.000, 0.305, 0.695]], [0.573, [1.000, 0.305, 0.695]], [0.575, [1.000, 0.313, 0.687]], [0.577, [1.000, 0.313, 0.687]], [0.579, [1.000, 0.321, 0.679]], [0.581, [1.000, 0.321, 0.679]], [0.583, [1.000, 0.329, 0.671]], [0.585, [1.000, 0.329, 0.671]], [0.587, [1.000, 0.336, 0.664]], [0.589, [1.000, 0.336, 0.664]], [0.591, [1.000, 0.344, 0.656]], [0.593, [1.000, 0.344, 0.656]], [0.595, [1.000, 0.352, 0.648]], [0.597, [1.000, 0.352, 0.648]], [0.599, [1.000, 0.360, 0.640]], [0.601, [1.000, 0.360, 0.640]], [0.603, [1.000, 0.368, 0.632]], [0.605, [1.000, 0.368, 0.632]], [0.607, [1.000, 0.376, 0.624]], [0.609, [1.000, 0.376, 0.624]], [0.611, [1.000, 0.384, 0.616]], [0.613, [1.000, 0.384, 0.616]], [0.614, [1.000, 0.391, 0.609]], [0.616, [1.000, 0.391, 0.609]], [0.618, [1.000, 0.399, 0.601]], [0.620, [1.000, 0.399, 0.601]], [0.622, [1.000, 0.407, 0.593]], [0.624, [1.000, 0.407, 0.593]], [0.626, [1.000, 0.415, 0.585]], [0.628, [1.000, 0.415, 0.585]], [0.630, [1.000, 0.423, 0.577]], [0.632, [1.000, 0.423, 0.577]], [0.634, [1.000, 0.431, 0.569]], [0.636, [1.000, 0.431, 0.569]], [0.638, [1.000, 0.438, 0.562]], [0.640, [1.000, 0.438, 0.562]], [0.642, [1.000, 0.446, 0.554]], [0.644, [1.000, 0.446, 0.554]], [0.646, [1.000, 0.454, 0.546]], [0.648, [1.000, 0.454, 0.546]], [0.650, [1.000, 0.462, 0.538]], [0.652, [1.000, 0.462, 0.538]], [0.654, [1.000, 0.470, 0.530]], [0.656, [1.000, 0.470, 0.530]], [0.658, [1.000, 0.478, 0.522]], [0.659, [1.000, 0.478, 0.522]], [0.661, [1.000, 0.485, 0.515]], [0.663, [1.000, 0.485, 0.515]], [0.665, [1.000, 0.493, 0.507]], [0.667, [1.000, 0.493, 0.507]], [0.669, [1.000, 0.501, 0.499]], [0.671, [1.000, 0.501, 0.499]], [0.673, [1.000, 0.509, 0.491]], [0.675, [1.000, 0.509, 0.491]], [0.677, [1.000, 0.517, 0.483]], [0.679, [1.000, 0.517, 0.483]], [0.681, [1.000, 0.525, 0.475]], [0.683, [1.000, 0.525, 0.475]], [0.685, [1.000, 0.533, 0.467]], [0.687, [1.000, 0.533, 0.467]], [0.689, [1.000, 0.540, 0.460]], [0.691, [1.000, 0.540, 0.460]], [0.693, [1.000, 0.548, 0.452]], [0.695, [1.000, 0.548, 0.452]], [0.697, [1.000, 0.556, 0.444]], [0.699, [1.000, 0.556, 0.444]], [0.701, [1.000, 0.564, 0.436]], [0.703, [1.000, 0.564, 0.436]], [0.705, [1.000, 0.572, 0.428]], [0.706, [1.000, 0.572, 0.428]], [0.708, [1.000, 0.580, 0.420]], [0.710, [1.000, 0.580, 0.420]], [0.712, [1.000, 0.587, 0.413]], [0.714, [1.000, 0.587, 0.413]], [0.716, [1.000, 0.595, 0.405]], [0.718, [1.000, 0.595, 0.405]], [0.720, [1.000, 0.603, 0.397]], [0.722, [1.000, 0.603, 0.397]], [0.724, [1.000, 0.611, 0.389]], [0.726, [1.000, 0.611, 0.389]], [0.728, [1.000, 0.619, 0.381]], [0.730, [1.000, 0.619, 0.381]], [0.732, [1.000, 0.627, 0.373]], [0.734, [1.000, 0.627, 0.373]], [0.736, [1.000, 0.635, 0.365]], [0.738, [1.000, 0.635, 0.365]], [0.740, [1.000, 0.642, 0.358]], [0.742, [1.000, 0.642, 0.358]], [0.744, [1.000, 0.650, 0.350]], [0.746, [1.000, 0.650, 0.350]], [0.748, [1.000, 0.658, 0.342]], [0.750, [1.000, 0.658, 0.342]], [0.751, [1.000, 0.666, 0.334]], [0.753, [1.000, 0.666, 0.334]], [0.755, [1.000, 0.674, 0.326]], [0.757, [1.000, 0.674, 0.326]], [0.759, [1.000, 0.682, 0.318]], [0.761, [1.000, 0.682, 0.318]], [0.763, [1.000, 0.689, 0.311]], [0.765, [1.000, 0.689, 0.311]], [0.767, [1.000, 0.697, 0.303]], [0.769, [1.000, 0.697, 0.303]], [0.771, [1.000, 0.705, 0.295]], [0.773, [1.000, 0.705, 0.295]], [0.775, [1.000, 0.713, 0.287]], [0.777, [1.000, 0.713, 0.287]], [0.779, [1.000, 0.721, 0.279]], [0.781, [1.000, 0.721, 0.279]], [0.783, [1.000, 0.729, 0.271]], [0.785, [1.000, 0.729, 0.271]], [0.787, [1.000, 0.736, 0.264]], [0.789, [1.000, 0.736, 0.264]], [0.791, [1.000, 0.744, 0.256]], [0.793, [1.000, 0.744, 0.256]], [0.795, [1.000, 0.752, 0.248]], [0.796, [1.000, 0.752, 0.248]], [0.798, [1.000, 0.760, 0.240]], [0.800, [1.000, 0.760, 0.240]], [0.802, [1.000, 0.768, 0.232]], [0.804, [1.000, 0.768, 0.232]], [0.806, [1.000, 0.776, 0.224]], [0.808, [1.000, 0.776, 0.224]], [0.810, [1.000, 0.784, 0.216]], [0.812, [1.000, 0.784, 0.216]], [0.814, [1.000, 0.791, 0.209]], [0.816, [1.000, 0.791, 0.209]], [0.818, [1.000, 0.799, 0.201]], [0.820, [1.000, 0.799, 0.201]], [0.822, [1.000, 0.807, 0.193]], [0.824, [1.000, 0.807, 0.193]], [0.826, [1.000, 0.815, 0.185]], [0.828, [1.000, 0.815, 0.185]], [0.830, [1.000, 0.823, 0.177]], [0.832, [1.000, 0.823, 0.177]], [0.834, [1.000, 0.831, 0.169]], [0.836, [1.000, 0.831, 0.169]], [0.838, [1.000, 0.838, 0.162]], [0.840, [1.000, 0.838, 0.162]], [0.841, [1.000, 0.846, 0.154]], [0.843, [1.000, 0.846, 0.154]], [0.845, [1.000, 0.854, 0.146]], [0.847, [1.000, 0.854, 0.146]], [0.849, [1.000, 0.862, 0.138]], [0.851, [1.000, 0.862, 0.138]], [0.853, [1.000, 0.870, 0.130]], [0.855, [1.000, 0.870, 0.130]], [0.857, [1.000, 0.878, 0.122]], [0.859, [1.000, 0.878, 0.122]], [0.861, [1.000, 0.885, 0.115]], [0.863, [1.000, 0.885, 0.115]], [0.865, [1.000, 0.893, 0.107]], [0.867, [1.000, 0.893, 0.107]], [0.869, [1.000, 0.901, 0.099]], [0.871, [1.000, 0.901, 0.099]], [0.873, [1.000, 0.909, 0.091]], [0.875, [1.000, 0.909, 0.091]], [0.877, [1.000, 0.917, 0.083]], [0.879, [1.000, 0.917, 0.083]], [0.881, [1.000, 0.925, 0.075]], [0.883, [1.000, 0.925, 0.075]], [0.885, [1.000, 0.933, 0.067]], [0.886, [1.000, 0.933, 0.067]], [0.888, [1.000, 0.940, 0.060]], [0.890, [1.000, 0.940, 0.060]], [0.892, [1.000, 0.948, 0.052]], [0.894, [1.000, 0.948, 0.052]], [0.896, [1.000, 0.956, 0.044]], [0.898, [1.000, 0.956, 0.044]], [0.900, [1.000, 0.964, 0.036]], [0.902, [1.000, 0.964, 0.036]], [0.904, [1.000, 0.972, 0.028]], [0.906, [1.000, 0.972, 0.028]], [0.908, [1.000, 0.980, 0.020]], [0.910, [1.000, 0.980, 0.020]], [0.912, [1.000, 0.987, 0.013]], [0.914, [1.000, 0.987, 0.013]], [0.916, [1.000, 0.995, 0.005]], [0.918, [1.000, 0.995, 0.005]], [0.920, [1.000, 1.000, 0.020]], [0.922, [1.000, 1.000, 0.020]], [0.924, [1.000, 1.000, 0.069]], [0.926, [1.000, 1.000, 0.069]], [0.928, [1.000, 1.000, 0.118]], [0.930, [1.000, 1.000, 0.118]], [0.932, [1.000, 1.000, 0.167]], [0.933, [1.000, 1.000, 0.167]], [0.935, [1.000, 1.000, 0.216]], [0.937, [1.000, 1.000, 0.216]], [0.939, [1.000, 1.000, 0.265]], [0.941, [1.000, 1.000, 0.265]], [0.943, [1.000, 1.000, 0.314]], [0.945, [1.000, 1.000, 0.314]], [0.947, [1.000, 1.000, 0.363]], [0.949, [1.000, 1.000, 0.363]], [0.951, [1.000, 1.000, 0.412]], [0.953, [1.000, 1.000, 0.412]], [0.955, [1.000, 1.000, 0.461]], [0.957, [1.000, 1.000, 0.461]], [0.959, [1.000, 1.000, 0.510]], [0.961, [1.000, 1.000, 0.510]], [0.963, [1.000, 1.000, 0.559]], [0.965, [1.000, 1.000, 0.559]], [0.967, [1.000, 1.000, 0.608]], [0.969, [1.000, 1.000, 0.608]], [0.971, [1.000, 1.000, 0.657]], [0.973, [1.000, 1.000, 0.657]], [0.975, [1.000, 1.000, 0.706]], [0.977, [1.000, 1.000, 0.706]], [0.978, [1.000, 1.000, 0.755]], [0.980, [1.000, 1.000, 0.755]], [0.982, [1.000, 1.000, 0.804]], [0.984, [1.000, 1.000, 0.804]], [0.986, [1.000, 1.000, 0.853]], [0.988, [1.000, 1.000, 0.853]], [0.990, [1.000, 1.000, 0.902]], [0.992, [1.000, 1.000, 0.902]], [0.994, [1.000, 1.000, 0.951]], [0.996, [1.000, 1.000, 0.951]], [0.998, [1.000, 1.000, 1.000]], [1.000, [1.000, 1.000, 1.000]]];
H.colormap_gray = [[0.000, [0.000, 0.000, 0.000]], [0.002, [0.000, 0.000, 0.000]], [0.004, [0.004, 0.004, 0.004]], [0.006, [0.004, 0.004, 0.004]], [0.008, [0.008, 0.008, 0.008]], [0.010, [0.008, 0.008, 0.008]], [0.012, [0.012, 0.012, 0.012]], [0.014, [0.012, 0.012, 0.012]], [0.016, [0.016, 0.016, 0.016]], [0.018, [0.016, 0.016, 0.016]], [0.020, [0.020, 0.020, 0.020]], [0.022, [0.020, 0.020, 0.020]], [0.023, [0.024, 0.024, 0.024]], [0.025, [0.024, 0.024, 0.024]], [0.027, [0.027, 0.027, 0.027]], [0.029, [0.027, 0.027, 0.027]], [0.031, [0.031, 0.031, 0.031]], [0.033, [0.031, 0.031, 0.031]], [0.035, [0.035, 0.035, 0.035]], [0.037, [0.035, 0.035, 0.035]], [0.039, [0.039, 0.039, 0.039]], [0.041, [0.039, 0.039, 0.039]], [0.043, [0.043, 0.043, 0.043]], [0.045, [0.043, 0.043, 0.043]], [0.047, [0.047, 0.047, 0.047]], [0.049, [0.047, 0.047, 0.047]], [0.051, [0.051, 0.051, 0.051]], [0.053, [0.051, 0.051, 0.051]], [0.055, [0.055, 0.055, 0.055]], [0.057, [0.055, 0.055, 0.055]], [0.059, [0.059, 0.059, 0.059]], [0.061, [0.059, 0.059, 0.059]], [0.063, [0.063, 0.063, 0.063]], [0.065, [0.063, 0.063, 0.063]], [0.067, [0.067, 0.067, 0.067]], [0.068, [0.067, 0.067, 0.067]], [0.070, [0.071, 0.071, 0.071]], [0.072, [0.071, 0.071, 0.071]], [0.074, [0.075, 0.075, 0.075]], [0.076, [0.075, 0.075, 0.075]], [0.078, [0.078, 0.078, 0.078]], [0.080, [0.078, 0.078, 0.078]], [0.082, [0.082, 0.082, 0.082]], [0.084, [0.082, 0.082, 0.082]], [0.086, [0.086, 0.086, 0.086]], [0.088, [0.086, 0.086, 0.086]], [0.090, [0.090, 0.090, 0.090]], [0.092, [0.090, 0.090, 0.090]], [0.094, [0.094, 0.094, 0.094]], [0.096, [0.094, 0.094, 0.094]], [0.098, [0.098, 0.098, 0.098]], [0.100, [0.098, 0.098, 0.098]], [0.102, [0.102, 0.102, 0.102]], [0.104, [0.102, 0.102, 0.102]], [0.106, [0.106, 0.106, 0.106]], [0.108, [0.106, 0.106, 0.106]], [0.110, [0.110, 0.110, 0.110]], [0.112, [0.110, 0.110, 0.110]], [0.114, [0.114, 0.114, 0.114]], [0.115, [0.114, 0.114, 0.114]], [0.117, [0.118, 0.118, 0.118]], [0.119, [0.118, 0.118, 0.118]], [0.121, [0.122, 0.122, 0.122]], [0.123, [0.122, 0.122, 0.122]], [0.125, [0.125, 0.125, 0.125]], [0.127, [0.125, 0.125, 0.125]], [0.129, [0.129, 0.129, 0.129]], [0.131, [0.129, 0.129, 0.129]], [0.133, [0.133, 0.133, 0.133]], [0.135, [0.133, 0.133, 0.133]], [0.137, [0.137, 0.137, 0.137]], [0.139, [0.137, 0.137, 0.137]], [0.141, [0.141, 0.141, 0.141]], [0.143, [0.141, 0.141, 0.141]], [0.145, [0.145, 0.145, 0.145]], [0.147, [0.145, 0.145, 0.145]], [0.149, [0.149, 0.149, 0.149]], [0.151, [0.149, 0.149, 0.149]], [0.153, [0.153, 0.153, 0.153]], [0.155, [0.153, 0.153, 0.153]], [0.157, [0.157, 0.157, 0.157]], [0.159, [0.157, 0.157, 0.157]], [0.160, [0.161, 0.161, 0.161]], [0.162, [0.161, 0.161, 0.161]], [0.164, [0.165, 0.165, 0.165]], [0.166, [0.165, 0.165, 0.165]], [0.168, [0.169, 0.169, 0.169]], [0.170, [0.169, 0.169, 0.169]], [0.172, [0.173, 0.173, 0.173]], [0.174, [0.173, 0.173, 0.173]], [0.176, [0.176, 0.176, 0.176]], [0.178, [0.176, 0.176, 0.176]], [0.180, [0.180, 0.180, 0.180]], [0.182, [0.180, 0.180, 0.180]], [0.184, [0.184, 0.184, 0.184]], [0.186, [0.184, 0.184, 0.184]], [0.188, [0.188, 0.188, 0.188]], [0.190, [0.188, 0.188, 0.188]], [0.192, [0.192, 0.192, 0.192]], [0.194, [0.192, 0.192, 0.192]], [0.196, [0.196, 0.196, 0.196]], [0.198, [0.196, 0.196, 0.196]], [0.200, [0.200, 0.200, 0.200]], [0.202, [0.200, 0.200, 0.200]], [0.204, [0.204, 0.204, 0.204]], [0.205, [0.204, 0.204, 0.204]], [0.207, [0.208, 0.208, 0.208]], [0.209, [0.208, 0.208, 0.208]], [0.211, [0.212, 0.212, 0.212]], [0.213, [0.212, 0.212, 0.212]], [0.215, [0.216, 0.216, 0.216]], [0.217, [0.216, 0.216, 0.216]], [0.219, [0.220, 0.220, 0.220]], [0.221, [0.220, 0.220, 0.220]], [0.223, [0.224, 0.224, 0.224]], [0.225, [0.224, 0.224, 0.224]], [0.227, [0.227, 0.227, 0.227]], [0.229, [0.227, 0.227, 0.227]], [0.231, [0.231, 0.231, 0.231]], [0.233, [0.231, 0.231, 0.231]], [0.235, [0.235, 0.235, 0.235]], [0.237, [0.235, 0.235, 0.235]], [0.239, [0.239, 0.239, 0.239]], [0.241, [0.239, 0.239, 0.239]], [0.243, [0.243, 0.243, 0.243]], [0.245, [0.243, 0.243, 0.243]], [0.247, [0.247, 0.247, 0.247]], [0.249, [0.247, 0.247, 0.247]], [0.250, [0.251, 0.251, 0.251]], [0.252, [0.251, 0.251, 0.251]], [0.254, [0.255, 0.255, 0.255]], [0.256, [0.255, 0.255, 0.255]], [0.258, [0.259, 0.259, 0.259]], [0.260, [0.259, 0.259, 0.259]], [0.262, [0.263, 0.263, 0.263]], [0.264, [0.263, 0.263, 0.263]], [0.266, [0.267, 0.267, 0.267]], [0.268, [0.267, 0.267, 0.267]], [0.270, [0.271, 0.271, 0.271]], [0.272, [0.271, 0.271, 0.271]], [0.274, [0.275, 0.275, 0.275]], [0.276, [0.275, 0.275, 0.275]], [0.278, [0.278, 0.278, 0.278]], [0.280, [0.278, 0.278, 0.278]], [0.282, [0.282, 0.282, 0.282]], [0.284, [0.282, 0.282, 0.282]], [0.286, [0.286, 0.286, 0.286]], [0.288, [0.286, 0.286, 0.286]], [0.290, [0.290, 0.290, 0.290]], [0.292, [0.290, 0.290, 0.290]], [0.294, [0.294, 0.294, 0.294]], [0.295, [0.294, 0.294, 0.294]], [0.297, [0.298, 0.298, 0.298]], [0.299, [0.298, 0.298, 0.298]], [0.301, [0.302, 0.302, 0.302]], [0.303, [0.302, 0.302, 0.302]], [0.305, [0.306, 0.306, 0.306]], [0.307, [0.306, 0.306, 0.306]], [0.309, [0.310, 0.310, 0.310]], [0.311, [0.310, 0.310, 0.310]], [0.313, [0.314, 0.314, 0.314]], [0.315, [0.314, 0.314, 0.314]], [0.317, [0.318, 0.318, 0.318]], [0.319, [0.318, 0.318, 0.318]], [0.321, [0.322, 0.322, 0.322]], [0.323, [0.322, 0.322, 0.322]], [0.325, [0.325, 0.325, 0.325]], [0.327, [0.325, 0.325, 0.325]], [0.329, [0.329, 0.329, 0.329]], [0.331, [0.329, 0.329, 0.329]], [0.333, [0.333, 0.333, 0.333]], [0.335, [0.333, 0.333, 0.333]], [0.337, [0.337, 0.337, 0.337]], [0.339, [0.337, 0.337, 0.337]], [0.341, [0.341, 0.341, 0.341]], [0.342, [0.341, 0.341, 0.341]], [0.344, [0.345, 0.345, 0.345]], [0.346, [0.345, 0.345, 0.345]], [0.348, [0.349, 0.349, 0.349]], [0.350, [0.349, 0.349, 0.349]], [0.352, [0.353, 0.353, 0.353]], [0.354, [0.353, 0.353, 0.353]], [0.356, [0.357, 0.357, 0.357]], [0.358, [0.357, 0.357, 0.357]], [0.360, [0.361, 0.361, 0.361]], [0.362, [0.361, 0.361, 0.361]], [0.364, [0.365, 0.365, 0.365]], [0.366, [0.365, 0.365, 0.365]], [0.368, [0.369, 0.369, 0.369]], [0.370, [0.369, 0.369, 0.369]], [0.372, [0.373, 0.373, 0.373]], [0.374, [0.373, 0.373, 0.373]], [0.376, [0.376, 0.376, 0.376]], [0.378, [0.376, 0.376, 0.376]], [0.380, [0.380, 0.380, 0.380]], [0.382, [0.380, 0.380, 0.380]], [0.384, [0.384, 0.384, 0.384]], [0.386, [0.384, 0.384, 0.384]], [0.387, [0.388, 0.388, 0.388]], [0.389, [0.388, 0.388, 0.388]], [0.391, [0.392, 0.392, 0.392]], [0.393, [0.392, 0.392, 0.392]], [0.395, [0.396, 0.396, 0.396]], [0.397, [0.396, 0.396, 0.396]], [0.399, [0.400, 0.400, 0.400]], [0.401, [0.400, 0.400, 0.400]], [0.403, [0.404, 0.404, 0.404]], [0.405, [0.404, 0.404, 0.404]], [0.407, [0.408, 0.408, 0.408]], [0.409, [0.408, 0.408, 0.408]], [0.411, [0.412, 0.412, 0.412]], [0.413, [0.412, 0.412, 0.412]], [0.415, [0.416, 0.416, 0.416]], [0.417, [0.416, 0.416, 0.416]], [0.419, [0.420, 0.420, 0.420]], [0.421, [0.420, 0.420, 0.420]], [0.423, [0.424, 0.424, 0.424]], [0.425, [0.424, 0.424, 0.424]], [0.427, [0.427, 0.427, 0.427]], [0.429, [0.427, 0.427, 0.427]], [0.431, [0.431, 0.431, 0.431]], [0.432, [0.431, 0.431, 0.431]], [0.434, [0.435, 0.435, 0.435]], [0.436, [0.435, 0.435, 0.435]], [0.438, [0.439, 0.439, 0.439]], [0.440, [0.439, 0.439, 0.439]], [0.442, [0.443, 0.443, 0.443]], [0.444, [0.443, 0.443, 0.443]], [0.446, [0.447, 0.447, 0.447]], [0.448, [0.447, 0.447, 0.447]], [0.450, [0.451, 0.451, 0.451]], [0.452, [0.451, 0.451, 0.451]], [0.454, [0.455, 0.455, 0.455]], [0.456, [0.455, 0.455, 0.455]], [0.458, [0.459, 0.459, 0.459]], [0.460, [0.459, 0.459, 0.459]], [0.462, [0.463, 0.463, 0.463]], [0.464, [0.463, 0.463, 0.463]], [0.466, [0.467, 0.467, 0.467]], [0.468, [0.467, 0.467, 0.467]], [0.470, [0.471, 0.471, 0.471]], [0.472, [0.471, 0.471, 0.471]], [0.474, [0.475, 0.475, 0.475]], [0.476, [0.475, 0.475, 0.475]], [0.477, [0.478, 0.478, 0.478]], [0.479, [0.478, 0.478, 0.478]], [0.481, [0.482, 0.482, 0.482]], [0.483, [0.482, 0.482, 0.482]], [0.485, [0.486, 0.486, 0.486]], [0.487, [0.486, 0.486, 0.486]], [0.489, [0.490, 0.490, 0.490]], [0.491, [0.490, 0.490, 0.490]], [0.493, [0.494, 0.494, 0.494]], [0.495, [0.494, 0.494, 0.494]], [0.497, [0.498, 0.498, 0.498]], [0.499, [0.498, 0.498, 0.498]], [0.501, [0.502, 0.502, 0.502]], [0.503, [0.502, 0.502, 0.502]], [0.505, [0.506, 0.506, 0.506]], [0.507, [0.506, 0.506, 0.506]], [0.509, [0.510, 0.510, 0.510]], [0.511, [0.510, 0.510, 0.510]], [0.513, [0.514, 0.514, 0.514]], [0.515, [0.514, 0.514, 0.514]], [0.517, [0.518, 0.518, 0.518]], [0.519, [0.518, 0.518, 0.518]], [0.521, [0.522, 0.522, 0.522]], [0.523, [0.522, 0.522, 0.522]], [0.524, [0.525, 0.525, 0.525]], [0.526, [0.525, 0.525, 0.525]], [0.528, [0.529, 0.529, 0.529]], [0.530, [0.529, 0.529, 0.529]], [0.532, [0.533, 0.533, 0.533]], [0.534, [0.533, 0.533, 0.533]], [0.536, [0.537, 0.537, 0.537]], [0.538, [0.537, 0.537, 0.537]], [0.540, [0.541, 0.541, 0.541]], [0.542, [0.541, 0.541, 0.541]], [0.544, [0.545, 0.545, 0.545]], [0.546, [0.545, 0.545, 0.545]], [0.548, [0.549, 0.549, 0.549]], [0.550, [0.549, 0.549, 0.549]], [0.552, [0.553, 0.553, 0.553]], [0.554, [0.553, 0.553, 0.553]], [0.556, [0.557, 0.557, 0.557]], [0.558, [0.557, 0.557, 0.557]], [0.560, [0.561, 0.561, 0.561]], [0.562, [0.561, 0.561, 0.561]], [0.564, [0.565, 0.565, 0.565]], [0.566, [0.565, 0.565, 0.565]], [0.568, [0.569, 0.569, 0.569]], [0.569, [0.569, 0.569, 0.569]], [0.571, [0.573, 0.573, 0.573]], [0.573, [0.573, 0.573, 0.573]], [0.575, [0.576, 0.576, 0.576]], [0.577, [0.576, 0.576, 0.576]], [0.579, [0.580, 0.580, 0.580]], [0.581, [0.580, 0.580, 0.580]], [0.583, [0.584, 0.584, 0.584]], [0.585, [0.584, 0.584, 0.584]], [0.587, [0.588, 0.588, 0.588]], [0.589, [0.588, 0.588, 0.588]], [0.591, [0.592, 0.592, 0.592]], [0.593, [0.592, 0.592, 0.592]], [0.595, [0.596, 0.596, 0.596]], [0.597, [0.596, 0.596, 0.596]], [0.599, [0.600, 0.600, 0.600]], [0.601, [0.600, 0.600, 0.600]], [0.603, [0.604, 0.604, 0.604]], [0.605, [0.604, 0.604, 0.604]], [0.607, [0.608, 0.608, 0.608]], [0.609, [0.608, 0.608, 0.608]], [0.611, [0.612, 0.612, 0.612]], [0.613, [0.612, 0.612, 0.612]], [0.614, [0.616, 0.616, 0.616]], [0.616, [0.616, 0.616, 0.616]], [0.618, [0.620, 0.620, 0.620]], [0.620, [0.620, 0.620, 0.620]], [0.622, [0.624, 0.624, 0.624]], [0.624, [0.624, 0.624, 0.624]], [0.626, [0.627, 0.627, 0.627]], [0.628, [0.627, 0.627, 0.627]], [0.630, [0.631, 0.631, 0.631]], [0.632, [0.631, 0.631, 0.631]], [0.634, [0.635, 0.635, 0.635]], [0.636, [0.635, 0.635, 0.635]], [0.638, [0.639, 0.639, 0.639]], [0.640, [0.639, 0.639, 0.639]], [0.642, [0.643, 0.643, 0.643]], [0.644, [0.643, 0.643, 0.643]], [0.646, [0.647, 0.647, 0.647]], [0.648, [0.647, 0.647, 0.647]], [0.650, [0.651, 0.651, 0.651]], [0.652, [0.651, 0.651, 0.651]], [0.654, [0.655, 0.655, 0.655]], [0.656, [0.655, 0.655, 0.655]], [0.658, [0.659, 0.659, 0.659]], [0.659, [0.659, 0.659, 0.659]], [0.661, [0.663, 0.663, 0.663]], [0.663, [0.663, 0.663, 0.663]], [0.665, [0.667, 0.667, 0.667]], [0.667, [0.667, 0.667, 0.667]], [0.669, [0.671, 0.671, 0.671]], [0.671, [0.671, 0.671, 0.671]], [0.673, [0.675, 0.675, 0.675]], [0.675, [0.675, 0.675, 0.675]], [0.677, [0.678, 0.678, 0.678]], [0.679, [0.678, 0.678, 0.678]], [0.681, [0.682, 0.682, 0.682]], [0.683, [0.682, 0.682, 0.682]], [0.685, [0.686, 0.686, 0.686]], [0.687, [0.686, 0.686, 0.686]], [0.689, [0.690, 0.690, 0.690]], [0.691, [0.690, 0.690, 0.690]], [0.693, [0.694, 0.694, 0.694]], [0.695, [0.694, 0.694, 0.694]], [0.697, [0.698, 0.698, 0.698]], [0.699, [0.698, 0.698, 0.698]], [0.701, [0.702, 0.702, 0.702]], [0.703, [0.702, 0.702, 0.702]], [0.705, [0.706, 0.706, 0.706]], [0.706, [0.706, 0.706, 0.706]], [0.708, [0.710, 0.710, 0.710]], [0.710, [0.710, 0.710, 0.710]], [0.712, [0.714, 0.714, 0.714]], [0.714, [0.714, 0.714, 0.714]], [0.716, [0.718, 0.718, 0.718]], [0.718, [0.718, 0.718, 0.718]], [0.720, [0.722, 0.722, 0.722]], [0.722, [0.722, 0.722, 0.722]], [0.724, [0.725, 0.725, 0.725]], [0.726, [0.725, 0.725, 0.725]], [0.728, [0.729, 0.729, 0.729]], [0.730, [0.729, 0.729, 0.729]], [0.732, [0.733, 0.733, 0.733]], [0.734, [0.733, 0.733, 0.733]], [0.736, [0.737, 0.737, 0.737]], [0.738, [0.737, 0.737, 0.737]], [0.740, [0.741, 0.741, 0.741]], [0.742, [0.741, 0.741, 0.741]], [0.744, [0.745, 0.745, 0.745]], [0.746, [0.745, 0.745, 0.745]], [0.748, [0.749, 0.749, 0.749]], [0.750, [0.749, 0.749, 0.749]], [0.751, [0.753, 0.753, 0.753]], [0.753, [0.753, 0.753, 0.753]], [0.755, [0.757, 0.757, 0.757]], [0.757, [0.757, 0.757, 0.757]], [0.759, [0.761, 0.761, 0.761]], [0.761, [0.761, 0.761, 0.761]], [0.763, [0.765, 0.765, 0.765]], [0.765, [0.765, 0.765, 0.765]], [0.767, [0.769, 0.769, 0.769]], [0.769, [0.769, 0.769, 0.769]], [0.771, [0.773, 0.773, 0.773]], [0.773, [0.773, 0.773, 0.773]], [0.775, [0.776, 0.776, 0.776]], [0.777, [0.776, 0.776, 0.776]], [0.779, [0.780, 0.780, 0.780]], [0.781, [0.780, 0.780, 0.780]], [0.783, [0.784, 0.784, 0.784]], [0.785, [0.784, 0.784, 0.784]], [0.787, [0.788, 0.788, 0.788]], [0.789, [0.788, 0.788, 0.788]], [0.791, [0.792, 0.792, 0.792]], [0.793, [0.792, 0.792, 0.792]], [0.795, [0.796, 0.796, 0.796]], [0.796, [0.796, 0.796, 0.796]], [0.798, [0.800, 0.800, 0.800]], [0.800, [0.800, 0.800, 0.800]], [0.802, [0.804, 0.804, 0.804]], [0.804, [0.804, 0.804, 0.804]], [0.806, [0.808, 0.808, 0.808]], [0.808, [0.808, 0.808, 0.808]], [0.810, [0.812, 0.812, 0.812]], [0.812, [0.812, 0.812, 0.812]], [0.814, [0.816, 0.816, 0.816]], [0.816, [0.816, 0.816, 0.816]], [0.818, [0.820, 0.820, 0.820]], [0.820, [0.820, 0.820, 0.820]], [0.822, [0.824, 0.824, 0.824]], [0.824, [0.824, 0.824, 0.824]], [0.826, [0.827, 0.827, 0.827]], [0.828, [0.827, 0.827, 0.827]], [0.830, [0.831, 0.831, 0.831]], [0.832, [0.831, 0.831, 0.831]], [0.834, [0.835, 0.835, 0.835]], [0.836, [0.835, 0.835, 0.835]], [0.838, [0.839, 0.839, 0.839]], [0.840, [0.839, 0.839, 0.839]], [0.841, [0.843, 0.843, 0.843]], [0.843, [0.843, 0.843, 0.843]], [0.845, [0.847, 0.847, 0.847]], [0.847, [0.847, 0.847, 0.847]], [0.849, [0.851, 0.851, 0.851]], [0.851, [0.851, 0.851, 0.851]], [0.853, [0.855, 0.855, 0.855]], [0.855, [0.855, 0.855, 0.855]], [0.857, [0.859, 0.859, 0.859]], [0.859, [0.859, 0.859, 0.859]], [0.861, [0.863, 0.863, 0.863]], [0.863, [0.863, 0.863, 0.863]], [0.865, [0.867, 0.867, 0.867]], [0.867, [0.867, 0.867, 0.867]], [0.869, [0.871, 0.871, 0.871]], [0.871, [0.871, 0.871, 0.871]], [0.873, [0.875, 0.875, 0.875]], [0.875, [0.875, 0.875, 0.875]], [0.877, [0.878, 0.878, 0.878]], [0.879, [0.878, 0.878, 0.878]], [0.881, [0.882, 0.882, 0.882]], [0.883, [0.882, 0.882, 0.882]], [0.885, [0.886, 0.886, 0.886]], [0.886, [0.886, 0.886, 0.886]], [0.888, [0.890, 0.890, 0.890]], [0.890, [0.890, 0.890, 0.890]], [0.892, [0.894, 0.894, 0.894]], [0.894, [0.894, 0.894, 0.894]], [0.896, [0.898, 0.898, 0.898]], [0.898, [0.898, 0.898, 0.898]], [0.900, [0.902, 0.902, 0.902]], [0.902, [0.902, 0.902, 0.902]], [0.904, [0.906, 0.906, 0.906]], [0.906, [0.906, 0.906, 0.906]], [0.908, [0.910, 0.910, 0.910]], [0.910, [0.910, 0.910, 0.910]], [0.912, [0.914, 0.914, 0.914]], [0.914, [0.914, 0.914, 0.914]], [0.916, [0.918, 0.918, 0.918]], [0.918, [0.918, 0.918, 0.918]], [0.920, [0.922, 0.922, 0.922]], [0.922, [0.922, 0.922, 0.922]], [0.924, [0.925, 0.925, 0.925]], [0.926, [0.925, 0.925, 0.925]], [0.928, [0.929, 0.929, 0.929]], [0.930, [0.929, 0.929, 0.929]], [0.932, [0.933, 0.933, 0.933]], [0.933, [0.933, 0.933, 0.933]], [0.935, [0.937, 0.937, 0.937]], [0.937, [0.937, 0.937, 0.937]], [0.939, [0.941, 0.941, 0.941]], [0.941, [0.941, 0.941, 0.941]], [0.943, [0.945, 0.945, 0.945]], [0.945, [0.945, 0.945, 0.945]], [0.947, [0.949, 0.949, 0.949]], [0.949, [0.949, 0.949, 0.949]], [0.951, [0.953, 0.953, 0.953]], [0.953, [0.953, 0.953, 0.953]], [0.955, [0.957, 0.957, 0.957]], [0.957, [0.957, 0.957, 0.957]], [0.959, [0.961, 0.961, 0.961]], [0.961, [0.961, 0.961, 0.961]], [0.963, [0.965, 0.965, 0.965]], [0.965, [0.965, 0.965, 0.965]], [0.967, [0.969, 0.969, 0.969]], [0.969, [0.969, 0.969, 0.969]], [0.971, [0.973, 0.973, 0.973]], [0.973, [0.973, 0.973, 0.973]], [0.975, [0.976, 0.976, 0.976]], [0.977, [0.976, 0.976, 0.976]], [0.978, [0.980, 0.980, 0.980]], [0.980, [0.980, 0.980, 0.980]], [0.982, [0.984, 0.984, 0.984]], [0.984, [0.984, 0.984, 0.984]], [0.986, [0.988, 0.988, 0.988]], [0.988, [0.988, 0.988, 0.988]], [0.990, [0.992, 0.992, 0.992]], [0.992, [0.992, 0.992, 0.992]], [0.994, [0.996, 0.996, 0.996]], [0.996, [0.996, 0.996, 0.996]], [0.998, [1.000, 1.000, 1.000]], [1.000, [1.000, 1.000, 1.000]]];
H.colormap_Greens = [[0.000, [0.969, 0.988, 0.961]], [0.002, [0.969, 0.988, 0.961]], [0.004, [0.966, 0.987, 0.958]], [0.006, [0.966, 0.987, 0.958]], [0.008, [0.964, 0.987, 0.956]], [0.010, [0.964, 0.987, 0.956]], [0.012, [0.962, 0.986, 0.953]], [0.014, [0.962, 0.986, 0.953]], [0.016, [0.960, 0.985, 0.950]], [0.018, [0.960, 0.985, 0.950]], [0.020, [0.958, 0.984, 0.948]], [0.022, [0.958, 0.984, 0.948]], [0.023, [0.955, 0.983, 0.945]], [0.025, [0.955, 0.983, 0.945]], [0.027, [0.953, 0.982, 0.943]], [0.029, [0.953, 0.982, 0.943]], [0.031, [0.951, 0.981, 0.940]], [0.033, [0.951, 0.981, 0.940]], [0.035, [0.949, 0.980, 0.938]], [0.037, [0.949, 0.980, 0.938]], [0.039, [0.946, 0.980, 0.935]], [0.041, [0.946, 0.980, 0.935]], [0.043, [0.944, 0.979, 0.932]], [0.045, [0.944, 0.979, 0.932]], [0.047, [0.942, 0.978, 0.930]], [0.049, [0.942, 0.978, 0.930]], [0.051, [0.940, 0.977, 0.927]], [0.053, [0.940, 0.977, 0.927]], [0.055, [0.938, 0.976, 0.925]], [0.057, [0.938, 0.976, 0.925]], [0.059, [0.935, 0.975, 0.922]], [0.061, [0.935, 0.975, 0.922]], [0.063, [0.933, 0.974, 0.919]], [0.065, [0.933, 0.974, 0.919]], [0.067, [0.931, 0.974, 0.917]], [0.068, [0.931, 0.974, 0.917]], [0.070, [0.929, 0.973, 0.914]], [0.072, [0.929, 0.973, 0.914]], [0.074, [0.927, 0.972, 0.912]], [0.076, [0.927, 0.972, 0.912]], [0.078, [0.924, 0.971, 0.909]], [0.080, [0.924, 0.971, 0.909]], [0.082, [0.922, 0.970, 0.907]], [0.084, [0.922, 0.970, 0.907]], [0.086, [0.920, 0.969, 0.904]], [0.088, [0.920, 0.969, 0.904]], [0.090, [0.918, 0.968, 0.901]], [0.092, [0.918, 0.968, 0.901]], [0.094, [0.915, 0.968, 0.899]], [0.096, [0.915, 0.968, 0.899]], [0.098, [0.913, 0.967, 0.896]], [0.100, [0.913, 0.967, 0.896]], [0.102, [0.911, 0.966, 0.894]], [0.104, [0.911, 0.966, 0.894]], [0.106, [0.909, 0.965, 0.891]], [0.108, [0.909, 0.965, 0.891]], [0.110, [0.907, 0.964, 0.888]], [0.112, [0.907, 0.964, 0.888]], [0.114, [0.904, 0.963, 0.886]], [0.115, [0.904, 0.963, 0.886]], [0.117, [0.902, 0.962, 0.883]], [0.119, [0.902, 0.962, 0.883]], [0.121, [0.900, 0.962, 0.881]], [0.123, [0.900, 0.962, 0.881]], [0.125, [0.898, 0.961, 0.878]], [0.127, [0.898, 0.961, 0.878]], [0.129, [0.894, 0.959, 0.874]], [0.131, [0.894, 0.959, 0.874]], [0.133, [0.890, 0.958, 0.870]], [0.135, [0.890, 0.958, 0.870]], [0.137, [0.887, 0.956, 0.866]], [0.139, [0.887, 0.956, 0.866]], [0.141, [0.883, 0.955, 0.862]], [0.143, [0.883, 0.955, 0.862]], [0.145, [0.879, 0.953, 0.858]], [0.147, [0.879, 0.953, 0.858]], [0.149, [0.875, 0.952, 0.854]], [0.151, [0.875, 0.952, 0.854]], [0.153, [0.872, 0.950, 0.850]], [0.155, [0.872, 0.950, 0.850]], [0.157, [0.868, 0.949, 0.846]], [0.159, [0.868, 0.949, 0.846]], [0.160, [0.864, 0.947, 0.843]], [0.162, [0.864, 0.947, 0.843]], [0.164, [0.861, 0.946, 0.839]], [0.166, [0.861, 0.946, 0.839]], [0.168, [0.857, 0.944, 0.835]], [0.170, [0.857, 0.944, 0.835]], [0.172, [0.853, 0.943, 0.831]], [0.174, [0.853, 0.943, 0.831]], [0.176, [0.850, 0.941, 0.827]], [0.178, [0.850, 0.941, 0.827]], [0.180, [0.846, 0.940, 0.823]], [0.182, [0.846, 0.940, 0.823]], [0.184, [0.842, 0.938, 0.819]], [0.186, [0.842, 0.938, 0.819]], [0.188, [0.839, 0.937, 0.815]], [0.190, [0.839, 0.937, 0.815]], [0.192, [0.835, 0.936, 0.811]], [0.194, [0.835, 0.936, 0.811]], [0.196, [0.831, 0.934, 0.807]], [0.198, [0.831, 0.934, 0.807]], [0.200, [0.827, 0.933, 0.803]], [0.202, [0.827, 0.933, 0.803]], [0.204, [0.824, 0.931, 0.799]], [0.205, [0.824, 0.931, 0.799]], [0.207, [0.820, 0.930, 0.795]], [0.209, [0.820, 0.930, 0.795]], [0.211, [0.816, 0.928, 0.791]], [0.213, [0.816, 0.928, 0.791]], [0.215, [0.813, 0.927, 0.787]], [0.217, [0.813, 0.927, 0.787]], [0.219, [0.809, 0.925, 0.783]], [0.221, [0.809, 0.925, 0.783]], [0.223, [0.805, 0.924, 0.780]], [0.225, [0.805, 0.924, 0.780]], [0.227, [0.802, 0.922, 0.776]], [0.229, [0.802, 0.922, 0.776]], [0.231, [0.798, 0.921, 0.772]], [0.233, [0.798, 0.921, 0.772]], [0.235, [0.794, 0.919, 0.768]], [0.237, [0.794, 0.919, 0.768]], [0.239, [0.791, 0.918, 0.764]], [0.241, [0.791, 0.918, 0.764]], [0.243, [0.787, 0.916, 0.760]], [0.245, [0.787, 0.916, 0.760]], [0.247, [0.783, 0.915, 0.756]], [0.249, [0.783, 0.915, 0.756]], [0.250, [0.779, 0.913, 0.752]], [0.252, [0.779, 0.913, 0.752]], [0.254, [0.775, 0.911, 0.747]], [0.256, [0.775, 0.911, 0.747]], [0.258, [0.770, 0.909, 0.743]], [0.260, [0.770, 0.909, 0.743]], [0.262, [0.765, 0.907, 0.738]], [0.264, [0.765, 0.907, 0.738]], [0.266, [0.761, 0.905, 0.734]], [0.268, [0.761, 0.905, 0.734]], [0.270, [0.756, 0.903, 0.729]], [0.272, [0.756, 0.903, 0.729]], [0.274, [0.751, 0.901, 0.724]], [0.276, [0.751, 0.901, 0.724]], [0.278, [0.746, 0.899, 0.720]], [0.280, [0.746, 0.899, 0.720]], [0.282, [0.742, 0.897, 0.715]], [0.284, [0.742, 0.897, 0.715]], [0.286, [0.737, 0.896, 0.711]], [0.288, [0.737, 0.896, 0.711]], [0.290, [0.732, 0.894, 0.706]], [0.292, [0.732, 0.894, 0.706]], [0.294, [0.728, 0.892, 0.702]], [0.295, [0.728, 0.892, 0.702]], [0.297, [0.723, 0.890, 0.697]], [0.299, [0.723, 0.890, 0.697]], [0.301, [0.718, 0.888, 0.693]], [0.303, [0.718, 0.888, 0.693]], [0.305, [0.714, 0.886, 0.688]], [0.307, [0.714, 0.886, 0.688]], [0.309, [0.709, 0.884, 0.684]], [0.311, [0.709, 0.884, 0.684]], [0.313, [0.704, 0.882, 0.679]], [0.315, [0.704, 0.882, 0.679]], [0.317, [0.700, 0.880, 0.674]], [0.319, [0.700, 0.880, 0.674]], [0.321, [0.695, 0.878, 0.670]], [0.323, [0.695, 0.878, 0.670]], [0.325, [0.690, 0.876, 0.665]], [0.327, [0.690, 0.876, 0.665]], [0.329, [0.686, 0.874, 0.661]], [0.331, [0.686, 0.874, 0.661]], [0.333, [0.681, 0.872, 0.656]], [0.335, [0.681, 0.872, 0.656]], [0.337, [0.676, 0.870, 0.652]], [0.339, [0.676, 0.870, 0.652]], [0.341, [0.672, 0.868, 0.647]], [0.342, [0.672, 0.868, 0.647]], [0.344, [0.667, 0.866, 0.643]], [0.346, [0.667, 0.866, 0.643]], [0.348, [0.662, 0.864, 0.638]], [0.350, [0.662, 0.864, 0.638]], [0.352, [0.658, 0.862, 0.633]], [0.354, [0.658, 0.862, 0.633]], [0.356, [0.653, 0.860, 0.629]], [0.358, [0.653, 0.860, 0.629]], [0.360, [0.648, 0.858, 0.624]], [0.362, [0.648, 0.858, 0.624]], [0.364, [0.644, 0.856, 0.620]], [0.366, [0.644, 0.856, 0.620]], [0.368, [0.639, 0.854, 0.615]], [0.370, [0.639, 0.854, 0.615]], [0.372, [0.634, 0.852, 0.611]], [0.374, [0.634, 0.852, 0.611]], [0.376, [0.629, 0.850, 0.606]], [0.378, [0.629, 0.850, 0.606]], [0.380, [0.624, 0.847, 0.602]], [0.382, [0.624, 0.847, 0.602]], [0.384, [0.618, 0.845, 0.597]], [0.386, [0.618, 0.845, 0.597]], [0.387, [0.613, 0.842, 0.592]], [0.389, [0.613, 0.842, 0.592]], [0.391, [0.607, 0.840, 0.588]], [0.393, [0.607, 0.840, 0.588]], [0.395, [0.602, 0.837, 0.583]], [0.397, [0.602, 0.837, 0.583]], [0.399, [0.596, 0.835, 0.579]], [0.401, [0.596, 0.835, 0.579]], [0.403, [0.591, 0.832, 0.574]], [0.405, [0.591, 0.832, 0.574]], [0.407, [0.585, 0.829, 0.570]], [0.409, [0.585, 0.829, 0.570]], [0.411, [0.579, 0.827, 0.565]], [0.413, [0.579, 0.827, 0.565]], [0.415, [0.574, 0.824, 0.561]], [0.417, [0.574, 0.824, 0.561]], [0.419, [0.568, 0.822, 0.556]], [0.421, [0.568, 0.822, 0.556]], [0.423, [0.563, 0.819, 0.552]], [0.425, [0.563, 0.819, 0.552]], [0.427, [0.557, 0.816, 0.547]], [0.429, [0.557, 0.816, 0.547]], [0.431, [0.552, 0.814, 0.542]], [0.432, [0.552, 0.814, 0.542]], [0.434, [0.546, 0.811, 0.538]], [0.436, [0.546, 0.811, 0.538]], [0.438, [0.541, 0.809, 0.533]], [0.440, [0.541, 0.809, 0.533]], [0.442, [0.535, 0.806, 0.529]], [0.444, [0.535, 0.806, 0.529]], [0.446, [0.530, 0.804, 0.524]], [0.448, [0.530, 0.804, 0.524]], [0.450, [0.524, 0.801, 0.520]], [0.452, [0.524, 0.801, 0.520]], [0.454, [0.519, 0.798, 0.515]], [0.456, [0.519, 0.798, 0.515]], [0.458, [0.513, 0.796, 0.511]], [0.460, [0.513, 0.796, 0.511]], [0.462, [0.507, 0.793, 0.506]], [0.464, [0.507, 0.793, 0.506]], [0.466, [0.502, 0.791, 0.501]], [0.468, [0.502, 0.791, 0.501]], [0.470, [0.496, 0.788, 0.497]], [0.472, [0.496, 0.788, 0.497]], [0.474, [0.491, 0.785, 0.492]], [0.476, [0.491, 0.785, 0.492]], [0.477, [0.485, 0.783, 0.488]], [0.479, [0.485, 0.783, 0.488]], [0.481, [0.480, 0.780, 0.483]], [0.483, [0.480, 0.780, 0.483]], [0.485, [0.474, 0.778, 0.479]], [0.487, [0.474, 0.778, 0.479]], [0.489, [0.469, 0.775, 0.474]], [0.491, [0.469, 0.775, 0.474]], [0.493, [0.463, 0.773, 0.470]], [0.495, [0.463, 0.773, 0.470]], [0.497, [0.458, 0.770, 0.465]], [0.499, [0.458, 0.770, 0.465]], [0.501, [0.452, 0.767, 0.461]], [0.503, [0.452, 0.767, 0.461]], [0.505, [0.445, 0.764, 0.458]], [0.507, [0.445, 0.764, 0.458]], [0.509, [0.439, 0.761, 0.455]], [0.511, [0.439, 0.761, 0.455]], [0.513, [0.433, 0.758, 0.452]], [0.515, [0.433, 0.758, 0.452]], [0.517, [0.427, 0.755, 0.449]], [0.519, [0.427, 0.755, 0.449]], [0.521, [0.420, 0.752, 0.446]], [0.523, [0.420, 0.752, 0.446]], [0.524, [0.414, 0.749, 0.443]], [0.526, [0.414, 0.749, 0.443]], [0.528, [0.408, 0.746, 0.440]], [0.530, [0.408, 0.746, 0.440]], [0.532, [0.402, 0.742, 0.437]], [0.534, [0.402, 0.742, 0.437]], [0.536, [0.395, 0.739, 0.434]], [0.538, [0.395, 0.739, 0.434]], [0.540, [0.389, 0.736, 0.430]], [0.542, [0.389, 0.736, 0.430]], [0.544, [0.383, 0.733, 0.427]], [0.546, [0.383, 0.733, 0.427]], [0.548, [0.376, 0.730, 0.424]], [0.550, [0.376, 0.730, 0.424]], [0.552, [0.370, 0.727, 0.421]], [0.554, [0.370, 0.727, 0.421]], [0.556, [0.364, 0.724, 0.418]], [0.558, [0.364, 0.724, 0.418]], [0.560, [0.358, 0.721, 0.415]], [0.562, [0.358, 0.721, 0.415]], [0.564, [0.351, 0.718, 0.412]], [0.566, [0.351, 0.718, 0.412]], [0.568, [0.345, 0.715, 0.409]], [0.569, [0.345, 0.715, 0.409]], [0.571, [0.339, 0.712, 0.406]], [0.573, [0.339, 0.712, 0.406]], [0.575, [0.333, 0.709, 0.403]], [0.577, [0.333, 0.709, 0.403]], [0.579, [0.326, 0.706, 0.400]], [0.581, [0.326, 0.706, 0.400]], [0.583, [0.320, 0.702, 0.397]], [0.585, [0.320, 0.702, 0.397]], [0.587, [0.314, 0.699, 0.394]], [0.589, [0.314, 0.699, 0.394]], [0.591, [0.307, 0.696, 0.390]], [0.593, [0.307, 0.696, 0.390]], [0.595, [0.301, 0.693, 0.387]], [0.597, [0.301, 0.693, 0.387]], [0.599, [0.295, 0.690, 0.384]], [0.601, [0.295, 0.690, 0.384]], [0.603, [0.289, 0.687, 0.381]], [0.605, [0.289, 0.687, 0.381]], [0.607, [0.282, 0.684, 0.378]], [0.609, [0.282, 0.684, 0.378]], [0.611, [0.276, 0.681, 0.375]], [0.613, [0.276, 0.681, 0.375]], [0.614, [0.270, 0.678, 0.372]], [0.616, [0.270, 0.678, 0.372]], [0.618, [0.264, 0.675, 0.369]], [0.620, [0.264, 0.675, 0.369]], [0.622, [0.257, 0.672, 0.366]], [0.624, [0.257, 0.672, 0.366]], [0.626, [0.253, 0.668, 0.363]], [0.628, [0.253, 0.668, 0.363]], [0.630, [0.249, 0.664, 0.360]], [0.632, [0.249, 0.664, 0.360]], [0.634, [0.245, 0.660, 0.357]], [0.636, [0.245, 0.660, 0.357]], [0.638, [0.242, 0.656, 0.354]], [0.640, [0.242, 0.656, 0.354]], [0.642, [0.238, 0.652, 0.351]], [0.644, [0.238, 0.652, 0.351]], [0.646, [0.234, 0.648, 0.348]], [0.648, [0.234, 0.648, 0.348]], [0.650, [0.230, 0.645, 0.345]], [0.652, [0.230, 0.645, 0.345]], [0.654, [0.227, 0.641, 0.342]], [0.656, [0.227, 0.641, 0.342]], [0.658, [0.223, 0.637, 0.339]], [0.659, [0.223, 0.637, 0.339]], [0.661, [0.219, 0.633, 0.336]], [0.663, [0.219, 0.633, 0.336]], [0.665, [0.216, 0.629, 0.333]], [0.667, [0.216, 0.629, 0.333]], [0.669, [0.212, 0.625, 0.330]], [0.671, [0.212, 0.625, 0.330]], [0.673, [0.208, 0.621, 0.327]], [0.675, [0.208, 0.621, 0.327]], [0.677, [0.205, 0.617, 0.324]], [0.679, [0.205, 0.617, 0.324]], [0.681, [0.201, 0.613, 0.322]], [0.683, [0.201, 0.613, 0.322]], [0.685, [0.197, 0.609, 0.319]], [0.687, [0.197, 0.609, 0.319]], [0.689, [0.194, 0.605, 0.316]], [0.691, [0.194, 0.605, 0.316]], [0.693, [0.190, 0.601, 0.313]], [0.695, [0.190, 0.601, 0.313]], [0.697, [0.186, 0.597, 0.310]], [0.699, [0.186, 0.597, 0.310]], [0.701, [0.182, 0.593, 0.307]], [0.703, [0.182, 0.593, 0.307]], [0.705, [0.179, 0.589, 0.304]], [0.706, [0.179, 0.589, 0.304]], [0.708, [0.175, 0.585, 0.301]], [0.710, [0.175, 0.585, 0.301]], [0.712, [0.171, 0.582, 0.298]], [0.714, [0.171, 0.582, 0.298]], [0.716, [0.168, 0.578, 0.295]], [0.718, [0.168, 0.578, 0.295]], [0.720, [0.164, 0.574, 0.292]], [0.722, [0.164, 0.574, 0.292]], [0.724, [0.160, 0.570, 0.289]], [0.726, [0.160, 0.570, 0.289]], [0.728, [0.157, 0.566, 0.286]], [0.730, [0.157, 0.566, 0.286]], [0.732, [0.153, 0.562, 0.283]], [0.734, [0.153, 0.562, 0.283]], [0.736, [0.149, 0.558, 0.280]], [0.738, [0.149, 0.558, 0.280]], [0.740, [0.146, 0.554, 0.277]], [0.742, [0.146, 0.554, 0.277]], [0.744, [0.142, 0.550, 0.274]], [0.746, [0.142, 0.550, 0.274]], [0.748, [0.138, 0.546, 0.271]], [0.750, [0.138, 0.546, 0.271]], [0.751, [0.134, 0.542, 0.268]], [0.753, [0.134, 0.542, 0.268]], [0.755, [0.130, 0.539, 0.265]], [0.757, [0.130, 0.539, 0.265]], [0.759, [0.125, 0.535, 0.262]], [0.761, [0.125, 0.535, 0.262]], [0.763, [0.121, 0.531, 0.259]], [0.765, [0.121, 0.531, 0.259]], [0.767, [0.117, 0.528, 0.256]], [0.769, [0.117, 0.528, 0.256]], [0.771, [0.112, 0.524, 0.253]], [0.773, [0.112, 0.524, 0.253]], [0.775, [0.108, 0.520, 0.250]], [0.777, [0.108, 0.520, 0.250]], [0.779, [0.104, 0.516, 0.247]], [0.781, [0.104, 0.516, 0.247]], [0.783, [0.100, 0.513, 0.244]], [0.785, [0.100, 0.513, 0.244]], [0.787, [0.095, 0.509, 0.241]], [0.789, [0.095, 0.509, 0.241]], [0.791, [0.091, 0.505, 0.238]], [0.793, [0.091, 0.505, 0.238]], [0.795, [0.087, 0.502, 0.234]], [0.796, [0.087, 0.502, 0.234]], [0.798, [0.082, 0.498, 0.231]], [0.800, [0.082, 0.498, 0.231]], [0.802, [0.078, 0.494, 0.228]], [0.804, [0.078, 0.494, 0.228]], [0.806, [0.074, 0.491, 0.225]], [0.808, [0.074, 0.491, 0.225]], [0.810, [0.069, 0.487, 0.222]], [0.812, [0.069, 0.487, 0.222]], [0.814, [0.065, 0.483, 0.219]], [0.816, [0.065, 0.483, 0.219]], [0.818, [0.061, 0.480, 0.216]], [0.820, [0.061, 0.480, 0.216]], [0.822, [0.057, 0.476, 0.213]], [0.824, [0.057, 0.476, 0.213]], [0.826, [0.052, 0.472, 0.210]], [0.828, [0.052, 0.472, 0.210]], [0.830, [0.048, 0.469, 0.207]], [0.832, [0.048, 0.469, 0.207]], [0.834, [0.044, 0.465, 0.204]], [0.836, [0.044, 0.465, 0.204]], [0.838, [0.039, 0.461, 0.201]], [0.840, [0.039, 0.461, 0.201]], [0.841, [0.035, 0.457, 0.198]], [0.843, [0.035, 0.457, 0.198]], [0.845, [0.031, 0.454, 0.194]], [0.847, [0.031, 0.454, 0.194]], [0.849, [0.026, 0.450, 0.191]], [0.851, [0.026, 0.450, 0.191]], [0.853, [0.022, 0.446, 0.188]], [0.855, [0.022, 0.446, 0.188]], [0.857, [0.018, 0.443, 0.185]], [0.859, [0.018, 0.443, 0.185]], [0.861, [0.013, 0.439, 0.182]], [0.863, [0.013, 0.439, 0.182]], [0.865, [0.009, 0.435, 0.179]], [0.867, [0.009, 0.435, 0.179]], [0.869, [0.005, 0.432, 0.176]], [0.871, [0.005, 0.432, 0.176]], [0.873, [0.001, 0.428, 0.173]], [0.875, [0.001, 0.428, 0.173]], [0.877, [0.000, 0.423, 0.171]], [0.879, [0.000, 0.423, 0.171]], [0.881, [0.000, 0.418, 0.169]], [0.883, [0.000, 0.418, 0.169]], [0.885, [0.000, 0.413, 0.167]], [0.886, [0.000, 0.413, 0.167]], [0.888, [0.000, 0.408, 0.164]], [0.890, [0.000, 0.408, 0.164]], [0.892, [0.000, 0.403, 0.162]], [0.894, [0.000, 0.403, 0.162]], [0.896, [0.000, 0.398, 0.160]], [0.898, [0.000, 0.398, 0.160]], [0.900, [0.000, 0.393, 0.158]], [0.902, [0.000, 0.393, 0.158]], [0.904, [0.000, 0.388, 0.156]], [0.906, [0.000, 0.388, 0.156]], [0.908, [0.000, 0.383, 0.154]], [0.910, [0.000, 0.383, 0.154]], [0.912, [0.000, 0.378, 0.152]], [0.914, [0.000, 0.378, 0.152]], [0.916, [0.000, 0.373, 0.150]], [0.918, [0.000, 0.373, 0.150]], [0.920, [0.000, 0.368, 0.148]], [0.922, [0.000, 0.368, 0.148]], [0.924, [0.000, 0.363, 0.146]], [0.926, [0.000, 0.363, 0.146]], [0.928, [0.000, 0.357, 0.144]], [0.930, [0.000, 0.357, 0.144]], [0.932, [0.000, 0.352, 0.141]], [0.933, [0.000, 0.352, 0.141]], [0.935, [0.000, 0.347, 0.139]], [0.937, [0.000, 0.347, 0.139]], [0.939, [0.000, 0.342, 0.137]], [0.941, [0.000, 0.342, 0.137]], [0.943, [0.000, 0.337, 0.135]], [0.945, [0.000, 0.337, 0.135]], [0.947, [0.000, 0.332, 0.133]], [0.949, [0.000, 0.332, 0.133]], [0.951, [0.000, 0.327, 0.131]], [0.953, [0.000, 0.327, 0.131]], [0.955, [0.000, 0.322, 0.129]], [0.957, [0.000, 0.322, 0.129]], [0.959, [0.000, 0.317, 0.127]], [0.961, [0.000, 0.317, 0.127]], [0.963, [0.000, 0.312, 0.125]], [0.965, [0.000, 0.312, 0.125]], [0.967, [0.000, 0.307, 0.123]], [0.969, [0.000, 0.307, 0.123]], [0.971, [0.000, 0.302, 0.121]], [0.973, [0.000, 0.302, 0.121]], [0.975, [0.000, 0.297, 0.118]], [0.977, [0.000, 0.297, 0.118]], [0.978, [0.000, 0.292, 0.116]], [0.980, [0.000, 0.292, 0.116]], [0.982, [0.000, 0.287, 0.114]], [0.984, [0.000, 0.287, 0.114]], [0.986, [0.000, 0.282, 0.112]], [0.988, [0.000, 0.282, 0.112]], [0.990, [0.000, 0.277, 0.110]], [0.992, [0.000, 0.277, 0.110]], [0.994, [0.000, 0.272, 0.108]], [0.996, [0.000, 0.272, 0.108]], [0.998, [0.000, 0.267, 0.106]], [1.000, [0.000, 0.267, 0.106]]];
H.colormap_Greys = [[0.000, [1.000, 1.000, 1.000]], [0.002, [1.000, 1.000, 1.000]], [0.004, [0.998, 0.998, 0.998]], [0.006, [0.998, 0.998, 0.998]], [0.008, [0.996, 0.996, 0.996]], [0.010, [0.996, 0.996, 0.996]], [0.012, [0.994, 0.994, 0.994]], [0.014, [0.994, 0.994, 0.994]], [0.016, [0.993, 0.993, 0.993]], [0.018, [0.993, 0.993, 0.993]], [0.020, [0.991, 0.991, 0.991]], [0.022, [0.991, 0.991, 0.991]], [0.023, [0.989, 0.989, 0.989]], [0.025, [0.989, 0.989, 0.989]], [0.027, [0.987, 0.987, 0.987]], [0.029, [0.987, 0.987, 0.987]], [0.031, [0.985, 0.985, 0.985]], [0.033, [0.985, 0.985, 0.985]], [0.035, [0.983, 0.983, 0.983]], [0.037, [0.983, 0.983, 0.983]], [0.039, [0.982, 0.982, 0.982]], [0.041, [0.982, 0.982, 0.982]], [0.043, [0.980, 0.980, 0.980]], [0.045, [0.980, 0.980, 0.980]], [0.047, [0.978, 0.978, 0.978]], [0.049, [0.978, 0.978, 0.978]], [0.051, [0.976, 0.976, 0.976]], [0.053, [0.976, 0.976, 0.976]], [0.055, [0.974, 0.974, 0.974]], [0.057, [0.974, 0.974, 0.974]], [0.059, [0.972, 0.972, 0.972]], [0.061, [0.972, 0.972, 0.972]], [0.063, [0.970, 0.970, 0.970]], [0.065, [0.970, 0.970, 0.970]], [0.067, [0.969, 0.969, 0.969]], [0.068, [0.969, 0.969, 0.969]], [0.070, [0.967, 0.967, 0.967]], [0.072, [0.967, 0.967, 0.967]], [0.074, [0.965, 0.965, 0.965]], [0.076, [0.965, 0.965, 0.965]], [0.078, [0.963, 0.963, 0.963]], [0.080, [0.963, 0.963, 0.963]], [0.082, [0.961, 0.961, 0.961]], [0.084, [0.961, 0.961, 0.961]], [0.086, [0.959, 0.959, 0.959]], [0.088, [0.959, 0.959, 0.959]], [0.090, [0.958, 0.958, 0.958]], [0.092, [0.958, 0.958, 0.958]], [0.094, [0.956, 0.956, 0.956]], [0.096, [0.956, 0.956, 0.956]], [0.098, [0.954, 0.954, 0.954]], [0.100, [0.954, 0.954, 0.954]], [0.102, [0.952, 0.952, 0.952]], [0.104, [0.952, 0.952, 0.952]], [0.106, [0.950, 0.950, 0.950]], [0.108, [0.950, 0.950, 0.950]], [0.110, [0.948, 0.948, 0.948]], [0.112, [0.948, 0.948, 0.948]], [0.114, [0.946, 0.946, 0.946]], [0.115, [0.946, 0.946, 0.946]], [0.117, [0.945, 0.945, 0.945]], [0.119, [0.945, 0.945, 0.945]], [0.121, [0.943, 0.943, 0.943]], [0.123, [0.943, 0.943, 0.943]], [0.125, [0.941, 0.941, 0.941]], [0.127, [0.941, 0.941, 0.941]], [0.129, [0.938, 0.938, 0.938]], [0.131, [0.938, 0.938, 0.938]], [0.133, [0.935, 0.935, 0.935]], [0.135, [0.935, 0.935, 0.935]], [0.137, [0.932, 0.932, 0.932]], [0.139, [0.932, 0.932, 0.932]], [0.141, [0.930, 0.930, 0.930]], [0.143, [0.930, 0.930, 0.930]], [0.145, [0.927, 0.927, 0.927]], [0.147, [0.927, 0.927, 0.927]], [0.149, [0.924, 0.924, 0.924]], [0.151, [0.924, 0.924, 0.924]], [0.153, [0.921, 0.921, 0.921]], [0.155, [0.921, 0.921, 0.921]], [0.157, [0.918, 0.918, 0.918]], [0.159, [0.918, 0.918, 0.918]], [0.160, [0.915, 0.915, 0.915]], [0.162, [0.915, 0.915, 0.915]], [0.164, [0.913, 0.913, 0.913]], [0.166, [0.913, 0.913, 0.913]], [0.168, [0.910, 0.910, 0.910]], [0.170, [0.910, 0.910, 0.910]], [0.172, [0.907, 0.907, 0.907]], [0.174, [0.907, 0.907, 0.907]], [0.176, [0.904, 0.904, 0.904]], [0.178, [0.904, 0.904, 0.904]], [0.180, [0.901, 0.901, 0.901]], [0.182, [0.901, 0.901, 0.901]], [0.184, [0.898, 0.898, 0.898]], [0.186, [0.898, 0.898, 0.898]], [0.188, [0.896, 0.896, 0.896]], [0.190, [0.896, 0.896, 0.896]], [0.192, [0.893, 0.893, 0.893]], [0.194, [0.893, 0.893, 0.893]], [0.196, [0.890, 0.890, 0.890]], [0.198, [0.890, 0.890, 0.890]], [0.200, [0.887, 0.887, 0.887]], [0.202, [0.887, 0.887, 0.887]], [0.204, [0.884, 0.884, 0.884]], [0.205, [0.884, 0.884, 0.884]], [0.207, [0.881, 0.881, 0.881]], [0.209, [0.881, 0.881, 0.881]], [0.211, [0.879, 0.879, 0.879]], [0.213, [0.879, 0.879, 0.879]], [0.215, [0.876, 0.876, 0.876]], [0.217, [0.876, 0.876, 0.876]], [0.219, [0.873, 0.873, 0.873]], [0.221, [0.873, 0.873, 0.873]], [0.223, [0.870, 0.870, 0.870]], [0.225, [0.870, 0.870, 0.870]], [0.227, [0.867, 0.867, 0.867]], [0.229, [0.867, 0.867, 0.867]], [0.231, [0.864, 0.864, 0.864]], [0.233, [0.864, 0.864, 0.864]], [0.235, [0.862, 0.862, 0.862]], [0.237, [0.862, 0.862, 0.862]], [0.239, [0.859, 0.859, 0.859]], [0.241, [0.859, 0.859, 0.859]], [0.243, [0.856, 0.856, 0.856]], [0.245, [0.856, 0.856, 0.856]], [0.247, [0.853, 0.853, 0.853]], [0.249, [0.853, 0.853, 0.853]], [0.250, [0.850, 0.850, 0.850]], [0.252, [0.850, 0.850, 0.850]], [0.254, [0.847, 0.847, 0.847]], [0.256, [0.847, 0.847, 0.847]], [0.258, [0.843, 0.843, 0.843]], [0.260, [0.843, 0.843, 0.843]], [0.262, [0.840, 0.840, 0.840]], [0.264, [0.840, 0.840, 0.840]], [0.266, [0.836, 0.836, 0.836]], [0.268, [0.836, 0.836, 0.836]], [0.270, [0.833, 0.833, 0.833]], [0.272, [0.833, 0.833, 0.833]], [0.274, [0.829, 0.829, 0.829]], [0.276, [0.829, 0.829, 0.829]], [0.278, [0.826, 0.826, 0.826]], [0.280, [0.826, 0.826, 0.826]], [0.282, [0.823, 0.823, 0.823]], [0.284, [0.823, 0.823, 0.823]], [0.286, [0.819, 0.819, 0.819]], [0.288, [0.819, 0.819, 0.819]], [0.290, [0.816, 0.816, 0.816]], [0.292, [0.816, 0.816, 0.816]], [0.294, [0.812, 0.812, 0.812]], [0.295, [0.812, 0.812, 0.812]], [0.297, [0.809, 0.809, 0.809]], [0.299, [0.809, 0.809, 0.809]], [0.301, [0.805, 0.805, 0.805]], [0.303, [0.805, 0.805, 0.805]], [0.305, [0.802, 0.802, 0.802]], [0.307, [0.802, 0.802, 0.802]], [0.309, [0.798, 0.798, 0.798]], [0.311, [0.798, 0.798, 0.798]], [0.313, [0.795, 0.795, 0.795]], [0.315, [0.795, 0.795, 0.795]], [0.317, [0.792, 0.792, 0.792]], [0.319, [0.792, 0.792, 0.792]], [0.321, [0.788, 0.788, 0.788]], [0.323, [0.788, 0.788, 0.788]], [0.325, [0.785, 0.785, 0.785]], [0.327, [0.785, 0.785, 0.785]], [0.329, [0.781, 0.781, 0.781]], [0.331, [0.781, 0.781, 0.781]], [0.333, [0.778, 0.778, 0.778]], [0.335, [0.778, 0.778, 0.778]], [0.337, [0.774, 0.774, 0.774]], [0.339, [0.774, 0.774, 0.774]], [0.341, [0.771, 0.771, 0.771]], [0.342, [0.771, 0.771, 0.771]], [0.344, [0.767, 0.767, 0.767]], [0.346, [0.767, 0.767, 0.767]], [0.348, [0.764, 0.764, 0.764]], [0.350, [0.764, 0.764, 0.764]], [0.352, [0.761, 0.761, 0.761]], [0.354, [0.761, 0.761, 0.761]], [0.356, [0.757, 0.757, 0.757]], [0.358, [0.757, 0.757, 0.757]], [0.360, [0.754, 0.754, 0.754]], [0.362, [0.754, 0.754, 0.754]], [0.364, [0.750, 0.750, 0.750]], [0.366, [0.750, 0.750, 0.750]], [0.368, [0.747, 0.747, 0.747]], [0.370, [0.747, 0.747, 0.747]], [0.372, [0.743, 0.743, 0.743]], [0.374, [0.743, 0.743, 0.743]], [0.376, [0.739, 0.739, 0.739]], [0.378, [0.739, 0.739, 0.739]], [0.380, [0.735, 0.735, 0.735]], [0.382, [0.735, 0.735, 0.735]], [0.384, [0.730, 0.730, 0.730]], [0.386, [0.730, 0.730, 0.730]], [0.387, [0.725, 0.725, 0.725]], [0.389, [0.725, 0.725, 0.725]], [0.391, [0.720, 0.720, 0.720]], [0.393, [0.720, 0.720, 0.720]], [0.395, [0.715, 0.715, 0.715]], [0.397, [0.715, 0.715, 0.715]], [0.399, [0.711, 0.711, 0.711]], [0.401, [0.711, 0.711, 0.711]], [0.403, [0.706, 0.706, 0.706]], [0.405, [0.706, 0.706, 0.706]], [0.407, [0.701, 0.701, 0.701]], [0.409, [0.701, 0.701, 0.701]], [0.411, [0.696, 0.696, 0.696]], [0.413, [0.696, 0.696, 0.696]], [0.415, [0.691, 0.691, 0.691]], [0.417, [0.691, 0.691, 0.691]], [0.419, [0.687, 0.687, 0.687]], [0.421, [0.687, 0.687, 0.687]], [0.423, [0.682, 0.682, 0.682]], [0.425, [0.682, 0.682, 0.682]], [0.427, [0.677, 0.677, 0.677]], [0.429, [0.677, 0.677, 0.677]], [0.431, [0.672, 0.672, 0.672]], [0.432, [0.672, 0.672, 0.672]], [0.434, [0.667, 0.667, 0.667]], [0.436, [0.667, 0.667, 0.667]], [0.438, [0.663, 0.663, 0.663]], [0.440, [0.663, 0.663, 0.663]], [0.442, [0.658, 0.658, 0.658]], [0.444, [0.658, 0.658, 0.658]], [0.446, [0.653, 0.653, 0.653]], [0.448, [0.653, 0.653, 0.653]], [0.450, [0.648, 0.648, 0.648]], [0.452, [0.648, 0.648, 0.648]], [0.454, [0.643, 0.643, 0.643]], [0.456, [0.643, 0.643, 0.643]], [0.458, [0.639, 0.639, 0.639]], [0.460, [0.639, 0.639, 0.639]], [0.462, [0.634, 0.634, 0.634]], [0.464, [0.634, 0.634, 0.634]], [0.466, [0.629, 0.629, 0.629]], [0.468, [0.629, 0.629, 0.629]], [0.470, [0.624, 0.624, 0.624]], [0.472, [0.624, 0.624, 0.624]], [0.474, [0.619, 0.619, 0.619]], [0.476, [0.619, 0.619, 0.619]], [0.477, [0.615, 0.615, 0.615]], [0.479, [0.615, 0.615, 0.615]], [0.481, [0.610, 0.610, 0.610]], [0.483, [0.610, 0.610, 0.610]], [0.485, [0.605, 0.605, 0.605]], [0.487, [0.605, 0.605, 0.605]], [0.489, [0.600, 0.600, 0.600]], [0.491, [0.600, 0.600, 0.600]], [0.493, [0.595, 0.595, 0.595]], [0.495, [0.595, 0.595, 0.595]], [0.497, [0.591, 0.591, 0.591]], [0.499, [0.591, 0.591, 0.591]], [0.501, [0.586, 0.586, 0.586]], [0.503, [0.586, 0.586, 0.586]], [0.505, [0.582, 0.582, 0.582]], [0.507, [0.582, 0.582, 0.582]], [0.509, [0.577, 0.577, 0.577]], [0.511, [0.577, 0.577, 0.577]], [0.513, [0.573, 0.573, 0.573]], [0.515, [0.573, 0.573, 0.573]], [0.517, [0.569, 0.569, 0.569]], [0.519, [0.569, 0.569, 0.569]], [0.521, [0.565, 0.565, 0.565]], [0.523, [0.565, 0.565, 0.565]], [0.524, [0.560, 0.560, 0.560]], [0.526, [0.560, 0.560, 0.560]], [0.528, [0.556, 0.556, 0.556]], [0.530, [0.556, 0.556, 0.556]], [0.532, [0.552, 0.552, 0.552]], [0.534, [0.552, 0.552, 0.552]], [0.536, [0.547, 0.547, 0.547]], [0.538, [0.547, 0.547, 0.547]], [0.540, [0.543, 0.543, 0.543]], [0.542, [0.543, 0.543, 0.543]], [0.544, [0.539, 0.539, 0.539]], [0.546, [0.539, 0.539, 0.539]], [0.548, [0.534, 0.534, 0.534]], [0.550, [0.534, 0.534, 0.534]], [0.552, [0.530, 0.530, 0.530]], [0.554, [0.530, 0.530, 0.530]], [0.556, [0.526, 0.526, 0.526]], [0.558, [0.526, 0.526, 0.526]], [0.560, [0.521, 0.521, 0.521]], [0.562, [0.521, 0.521, 0.521]], [0.564, [0.517, 0.517, 0.517]], [0.566, [0.517, 0.517, 0.517]], [0.568, [0.513, 0.513, 0.513]], [0.569, [0.513, 0.513, 0.513]], [0.571, [0.509, 0.509, 0.509]], [0.573, [0.509, 0.509, 0.509]], [0.575, [0.504, 0.504, 0.504]], [0.577, [0.504, 0.504, 0.504]], [0.579, [0.500, 0.500, 0.500]], [0.581, [0.500, 0.500, 0.500]], [0.583, [0.496, 0.496, 0.496]], [0.585, [0.496, 0.496, 0.496]], [0.587, [0.491, 0.491, 0.491]], [0.589, [0.491, 0.491, 0.491]], [0.591, [0.487, 0.487, 0.487]], [0.593, [0.487, 0.487, 0.487]], [0.595, [0.483, 0.483, 0.483]], [0.597, [0.483, 0.483, 0.483]], [0.599, [0.478, 0.478, 0.478]], [0.601, [0.478, 0.478, 0.478]], [0.603, [0.474, 0.474, 0.474]], [0.605, [0.474, 0.474, 0.474]], [0.607, [0.470, 0.470, 0.470]], [0.609, [0.470, 0.470, 0.470]], [0.611, [0.466, 0.466, 0.466]], [0.613, [0.466, 0.466, 0.466]], [0.614, [0.461, 0.461, 0.461]], [0.616, [0.461, 0.461, 0.461]], [0.618, [0.457, 0.457, 0.457]], [0.620, [0.457, 0.457, 0.457]], [0.622, [0.453, 0.453, 0.453]], [0.624, [0.453, 0.453, 0.453]], [0.626, [0.448, 0.448, 0.448]], [0.628, [0.448, 0.448, 0.448]], [0.630, [0.444, 0.444, 0.444]], [0.632, [0.444, 0.444, 0.444]], [0.634, [0.440, 0.440, 0.440]], [0.636, [0.440, 0.440, 0.440]], [0.638, [0.436, 0.436, 0.436]], [0.640, [0.436, 0.436, 0.436]], [0.642, [0.432, 0.432, 0.432]], [0.644, [0.432, 0.432, 0.432]], [0.646, [0.428, 0.428, 0.428]], [0.648, [0.428, 0.428, 0.428]], [0.650, [0.424, 0.424, 0.424]], [0.652, [0.424, 0.424, 0.424]], [0.654, [0.420, 0.420, 0.420]], [0.656, [0.420, 0.420, 0.420]], [0.658, [0.416, 0.416, 0.416]], [0.659, [0.416, 0.416, 0.416]], [0.661, [0.412, 0.412, 0.412]], [0.663, [0.412, 0.412, 0.412]], [0.665, [0.408, 0.408, 0.408]], [0.667, [0.408, 0.408, 0.408]], [0.669, [0.404, 0.404, 0.404]], [0.671, [0.404, 0.404, 0.404]], [0.673, [0.400, 0.400, 0.400]], [0.675, [0.400, 0.400, 0.400]], [0.677, [0.396, 0.396, 0.396]], [0.679, [0.396, 0.396, 0.396]], [0.681, [0.392, 0.392, 0.392]], [0.683, [0.392, 0.392, 0.392]], [0.685, [0.388, 0.388, 0.388]], [0.687, [0.388, 0.388, 0.388]], [0.689, [0.383, 0.383, 0.383]], [0.691, [0.383, 0.383, 0.383]], [0.693, [0.379, 0.379, 0.379]], [0.695, [0.379, 0.379, 0.379]], [0.697, [0.375, 0.375, 0.375]], [0.699, [0.375, 0.375, 0.375]], [0.701, [0.371, 0.371, 0.371]], [0.703, [0.371, 0.371, 0.371]], [0.705, [0.367, 0.367, 0.367]], [0.706, [0.367, 0.367, 0.367]], [0.708, [0.363, 0.363, 0.363]], [0.710, [0.363, 0.363, 0.363]], [0.712, [0.359, 0.359, 0.359]], [0.714, [0.359, 0.359, 0.359]], [0.716, [0.355, 0.355, 0.355]], [0.718, [0.355, 0.355, 0.355]], [0.720, [0.351, 0.351, 0.351]], [0.722, [0.351, 0.351, 0.351]], [0.724, [0.347, 0.347, 0.347]], [0.726, [0.347, 0.347, 0.347]], [0.728, [0.343, 0.343, 0.343]], [0.730, [0.343, 0.343, 0.343]], [0.732, [0.339, 0.339, 0.339]], [0.734, [0.339, 0.339, 0.339]], [0.736, [0.335, 0.335, 0.335]], [0.738, [0.335, 0.335, 0.335]], [0.740, [0.331, 0.331, 0.331]], [0.742, [0.331, 0.331, 0.331]], [0.744, [0.327, 0.327, 0.327]], [0.746, [0.327, 0.327, 0.327]], [0.748, [0.323, 0.323, 0.323]], [0.750, [0.323, 0.323, 0.323]], [0.751, [0.317, 0.317, 0.317]], [0.753, [0.317, 0.317, 0.317]], [0.755, [0.312, 0.312, 0.312]], [0.757, [0.312, 0.312, 0.312]], [0.759, [0.306, 0.306, 0.306]], [0.761, [0.306, 0.306, 0.306]], [0.763, [0.301, 0.301, 0.301]], [0.765, [0.301, 0.301, 0.301]], [0.767, [0.295, 0.295, 0.295]], [0.769, [0.295, 0.295, 0.295]], [0.771, [0.290, 0.290, 0.290]], [0.773, [0.290, 0.290, 0.290]], [0.775, [0.284, 0.284, 0.284]], [0.777, [0.284, 0.284, 0.284]], [0.779, [0.279, 0.279, 0.279]], [0.781, [0.279, 0.279, 0.279]], [0.783, [0.273, 0.273, 0.273]], [0.785, [0.273, 0.273, 0.273]], [0.787, [0.268, 0.268, 0.268]], [0.789, [0.268, 0.268, 0.268]], [0.791, [0.262, 0.262, 0.262]], [0.793, [0.262, 0.262, 0.262]], [0.795, [0.257, 0.257, 0.257]], [0.796, [0.257, 0.257, 0.257]], [0.798, [0.251, 0.251, 0.251]], [0.800, [0.251, 0.251, 0.251]], [0.802, [0.245, 0.245, 0.245]], [0.804, [0.245, 0.245, 0.245]], [0.806, [0.240, 0.240, 0.240]], [0.808, [0.240, 0.240, 0.240]], [0.810, [0.234, 0.234, 0.234]], [0.812, [0.234, 0.234, 0.234]], [0.814, [0.229, 0.229, 0.229]], [0.816, [0.229, 0.229, 0.229]], [0.818, [0.223, 0.223, 0.223]], [0.820, [0.223, 0.223, 0.223]], [0.822, [0.218, 0.218, 0.218]], [0.824, [0.218, 0.218, 0.218]], [0.826, [0.212, 0.212, 0.212]], [0.828, [0.212, 0.212, 0.212]], [0.830, [0.207, 0.207, 0.207]], [0.832, [0.207, 0.207, 0.207]], [0.834, [0.201, 0.201, 0.201]], [0.836, [0.201, 0.201, 0.201]], [0.838, [0.196, 0.196, 0.196]], [0.840, [0.196, 0.196, 0.196]], [0.841, [0.190, 0.190, 0.190]], [0.843, [0.190, 0.190, 0.190]], [0.845, [0.185, 0.185, 0.185]], [0.847, [0.185, 0.185, 0.185]], [0.849, [0.179, 0.179, 0.179]], [0.851, [0.179, 0.179, 0.179]], [0.853, [0.173, 0.173, 0.173]], [0.855, [0.173, 0.173, 0.173]], [0.857, [0.168, 0.168, 0.168]], [0.859, [0.168, 0.168, 0.168]], [0.861, [0.162, 0.162, 0.162]], [0.863, [0.162, 0.162, 0.162]], [0.865, [0.157, 0.157, 0.157]], [0.867, [0.157, 0.157, 0.157]], [0.869, [0.151, 0.151, 0.151]], [0.871, [0.151, 0.151, 0.151]], [0.873, [0.146, 0.146, 0.146]], [0.875, [0.146, 0.146, 0.146]], [0.877, [0.141, 0.141, 0.141]], [0.879, [0.141, 0.141, 0.141]], [0.881, [0.137, 0.137, 0.137]], [0.883, [0.137, 0.137, 0.137]], [0.885, [0.132, 0.132, 0.132]], [0.886, [0.132, 0.132, 0.132]], [0.888, [0.127, 0.127, 0.127]], [0.890, [0.127, 0.127, 0.127]], [0.892, [0.123, 0.123, 0.123]], [0.894, [0.123, 0.123, 0.123]], [0.896, [0.118, 0.118, 0.118]], [0.898, [0.118, 0.118, 0.118]], [0.900, [0.114, 0.114, 0.114]], [0.902, [0.114, 0.114, 0.114]], [0.904, [0.109, 0.109, 0.109]], [0.906, [0.109, 0.109, 0.109]], [0.908, [0.105, 0.105, 0.105]], [0.910, [0.105, 0.105, 0.105]], [0.912, [0.100, 0.100, 0.100]], [0.914, [0.100, 0.100, 0.100]], [0.916, [0.096, 0.096, 0.096]], [0.918, [0.096, 0.096, 0.096]], [0.920, [0.091, 0.091, 0.091]], [0.922, [0.091, 0.091, 0.091]], [0.924, [0.086, 0.086, 0.086]], [0.926, [0.086, 0.086, 0.086]], [0.928, [0.082, 0.082, 0.082]], [0.930, [0.082, 0.082, 0.082]], [0.932, [0.077, 0.077, 0.077]], [0.933, [0.077, 0.077, 0.077]], [0.935, [0.073, 0.073, 0.073]], [0.937, [0.073, 0.073, 0.073]], [0.939, [0.068, 0.068, 0.068]], [0.941, [0.068, 0.068, 0.068]], [0.943, [0.064, 0.064, 0.064]], [0.945, [0.064, 0.064, 0.064]], [0.947, [0.059, 0.059, 0.059]], [0.949, [0.059, 0.059, 0.059]], [0.951, [0.055, 0.055, 0.055]], [0.953, [0.055, 0.055, 0.055]], [0.955, [0.050, 0.050, 0.050]], [0.957, [0.050, 0.050, 0.050]], [0.959, [0.046, 0.046, 0.046]], [0.961, [0.046, 0.046, 0.046]], [0.963, [0.041, 0.041, 0.041]], [0.965, [0.041, 0.041, 0.041]], [0.967, [0.036, 0.036, 0.036]], [0.969, [0.036, 0.036, 0.036]], [0.971, [0.032, 0.032, 0.032]], [0.973, [0.032, 0.032, 0.032]], [0.975, [0.027, 0.027, 0.027]], [0.977, [0.027, 0.027, 0.027]], [0.978, [0.023, 0.023, 0.023]], [0.980, [0.023, 0.023, 0.023]], [0.982, [0.018, 0.018, 0.018]], [0.984, [0.018, 0.018, 0.018]], [0.986, [0.014, 0.014, 0.014]], [0.988, [0.014, 0.014, 0.014]], [0.990, [0.009, 0.009, 0.009]], [0.992, [0.009, 0.009, 0.009]], [0.994, [0.005, 0.005, 0.005]], [0.996, [0.005, 0.005, 0.005]], [0.998, [0.000, 0.000, 0.000]], [1.000, [0.000, 0.000, 0.000]]];
H.colormap_haline = [[0.000,[0.16295295,0.09521592,0.42257292]],[0.004,[0.16481011,0.09635116,0.43184597]],[0.008,[0.16661617,0.09744967,0.44120648]],[0.012,[0.16836624,0.09851521,0.45065110]],[0.016,[0.17005471,0.09955275,0.46017511]],[0.020,[0.17167508,0.10056873,0.46977222]],[0.024,[0.17321987,0.10157136,0.47943423]],[0.027,[0.17468043,0.10257097,0.48915068]],[0.031,[0.17604337,0.10356584,0.49894160]],[0.035,[0.17729823,0.10458025,0.50877159]],[0.039,[0.17843230,0.10563803,0.51861083]],[0.043,[0.17942267,0.10674166,0.52848361]],[0.047,[0.18025423,0.10793563,0.53832457]],[0.051,[0.18089754,0.10923866,0.54813521]],[0.055,[0.18132983,0.11070429,0.55784354]],[0.059,[0.18150693,0.11236134,0.56744719]],[0.063,[0.18139596,0.11428044,0.57685059]],[0.067,[0.18094994,0.11652515,0.58598210]],[0.071,[0.18011665,0.11916830,0.59474942]],[0.075,[0.17884196,0.12228861,0.60303661]],[0.078,[0.17707513,0.12596207,0.61070774]],[0.082,[0.17477650,0.13024864,0.61761743]],[0.086,[0.17192559,0.13517685,0.62362908]],[0.090,[0.16853023,0.14073088,0.62863572]],[0.094,[0.16463735,0.14684332,0.63257966]],[0.098,[0.16031417,0.15340748,0.63547019]],[0.102,[0.15565395,0.16029118,0.63737422]],[0.106,[0.15073736,0.16736889,0.63839897]],[0.110,[0.14564276,0.17452933,0.63866876]],[0.114,[0.14043681,0.18168415,0.63830895]],[0.118,[0.13517265,0.18876883,0.63743501]],[0.122,[0.12989066,0.19573986,0.63614699]],[0.125,[0.12462051,0.20257034,0.63452826]],[0.129,[0.11938590,0.20924466,0.63264783]],[0.133,[0.11422949,0.21574563,0.63057687]],[0.137,[0.10914049,0.22208312,0.62834552]],[0.141,[0.10414386,0.22825465,0.62599796]],[0.145,[0.09926305,0.23426098,0.62357178]],[0.149,[0.09449513,0.24011400,0.62108167]],[0.153,[0.08986952,0.24581472,0.61855919]],[0.157,[0.08539286,0.25137295,0.61601663]],[0.161,[0.08106757,0.25679971,0.61345967]],[0.165,[0.07694419,0.26209156,0.61092383]],[0.169,[0.07300704,0.26726550,0.60839650]],[0.173,[0.06927651,0.27232730,0.60588732]],[0.176,[0.06578801,0.27727895,0.60341418]],[0.180,[0.06255595,0.28212824,0.60097879]],[0.184,[0.05959205,0.28688317,0.59857975]],[0.188,[0.05691772,0.29154887,0.59622150]],[0.192,[0.05455347,0.29613025,0.59390760]],[0.196,[0.05251890,0.30063184,0.59164148]],[0.200,[0.05083877,0.30505623,0.58943153]],[0.204,[0.04951454,0.30941022,0.58727149]],[0.208,[0.04855490,0.31369777,0.58516273]],[0.212,[0.04796369,0.31792260,0.58310625]],[0.216,[0.04773946,0.32208826,0.58110273]],[0.220,[0.04787545,0.32619809,0.57915259]],[0.224,[0.04835985,0.33025524,0.57725602]],[0.227,[0.04917639,0.33426270,0.57541302]],[0.231,[0.05030519,0.33822330,0.57362343]],[0.235,[0.05172369,0.34213968,0.57188697]],[0.239,[0.05340768,0.34601437,0.57020322]],[0.243,[0.05533215,0.34984975,0.56857170]],[0.247,[0.05747218,0.35364807,0.56699183]],[0.251,[0.05980352,0.35741146,0.56546298]],[0.255,[0.06230309,0.36114193,0.56398445]],[0.259,[0.06494928,0.36484141,0.56255553]],[0.263,[0.06772215,0.36851170,0.56117544]],[0.267,[0.07060351,0.37215453,0.55984338]],[0.271,[0.07357840,0.37577101,0.55856129]],[0.275,[0.07663101,0.37936300,0.55732688]],[0.278,[0.07974740,0.38293224,0.55613803]],[0.282,[0.08291581,0.38648014,0.55499386]],[0.286,[0.08612581,0.39000807,0.55389345]],[0.290,[0.08936818,0.39351731,0.55283591]],[0.294,[0.09263475,0.39700911,0.55182030]],[0.298,[0.09591831,0.40048465,0.55084572]],[0.302,[0.09921324,0.40394470,0.54991337]],[0.306,[0.10251396,0.40739026,0.54902285]],[0.310,[0.10581449,0.41082289,0.54817039]],[0.314,[0.10911041,0.41424357,0.54735502]],[0.318,[0.11239785,0.41765327,0.54657580]],[0.322,[0.11567334,0.42105293,0.54583174]],[0.325,[0.11893417,0.42444322,0.54512319]],[0.329,[0.12217819,0.42782467,0.54445130]],[0.333,[0.12540189,0.43119871,0.54381137]],[0.337,[0.12860313,0.43456614,0.54320239]],[0.341,[0.13177997,0.43792773,0.54262334]],[0.345,[0.13493070,0.44128422,0.54207318]],[0.349,[0.13805491,0.44463569,0.54155509]],[0.353,[0.14115011,0.44798348,0.54106381]],[0.357,[0.14421502,0.45132831,0.54059793]],[0.361,[0.14724858,0.45467082,0.54015636]],[0.365,[0.15024993,0.45801160,0.53973830]],[0.369,[0.15321920,0.46135071,0.53934608]],[0.373,[0.15615459,0.46468937,0.53897446]],[0.376,[0.15905548,0.46802811,0.53862227]],[0.380,[0.16192139,0.47136748,0.53828832]],[0.384,[0.16475245,0.47470770,0.53797335]],[0.388,[0.16754826,0.47804933,0.53767570]],[0.392,[0.17030807,0.48139312,0.53739229]],[0.396,[0.17303172,0.48473950,0.53712185]],[0.400,[0.17571937,0.48808883,0.53686368]],[0.404,[0.17837165,0.49144123,0.53661836]],[0.408,[0.18098782,0.49479750,0.53638175]],[0.412,[0.18356807,0.49815802,0.53615252]],[0.416,[0.18611271,0.50152311,0.53592932]],[0.420,[0.18862304,0.50489271,0.53571335]],[0.424,[0.19109853,0.50826757,0.53550031]],[0.427,[0.19353972,0.51164795,0.53528878]],[0.431,[0.19594729,0.51503411,0.53507737]],[0.435,[0.19832271,0.51842599,0.53486655]],[0.439,[0.20066603,0.52182411,0.53465280]],[0.443,[0.20297814,0.52522869,0.53443452]],[0.447,[0.20526004,0.52863989,0.53421026]],[0.451,[0.20751347,0.53205763,0.53398000]],[0.455,[0.20973895,0.53548228,0.53374061]],[0.459,[0.21193777,0.53891395,0.53349055]],[0.463,[0.21411134,0.54235271,0.53322838]],[0.467,[0.21626158,0.54579847,0.53295358]],[0.471,[0.21838953,0.54925145,0.53266342]],[0.475,[0.22049690,0.55271165,0.53235648]],[0.478,[0.22258553,0.55617904,0.53203143]],[0.482,[0.22465737,0.55965355,0.53168703]],[0.486,[0.22671414,0.56313522,0.53132127]],[0.490,[0.22875792,0.56662395,0.53093283]],[0.494,[0.23079087,0.57011965,0.53052033]],[0.498,[0.23281507,0.57362224,0.53008206]],[0.502,[0.23483286,0.57713158,0.52961673]],[0.506,[0.23684665,0.58064749,0.52912308]],[0.510,[0.23885883,0.58416983,0.52859959]],[0.514,[0.24087168,0.58769850,0.52804439]],[0.518,[0.24288806,0.59123319,0.52745678]],[0.522,[0.24491068,0.59477367,0.52683562]],[0.525,[0.24694203,0.59831977,0.52617913]],[0.529,[0.24898467,0.60187131,0.52548550]],[0.533,[0.25104184,0.60542788,0.52475455]],[0.537,[0.25311648,0.60898917,0.52398530]],[0.541,[0.25521116,0.61255501,0.52317565]],[0.545,[0.25732863,0.61612516,0.52232392]],[0.549,[0.25947244,0.61969909,0.52143048]],[0.553,[0.26164566,0.62327645,0.52049446]],[0.557,[0.26385093,0.62685702,0.51951365]],[0.561,[0.26609108,0.63044055,0.51848614]],[0.565,[0.26836985,0.63402641,0.51741302]],[0.569,[0.27069035,0.63761419,0.51629357]],[0.573,[0.27305542,0.64120359,0.51512593]],[0.576,[0.27546763,0.64479445,0.51390698]],[0.580,[0.27793090,0.64838599,0.51263903]],[0.584,[0.28044833,0.65197775,0.51132146]],[0.588,[0.28302300,0.65556926,0.50995370]],[0.592,[0.28565699,0.65916060,0.50852973]],[0.596,[0.28835435,0.66275079,0.50705376]],[0.600,[0.29111809,0.66633932,0.50552536]],[0.604,[0.29395118,0.66992568,0.50394405]],[0.608,[0.29685621,0.67350965,0.50230621]],[0.612,[0.29983621,0.67709070,0.50061096]],[0.616,[0.30289440,0.68066801,0.49886092]],[0.620,[0.30603358,0.68424103,0.49705572]],[0.624,[0.30925654,0.68780920,0.49519500]],[0.627,[0.31256595,0.69137231,0.49327320]],[0.631,[0.31596475,0.69492953,0.49129275]],[0.635,[0.31945565,0.69848010,0.48925534]],[0.639,[0.32304124,0.70202339,0.48716074]],[0.643,[0.32672410,0.70555876,0.48500876]],[0.647,[0.33050708,0.70908574,0.48279556]],[0.651,[0.33439297,0.71260364,0.48052013]],[0.655,[0.33838396,0.71611153,0.47818646]],[0.659,[0.34248248,0.71960867,0.47579452]],[0.663,[0.34669093,0.72309429,0.47334431]],[0.667,[0.35101170,0.72656762,0.47083590]],[0.671,[0.35544775,0.73002792,0.46826672]],[0.675,[0.36000221,0.73347437,0.46563433]],[0.678,[0.36467645,0.73690592,0.46294413]],[0.682,[0.36947282,0.74032165,0.46019651]],[0.686,[0.37439369,0.74372060,0.45739197]],[0.690,[0.37944143,0.74710175,0.45453114]],[0.694,[0.38461841,0.75046408,0.45161478]],[0.698,[0.38992704,0.75380647,0.44864382]],[0.702,[0.39536975,0.75712778,0.44561937]],[0.706,[0.40095086,0.76042675,0.44253806]],[0.710,[0.40667140,0.76370211,0.43940565]],[0.714,[0.41253348,0.76695254,0.43622497]],[0.718,[0.41853957,0.77017668,0.43299833]],[0.722,[0.42469214,0.77337305,0.42972841]],[0.725,[0.43099366,0.77654014,0.42641835]],[0.729,[0.43744660,0.77967637,0.42307180]],[0.733,[0.44405337,0.78278006,0.41969303]],[0.737,[0.45081634,0.78584949,0.41628696]],[0.741,[0.45773776,0.78888286,0.41285929]],[0.745,[0.46481977,0.79187831,0.40941661]],[0.749,[0.47206428,0.79483390,0.40596650]],[0.753,[0.47947297,0.79774769,0.40251764]],[0.757,[0.48704720,0.80061765,0.39907996]],[0.761,[0.49478789,0.80344179,0.39566477]],[0.765,[0.50269545,0.80621808,0.39228485]],[0.769,[0.51077223,0.80894416,0.38895135]],[0.773,[0.51901758,0.81161801,0.38568043]],[0.776,[0.52742705,0.81423825,0.38249349]],[0.780,[0.53599744,0.81680329,0.37941065]],[0.784,[0.54472430,0.81931180,0.37645392]],[0.788,[0.55360175,0.82176277,0.37364707]],[0.792,[0.56262239,0.82415554,0.37101546]],[0.796,[0.57178017,0.82648930,0.36858305]],[0.800,[0.58106198,0.82876481,0.36637986]],[0.804,[0.59045227,0.83098363,0.36443634]],[0.808,[0.59993631,0.83314747,0.36278020]],[0.812,[0.60949784,0.83525870,0.36143806]],[0.816,[0.61911788,0.83732074,0.36043550]],[0.820,[0.62877531,0.83933797,0.35979568]],[0.824,[0.63845159,0.84131462,0.35953618]],[0.827,[0.64812757,0.84325556,0.35967077]],[0.831,[0.65778455,0.84516598,0.36020866]],[0.835,[0.66740471,0.84705131,0.36115427]],[0.839,[0.67696176,0.84891984,0.36250963]],[0.843,[0.68644876,0.85077489,0.36426656]],[0.847,[0.69585443,0.85262128,0.36641547]],[0.851,[0.70516856,0.85446373,0.36894368]],[0.855,[0.71438303,0.85630656,0.37183582]],[0.859,[0.72349176,0.85815365,0.37507450]],[0.863,[0.73249065,0.86000837,0.37864099]],[0.867,[0.74137736,0.86187357,0.38251590]],[0.871,[0.75015120,0.86375161,0.38667965]],[0.875,[0.75881284,0.86564434,0.39111303]],[0.878,[0.76736417,0.86755320,0.39579749]],[0.882,[0.77580803,0.86947917,0.40071548]],[0.886,[0.78414804,0.87142291,0.40585059]],[0.890,[0.79237773,0.87338865,0.41118249]],[0.894,[0.80049763,0.87537819,0.41669356]],[0.898,[0.80852429,0.87738718,0.42237605]],[0.902,[0.81646307,0.87941518,0.42821863]],[0.906,[0.82431945,0.88146161,0.43421127]],[0.910,[0.83208604,0.88353084,0.44033585]],[0.914,[0.83975443,0.88562785,0.44657232]],[0.918,[0.84735440,0.88774214,0.45293066]],[0.922,[0.85489132,0.88987266,0.45940532]],[0.925,[0.86234095,0.89203075,0.46596504]],[0.929,[0.86971917,0.89421116,0.47261258]],[0.933,[0.87704795,0.89640559,0.47935960]],[0.937,[0.88430614,0.89862422,0.48617718]],[0.941,[0.89149679,0.90086694,0.49305896]],[0.945,[0.89865066,0.90312109,0.50002982]],[0.949,[0.90573286,0.90540326,0.50704449]],[0.953,[0.91276817,0.90770328,0.51412293]],[0.957,[0.91977198,0.91001483,0.52127748]],[0.961,[0.92669995,0.91235949,0.52844799]],[0.965,[0.93360939,0.91471118,0.53569895]],[0.969,[0.94046103,0.91708934,0.54297530]],[0.973,[0.94728035,0.91948254,0.55030445]],[0.976,[0.95406597,0.92189212,0.55767999]],[0.980,[0.96080498,0.92432523,0.56507901]],[0.984,[0.96752874,0.92676689,0.57254139]],[0.988,[0.97419673,0.92923821,0.58000416]],[0.992,[0.98086270,0.93171248,0.58754258]],[0.996,[0.98746841,0.93422029,0.59506489]],[1.000,[0.99408058,0.93672758,0.60267000]]]
H.colormap_hot = [[0.000, [0.042, 0.000, 0.000]], [0.002, [0.042, 0.000, 0.000]], [0.004, [0.052, 0.000, 0.000]], [0.006, [0.052, 0.000, 0.000]], [0.008, [0.062, 0.000, 0.000]], [0.010, [0.062, 0.000, 0.000]], [0.012, [0.072, 0.000, 0.000]], [0.014, [0.072, 0.000, 0.000]], [0.016, [0.083, 0.000, 0.000]], [0.018, [0.083, 0.000, 0.000]], [0.020, [0.093, 0.000, 0.000]], [0.022, [0.093, 0.000, 0.000]], [0.023, [0.103, 0.000, 0.000]], [0.025, [0.103, 0.000, 0.000]], [0.027, [0.114, 0.000, 0.000]], [0.029, [0.114, 0.000, 0.000]], [0.031, [0.124, 0.000, 0.000]], [0.033, [0.124, 0.000, 0.000]], [0.035, [0.134, 0.000, 0.000]], [0.037, [0.134, 0.000, 0.000]], [0.039, [0.145, 0.000, 0.000]], [0.041, [0.145, 0.000, 0.000]], [0.043, [0.155, 0.000, 0.000]], [0.045, [0.155, 0.000, 0.000]], [0.047, [0.165, 0.000, 0.000]], [0.049, [0.165, 0.000, 0.000]], [0.051, [0.175, 0.000, 0.000]], [0.053, [0.175, 0.000, 0.000]], [0.055, [0.186, 0.000, 0.000]], [0.057, [0.186, 0.000, 0.000]], [0.059, [0.196, 0.000, 0.000]], [0.061, [0.196, 0.000, 0.000]], [0.063, [0.206, 0.000, 0.000]], [0.065, [0.206, 0.000, 0.000]], [0.067, [0.217, 0.000, 0.000]], [0.068, [0.217, 0.000, 0.000]], [0.070, [0.227, 0.000, 0.000]], [0.072, [0.227, 0.000, 0.000]], [0.074, [0.237, 0.000, 0.000]], [0.076, [0.237, 0.000, 0.000]], [0.078, [0.247, 0.000, 0.000]], [0.080, [0.247, 0.000, 0.000]], [0.082, [0.258, 0.000, 0.000]], [0.084, [0.258, 0.000, 0.000]], [0.086, [0.268, 0.000, 0.000]], [0.088, [0.268, 0.000, 0.000]], [0.090, [0.278, 0.000, 0.000]], [0.092, [0.278, 0.000, 0.000]], [0.094, [0.289, 0.000, 0.000]], [0.096, [0.289, 0.000, 0.000]], [0.098, [0.299, 0.000, 0.000]], [0.100, [0.299, 0.000, 0.000]], [0.102, [0.309, 0.000, 0.000]], [0.104, [0.309, 0.000, 0.000]], [0.106, [0.320, 0.000, 0.000]], [0.108, [0.320, 0.000, 0.000]], [0.110, [0.330, 0.000, 0.000]], [0.112, [0.330, 0.000, 0.000]], [0.114, [0.340, 0.000, 0.000]], [0.115, [0.340, 0.000, 0.000]], [0.117, [0.350, 0.000, 0.000]], [0.119, [0.350, 0.000, 0.000]], [0.121, [0.361, 0.000, 0.000]], [0.123, [0.361, 0.000, 0.000]], [0.125, [0.371, 0.000, 0.000]], [0.127, [0.371, 0.000, 0.000]], [0.129, [0.381, 0.000, 0.000]], [0.131, [0.381, 0.000, 0.000]], [0.133, [0.392, 0.000, 0.000]], [0.135, [0.392, 0.000, 0.000]], [0.137, [0.402, 0.000, 0.000]], [0.139, [0.402, 0.000, 0.000]], [0.141, [0.412, 0.000, 0.000]], [0.143, [0.412, 0.000, 0.000]], [0.145, [0.423, 0.000, 0.000]], [0.147, [0.423, 0.000, 0.000]], [0.149, [0.433, 0.000, 0.000]], [0.151, [0.433, 0.000, 0.000]], [0.153, [0.443, 0.000, 0.000]], [0.155, [0.443, 0.000, 0.000]], [0.157, [0.453, 0.000, 0.000]], [0.159, [0.453, 0.000, 0.000]], [0.160, [0.464, 0.000, 0.000]], [0.162, [0.464, 0.000, 0.000]], [0.164, [0.474, 0.000, 0.000]], [0.166, [0.474, 0.000, 0.000]], [0.168, [0.484, 0.000, 0.000]], [0.170, [0.484, 0.000, 0.000]], [0.172, [0.495, 0.000, 0.000]], [0.174, [0.495, 0.000, 0.000]], [0.176, [0.505, 0.000, 0.000]], [0.178, [0.505, 0.000, 0.000]], [0.180, [0.515, 0.000, 0.000]], [0.182, [0.515, 0.000, 0.000]], [0.184, [0.525, 0.000, 0.000]], [0.186, [0.525, 0.000, 0.000]], [0.188, [0.536, 0.000, 0.000]], [0.190, [0.536, 0.000, 0.000]], [0.192, [0.546, 0.000, 0.000]], [0.194, [0.546, 0.000, 0.000]], [0.196, [0.556, 0.000, 0.000]], [0.198, [0.556, 0.000, 0.000]], [0.200, [0.567, 0.000, 0.000]], [0.202, [0.567, 0.000, 0.000]], [0.204, [0.577, 0.000, 0.000]], [0.205, [0.577, 0.000, 0.000]], [0.207, [0.587, 0.000, 0.000]], [0.209, [0.587, 0.000, 0.000]], [0.211, [0.598, 0.000, 0.000]], [0.213, [0.598, 0.000, 0.000]], [0.215, [0.608, 0.000, 0.000]], [0.217, [0.608, 0.000, 0.000]], [0.219, [0.618, 0.000, 0.000]], [0.221, [0.618, 0.000, 0.000]], [0.223, [0.628, 0.000, 0.000]], [0.225, [0.628, 0.000, 0.000]], [0.227, [0.639, 0.000, 0.000]], [0.229, [0.639, 0.000, 0.000]], [0.231, [0.649, 0.000, 0.000]], [0.233, [0.649, 0.000, 0.000]], [0.235, [0.659, 0.000, 0.000]], [0.237, [0.659, 0.000, 0.000]], [0.239, [0.670, 0.000, 0.000]], [0.241, [0.670, 0.000, 0.000]], [0.243, [0.680, 0.000, 0.000]], [0.245, [0.680, 0.000, 0.000]], [0.247, [0.690, 0.000, 0.000]], [0.249, [0.690, 0.000, 0.000]], [0.250, [0.700, 0.000, 0.000]], [0.252, [0.700, 0.000, 0.000]], [0.254, [0.711, 0.000, 0.000]], [0.256, [0.711, 0.000, 0.000]], [0.258, [0.721, 0.000, 0.000]], [0.260, [0.721, 0.000, 0.000]], [0.262, [0.731, 0.000, 0.000]], [0.264, [0.731, 0.000, 0.000]], [0.266, [0.742, 0.000, 0.000]], [0.268, [0.742, 0.000, 0.000]], [0.270, [0.752, 0.000, 0.000]], [0.272, [0.752, 0.000, 0.000]], [0.274, [0.762, 0.000, 0.000]], [0.276, [0.762, 0.000, 0.000]], [0.278, [0.773, 0.000, 0.000]], [0.280, [0.773, 0.000, 0.000]], [0.282, [0.783, 0.000, 0.000]], [0.284, [0.783, 0.000, 0.000]], [0.286, [0.793, 0.000, 0.000]], [0.288, [0.793, 0.000, 0.000]], [0.290, [0.803, 0.000, 0.000]], [0.292, [0.803, 0.000, 0.000]], [0.294, [0.814, 0.000, 0.000]], [0.295, [0.814, 0.000, 0.000]], [0.297, [0.824, 0.000, 0.000]], [0.299, [0.824, 0.000, 0.000]], [0.301, [0.834, 0.000, 0.000]], [0.303, [0.834, 0.000, 0.000]], [0.305, [0.845, 0.000, 0.000]], [0.307, [0.845, 0.000, 0.000]], [0.309, [0.855, 0.000, 0.000]], [0.311, [0.855, 0.000, 0.000]], [0.313, [0.865, 0.000, 0.000]], [0.315, [0.865, 0.000, 0.000]], [0.317, [0.875, 0.000, 0.000]], [0.319, [0.875, 0.000, 0.000]], [0.321, [0.886, 0.000, 0.000]], [0.323, [0.886, 0.000, 0.000]], [0.325, [0.896, 0.000, 0.000]], [0.327, [0.896, 0.000, 0.000]], [0.329, [0.906, 0.000, 0.000]], [0.331, [0.906, 0.000, 0.000]], [0.333, [0.917, 0.000, 0.000]], [0.335, [0.917, 0.000, 0.000]], [0.337, [0.927, 0.000, 0.000]], [0.339, [0.927, 0.000, 0.000]], [0.341, [0.937, 0.000, 0.000]], [0.342, [0.937, 0.000, 0.000]], [0.344, [0.948, 0.000, 0.000]], [0.346, [0.948, 0.000, 0.000]], [0.348, [0.958, 0.000, 0.000]], [0.350, [0.958, 0.000, 0.000]], [0.352, [0.968, 0.000, 0.000]], [0.354, [0.968, 0.000, 0.000]], [0.356, [0.978, 0.000, 0.000]], [0.358, [0.978, 0.000, 0.000]], [0.360, [0.989, 0.000, 0.000]], [0.362, [0.989, 0.000, 0.000]], [0.364, [0.999, 0.000, 0.000]], [0.366, [0.999, 0.000, 0.000]], [0.368, [1.000, 0.009, 0.000]], [0.370, [1.000, 0.009, 0.000]], [0.372, [1.000, 0.020, 0.000]], [0.374, [1.000, 0.020, 0.000]], [0.376, [1.000, 0.030, 0.000]], [0.378, [1.000, 0.030, 0.000]], [0.380, [1.000, 0.040, 0.000]], [0.382, [1.000, 0.040, 0.000]], [0.384, [1.000, 0.050, 0.000]], [0.386, [1.000, 0.050, 0.000]], [0.387, [1.000, 0.061, 0.000]], [0.389, [1.000, 0.061, 0.000]], [0.391, [1.000, 0.071, 0.000]], [0.393, [1.000, 0.071, 0.000]], [0.395, [1.000, 0.081, 0.000]], [0.397, [1.000, 0.081, 0.000]], [0.399, [1.000, 0.092, 0.000]], [0.401, [1.000, 0.092, 0.000]], [0.403, [1.000, 0.102, 0.000]], [0.405, [1.000, 0.102, 0.000]], [0.407, [1.000, 0.112, 0.000]], [0.409, [1.000, 0.112, 0.000]], [0.411, [1.000, 0.123, 0.000]], [0.413, [1.000, 0.123, 0.000]], [0.415, [1.000, 0.133, 0.000]], [0.417, [1.000, 0.133, 0.000]], [0.419, [1.000, 0.143, 0.000]], [0.421, [1.000, 0.143, 0.000]], [0.423, [1.000, 0.153, 0.000]], [0.425, [1.000, 0.153, 0.000]], [0.427, [1.000, 0.164, 0.000]], [0.429, [1.000, 0.164, 0.000]], [0.431, [1.000, 0.174, 0.000]], [0.432, [1.000, 0.174, 0.000]], [0.434, [1.000, 0.184, 0.000]], [0.436, [1.000, 0.184, 0.000]], [0.438, [1.000, 0.195, 0.000]], [0.440, [1.000, 0.195, 0.000]], [0.442, [1.000, 0.205, 0.000]], [0.444, [1.000, 0.205, 0.000]], [0.446, [1.000, 0.215, 0.000]], [0.448, [1.000, 0.215, 0.000]], [0.450, [1.000, 0.225, 0.000]], [0.452, [1.000, 0.225, 0.000]], [0.454, [1.000, 0.236, 0.000]], [0.456, [1.000, 0.236, 0.000]], [0.458, [1.000, 0.246, 0.000]], [0.460, [1.000, 0.246, 0.000]], [0.462, [1.000, 0.256, 0.000]], [0.464, [1.000, 0.256, 0.000]], [0.466, [1.000, 0.267, 0.000]], [0.468, [1.000, 0.267, 0.000]], [0.470, [1.000, 0.277, 0.000]], [0.472, [1.000, 0.277, 0.000]], [0.474, [1.000, 0.287, 0.000]], [0.476, [1.000, 0.287, 0.000]], [0.477, [1.000, 0.298, 0.000]], [0.479, [1.000, 0.298, 0.000]], [0.481, [1.000, 0.308, 0.000]], [0.483, [1.000, 0.308, 0.000]], [0.485, [1.000, 0.318, 0.000]], [0.487, [1.000, 0.318, 0.000]], [0.489, [1.000, 0.328, 0.000]], [0.491, [1.000, 0.328, 0.000]], [0.493, [1.000, 0.339, 0.000]], [0.495, [1.000, 0.339, 0.000]], [0.497, [1.000, 0.349, 0.000]], [0.499, [1.000, 0.349, 0.000]], [0.501, [1.000, 0.359, 0.000]], [0.503, [1.000, 0.359, 0.000]], [0.505, [1.000, 0.370, 0.000]], [0.507, [1.000, 0.370, 0.000]], [0.509, [1.000, 0.380, 0.000]], [0.511, [1.000, 0.380, 0.000]], [0.513, [1.000, 0.390, 0.000]], [0.515, [1.000, 0.390, 0.000]], [0.517, [1.000, 0.400, 0.000]], [0.519, [1.000, 0.400, 0.000]], [0.521, [1.000, 0.411, 0.000]], [0.523, [1.000, 0.411, 0.000]], [0.524, [1.000, 0.421, 0.000]], [0.526, [1.000, 0.421, 0.000]], [0.528, [1.000, 0.431, 0.000]], [0.530, [1.000, 0.431, 0.000]], [0.532, [1.000, 0.442, 0.000]], [0.534, [1.000, 0.442, 0.000]], [0.536, [1.000, 0.452, 0.000]], [0.538, [1.000, 0.452, 0.000]], [0.540, [1.000, 0.462, 0.000]], [0.542, [1.000, 0.462, 0.000]], [0.544, [1.000, 0.473, 0.000]], [0.546, [1.000, 0.473, 0.000]], [0.548, [1.000, 0.483, 0.000]], [0.550, [1.000, 0.483, 0.000]], [0.552, [1.000, 0.493, 0.000]], [0.554, [1.000, 0.493, 0.000]], [0.556, [1.000, 0.503, 0.000]], [0.558, [1.000, 0.503, 0.000]], [0.560, [1.000, 0.514, 0.000]], [0.562, [1.000, 0.514, 0.000]], [0.564, [1.000, 0.524, 0.000]], [0.566, [1.000, 0.524, 0.000]], [0.568, [1.000, 0.534, 0.000]], [0.569, [1.000, 0.534, 0.000]], [0.571, [1.000, 0.545, 0.000]], [0.573, [1.000, 0.545, 0.000]], [0.575, [1.000, 0.555, 0.000]], [0.577, [1.000, 0.555, 0.000]], [0.579, [1.000, 0.565, 0.000]], [0.581, [1.000, 0.565, 0.000]], [0.583, [1.000, 0.575, 0.000]], [0.585, [1.000, 0.575, 0.000]], [0.587, [1.000, 0.586, 0.000]], [0.589, [1.000, 0.586, 0.000]], [0.591, [1.000, 0.596, 0.000]], [0.593, [1.000, 0.596, 0.000]], [0.595, [1.000, 0.606, 0.000]], [0.597, [1.000, 0.606, 0.000]], [0.599, [1.000, 0.617, 0.000]], [0.601, [1.000, 0.617, 0.000]], [0.603, [1.000, 0.627, 0.000]], [0.605, [1.000, 0.627, 0.000]], [0.607, [1.000, 0.637, 0.000]], [0.609, [1.000, 0.637, 0.000]], [0.611, [1.000, 0.648, 0.000]], [0.613, [1.000, 0.648, 0.000]], [0.614, [1.000, 0.658, 0.000]], [0.616, [1.000, 0.658, 0.000]], [0.618, [1.000, 0.668, 0.000]], [0.620, [1.000, 0.668, 0.000]], [0.622, [1.000, 0.678, 0.000]], [0.624, [1.000, 0.678, 0.000]], [0.626, [1.000, 0.689, 0.000]], [0.628, [1.000, 0.689, 0.000]], [0.630, [1.000, 0.699, 0.000]], [0.632, [1.000, 0.699, 0.000]], [0.634, [1.000, 0.709, 0.000]], [0.636, [1.000, 0.709, 0.000]], [0.638, [1.000, 0.720, 0.000]], [0.640, [1.000, 0.720, 0.000]], [0.642, [1.000, 0.730, 0.000]], [0.644, [1.000, 0.730, 0.000]], [0.646, [1.000, 0.740, 0.000]], [0.648, [1.000, 0.740, 0.000]], [0.650, [1.000, 0.750, 0.000]], [0.652, [1.000, 0.750, 0.000]], [0.654, [1.000, 0.761, 0.000]], [0.656, [1.000, 0.761, 0.000]], [0.658, [1.000, 0.771, 0.000]], [0.659, [1.000, 0.771, 0.000]], [0.661, [1.000, 0.781, 0.000]], [0.663, [1.000, 0.781, 0.000]], [0.665, [1.000, 0.792, 0.000]], [0.667, [1.000, 0.792, 0.000]], [0.669, [1.000, 0.802, 0.000]], [0.671, [1.000, 0.802, 0.000]], [0.673, [1.000, 0.812, 0.000]], [0.675, [1.000, 0.812, 0.000]], [0.677, [1.000, 0.823, 0.000]], [0.679, [1.000, 0.823, 0.000]], [0.681, [1.000, 0.833, 0.000]], [0.683, [1.000, 0.833, 0.000]], [0.685, [1.000, 0.843, 0.000]], [0.687, [1.000, 0.843, 0.000]], [0.689, [1.000, 0.853, 0.000]], [0.691, [1.000, 0.853, 0.000]], [0.693, [1.000, 0.864, 0.000]], [0.695, [1.000, 0.864, 0.000]], [0.697, [1.000, 0.874, 0.000]], [0.699, [1.000, 0.874, 0.000]], [0.701, [1.000, 0.884, 0.000]], [0.703, [1.000, 0.884, 0.000]], [0.705, [1.000, 0.895, 0.000]], [0.706, [1.000, 0.895, 0.000]], [0.708, [1.000, 0.905, 0.000]], [0.710, [1.000, 0.905, 0.000]], [0.712, [1.000, 0.915, 0.000]], [0.714, [1.000, 0.915, 0.000]], [0.716, [1.000, 0.925, 0.000]], [0.718, [1.000, 0.925, 0.000]], [0.720, [1.000, 0.936, 0.000]], [0.722, [1.000, 0.936, 0.000]], [0.724, [1.000, 0.946, 0.000]], [0.726, [1.000, 0.946, 0.000]], [0.728, [1.000, 0.956, 0.000]], [0.730, [1.000, 0.956, 0.000]], [0.732, [1.000, 0.967, 0.000]], [0.734, [1.000, 0.967, 0.000]], [0.736, [1.000, 0.977, 0.000]], [0.738, [1.000, 0.977, 0.000]], [0.740, [1.000, 0.987, 0.000]], [0.742, [1.000, 0.987, 0.000]], [0.744, [1.000, 0.998, 0.000]], [0.746, [1.000, 0.998, 0.000]], [0.748, [1.000, 1.000, 0.012]], [0.750, [1.000, 1.000, 0.012]], [0.751, [1.000, 1.000, 0.027]], [0.753, [1.000, 1.000, 0.027]], [0.755, [1.000, 1.000, 0.043]], [0.757, [1.000, 1.000, 0.043]], [0.759, [1.000, 1.000, 0.058]], [0.761, [1.000, 1.000, 0.058]], [0.763, [1.000, 1.000, 0.074]], [0.765, [1.000, 1.000, 0.074]], [0.767, [1.000, 1.000, 0.089]], [0.769, [1.000, 1.000, 0.089]], [0.771, [1.000, 1.000, 0.104]], [0.773, [1.000, 1.000, 0.104]], [0.775, [1.000, 1.000, 0.120]], [0.777, [1.000, 1.000, 0.120]], [0.779, [1.000, 1.000, 0.135]], [0.781, [1.000, 1.000, 0.135]], [0.783, [1.000, 1.000, 0.151]], [0.785, [1.000, 1.000, 0.151]], [0.787, [1.000, 1.000, 0.166]], [0.789, [1.000, 1.000, 0.166]], [0.791, [1.000, 1.000, 0.182]], [0.793, [1.000, 1.000, 0.182]], [0.795, [1.000, 1.000, 0.197]], [0.796, [1.000, 1.000, 0.197]], [0.798, [1.000, 1.000, 0.212]], [0.800, [1.000, 1.000, 0.212]], [0.802, [1.000, 1.000, 0.228]], [0.804, [1.000, 1.000, 0.228]], [0.806, [1.000, 1.000, 0.243]], [0.808, [1.000, 1.000, 0.243]], [0.810, [1.000, 1.000, 0.259]], [0.812, [1.000, 1.000, 0.259]], [0.814, [1.000, 1.000, 0.274]], [0.816, [1.000, 1.000, 0.274]], [0.818, [1.000, 1.000, 0.290]], [0.820, [1.000, 1.000, 0.290]], [0.822, [1.000, 1.000, 0.305]], [0.824, [1.000, 1.000, 0.305]], [0.826, [1.000, 1.000, 0.321]], [0.828, [1.000, 1.000, 0.321]], [0.830, [1.000, 1.000, 0.336]], [0.832, [1.000, 1.000, 0.336]], [0.834, [1.000, 1.000, 0.351]], [0.836, [1.000, 1.000, 0.351]], [0.838, [1.000, 1.000, 0.367]], [0.840, [1.000, 1.000, 0.367]], [0.841, [1.000, 1.000, 0.382]], [0.843, [1.000, 1.000, 0.382]], [0.845, [1.000, 1.000, 0.398]], [0.847, [1.000, 1.000, 0.398]], [0.849, [1.000, 1.000, 0.413]], [0.851, [1.000, 1.000, 0.413]], [0.853, [1.000, 1.000, 0.429]], [0.855, [1.000, 1.000, 0.429]], [0.857, [1.000, 1.000, 0.444]], [0.859, [1.000, 1.000, 0.444]], [0.861, [1.000, 1.000, 0.460]], [0.863, [1.000, 1.000, 0.460]], [0.865, [1.000, 1.000, 0.475]], [0.867, [1.000, 1.000, 0.475]], [0.869, [1.000, 1.000, 0.490]], [0.871, [1.000, 1.000, 0.490]], [0.873, [1.000, 1.000, 0.506]], [0.875, [1.000, 1.000, 0.506]], [0.877, [1.000, 1.000, 0.521]], [0.879, [1.000, 1.000, 0.521]], [0.881, [1.000, 1.000, 0.537]], [0.883, [1.000, 1.000, 0.537]], [0.885, [1.000, 1.000, 0.552]], [0.886, [1.000, 1.000, 0.552]], [0.888, [1.000, 1.000, 0.568]], [0.890, [1.000, 1.000, 0.568]], [0.892, [1.000, 1.000, 0.583]], [0.894, [1.000, 1.000, 0.583]], [0.896, [1.000, 1.000, 0.599]], [0.898, [1.000, 1.000, 0.599]], [0.900, [1.000, 1.000, 0.614]], [0.902, [1.000, 1.000, 0.614]], [0.904, [1.000, 1.000, 0.629]], [0.906, [1.000, 1.000, 0.629]], [0.908, [1.000, 1.000, 0.645]], [0.910, [1.000, 1.000, 0.645]], [0.912, [1.000, 1.000, 0.660]], [0.914, [1.000, 1.000, 0.660]], [0.916, [1.000, 1.000, 0.676]], [0.918, [1.000, 1.000, 0.676]], [0.920, [1.000, 1.000, 0.691]], [0.922, [1.000, 1.000, 0.691]], [0.924, [1.000, 1.000, 0.707]], [0.926, [1.000, 1.000, 0.707]], [0.928, [1.000, 1.000, 0.722]], [0.930, [1.000, 1.000, 0.722]], [0.932, [1.000, 1.000, 0.737]], [0.933, [1.000, 1.000, 0.737]], [0.935, [1.000, 1.000, 0.753]], [0.937, [1.000, 1.000, 0.753]], [0.939, [1.000, 1.000, 0.768]], [0.941, [1.000, 1.000, 0.768]], [0.943, [1.000, 1.000, 0.784]], [0.945, [1.000, 1.000, 0.784]], [0.947, [1.000, 1.000, 0.799]], [0.949, [1.000, 1.000, 0.799]], [0.951, [1.000, 1.000, 0.815]], [0.953, [1.000, 1.000, 0.815]], [0.955, [1.000, 1.000, 0.830]], [0.957, [1.000, 1.000, 0.830]], [0.959, [1.000, 1.000, 0.846]], [0.961, [1.000, 1.000, 0.846]], [0.963, [1.000, 1.000, 0.861]], [0.965, [1.000, 1.000, 0.861]], [0.967, [1.000, 1.000, 0.876]], [0.969, [1.000, 1.000, 0.876]], [0.971, [1.000, 1.000, 0.892]], [0.973, [1.000, 1.000, 0.892]], [0.975, [1.000, 1.000, 0.907]], [0.977, [1.000, 1.000, 0.907]], [0.978, [1.000, 1.000, 0.923]], [0.980, [1.000, 1.000, 0.923]], [0.982, [1.000, 1.000, 0.938]], [0.984, [1.000, 1.000, 0.938]], [0.986, [1.000, 1.000, 0.954]], [0.988, [1.000, 1.000, 0.954]], [0.990, [1.000, 1.000, 0.969]], [0.992, [1.000, 1.000, 0.969]], [0.994, [1.000, 1.000, 0.985]], [0.996, [1.000, 1.000, 0.985]], [0.998, [1.000, 1.000, 1.000]], [1.000, [1.000, 1.000, 1.000]]];
H.colormap_hsv = [[0.000, [1.000, 0.000, 0.000]], [0.002, [1.000, 0.000, 0.000]], [0.004, [1.000, 0.023, 0.000]], [0.006, [1.000, 0.023, 0.000]], [0.008, [1.000, 0.046, 0.000]], [0.010, [1.000, 0.046, 0.000]], [0.012, [1.000, 0.069, 0.000]], [0.014, [1.000, 0.069, 0.000]], [0.016, [1.000, 0.093, 0.000]], [0.018, [1.000, 0.093, 0.000]], [0.020, [1.000, 0.116, 0.000]], [0.022, [1.000, 0.116, 0.000]], [0.023, [1.000, 0.139, 0.000]], [0.025, [1.000, 0.139, 0.000]], [0.027, [1.000, 0.162, 0.000]], [0.029, [1.000, 0.162, 0.000]], [0.031, [1.000, 0.185, 0.000]], [0.033, [1.000, 0.185, 0.000]], [0.035, [1.000, 0.208, 0.000]], [0.037, [1.000, 0.208, 0.000]], [0.039, [1.000, 0.232, 0.000]], [0.041, [1.000, 0.232, 0.000]], [0.043, [1.000, 0.255, 0.000]], [0.045, [1.000, 0.255, 0.000]], [0.047, [1.000, 0.278, 0.000]], [0.049, [1.000, 0.278, 0.000]], [0.051, [1.000, 0.301, 0.000]], [0.053, [1.000, 0.301, 0.000]], [0.055, [1.000, 0.324, 0.000]], [0.057, [1.000, 0.324, 0.000]], [0.059, [1.000, 0.347, 0.000]], [0.061, [1.000, 0.347, 0.000]], [0.063, [1.000, 0.371, 0.000]], [0.065, [1.000, 0.371, 0.000]], [0.067, [1.000, 0.394, 0.000]], [0.068, [1.000, 0.394, 0.000]], [0.070, [1.000, 0.417, 0.000]], [0.072, [1.000, 0.417, 0.000]], [0.074, [1.000, 0.440, 0.000]], [0.076, [1.000, 0.440, 0.000]], [0.078, [1.000, 0.463, 0.000]], [0.080, [1.000, 0.463, 0.000]], [0.082, [1.000, 0.486, 0.000]], [0.084, [1.000, 0.486, 0.000]], [0.086, [1.000, 0.510, 0.000]], [0.088, [1.000, 0.510, 0.000]], [0.090, [1.000, 0.533, 0.000]], [0.092, [1.000, 0.533, 0.000]], [0.094, [1.000, 0.556, 0.000]], [0.096, [1.000, 0.556, 0.000]], [0.098, [1.000, 0.579, 0.000]], [0.100, [1.000, 0.579, 0.000]], [0.102, [1.000, 0.602, 0.000]], [0.104, [1.000, 0.602, 0.000]], [0.106, [1.000, 0.625, 0.000]], [0.108, [1.000, 0.625, 0.000]], [0.110, [1.000, 0.649, 0.000]], [0.112, [1.000, 0.649, 0.000]], [0.114, [1.000, 0.672, 0.000]], [0.115, [1.000, 0.672, 0.000]], [0.117, [1.000, 0.695, 0.000]], [0.119, [1.000, 0.695, 0.000]], [0.121, [1.000, 0.718, 0.000]], [0.123, [1.000, 0.718, 0.000]], [0.125, [1.000, 0.741, 0.000]], [0.127, [1.000, 0.741, 0.000]], [0.129, [1.000, 0.764, 0.000]], [0.131, [1.000, 0.764, 0.000]], [0.133, [1.000, 0.788, 0.000]], [0.135, [1.000, 0.788, 0.000]], [0.137, [1.000, 0.811, 0.000]], [0.139, [1.000, 0.811, 0.000]], [0.141, [1.000, 0.834, 0.000]], [0.143, [1.000, 0.834, 0.000]], [0.145, [1.000, 0.857, 0.000]], [0.147, [1.000, 0.857, 0.000]], [0.149, [1.000, 0.880, 0.000]], [0.151, [1.000, 0.880, 0.000]], [0.153, [1.000, 0.903, 0.000]], [0.155, [1.000, 0.903, 0.000]], [0.157, [1.000, 0.926, 0.000]], [0.159, [1.000, 0.926, 0.000]], [0.160, [0.996, 0.946, 0.000]], [0.162, [0.996, 0.946, 0.000]], [0.164, [0.988, 0.961, 0.000]], [0.166, [0.988, 0.961, 0.000]], [0.168, [0.981, 0.976, 0.000]], [0.170, [0.981, 0.976, 0.000]], [0.172, [0.973, 0.992, 0.000]], [0.174, [0.973, 0.992, 0.000]], [0.176, [0.958, 1.000, 0.000]], [0.178, [0.958, 1.000, 0.000]], [0.180, [0.935, 1.000, 0.000]], [0.182, [0.935, 1.000, 0.000]], [0.184, [0.911, 1.000, 0.000]], [0.186, [0.911, 1.000, 0.000]], [0.188, [0.888, 1.000, 0.000]], [0.190, [0.888, 1.000, 0.000]], [0.192, [0.865, 1.000, 0.000]], [0.194, [0.865, 1.000, 0.000]], [0.196, [0.842, 1.000, 0.000]], [0.198, [0.842, 1.000, 0.000]], [0.200, [0.819, 1.000, 0.000]], [0.202, [0.819, 1.000, 0.000]], [0.204, [0.796, 1.000, 0.000]], [0.205, [0.796, 1.000, 0.000]], [0.207, [0.772, 1.000, 0.000]], [0.209, [0.772, 1.000, 0.000]], [0.211, [0.749, 1.000, 0.000]], [0.213, [0.749, 1.000, 0.000]], [0.215, [0.726, 1.000, 0.000]], [0.217, [0.726, 1.000, 0.000]], [0.219, [0.703, 1.000, 0.000]], [0.221, [0.703, 1.000, 0.000]], [0.223, [0.680, 1.000, 0.000]], [0.225, [0.680, 1.000, 0.000]], [0.227, [0.657, 1.000, 0.000]], [0.229, [0.657, 1.000, 0.000]], [0.231, [0.633, 1.000, 0.000]], [0.233, [0.633, 1.000, 0.000]], [0.235, [0.610, 1.000, 0.000]], [0.237, [0.610, 1.000, 0.000]], [0.239, [0.587, 1.000, 0.000]], [0.241, [0.587, 1.000, 0.000]], [0.243, [0.564, 1.000, 0.000]], [0.245, [0.564, 1.000, 0.000]], [0.247, [0.541, 1.000, 0.000]], [0.249, [0.541, 1.000, 0.000]], [0.250, [0.518, 1.000, 0.000]], [0.252, [0.518, 1.000, 0.000]], [0.254, [0.494, 1.000, 0.000]], [0.256, [0.494, 1.000, 0.000]], [0.258, [0.471, 1.000, 0.000]], [0.260, [0.471, 1.000, 0.000]], [0.262, [0.448, 1.000, 0.000]], [0.264, [0.448, 1.000, 0.000]], [0.266, [0.425, 1.000, 0.000]], [0.268, [0.425, 1.000, 0.000]], [0.270, [0.402, 1.000, 0.000]], [0.272, [0.402, 1.000, 0.000]], [0.274, [0.379, 1.000, 0.000]], [0.276, [0.379, 1.000, 0.000]], [0.278, [0.356, 1.000, 0.000]], [0.280, [0.356, 1.000, 0.000]], [0.282, [0.332, 1.000, 0.000]], [0.284, [0.332, 1.000, 0.000]], [0.286, [0.309, 1.000, 0.000]], [0.288, [0.309, 1.000, 0.000]], [0.290, [0.286, 1.000, 0.000]], [0.292, [0.286, 1.000, 0.000]], [0.294, [0.263, 1.000, 0.000]], [0.295, [0.263, 1.000, 0.000]], [0.297, [0.240, 1.000, 0.000]], [0.299, [0.240, 1.000, 0.000]], [0.301, [0.217, 1.000, 0.000]], [0.303, [0.217, 1.000, 0.000]], [0.305, [0.193, 1.000, 0.000]], [0.307, [0.193, 1.000, 0.000]], [0.309, [0.170, 1.000, 0.000]], [0.311, [0.170, 1.000, 0.000]], [0.313, [0.147, 1.000, 0.000]], [0.315, [0.147, 1.000, 0.000]], [0.317, [0.124, 1.000, 0.000]], [0.319, [0.124, 1.000, 0.000]], [0.321, [0.101, 1.000, 0.000]], [0.323, [0.101, 1.000, 0.000]], [0.325, [0.078, 1.000, 0.000]], [0.327, [0.078, 1.000, 0.000]], [0.329, [0.054, 1.000, 0.000]], [0.331, [0.054, 1.000, 0.000]], [0.333, [0.031, 1.000, 0.000]], [0.335, [0.031, 1.000, 0.000]], [0.337, [0.024, 1.000, 0.015]], [0.339, [0.024, 1.000, 0.015]], [0.341, [0.016, 1.000, 0.031]], [0.342, [0.016, 1.000, 0.031]], [0.344, [0.008, 1.000, 0.046]], [0.346, [0.008, 1.000, 0.046]], [0.348, [0.000, 1.000, 0.062]], [0.350, [0.000, 1.000, 0.062]], [0.352, [0.000, 1.000, 0.085]], [0.354, [0.000, 1.000, 0.085]], [0.356, [0.000, 1.000, 0.108]], [0.358, [0.000, 1.000, 0.108]], [0.360, [0.000, 1.000, 0.131]], [0.362, [0.000, 1.000, 0.131]], [0.364, [0.000, 1.000, 0.154]], [0.366, [0.000, 1.000, 0.154]], [0.368, [0.000, 1.000, 0.177]], [0.370, [0.000, 1.000, 0.177]], [0.372, [0.000, 1.000, 0.200]], [0.374, [0.000, 1.000, 0.200]], [0.376, [0.000, 1.000, 0.224]], [0.378, [0.000, 1.000, 0.224]], [0.380, [0.000, 1.000, 0.247]], [0.382, [0.000, 1.000, 0.247]], [0.384, [0.000, 1.000, 0.270]], [0.386, [0.000, 1.000, 0.270]], [0.387, [0.000, 1.000, 0.293]], [0.389, [0.000, 1.000, 0.293]], [0.391, [0.000, 1.000, 0.316]], [0.393, [0.000, 1.000, 0.316]], [0.395, [0.000, 1.000, 0.339]], [0.397, [0.000, 1.000, 0.339]], [0.399, [0.000, 1.000, 0.363]], [0.401, [0.000, 1.000, 0.363]], [0.403, [0.000, 1.000, 0.386]], [0.405, [0.000, 1.000, 0.386]], [0.407, [0.000, 1.000, 0.409]], [0.409, [0.000, 1.000, 0.409]], [0.411, [0.000, 1.000, 0.432]], [0.413, [0.000, 1.000, 0.432]], [0.415, [0.000, 1.000, 0.455]], [0.417, [0.000, 1.000, 0.455]], [0.419, [0.000, 1.000, 0.478]], [0.421, [0.000, 1.000, 0.478]], [0.423, [0.000, 1.000, 0.501]], [0.425, [0.000, 1.000, 0.501]], [0.427, [0.000, 1.000, 0.525]], [0.429, [0.000, 1.000, 0.525]], [0.431, [0.000, 1.000, 0.548]], [0.432, [0.000, 1.000, 0.548]], [0.434, [0.000, 1.000, 0.571]], [0.436, [0.000, 1.000, 0.571]], [0.438, [0.000, 1.000, 0.594]], [0.440, [0.000, 1.000, 0.594]], [0.442, [0.000, 1.000, 0.617]], [0.444, [0.000, 1.000, 0.617]], [0.446, [0.000, 1.000, 0.640]], [0.448, [0.000, 1.000, 0.640]], [0.450, [0.000, 1.000, 0.664]], [0.452, [0.000, 1.000, 0.664]], [0.454, [0.000, 1.000, 0.687]], [0.456, [0.000, 1.000, 0.687]], [0.458, [0.000, 1.000, 0.710]], [0.460, [0.000, 1.000, 0.710]], [0.462, [0.000, 1.000, 0.733]], [0.464, [0.000, 1.000, 0.733]], [0.466, [0.000, 1.000, 0.756]], [0.468, [0.000, 1.000, 0.756]], [0.470, [0.000, 1.000, 0.779]], [0.472, [0.000, 1.000, 0.779]], [0.474, [0.000, 1.000, 0.803]], [0.476, [0.000, 1.000, 0.803]], [0.477, [0.000, 1.000, 0.826]], [0.479, [0.000, 1.000, 0.826]], [0.481, [0.000, 1.000, 0.849]], [0.483, [0.000, 1.000, 0.849]], [0.485, [0.000, 1.000, 0.872]], [0.487, [0.000, 1.000, 0.872]], [0.489, [0.000, 1.000, 0.895]], [0.491, [0.000, 1.000, 0.895]], [0.493, [0.000, 1.000, 0.918]], [0.495, [0.000, 1.000, 0.918]], [0.497, [0.000, 1.000, 0.942]], [0.499, [0.000, 1.000, 0.942]], [0.501, [0.000, 1.000, 0.965]], [0.503, [0.000, 1.000, 0.965]], [0.505, [0.000, 1.000, 0.988]], [0.507, [0.000, 1.000, 0.988]], [0.509, [0.000, 0.989, 1.000]], [0.511, [0.000, 0.989, 1.000]], [0.513, [0.000, 0.966, 1.000]], [0.515, [0.000, 0.966, 1.000]], [0.517, [0.000, 0.943, 1.000]], [0.519, [0.000, 0.943, 1.000]], [0.521, [0.000, 0.919, 1.000]], [0.523, [0.000, 0.919, 1.000]], [0.524, [0.000, 0.896, 1.000]], [0.526, [0.000, 0.896, 1.000]], [0.528, [0.000, 0.873, 1.000]], [0.530, [0.000, 0.873, 1.000]], [0.532, [0.000, 0.850, 1.000]], [0.534, [0.000, 0.850, 1.000]], [0.536, [0.000, 0.827, 1.000]], [0.538, [0.000, 0.827, 1.000]], [0.540, [0.000, 0.804, 1.000]], [0.542, [0.000, 0.804, 1.000]], [0.544, [0.000, 0.781, 1.000]], [0.546, [0.000, 0.781, 1.000]], [0.548, [0.000, 0.757, 1.000]], [0.550, [0.000, 0.757, 1.000]], [0.552, [0.000, 0.734, 1.000]], [0.554, [0.000, 0.734, 1.000]], [0.556, [0.000, 0.711, 1.000]], [0.558, [0.000, 0.711, 1.000]], [0.560, [0.000, 0.688, 1.000]], [0.562, [0.000, 0.688, 1.000]], [0.564, [0.000, 0.665, 1.000]], [0.566, [0.000, 0.665, 1.000]], [0.568, [0.000, 0.642, 1.000]], [0.569, [0.000, 0.642, 1.000]], [0.571, [0.000, 0.618, 1.000]], [0.573, [0.000, 0.618, 1.000]], [0.575, [0.000, 0.595, 1.000]], [0.577, [0.000, 0.595, 1.000]], [0.579, [0.000, 0.572, 1.000]], [0.581, [0.000, 0.572, 1.000]], [0.583, [0.000, 0.549, 1.000]], [0.585, [0.000, 0.549, 1.000]], [0.587, [0.000, 0.526, 1.000]], [0.589, [0.000, 0.526, 1.000]], [0.591, [0.000, 0.503, 1.000]], [0.593, [0.000, 0.503, 1.000]], [0.595, [0.000, 0.479, 1.000]], [0.597, [0.000, 0.479, 1.000]], [0.599, [0.000, 0.456, 1.000]], [0.601, [0.000, 0.456, 1.000]], [0.603, [0.000, 0.433, 1.000]], [0.605, [0.000, 0.433, 1.000]], [0.607, [0.000, 0.410, 1.000]], [0.609, [0.000, 0.410, 1.000]], [0.611, [0.000, 0.387, 1.000]], [0.613, [0.000, 0.387, 1.000]], [0.614, [0.000, 0.364, 1.000]], [0.616, [0.000, 0.364, 1.000]], [0.618, [0.000, 0.340, 1.000]], [0.620, [0.000, 0.340, 1.000]], [0.622, [0.000, 0.317, 1.000]], [0.624, [0.000, 0.317, 1.000]], [0.626, [0.000, 0.294, 1.000]], [0.628, [0.000, 0.294, 1.000]], [0.630, [0.000, 0.271, 1.000]], [0.632, [0.000, 0.271, 1.000]], [0.634, [0.000, 0.248, 1.000]], [0.636, [0.000, 0.248, 1.000]], [0.638, [0.000, 0.225, 1.000]], [0.640, [0.000, 0.225, 1.000]], [0.642, [0.000, 0.201, 1.000]], [0.644, [0.000, 0.201, 1.000]], [0.646, [0.000, 0.178, 1.000]], [0.648, [0.000, 0.178, 1.000]], [0.650, [0.000, 0.155, 1.000]], [0.652, [0.000, 0.155, 1.000]], [0.654, [0.000, 0.132, 1.000]], [0.656, [0.000, 0.132, 1.000]], [0.658, [0.000, 0.109, 1.000]], [0.659, [0.000, 0.109, 1.000]], [0.661, [0.000, 0.086, 1.000]], [0.663, [0.000, 0.086, 1.000]], [0.665, [0.000, 0.063, 1.000]], [0.667, [0.000, 0.063, 1.000]], [0.669, [0.008, 0.047, 1.000]], [0.671, [0.008, 0.047, 1.000]], [0.673, [0.015, 0.032, 1.000]], [0.675, [0.015, 0.032, 1.000]], [0.677, [0.023, 0.016, 1.000]], [0.679, [0.023, 0.016, 1.000]], [0.681, [0.031, 0.001, 1.000]], [0.683, [0.031, 0.001, 1.000]], [0.685, [0.053, 0.000, 1.000]], [0.687, [0.053, 0.000, 1.000]], [0.689, [0.076, 0.000, 1.000]], [0.691, [0.076, 0.000, 1.000]], [0.693, [0.100, 0.000, 1.000]], [0.695, [0.100, 0.000, 1.000]], [0.697, [0.123, 0.000, 1.000]], [0.699, [0.123, 0.000, 1.000]], [0.701, [0.146, 0.000, 1.000]], [0.703, [0.146, 0.000, 1.000]], [0.705, [0.169, 0.000, 1.000]], [0.706, [0.169, 0.000, 1.000]], [0.708, [0.192, 0.000, 1.000]], [0.710, [0.192, 0.000, 1.000]], [0.712, [0.215, 0.000, 1.000]], [0.714, [0.215, 0.000, 1.000]], [0.716, [0.239, 0.000, 1.000]], [0.718, [0.239, 0.000, 1.000]], [0.720, [0.262, 0.000, 1.000]], [0.722, [0.262, 0.000, 1.000]], [0.724, [0.285, 0.000, 1.000]], [0.726, [0.285, 0.000, 1.000]], [0.728, [0.308, 0.000, 1.000]], [0.730, [0.308, 0.000, 1.000]], [0.732, [0.331, 0.000, 1.000]], [0.734, [0.331, 0.000, 1.000]], [0.736, [0.354, 0.000, 1.000]], [0.738, [0.354, 0.000, 1.000]], [0.740, [0.378, 0.000, 1.000]], [0.742, [0.378, 0.000, 1.000]], [0.744, [0.401, 0.000, 1.000]], [0.746, [0.401, 0.000, 1.000]], [0.748, [0.424, 0.000, 1.000]], [0.750, [0.424, 0.000, 1.000]], [0.751, [0.447, 0.000, 1.000]], [0.753, [0.447, 0.000, 1.000]], [0.755, [0.470, 0.000, 1.000]], [0.757, [0.470, 0.000, 1.000]], [0.759, [0.493, 0.000, 1.000]], [0.761, [0.493, 0.000, 1.000]], [0.763, [0.517, 0.000, 1.000]], [0.765, [0.517, 0.000, 1.000]], [0.767, [0.540, 0.000, 1.000]], [0.769, [0.540, 0.000, 1.000]], [0.771, [0.563, 0.000, 1.000]], [0.773, [0.563, 0.000, 1.000]], [0.775, [0.586, 0.000, 1.000]], [0.777, [0.586, 0.000, 1.000]], [0.779, [0.609, 0.000, 1.000]], [0.781, [0.609, 0.000, 1.000]], [0.783, [0.632, 0.000, 1.000]], [0.785, [0.632, 0.000, 1.000]], [0.787, [0.656, 0.000, 1.000]], [0.789, [0.656, 0.000, 1.000]], [0.791, [0.679, 0.000, 1.000]], [0.793, [0.679, 0.000, 1.000]], [0.795, [0.702, 0.000, 1.000]], [0.796, [0.702, 0.000, 1.000]], [0.798, [0.725, 0.000, 1.000]], [0.800, [0.725, 0.000, 1.000]], [0.802, [0.748, 0.000, 1.000]], [0.804, [0.748, 0.000, 1.000]], [0.806, [0.771, 0.000, 1.000]], [0.808, [0.771, 0.000, 1.000]], [0.810, [0.794, 0.000, 1.000]], [0.812, [0.794, 0.000, 1.000]], [0.814, [0.818, 0.000, 1.000]], [0.816, [0.818, 0.000, 1.000]], [0.818, [0.841, 0.000, 1.000]], [0.820, [0.841, 0.000, 1.000]], [0.822, [0.864, 0.000, 1.000]], [0.824, [0.864, 0.000, 1.000]], [0.826, [0.887, 0.000, 1.000]], [0.828, [0.887, 0.000, 1.000]], [0.830, [0.910, 0.000, 1.000]], [0.832, [0.910, 0.000, 1.000]], [0.834, [0.933, 0.000, 1.000]], [0.836, [0.933, 0.000, 1.000]], [0.838, [0.957, 0.000, 1.000]], [0.840, [0.957, 0.000, 1.000]], [0.841, [0.972, 0.000, 0.993]], [0.843, [0.972, 0.000, 0.993]], [0.845, [0.980, 0.000, 0.977]], [0.847, [0.980, 0.000, 0.977]], [0.849, [0.988, 0.000, 0.962]], [0.851, [0.988, 0.000, 0.962]], [0.853, [0.996, 0.000, 0.946]], [0.855, [0.996, 0.000, 0.946]], [0.857, [1.000, 0.000, 0.928]], [0.859, [1.000, 0.000, 0.928]], [0.861, [1.000, 0.000, 0.904]], [0.863, [1.000, 0.000, 0.904]], [0.865, [1.000, 0.000, 0.881]], [0.867, [1.000, 0.000, 0.881]], [0.869, [1.000, 0.000, 0.858]], [0.871, [1.000, 0.000, 0.858]], [0.873, [1.000, 0.000, 0.835]], [0.875, [1.000, 0.000, 0.835]], [0.877, [1.000, 0.000, 0.812]], [0.879, [1.000, 0.000, 0.812]], [0.881, [1.000, 0.000, 0.789]], [0.883, [1.000, 0.000, 0.789]], [0.885, [1.000, 0.000, 0.765]], [0.886, [1.000, 0.000, 0.765]], [0.888, [1.000, 0.000, 0.742]], [0.890, [1.000, 0.000, 0.742]], [0.892, [1.000, 0.000, 0.719]], [0.894, [1.000, 0.000, 0.719]], [0.896, [1.000, 0.000, 0.696]], [0.898, [1.000, 0.000, 0.696]], [0.900, [1.000, 0.000, 0.673]], [0.902, [1.000, 0.000, 0.673]], [0.904, [1.000, 0.000, 0.650]], [0.906, [1.000, 0.000, 0.650]], [0.908, [1.000, 0.000, 0.626]], [0.910, [1.000, 0.000, 0.626]], [0.912, [1.000, 0.000, 0.603]], [0.914, [1.000, 0.000, 0.603]], [0.916, [1.000, 0.000, 0.580]], [0.918, [1.000, 0.000, 0.580]], [0.920, [1.000, 0.000, 0.557]], [0.922, [1.000, 0.000, 0.557]], [0.924, [1.000, 0.000, 0.534]], [0.926, [1.000, 0.000, 0.534]], [0.928, [1.000, 0.000, 0.511]], [0.930, [1.000, 0.000, 0.511]], [0.932, [1.000, 0.000, 0.488]], [0.933, [1.000, 0.000, 0.488]], [0.935, [1.000, 0.000, 0.464]], [0.937, [1.000, 0.000, 0.464]], [0.939, [1.000, 0.000, 0.441]], [0.941, [1.000, 0.000, 0.441]], [0.943, [1.000, 0.000, 0.418]], [0.945, [1.000, 0.000, 0.418]], [0.947, [1.000, 0.000, 0.395]], [0.949, [1.000, 0.000, 0.395]], [0.951, [1.000, 0.000, 0.372]], [0.953, [1.000, 0.000, 0.372]], [0.955, [1.000, 0.000, 0.349]], [0.957, [1.000, 0.000, 0.349]], [0.959, [1.000, 0.000, 0.325]], [0.961, [1.000, 0.000, 0.325]], [0.963, [1.000, 0.000, 0.302]], [0.965, [1.000, 0.000, 0.302]], [0.967, [1.000, 0.000, 0.279]], [0.969, [1.000, 0.000, 0.279]], [0.971, [1.000, 0.000, 0.256]], [0.973, [1.000, 0.000, 0.256]], [0.975, [1.000, 0.000, 0.233]], [0.977, [1.000, 0.000, 0.233]], [0.978, [1.000, 0.000, 0.210]], [0.980, [1.000, 0.000, 0.210]], [0.982, [1.000, 0.000, 0.186]], [0.984, [1.000, 0.000, 0.186]], [0.986, [1.000, 0.000, 0.163]], [0.988, [1.000, 0.000, 0.163]], [0.990, [1.000, 0.000, 0.140]], [0.992, [1.000, 0.000, 0.140]], [0.994, [1.000, 0.000, 0.117]], [0.996, [1.000, 0.000, 0.117]], [0.998, [1.000, 0.000, 0.094]], [1.000, [1.000, 0.000, 0.094]]];
H.colormap_ice = [[0.000,[0.01531167,0.02252059,0.07272874]],[0.004,[0.01800550,0.02544552,0.07841879]],[0.008,[0.02090133,0.02852652,0.08407772]],[0.012,[0.02399819,0.03176264,0.08970750]],[0.016,[0.02729776,0.03514909,0.09532647]],[0.020,[0.03080428,0.03867708,0.10096627]],[0.024,[0.03450984,0.04229956,0.10658282]],[0.027,[0.03841360,0.04587404,0.11217763]],[0.031,[0.04245790,0.04939964,0.11779608]],[0.035,[0.04645778,0.05288490,0.12341760]],[0.039,[0.05041622,0.05633789,0.12902168]],[0.043,[0.05433780,0.05975738,0.13462392]],[0.047,[0.05823000,0.06313586,0.14026517]],[0.051,[0.06208647,0.06648866,0.14589217]],[0.055,[0.06590891,0.06981760,0.15150562]],[0.059,[0.06970670,0.07310910,0.15717011]],[0.063,[0.07347361,0.07637816,0.16283083]],[0.067,[0.07720982,0.07962820,0.16848004]],[0.071,[0.08092191,0.08284857,0.17416973]],[0.075,[0.08460723,0.08604720,0.17987258]],[0.078,[0.08826408,0.08923087,0.18556525]],[0.082,[0.09189749,0.09238992,0.19129533]],[0.086,[0.09550606,0.09552937,0.19704663]],[0.090,[0.09908760,0.09865736,0.20278851]],[0.094,[0.10264643,0.10176328,0.20857290]],[0.098,[0.10618075,0.10485340,0.21437716]],[0.102,[0.10968890,0.10793517,0.22017219]],[0.106,[0.11317482,0.11099513,0.22602364]],[0.110,[0.11663557,0.11404484,0.23188363]],[0.114,[0.12007068,0.11708837,0.23773723]],[0.118,[0.12348311,0.12010958,0.24366409]],[0.122,[0.12686948,0.12312720,0.24958092]],[0.125,[0.13023079,0.12613483,0.25552177]],[0.129,[0.13356695,0.12912934,0.26150605]],[0.133,[0.13687687,0.13212284,0.26747923]],[0.137,[0.14016072,0.13510078,0.27351646]],[0.141,[0.14341772,0.13807648,0.27955643]],[0.145,[0.14664749,0.14104684,0.28561838]],[0.149,[0.14984897,0.14400828,0.29172467]],[0.153,[0.15302294,0.14697296,0.29781705]],[0.157,[0.15616589,0.14992378,0.30398848]],[0.161,[0.15928037,0.15287968,0.31014411]],[0.165,[0.16236275,0.15582876,0.31635122]],[0.169,[0.16541424,0.15877962,0.32256801]],[0.173,[0.16843280,0.16172931,0.32881489]],[0.176,[0.17141745,0.16467906,0.33508977]],[0.180,[0.17436826,0.16763191,0.34137988]],[0.184,[0.17728190,0.17058464,0.34770888]],[0.188,[0.18016036,0.17354351,0.35404476]],[0.192,[0.18299849,0.17650348,0.36042297]],[0.196,[0.18579938,0.17947155,0.36680604]],[0.200,[0.18855724,0.18244322,0.37322757]],[0.204,[0.19127464,0.18542401,0.37965796]],[0.208,[0.19394722,0.18841200,0.38611587]],[0.212,[0.19657462,0.19140947,0.39259226]],[0.216,[0.19915672,0.19441854,0.39907853]],[0.220,[0.20168703,0.19743702,0.40559795]],[0.224,[0.20417332,0.20047210,0.41210346]],[0.227,[0.20659892,0.20351633,0.41866115]],[0.231,[0.20897700,0.20657923,0.42520322]],[0.235,[0.21129685,0.20965752,0.43176498]],[0.239,[0.21355801,0.21275340,0.43833741]],[0.243,[0.21576549,0.21587060,0.44489464]],[0.247,[0.21790275,0.21900569,0.45148217]],[0.251,[0.21998016,0.22216408,0.45805652]],[0.255,[0.22199703,0.22534707,0.46461293]],[0.259,[0.22393594,0.22855285,0.47119005]],[0.263,[0.22580933,0.23178597,0.47774457]],[0.267,[0.22761504,0.23504748,0.48427492]],[0.271,[0.22934111,0.23833757,0.49080012]],[0.275,[0.23099051,0.24165846,0.49730374]],[0.278,[0.23256539,0.24501182,0.50377332]],[0.282,[0.23406342,0.24839880,0.51020620]],[0.286,[0.23547394,0.25182056,0.51661336]],[0.290,[0.23680103,0.25527869,0.52297876]],[0.294,[0.23804591,0.25877435,0.52929300]],[0.298,[0.23920692,0.26230862,0.53555174]],[0.302,[0.24028265,0.26588249,0.54175028]],[0.306,[0.24126904,0.26949715,0.54788707]],[0.310,[0.24216465,0.27315361,0.55395673]],[0.314,[0.24297377,0.27685220,0.55994789]],[0.318,[0.24369643,0.28059340,0.56585499]],[0.322,[0.24433314,0.28437755,0.57167240]],[0.325,[0.24488490,0.28820479,0.57739441]],[0.329,[0.24535323,0.29207505,0.58301540]],[0.333,[0.24574017,0.29598806,0.58852986]],[0.337,[0.24604835,0.29994331,0.59393251]],[0.341,[0.24628095,0.30394008,0.59921837]],[0.345,[0.24644170,0.30797739,0.60438286]],[0.349,[0.24653490,0.31205404,0.60942183]],[0.353,[0.24656536,0.31616862,0.61433167]],[0.357,[0.24653840,0.32031951,0.61910933]],[0.361,[0.24645977,0.32450489,0.62375240]],[0.365,[0.24633566,0.32872279,0.62825909]],[0.369,[0.24617258,0.33297109,0.63262830]],[0.373,[0.24597735,0.33724755,0.63685958]],[0.376,[0.24575701,0.34154984,0.64095315]],[0.380,[0.24551877,0.34587559,0.64490987]],[0.384,[0.24526992,0.35022239,0.64873121]],[0.388,[0.24501778,0.35458782,0.65241923]],[0.392,[0.24476962,0.35896949,0.65597650]],[0.396,[0.24453264,0.36336505,0.65940606]],[0.400,[0.24431385,0.36777225,0.66271137]],[0.404,[0.24412005,0.37218889,0.66589627]],[0.408,[0.24395780,0.37661289,0.66896489]],[0.412,[0.24383334,0.38104229,0.67192160]],[0.416,[0.24375272,0.38547520,0.67477099]],[0.420,[0.24372159,0.38990990,0.67751781]],[0.424,[0.24374497,0.39434483,0.68016682]],[0.427,[0.24382759,0.39877858,0.68272286]],[0.431,[0.24397378,0.40320985,0.68519075]],[0.435,[0.24418744,0.40763748,0.68757528]],[0.439,[0.24447207,0.41206045,0.68988119]],[0.443,[0.24483074,0.41647785,0.69211310]],[0.447,[0.24526613,0.42088890,0.69427555]],[0.451,[0.24578055,0.42529292,0.69637292]],[0.455,[0.24637589,0.42968935,0.69840946]],[0.459,[0.24705372,0.43407771,0.70038927]],[0.463,[0.24781523,0.43845764,0.70231628]],[0.467,[0.24866130,0.44282884,0.70419426]],[0.471,[0.24959252,0.44719108,0.70602681]],[0.475,[0.25060917,0.45154422,0.70781736]],[0.478,[0.25171129,0.45588817,0.70956918]],[0.482,[0.25289865,0.46022290,0.71128535]],[0.486,[0.25417082,0.46454843,0.71296882]],[0.490,[0.25552716,0.46886482,0.71462235]],[0.494,[0.25696687,0.47317219,0.71624858]],[0.498,[0.25848896,0.47747067,0.71784998]],[0.502,[0.26009232,0.48176042,0.71942887]],[0.506,[0.26177570,0.48604166,0.72098746]],[0.510,[0.26353778,0.49031459,0.72252780]],[0.514,[0.26537711,0.49457945,0.72405184]],[0.518,[0.26729219,0.49883651,0.72556140]],[0.522,[0.26928146,0.50308602,0.72705818]],[0.525,[0.27134332,0.50732827,0.72854378]],[0.529,[0.27347612,0.51156355,0.73001971]],[0.533,[0.27567821,0.51579214,0.73148736]],[0.537,[0.27794793,0.52001436,0.73294804]],[0.541,[0.28028360,0.52423051,0.73440296]],[0.545,[0.28268357,0.52844088,0.73585328]],[0.549,[0.28514622,0.53264579,0.73730005]],[0.553,[0.28766991,0.53684554,0.73874426]],[0.557,[0.29025309,0.54104043,0.74018682]],[0.561,[0.29289419,0.54523076,0.74162858]],[0.565,[0.29559174,0.54941683,0.74307033]],[0.569,[0.29834428,0.55359893,0.74451279]],[0.573,[0.30115042,0.55777733,0.74595664]],[0.576,[0.30400882,0.56195234,0.74740249]],[0.580,[0.30691820,0.56612420,0.74885089]],[0.584,[0.30987735,0.57029319,0.75030237]],[0.588,[0.31288513,0.57445957,0.75175739]],[0.592,[0.31594045,0.57862358,0.75321637]],[0.596,[0.31904231,0.58278547,0.75467970]],[0.600,[0.32218978,0.58694546,0.75614770]],[0.604,[0.32538200,0.59110377,0.75762068]],[0.608,[0.32861818,0.59526060,0.75909890]],[0.612,[0.33189762,0.59941617,0.76058259]],[0.616,[0.33521970,0.60357064,0.76207194]],[0.620,[0.33858388,0.60772419,0.76356711]],[0.624,[0.34198969,0.61187699,0.76506822]],[0.627,[0.34543677,0.61602918,0.76657539]],[0.631,[0.34892482,0.62018088,0.76808867]],[0.635,[0.35245366,0.62433221,0.76960811]],[0.639,[0.35602315,0.62848328,0.77113373]],[0.643,[0.35963330,0.63263416,0.77266552]],[0.647,[0.36328417,0.63678492,0.77420346]],[0.651,[0.36697594,0.64093562,0.77574750]],[0.655,[0.37070887,0.64508626,0.77729756]],[0.659,[0.37448333,0.64923687,0.77885356]],[0.663,[0.37829979,0.65338743,0.78041541]],[0.667,[0.38215883,0.65753790,0.78198297]],[0.671,[0.38606113,0.66168821,0.78355612]],[0.675,[0.39000748,0.66583833,0.78513436]],[0.678,[0.39399882,0.66998823,0.78671676]],[0.682,[0.39803619,0.67413764,0.78830412]],[0.686,[0.40212077,0.67828640,0.78989626]],[0.690,[0.40625381,0.68243429,0.79149303]],[0.694,[0.41043672,0.68658107,0.79309427]],[0.698,[0.41467103,0.69072647,0.79469983]],[0.702,[0.41895840,0.69487019,0.79630958]],[0.706,[0.42330076,0.69901195,0.79792237]],[0.710,[0.42770031,0.70315144,0.79953693]],[0.714,[0.43215888,0.70728805,0.80115515]],[0.718,[0.43667866,0.71142130,0.80277700]],[0.722,[0.44126199,0.71555064,0.80440251]],[0.725,[0.44591175,0.71967561,0.80603022]],[0.729,[0.45063110,0.72379561,0.80765870]],[0.733,[0.45542205,0.72790979,0.80929102]],[0.737,[0.46028743,0.73201742,0.81092750]],[0.741,[0.46523129,0.73611780,0.81256547]],[0.745,[0.47025671,0.74021004,0.81420586]],[0.749,[0.47536584,0.74429316,0.81585182]],[0.753,[0.48056300,0.74836626,0.81750143]],[0.757,[0.48585194,0.75242831,0.81915472]],[0.761,[0.49123401,0.75647827,0.82081642]],[0.765,[0.49671496,0.76051503,0.82248288]],[0.769,[0.50229586,0.76453755,0.82415903]],[0.773,[0.50797980,0.76854472,0.82584588]],[0.776,[0.51377031,0.77253541,0.82754379]],[0.780,[0.51966727,0.77650874,0.82925804]],[0.784,[0.52567488,0.78046351,0.83098749]],[0.788,[0.53179094,0.78439917,0.83273894]],[0.792,[0.53801840,0.78831467,0.83451210]],[0.796,[0.54435400,0.79220975,0.83631331]],[0.800,[0.55079789,0.79608381,0.83814427]],[0.804,[0.55734648,0.79993683,0.84000992]],[0.808,[0.56399647,0.80376887,0.84191391]],[0.812,[0.57074395,0.80758021,0.84385969]],[0.816,[0.57758278,0.81137158,0.84585184]],[0.820,[0.58450804,0.81514366,0.84789305]],[0.824,[0.59151241,0.81889765,0.84998727]],[0.827,[0.59858923,0.82263480,0.85213717]],[0.831,[0.60573106,0.82635660,0.85434539]],[0.835,[0.61293120,0.83006454,0.85661357]],[0.839,[0.62018101,0.83376060,0.85894417]],[0.843,[0.62747522,0.83744620,0.86133712]],[0.847,[0.63480525,0.84112351,0.86379420]],[0.851,[0.64216625,0.84479403,0.86631468]],[0.855,[0.64955148,0.84845972,0.86889888]],[0.859,[0.65695573,0.85212228,0.87154615]],[0.863,[0.66437458,0.85578326,0.87425541]],[0.867,[0.67180273,0.85944449,0.87702608]],[0.871,[0.67923764,0.86310717,0.87985618]],[0.875,[0.68667450,0.86677306,0.88274497]],[0.878,[0.69411182,0.87044318,0.88569014]],[0.882,[0.70154587,0.87411906,0.88869057]],[0.886,[0.70897547,0.87780166,0.89174404]],[0.890,[0.71639823,0.88149221,0.89484897]],[0.894,[0.72381291,0.88519169,0.89800335]],[0.898,[0.73121830,0.88890104,0.90120526]],[0.902,[0.73861316,0.89262124,0.90445285]],[0.906,[0.74599695,0.89635308,0.90774403]],[0.910,[0.75336890,0.90009739,0.91107686]],[0.914,[0.76072821,0.90385503,0.91444944]],[0.918,[0.76807541,0.90762650,0.91785934]],[0.922,[0.77540864,0.91141295,0.92130508]],[0.925,[0.78272987,0.91521448,0.92478363]],[0.929,[0.79003624,0.91903253,0.92829379]],[0.933,[0.79733058,0.92286698,0.93183206]],[0.937,[0.80460936,0.92671950,0.93539728]],[0.941,[0.81187625,0.93058973,0.93898531]],[0.945,[0.81912624,0.93447982,0.94259520]],[0.949,[0.82636495,0.93838890,0.94622154]],[0.953,[0.83358579,0.94231965,0.94986338]],[0.957,[0.84079256,0.94627180,0.95351520]],[0.961,[0.84798207,0.95024718,0.95717374]],[0.965,[0.85515095,0.95424775,0.96083521]],[0.969,[0.86230259,0.95827357,0.96449203]],[0.973,[0.86942981,0.96232795,0.96814019]],[0.976,[0.87652837,0.96641348,0.97177330]],[0.980,[0.88359326,0.97053314,0.97538393]],[0.984,[0.89061741,0.97469071,0.97896410]],[0.988,[0.89759175,0.97889080,0.98250515]],[0.992,[0.90450134,0.98313990,0.98600058]],[0.996,[0.91133005,0.98744495,0.98944426]],[1.000,[0.91805930,0.99181354,0.99283286]]]
H.colormap_inferno = function() {
    const colors = H.color_utils.color_cut;
    const ramp = H.color_utils.ramp;
    let result = ramp(colors("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));
    return result;    
}
H.colormap_inferno2 = [[0.000,[0.00146200,0.00046600,0.01386600]],[0.004,[0.00226700,0.00127000,0.01857000]],[0.008,[0.00329900,0.00224900,0.02423900]],[0.012,[0.00454700,0.00339200,0.03090900]],[0.016,[0.00600600,0.00469200,0.03855800]],[0.020,[0.00767600,0.00613600,0.04683600]],[0.024,[0.00956100,0.00771300,0.05514300]],[0.027,[0.01166300,0.00941700,0.06346000]],[0.031,[0.01399500,0.01122500,0.07186200]],[0.035,[0.01656100,0.01313600,0.08028200]],[0.039,[0.01937300,0.01513300,0.08876700]],[0.043,[0.02244700,0.01719900,0.09732700]],[0.047,[0.02579300,0.01933100,0.10593000]],[0.051,[0.02943200,0.02150300,0.11462100]],[0.055,[0.03338500,0.02370200,0.12339700]],[0.059,[0.03766800,0.02592100,0.13223200]],[0.063,[0.04225300,0.02813900,0.14114100]],[0.067,[0.04691500,0.03032400,0.15016400]],[0.071,[0.05164400,0.03247400,0.15925400]],[0.075,[0.05644900,0.03456900,0.16841400]],[0.078,[0.06134000,0.03659000,0.17764200]],[0.082,[0.06633100,0.03850400,0.18696200]],[0.086,[0.07142900,0.04029400,0.19635400]],[0.090,[0.07663700,0.04190500,0.20579900]],[0.094,[0.08196200,0.04332800,0.21528900]],[0.098,[0.08741100,0.04455600,0.22481300]],[0.102,[0.09299000,0.04558300,0.23435800]],[0.106,[0.09870200,0.04640200,0.24390400]],[0.110,[0.10455100,0.04700800,0.25343000]],[0.114,[0.11053600,0.04739900,0.26291200]],[0.118,[0.11665600,0.04757400,0.27232100]],[0.122,[0.12290800,0.04753600,0.28162400]],[0.125,[0.12928500,0.04729300,0.29078800]],[0.129,[0.13577800,0.04685600,0.29977600]],[0.133,[0.14237800,0.04624200,0.30855300]],[0.137,[0.14907300,0.04546800,0.31708500]],[0.141,[0.15585000,0.04455900,0.32533800]],[0.145,[0.16268900,0.04355400,0.33327700]],[0.149,[0.16957500,0.04248900,0.34087400]],[0.153,[0.17649300,0.04140200,0.34811100]],[0.157,[0.18342900,0.04032900,0.35497100]],[0.161,[0.19036700,0.03930900,0.36144700]],[0.165,[0.19729700,0.03840000,0.36753500]],[0.169,[0.20420900,0.03763200,0.37323800]],[0.173,[0.21109500,0.03703000,0.37856300]],[0.176,[0.21794900,0.03661500,0.38352200]],[0.180,[0.22476300,0.03640500,0.38812900]],[0.184,[0.23153800,0.03640500,0.39240000]],[0.188,[0.23827300,0.03662100,0.39635300]],[0.192,[0.24496700,0.03705500,0.40000700]],[0.196,[0.25162000,0.03770500,0.40337800]],[0.200,[0.25823400,0.03857100,0.40648500]],[0.204,[0.26481000,0.03964700,0.40934500]],[0.208,[0.27134700,0.04092200,0.41197600]],[0.212,[0.27785000,0.04235300,0.41439200]],[0.216,[0.28432100,0.04393300,0.41660800]],[0.220,[0.29076300,0.04564400,0.41863700]],[0.224,[0.29717800,0.04747000,0.42049100]],[0.227,[0.30356800,0.04939600,0.42218200]],[0.231,[0.30993500,0.05140700,0.42372100]],[0.235,[0.31628200,0.05349000,0.42511600]],[0.239,[0.32261000,0.05563400,0.42637700]],[0.243,[0.32892100,0.05782700,0.42751100]],[0.247,[0.33521700,0.06006000,0.42852400]],[0.251,[0.34150000,0.06232500,0.42942500]],[0.255,[0.34777100,0.06461600,0.43021700]],[0.259,[0.35403200,0.06692500,0.43090600]],[0.263,[0.36028400,0.06924700,0.43149700]],[0.267,[0.36652900,0.07157900,0.43199400]],[0.271,[0.37276800,0.07391500,0.43240000]],[0.275,[0.37900100,0.07625300,0.43271900]],[0.278,[0.38522800,0.07859100,0.43295500]],[0.282,[0.39145300,0.08092700,0.43310900]],[0.286,[0.39767400,0.08325700,0.43318300]],[0.290,[0.40389400,0.08558000,0.43317900]],[0.294,[0.41011300,0.08789600,0.43309800]],[0.298,[0.41633100,0.09020300,0.43294300]],[0.302,[0.42254900,0.09250100,0.43271400]],[0.306,[0.42876800,0.09479000,0.43241200]],[0.310,[0.43498700,0.09706900,0.43203900]],[0.314,[0.44120700,0.09933800,0.43159400]],[0.318,[0.44742800,0.10159700,0.43108000]],[0.322,[0.45365100,0.10384800,0.43049800]],[0.325,[0.45987500,0.10608900,0.42984600]],[0.329,[0.46610000,0.10832200,0.42912500]],[0.333,[0.47232800,0.11054700,0.42833400]],[0.337,[0.47855800,0.11276400,0.42747500]],[0.341,[0.48478900,0.11497400,0.42654800]],[0.345,[0.49102200,0.11717900,0.42555200]],[0.349,[0.49725700,0.11937900,0.42448800]],[0.353,[0.50349300,0.12157500,0.42335600]],[0.357,[0.50973000,0.12376900,0.42215600]],[0.361,[0.51596700,0.12596000,0.42088700]],[0.365,[0.52220600,0.12815000,0.41954900]],[0.369,[0.52844400,0.13034100,0.41814200]],[0.373,[0.53468300,0.13253400,0.41666700]],[0.376,[0.54092000,0.13472900,0.41512300]],[0.380,[0.54715700,0.13692900,0.41351100]],[0.384,[0.55339200,0.13913400,0.41182900]],[0.388,[0.55962400,0.14134600,0.41007800]],[0.392,[0.56585400,0.14356700,0.40825800]],[0.396,[0.57208100,0.14579700,0.40636900]],[0.400,[0.57830400,0.14803900,0.40441100]],[0.404,[0.58452100,0.15029400,0.40238500]],[0.408,[0.59073400,0.15256300,0.40029000]],[0.412,[0.59694000,0.15484800,0.39812500]],[0.416,[0.60313900,0.15715100,0.39589100]],[0.420,[0.60933000,0.15947400,0.39358900]],[0.424,[0.61551300,0.16181700,0.39121900]],[0.427,[0.62168500,0.16418400,0.38878100]],[0.431,[0.62784700,0.16657500,0.38627600]],[0.435,[0.63399800,0.16899200,0.38370400]],[0.439,[0.64013500,0.17143800,0.38106500]],[0.443,[0.64626000,0.17391400,0.37835900]],[0.447,[0.65236900,0.17642100,0.37558600]],[0.451,[0.65846300,0.17896200,0.37274800]],[0.455,[0.66454000,0.18153900,0.36984600]],[0.459,[0.67059900,0.18415300,0.36687900]],[0.463,[0.67663800,0.18680700,0.36384900]],[0.467,[0.68265600,0.18950100,0.36075700]],[0.471,[0.68865300,0.19223900,0.35760300]],[0.475,[0.69462700,0.19502100,0.35438800]],[0.478,[0.70057600,0.19785100,0.35111300]],[0.482,[0.70650000,0.20072800,0.34777700]],[0.486,[0.71239600,0.20365600,0.34438300]],[0.490,[0.71826400,0.20663600,0.34093100]],[0.494,[0.72410300,0.20967000,0.33742400]],[0.498,[0.72990900,0.21275900,0.33386100]],[0.502,[0.73568300,0.21590600,0.33024500]],[0.506,[0.74142300,0.21911200,0.32657600]],[0.510,[0.74712700,0.22237800,0.32285600]],[0.514,[0.75279400,0.22570600,0.31908500]],[0.518,[0.75842200,0.22909700,0.31526600]],[0.522,[0.76401000,0.23255400,0.31139900]],[0.525,[0.76955600,0.23607700,0.30748500]],[0.529,[0.77505900,0.23966700,0.30352600]],[0.533,[0.78051700,0.24332700,0.29952300]],[0.537,[0.78592900,0.24705600,0.29547700]],[0.541,[0.79129300,0.25085600,0.29139000]],[0.545,[0.79660700,0.25472800,0.28726400]],[0.549,[0.80187100,0.25867400,0.28309900]],[0.553,[0.80708200,0.26269200,0.27889800]],[0.557,[0.81223900,0.26678600,0.27466100]],[0.561,[0.81734100,0.27095400,0.27039000]],[0.565,[0.82238600,0.27519700,0.26608500]],[0.569,[0.82737200,0.27951700,0.26175000]],[0.573,[0.83229900,0.28391300,0.25738300]],[0.576,[0.83716500,0.28838500,0.25298800]],[0.580,[0.84196900,0.29293300,0.24856400]],[0.584,[0.84670900,0.29755900,0.24411300]],[0.588,[0.85138400,0.30226000,0.23963600]],[0.592,[0.85599200,0.30703800,0.23513300]],[0.596,[0.86053300,0.31189200,0.23060600]],[0.600,[0.86500600,0.31682200,0.22605500]],[0.604,[0.86940900,0.32182700,0.22148200]],[0.608,[0.87374100,0.32690600,0.21688600]],[0.612,[0.87800100,0.33206000,0.21226800]],[0.616,[0.88218800,0.33728700,0.20762800]],[0.620,[0.88630200,0.34258600,0.20296800]],[0.624,[0.89034100,0.34795700,0.19828600]],[0.627,[0.89430500,0.35339900,0.19358400]],[0.631,[0.89819200,0.35891100,0.18886000]],[0.635,[0.90200300,0.36449200,0.18411600]],[0.639,[0.90573500,0.37014000,0.17935000]],[0.643,[0.90939000,0.37585600,0.17456300]],[0.647,[0.91296600,0.38163600,0.16975500]],[0.651,[0.91646200,0.38748100,0.16492400]],[0.655,[0.91987900,0.39338900,0.16007000]],[0.659,[0.92321500,0.39935900,0.15519300]],[0.663,[0.92647000,0.40538900,0.15029200]],[0.667,[0.92964400,0.41147900,0.14536700]],[0.671,[0.93273700,0.41762700,0.14041700]],[0.675,[0.93574700,0.42383100,0.13544000]],[0.678,[0.93867500,0.43009100,0.13043800]],[0.682,[0.94152100,0.43640500,0.12540900]],[0.686,[0.94428500,0.44277200,0.12035400]],[0.690,[0.94696500,0.44919100,0.11527200]],[0.694,[0.94956200,0.45566000,0.11016400]],[0.698,[0.95207500,0.46217800,0.10503100]],[0.702,[0.95450600,0.46874400,0.09987400]],[0.706,[0.95685200,0.47535600,0.09469500]],[0.710,[0.95911400,0.48201400,0.08949900]],[0.714,[0.96129300,0.48871600,0.08428900]],[0.718,[0.96338700,0.49546200,0.07907300]],[0.722,[0.96539700,0.50224900,0.07385900]],[0.725,[0.96732200,0.50907800,0.06865900]],[0.729,[0.96916300,0.51594600,0.06348800]],[0.733,[0.97091900,0.52285300,0.05836700]],[0.737,[0.97259000,0.52979800,0.05332400]],[0.741,[0.97417600,0.53678000,0.04839200]],[0.745,[0.97567700,0.54379800,0.04361800]],[0.749,[0.97709200,0.55085000,0.03905000]],[0.753,[0.97842200,0.55793700,0.03493100]],[0.757,[0.97966600,0.56505700,0.03140900]],[0.761,[0.98082400,0.57220900,0.02850800]],[0.765,[0.98189500,0.57939200,0.02625000]],[0.769,[0.98288100,0.58660600,0.02466100]],[0.773,[0.98377900,0.59384900,0.02377000]],[0.776,[0.98459100,0.60112200,0.02360600]],[0.780,[0.98531500,0.60842200,0.02420200]],[0.784,[0.98595200,0.61575000,0.02559200]],[0.788,[0.98650200,0.62310500,0.02781400]],[0.792,[0.98696400,0.63048500,0.03090800]],[0.796,[0.98733700,0.63789000,0.03491600]],[0.800,[0.98762200,0.64532000,0.03988600]],[0.804,[0.98781900,0.65277300,0.04558100]],[0.808,[0.98792600,0.66025000,0.05175000]],[0.812,[0.98794500,0.66774800,0.05832900]],[0.816,[0.98787400,0.67526700,0.06525700]],[0.820,[0.98771400,0.68280700,0.07248900]],[0.824,[0.98746400,0.69036600,0.07999000]],[0.827,[0.98712400,0.69794400,0.08773100]],[0.831,[0.98669400,0.70554000,0.09569400]],[0.835,[0.98617500,0.71315300,0.10386300]],[0.839,[0.98556600,0.72078200,0.11222900]],[0.843,[0.98486500,0.72842700,0.12078500]],[0.847,[0.98407500,0.73608700,0.12952700]],[0.851,[0.98319600,0.74375800,0.13845300]],[0.855,[0.98222800,0.75144200,0.14756500]],[0.859,[0.98117300,0.75913500,0.15686300]],[0.863,[0.98003200,0.76683700,0.16635300]],[0.867,[0.97880600,0.77454500,0.17603700]],[0.871,[0.97749700,0.78225800,0.18592300]],[0.875,[0.97610800,0.78997400,0.19601800]],[0.878,[0.97463800,0.79769200,0.20633200]],[0.882,[0.97308800,0.80540900,0.21687700]],[0.886,[0.97146800,0.81312200,0.22765800]],[0.890,[0.96978300,0.82082500,0.23868600]],[0.894,[0.96804100,0.82851500,0.24997200]],[0.898,[0.96624300,0.83619100,0.26153400]],[0.902,[0.96439400,0.84384800,0.27339100]],[0.906,[0.96251700,0.85147600,0.28554600]],[0.910,[0.96062600,0.85906900,0.29801000]],[0.914,[0.95872000,0.86662400,0.31082000]],[0.918,[0.95683400,0.87412900,0.32397400]],[0.922,[0.95499700,0.88156900,0.33747500]],[0.925,[0.95321500,0.88894200,0.35136900]],[0.929,[0.95154600,0.89622600,0.36562700]],[0.933,[0.95001800,0.90340900,0.38027100]],[0.937,[0.94868300,0.91047300,0.39528900]],[0.941,[0.94759400,0.91739900,0.41066500]],[0.945,[0.94680900,0.92416800,0.42637300]],[0.949,[0.94639200,0.93076100,0.44236700]],[0.953,[0.94640300,0.93715900,0.45859200]],[0.957,[0.94690300,0.94334800,0.47497000]],[0.961,[0.94793700,0.94931800,0.49142600]],[0.965,[0.94954500,0.95506300,0.50786000]],[0.969,[0.95174000,0.96058700,0.52420300]],[0.973,[0.95452900,0.96589600,0.54036100]],[0.976,[0.95789600,0.97100300,0.55627500]],[0.980,[0.96181200,0.97592400,0.57192500]],[0.984,[0.96624900,0.98067800,0.58720600]],[0.988,[0.97116200,0.98528200,0.60215400]],[0.992,[0.97651100,0.98975300,0.61676000]],[0.996,[0.98225700,0.99410900,0.63101700]],[1.000,[0.98836200,0.99836400,0.64492400]]]

H.colormap_interpolate = function(steps, colormap) {
    let cmap = []
    for (i = 0; i <= steps; i++) {
        var color = interpolateLinearly(i/steps, colormap);
        r = Math.round(255*color[0]);
        g = Math.round(255*color[1]);
        b = Math.round(255*color[2]);
        let rgb = { r: r, g: g, b: b }
        let result = H.rgb_to_hex(rgb);
        cmap.push(result);
    }
    return cmap
    function enforceBounds(x) {
        if (x < 0) {
            return 0;
        } else if (x > 1){
            return 1;
        } else {
            return x;
        }
    }
    function interpolateLinearly(x, values) {
        var x_values = [];
        var r_values = [];
        var g_values = [];
        var b_values = [];
        for (i in values) {
            x_values.push(values[i][0]);
            r_values.push(values[i][1][0]);
            g_values.push(values[i][1][1]);
            b_values.push(values[i][1][2]);
        }
        var i = 1;
        while (x_values[i] < x) {
            i = i+1;
        }
        i = i-1;
        var width = Math.abs(x_values[i] - x_values[i+1]);
        var scaling_factor = (x - x_values[i]) / width;
        var r = r_values[i] + scaling_factor * (r_values[i+1] - r_values[i])
        var g = g_values[i] + scaling_factor * (g_values[i+1] - g_values[i])
        var b = b_values[i] + scaling_factor * (b_values[i+1] - b_values[i])
        return [enforceBounds(r), enforceBounds(g), enforceBounds(b)];
    }
}
H.colormap_jet = [[0.000, [0.000, 0.000, 0.500]], [0.002, [0.000, 0.000, 0.500]], [0.004, [0.000, 0.000, 0.518]], [0.006, [0.000, 0.000, 0.518]], [0.008, [0.000, 0.000, 0.536]], [0.010, [0.000, 0.000, 0.536]], [0.012, [0.000, 0.000, 0.553]], [0.014, [0.000, 0.000, 0.553]], [0.016, [0.000, 0.000, 0.571]], [0.018, [0.000, 0.000, 0.571]], [0.020, [0.000, 0.000, 0.589]], [0.022, [0.000, 0.000, 0.589]], [0.023, [0.000, 0.000, 0.607]], [0.025, [0.000, 0.000, 0.607]], [0.027, [0.000, 0.000, 0.625]], [0.029, [0.000, 0.000, 0.625]], [0.031, [0.000, 0.000, 0.643]], [0.033, [0.000, 0.000, 0.643]], [0.035, [0.000, 0.000, 0.660]], [0.037, [0.000, 0.000, 0.660]], [0.039, [0.000, 0.000, 0.678]], [0.041, [0.000, 0.000, 0.678]], [0.043, [0.000, 0.000, 0.696]], [0.045, [0.000, 0.000, 0.696]], [0.047, [0.000, 0.000, 0.714]], [0.049, [0.000, 0.000, 0.714]], [0.051, [0.000, 0.000, 0.732]], [0.053, [0.000, 0.000, 0.732]], [0.055, [0.000, 0.000, 0.750]], [0.057, [0.000, 0.000, 0.750]], [0.059, [0.000, 0.000, 0.767]], [0.061, [0.000, 0.000, 0.767]], [0.063, [0.000, 0.000, 0.785]], [0.065, [0.000, 0.000, 0.785]], [0.067, [0.000, 0.000, 0.803]], [0.068, [0.000, 0.000, 0.803]], [0.070, [0.000, 0.000, 0.821]], [0.072, [0.000, 0.000, 0.821]], [0.074, [0.000, 0.000, 0.839]], [0.076, [0.000, 0.000, 0.839]], [0.078, [0.000, 0.000, 0.857]], [0.080, [0.000, 0.000, 0.857]], [0.082, [0.000, 0.000, 0.874]], [0.084, [0.000, 0.000, 0.874]], [0.086, [0.000, 0.000, 0.892]], [0.088, [0.000, 0.000, 0.892]], [0.090, [0.000, 0.000, 0.910]], [0.092, [0.000, 0.000, 0.910]], [0.094, [0.000, 0.000, 0.928]], [0.096, [0.000, 0.000, 0.928]], [0.098, [0.000, 0.000, 0.946]], [0.100, [0.000, 0.000, 0.946]], [0.102, [0.000, 0.000, 0.963]], [0.104, [0.000, 0.000, 0.963]], [0.106, [0.000, 0.000, 0.981]], [0.108, [0.000, 0.000, 0.981]], [0.110, [0.000, 0.000, 0.999]], [0.112, [0.000, 0.000, 0.999]], [0.114, [0.000, 0.000, 1.000]], [0.115, [0.000, 0.000, 1.000]], [0.117, [0.000, 0.000, 1.000]], [0.119, [0.000, 0.000, 1.000]], [0.121, [0.000, 0.000, 1.000]], [0.123, [0.000, 0.000, 1.000]], [0.125, [0.000, 0.002, 1.000]], [0.127, [0.000, 0.002, 1.000]], [0.129, [0.000, 0.018, 1.000]], [0.131, [0.000, 0.018, 1.000]], [0.133, [0.000, 0.033, 1.000]], [0.135, [0.000, 0.033, 1.000]], [0.137, [0.000, 0.049, 1.000]], [0.139, [0.000, 0.049, 1.000]], [0.141, [0.000, 0.065, 1.000]], [0.143, [0.000, 0.065, 1.000]], [0.145, [0.000, 0.080, 1.000]], [0.147, [0.000, 0.080, 1.000]], [0.149, [0.000, 0.096, 1.000]], [0.151, [0.000, 0.096, 1.000]], [0.153, [0.000, 0.112, 1.000]], [0.155, [0.000, 0.112, 1.000]], [0.157, [0.000, 0.127, 1.000]], [0.159, [0.000, 0.127, 1.000]], [0.160, [0.000, 0.143, 1.000]], [0.162, [0.000, 0.143, 1.000]], [0.164, [0.000, 0.159, 1.000]], [0.166, [0.000, 0.159, 1.000]], [0.168, [0.000, 0.175, 1.000]], [0.170, [0.000, 0.175, 1.000]], [0.172, [0.000, 0.190, 1.000]], [0.174, [0.000, 0.190, 1.000]], [0.176, [0.000, 0.206, 1.000]], [0.178, [0.000, 0.206, 1.000]], [0.180, [0.000, 0.222, 1.000]], [0.182, [0.000, 0.222, 1.000]], [0.184, [0.000, 0.237, 1.000]], [0.186, [0.000, 0.237, 1.000]], [0.188, [0.000, 0.253, 1.000]], [0.190, [0.000, 0.253, 1.000]], [0.192, [0.000, 0.269, 1.000]], [0.194, [0.000, 0.269, 1.000]], [0.196, [0.000, 0.284, 1.000]], [0.198, [0.000, 0.284, 1.000]], [0.200, [0.000, 0.300, 1.000]], [0.202, [0.000, 0.300, 1.000]], [0.204, [0.000, 0.316, 1.000]], [0.205, [0.000, 0.316, 1.000]], [0.207, [0.000, 0.331, 1.000]], [0.209, [0.000, 0.331, 1.000]], [0.211, [0.000, 0.347, 1.000]], [0.213, [0.000, 0.347, 1.000]], [0.215, [0.000, 0.363, 1.000]], [0.217, [0.000, 0.363, 1.000]], [0.219, [0.000, 0.378, 1.000]], [0.221, [0.000, 0.378, 1.000]], [0.223, [0.000, 0.394, 1.000]], [0.225, [0.000, 0.394, 1.000]], [0.227, [0.000, 0.410, 1.000]], [0.229, [0.000, 0.410, 1.000]], [0.231, [0.000, 0.425, 1.000]], [0.233, [0.000, 0.425, 1.000]], [0.235, [0.000, 0.441, 1.000]], [0.237, [0.000, 0.441, 1.000]], [0.239, [0.000, 0.457, 1.000]], [0.241, [0.000, 0.457, 1.000]], [0.243, [0.000, 0.473, 1.000]], [0.245, [0.000, 0.473, 1.000]], [0.247, [0.000, 0.488, 1.000]], [0.249, [0.000, 0.488, 1.000]], [0.250, [0.000, 0.504, 1.000]], [0.252, [0.000, 0.504, 1.000]], [0.254, [0.000, 0.520, 1.000]], [0.256, [0.000, 0.520, 1.000]], [0.258, [0.000, 0.535, 1.000]], [0.260, [0.000, 0.535, 1.000]], [0.262, [0.000, 0.551, 1.000]], [0.264, [0.000, 0.551, 1.000]], [0.266, [0.000, 0.567, 1.000]], [0.268, [0.000, 0.567, 1.000]], [0.270, [0.000, 0.582, 1.000]], [0.272, [0.000, 0.582, 1.000]], [0.274, [0.000, 0.598, 1.000]], [0.276, [0.000, 0.598, 1.000]], [0.278, [0.000, 0.614, 1.000]], [0.280, [0.000, 0.614, 1.000]], [0.282, [0.000, 0.629, 1.000]], [0.284, [0.000, 0.629, 1.000]], [0.286, [0.000, 0.645, 1.000]], [0.288, [0.000, 0.645, 1.000]], [0.290, [0.000, 0.661, 1.000]], [0.292, [0.000, 0.661, 1.000]], [0.294, [0.000, 0.676, 1.000]], [0.295, [0.000, 0.676, 1.000]], [0.297, [0.000, 0.692, 1.000]], [0.299, [0.000, 0.692, 1.000]], [0.301, [0.000, 0.708, 1.000]], [0.303, [0.000, 0.708, 1.000]], [0.305, [0.000, 0.724, 1.000]], [0.307, [0.000, 0.724, 1.000]], [0.309, [0.000, 0.739, 1.000]], [0.311, [0.000, 0.739, 1.000]], [0.313, [0.000, 0.755, 1.000]], [0.315, [0.000, 0.755, 1.000]], [0.317, [0.000, 0.771, 1.000]], [0.319, [0.000, 0.771, 1.000]], [0.321, [0.000, 0.786, 1.000]], [0.323, [0.000, 0.786, 1.000]], [0.325, [0.000, 0.802, 1.000]], [0.327, [0.000, 0.802, 1.000]], [0.329, [0.000, 0.818, 1.000]], [0.331, [0.000, 0.818, 1.000]], [0.333, [0.000, 0.833, 1.000]], [0.335, [0.000, 0.833, 1.000]], [0.337, [0.000, 0.849, 1.000]], [0.339, [0.000, 0.849, 1.000]], [0.341, [0.000, 0.865, 0.996]], [0.342, [0.000, 0.865, 0.996]], [0.344, [0.000, 0.880, 0.984]], [0.346, [0.000, 0.880, 0.984]], [0.348, [0.000, 0.896, 0.971]], [0.350, [0.000, 0.896, 0.971]], [0.352, [0.009, 0.912, 0.958]], [0.354, [0.009, 0.912, 0.958]], [0.356, [0.022, 0.927, 0.946]], [0.358, [0.022, 0.927, 0.946]], [0.360, [0.035, 0.943, 0.933]], [0.362, [0.035, 0.943, 0.933]], [0.364, [0.047, 0.959, 0.920]], [0.366, [0.047, 0.959, 0.920]], [0.368, [0.060, 0.975, 0.908]], [0.370, [0.060, 0.975, 0.908]], [0.372, [0.073, 0.990, 0.895]], [0.374, [0.073, 0.990, 0.895]], [0.376, [0.085, 1.000, 0.882]], [0.378, [0.085, 1.000, 0.882]], [0.380, [0.098, 1.000, 0.870]], [0.382, [0.098, 1.000, 0.870]], [0.384, [0.111, 1.000, 0.857]], [0.386, [0.111, 1.000, 0.857]], [0.387, [0.123, 1.000, 0.844]], [0.389, [0.123, 1.000, 0.844]], [0.391, [0.136, 1.000, 0.832]], [0.393, [0.136, 1.000, 0.832]], [0.395, [0.149, 1.000, 0.819]], [0.397, [0.149, 1.000, 0.819]], [0.399, [0.161, 1.000, 0.806]], [0.401, [0.161, 1.000, 0.806]], [0.403, [0.174, 1.000, 0.794]], [0.405, [0.174, 1.000, 0.794]], [0.407, [0.187, 1.000, 0.781]], [0.409, [0.187, 1.000, 0.781]], [0.411, [0.199, 1.000, 0.769]], [0.413, [0.199, 1.000, 0.769]], [0.415, [0.212, 1.000, 0.756]], [0.417, [0.212, 1.000, 0.756]], [0.419, [0.225, 1.000, 0.743]], [0.421, [0.225, 1.000, 0.743]], [0.423, [0.237, 1.000, 0.731]], [0.425, [0.237, 1.000, 0.731]], [0.427, [0.250, 1.000, 0.718]], [0.429, [0.250, 1.000, 0.718]], [0.431, [0.262, 1.000, 0.705]], [0.432, [0.262, 1.000, 0.705]], [0.434, [0.275, 1.000, 0.693]], [0.436, [0.275, 1.000, 0.693]], [0.438, [0.288, 1.000, 0.680]], [0.440, [0.288, 1.000, 0.680]], [0.442, [0.300, 1.000, 0.667]], [0.444, [0.300, 1.000, 0.667]], [0.446, [0.313, 1.000, 0.655]], [0.448, [0.313, 1.000, 0.655]], [0.450, [0.326, 1.000, 0.642]], [0.452, [0.326, 1.000, 0.642]], [0.454, [0.338, 1.000, 0.629]], [0.456, [0.338, 1.000, 0.629]], [0.458, [0.351, 1.000, 0.617]], [0.460, [0.351, 1.000, 0.617]], [0.462, [0.364, 1.000, 0.604]], [0.464, [0.364, 1.000, 0.604]], [0.466, [0.376, 1.000, 0.591]], [0.468, [0.376, 1.000, 0.591]], [0.470, [0.389, 1.000, 0.579]], [0.472, [0.389, 1.000, 0.579]], [0.474, [0.402, 1.000, 0.566]], [0.476, [0.402, 1.000, 0.566]], [0.477, [0.414, 1.000, 0.553]], [0.479, [0.414, 1.000, 0.553]], [0.481, [0.427, 1.000, 0.541]], [0.483, [0.427, 1.000, 0.541]], [0.485, [0.440, 1.000, 0.528]], [0.487, [0.440, 1.000, 0.528]], [0.489, [0.452, 1.000, 0.515]], [0.491, [0.452, 1.000, 0.515]], [0.493, [0.465, 1.000, 0.503]], [0.495, [0.465, 1.000, 0.503]], [0.497, [0.478, 1.000, 0.490]], [0.499, [0.478, 1.000, 0.490]], [0.501, [0.490, 1.000, 0.478]], [0.503, [0.490, 1.000, 0.478]], [0.505, [0.503, 1.000, 0.465]], [0.507, [0.503, 1.000, 0.465]], [0.509, [0.515, 1.000, 0.452]], [0.511, [0.515, 1.000, 0.452]], [0.513, [0.528, 1.000, 0.440]], [0.515, [0.528, 1.000, 0.440]], [0.517, [0.541, 1.000, 0.427]], [0.519, [0.541, 1.000, 0.427]], [0.521, [0.553, 1.000, 0.414]], [0.523, [0.553, 1.000, 0.414]], [0.524, [0.566, 1.000, 0.402]], [0.526, [0.566, 1.000, 0.402]], [0.528, [0.579, 1.000, 0.389]], [0.530, [0.579, 1.000, 0.389]], [0.532, [0.591, 1.000, 0.376]], [0.534, [0.591, 1.000, 0.376]], [0.536, [0.604, 1.000, 0.364]], [0.538, [0.604, 1.000, 0.364]], [0.540, [0.617, 1.000, 0.351]], [0.542, [0.617, 1.000, 0.351]], [0.544, [0.629, 1.000, 0.338]], [0.546, [0.629, 1.000, 0.338]], [0.548, [0.642, 1.000, 0.326]], [0.550, [0.642, 1.000, 0.326]], [0.552, [0.655, 1.000, 0.313]], [0.554, [0.655, 1.000, 0.313]], [0.556, [0.667, 1.000, 0.300]], [0.558, [0.667, 1.000, 0.300]], [0.560, [0.680, 1.000, 0.288]], [0.562, [0.680, 1.000, 0.288]], [0.564, [0.693, 1.000, 0.275]], [0.566, [0.693, 1.000, 0.275]], [0.568, [0.705, 1.000, 0.262]], [0.569, [0.705, 1.000, 0.262]], [0.571, [0.718, 1.000, 0.250]], [0.573, [0.718, 1.000, 0.250]], [0.575, [0.731, 1.000, 0.237]], [0.577, [0.731, 1.000, 0.237]], [0.579, [0.743, 1.000, 0.225]], [0.581, [0.743, 1.000, 0.225]], [0.583, [0.756, 1.000, 0.212]], [0.585, [0.756, 1.000, 0.212]], [0.587, [0.769, 1.000, 0.199]], [0.589, [0.769, 1.000, 0.199]], [0.591, [0.781, 1.000, 0.187]], [0.593, [0.781, 1.000, 0.187]], [0.595, [0.794, 1.000, 0.174]], [0.597, [0.794, 1.000, 0.174]], [0.599, [0.806, 1.000, 0.161]], [0.601, [0.806, 1.000, 0.161]], [0.603, [0.819, 1.000, 0.149]], [0.605, [0.819, 1.000, 0.149]], [0.607, [0.832, 1.000, 0.136]], [0.609, [0.832, 1.000, 0.136]], [0.611, [0.844, 1.000, 0.123]], [0.613, [0.844, 1.000, 0.123]], [0.614, [0.857, 1.000, 0.111]], [0.616, [0.857, 1.000, 0.111]], [0.618, [0.870, 1.000, 0.098]], [0.620, [0.870, 1.000, 0.098]], [0.622, [0.882, 1.000, 0.085]], [0.624, [0.882, 1.000, 0.085]], [0.626, [0.895, 1.000, 0.073]], [0.628, [0.895, 1.000, 0.073]], [0.630, [0.908, 1.000, 0.060]], [0.632, [0.908, 1.000, 0.060]], [0.634, [0.920, 1.000, 0.047]], [0.636, [0.920, 1.000, 0.047]], [0.638, [0.933, 1.000, 0.035]], [0.640, [0.933, 1.000, 0.035]], [0.642, [0.946, 0.988, 0.022]], [0.644, [0.946, 0.988, 0.022]], [0.646, [0.958, 0.974, 0.009]], [0.648, [0.958, 0.974, 0.009]], [0.650, [0.971, 0.959, 0.000]], [0.652, [0.971, 0.959, 0.000]], [0.654, [0.984, 0.945, 0.000]], [0.656, [0.984, 0.945, 0.000]], [0.658, [0.996, 0.930, 0.000]], [0.659, [0.996, 0.930, 0.000]], [0.661, [1.000, 0.916, 0.000]], [0.663, [1.000, 0.916, 0.000]], [0.665, [1.000, 0.901, 0.000]], [0.667, [1.000, 0.901, 0.000]], [0.669, [1.000, 0.887, 0.000]], [0.671, [1.000, 0.887, 0.000]], [0.673, [1.000, 0.872, 0.000]], [0.675, [1.000, 0.872, 0.000]], [0.677, [1.000, 0.858, 0.000]], [0.679, [1.000, 0.858, 0.000]], [0.681, [1.000, 0.843, 0.000]], [0.683, [1.000, 0.843, 0.000]], [0.685, [1.000, 0.829, 0.000]], [0.687, [1.000, 0.829, 0.000]], [0.689, [1.000, 0.814, 0.000]], [0.691, [1.000, 0.814, 0.000]], [0.693, [1.000, 0.800, 0.000]], [0.695, [1.000, 0.800, 0.000]], [0.697, [1.000, 0.785, 0.000]], [0.699, [1.000, 0.785, 0.000]], [0.701, [1.000, 0.771, 0.000]], [0.703, [1.000, 0.771, 0.000]], [0.705, [1.000, 0.756, 0.000]], [0.706, [1.000, 0.756, 0.000]], [0.708, [1.000, 0.741, 0.000]], [0.710, [1.000, 0.741, 0.000]], [0.712, [1.000, 0.727, 0.000]], [0.714, [1.000, 0.727, 0.000]], [0.716, [1.000, 0.712, 0.000]], [0.718, [1.000, 0.712, 0.000]], [0.720, [1.000, 0.698, 0.000]], [0.722, [1.000, 0.698, 0.000]], [0.724, [1.000, 0.683, 0.000]], [0.726, [1.000, 0.683, 0.000]], [0.728, [1.000, 0.669, 0.000]], [0.730, [1.000, 0.669, 0.000]], [0.732, [1.000, 0.654, 0.000]], [0.734, [1.000, 0.654, 0.000]], [0.736, [1.000, 0.640, 0.000]], [0.738, [1.000, 0.640, 0.000]], [0.740, [1.000, 0.625, 0.000]], [0.742, [1.000, 0.625, 0.000]], [0.744, [1.000, 0.611, 0.000]], [0.746, [1.000, 0.611, 0.000]], [0.748, [1.000, 0.596, 0.000]], [0.750, [1.000, 0.596, 0.000]], [0.751, [1.000, 0.582, 0.000]], [0.753, [1.000, 0.582, 0.000]], [0.755, [1.000, 0.567, 0.000]], [0.757, [1.000, 0.567, 0.000]], [0.759, [1.000, 0.553, 0.000]], [0.761, [1.000, 0.553, 0.000]], [0.763, [1.000, 0.538, 0.000]], [0.765, [1.000, 0.538, 0.000]], [0.767, [1.000, 0.524, 0.000]], [0.769, [1.000, 0.524, 0.000]], [0.771, [1.000, 0.509, 0.000]], [0.773, [1.000, 0.509, 0.000]], [0.775, [1.000, 0.495, 0.000]], [0.777, [1.000, 0.495, 0.000]], [0.779, [1.000, 0.480, 0.000]], [0.781, [1.000, 0.480, 0.000]], [0.783, [1.000, 0.466, 0.000]], [0.785, [1.000, 0.466, 0.000]], [0.787, [1.000, 0.451, 0.000]], [0.789, [1.000, 0.451, 0.000]], [0.791, [1.000, 0.436, 0.000]], [0.793, [1.000, 0.436, 0.000]], [0.795, [1.000, 0.422, 0.000]], [0.796, [1.000, 0.422, 0.000]], [0.798, [1.000, 0.407, 0.000]], [0.800, [1.000, 0.407, 0.000]], [0.802, [1.000, 0.393, 0.000]], [0.804, [1.000, 0.393, 0.000]], [0.806, [1.000, 0.378, 0.000]], [0.808, [1.000, 0.378, 0.000]], [0.810, [1.000, 0.364, 0.000]], [0.812, [1.000, 0.364, 0.000]], [0.814, [1.000, 0.349, 0.000]], [0.816, [1.000, 0.349, 0.000]], [0.818, [1.000, 0.335, 0.000]], [0.820, [1.000, 0.335, 0.000]], [0.822, [1.000, 0.320, 0.000]], [0.824, [1.000, 0.320, 0.000]], [0.826, [1.000, 0.306, 0.000]], [0.828, [1.000, 0.306, 0.000]], [0.830, [1.000, 0.291, 0.000]], [0.832, [1.000, 0.291, 0.000]], [0.834, [1.000, 0.277, 0.000]], [0.836, [1.000, 0.277, 0.000]], [0.838, [1.000, 0.262, 0.000]], [0.840, [1.000, 0.262, 0.000]], [0.841, [1.000, 0.248, 0.000]], [0.843, [1.000, 0.248, 0.000]], [0.845, [1.000, 0.233, 0.000]], [0.847, [1.000, 0.233, 0.000]], [0.849, [1.000, 0.219, 0.000]], [0.851, [1.000, 0.219, 0.000]], [0.853, [1.000, 0.204, 0.000]], [0.855, [1.000, 0.204, 0.000]], [0.857, [1.000, 0.190, 0.000]], [0.859, [1.000, 0.190, 0.000]], [0.861, [1.000, 0.175, 0.000]], [0.863, [1.000, 0.175, 0.000]], [0.865, [1.000, 0.160, 0.000]], [0.867, [1.000, 0.160, 0.000]], [0.869, [1.000, 0.146, 0.000]], [0.871, [1.000, 0.146, 0.000]], [0.873, [1.000, 0.131, 0.000]], [0.875, [1.000, 0.131, 0.000]], [0.877, [1.000, 0.117, 0.000]], [0.879, [1.000, 0.117, 0.000]], [0.881, [1.000, 0.102, 0.000]], [0.883, [1.000, 0.102, 0.000]], [0.885, [1.000, 0.088, 0.000]], [0.886, [1.000, 0.088, 0.000]], [0.888, [0.999, 0.073, 0.000]], [0.890, [0.999, 0.073, 0.000]], [0.892, [0.981, 0.059, 0.000]], [0.894, [0.981, 0.059, 0.000]], [0.896, [0.963, 0.044, 0.000]], [0.898, [0.963, 0.044, 0.000]], [0.900, [0.946, 0.030, 0.000]], [0.902, [0.946, 0.030, 0.000]], [0.904, [0.928, 0.015, 0.000]], [0.906, [0.928, 0.015, 0.000]], [0.908, [0.910, 0.001, 0.000]], [0.910, [0.910, 0.001, 0.000]], [0.912, [0.892, 0.000, 0.000]], [0.914, [0.892, 0.000, 0.000]], [0.916, [0.874, 0.000, 0.000]], [0.918, [0.874, 0.000, 0.000]], [0.920, [0.857, 0.000, 0.000]], [0.922, [0.857, 0.000, 0.000]], [0.924, [0.839, 0.000, 0.000]], [0.926, [0.839, 0.000, 0.000]], [0.928, [0.821, 0.000, 0.000]], [0.930, [0.821, 0.000, 0.000]], [0.932, [0.803, 0.000, 0.000]], [0.933, [0.803, 0.000, 0.000]], [0.935, [0.785, 0.000, 0.000]], [0.937, [0.785, 0.000, 0.000]], [0.939, [0.767, 0.000, 0.000]], [0.941, [0.767, 0.000, 0.000]], [0.943, [0.750, 0.000, 0.000]], [0.945, [0.750, 0.000, 0.000]], [0.947, [0.732, 0.000, 0.000]], [0.949, [0.732, 0.000, 0.000]], [0.951, [0.714, 0.000, 0.000]], [0.953, [0.714, 0.000, 0.000]], [0.955, [0.696, 0.000, 0.000]], [0.957, [0.696, 0.000, 0.000]], [0.959, [0.678, 0.000, 0.000]], [0.961, [0.678, 0.000, 0.000]], [0.963, [0.660, 0.000, 0.000]], [0.965, [0.660, 0.000, 0.000]], [0.967, [0.643, 0.000, 0.000]], [0.969, [0.643, 0.000, 0.000]], [0.971, [0.625, 0.000, 0.000]], [0.973, [0.625, 0.000, 0.000]], [0.975, [0.607, 0.000, 0.000]], [0.977, [0.607, 0.000, 0.000]], [0.978, [0.589, 0.000, 0.000]], [0.980, [0.589, 0.000, 0.000]], [0.982, [0.571, 0.000, 0.000]], [0.984, [0.571, 0.000, 0.000]], [0.986, [0.553, 0.000, 0.000]], [0.988, [0.553, 0.000, 0.000]], [0.990, [0.536, 0.000, 0.000]], [0.992, [0.536, 0.000, 0.000]], [0.994, [0.518, 0.000, 0.000]], [0.996, [0.518, 0.000, 0.000]], [0.998, [0.500, 0.000, 0.000]], [1.000, [0.500, 0.000, 0.000]]];
H.colormap_magma = function() {
    const colors = H.color_utils.color_cut;
    const ramp = H.color_utils.ramp;
    let result = ramp(colors("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));
    return result;
}
H.colormap_magma2 = [[0.000,[0.00146200,0.00046600,0.01386600]],[0.004,[0.00225800,0.00129500,0.01833100]],[0.008,[0.00327900,0.00230500,0.02370800]],[0.012,[0.00451200,0.00349000,0.02996500]],[0.016,[0.00595000,0.00484300,0.03713000]],[0.020,[0.00758800,0.00635600,0.04497300]],[0.024,[0.00942600,0.00802200,0.05284400]],[0.027,[0.01146500,0.00982800,0.06075000]],[0.031,[0.01370800,0.01177100,0.06866700]],[0.035,[0.01615600,0.01384000,0.07660300]],[0.039,[0.01881500,0.01602600,0.08458400]],[0.043,[0.02169200,0.01832000,0.09261000]],[0.047,[0.02479200,0.02071500,0.10067600]],[0.051,[0.02812300,0.02320100,0.10878700]],[0.055,[0.03169600,0.02576500,0.11696500]],[0.059,[0.03552000,0.02839700,0.12520900]],[0.063,[0.03960800,0.03109000,0.13351500]],[0.067,[0.04383000,0.03383000,0.14188600]],[0.071,[0.04806200,0.03660700,0.15032700]],[0.075,[0.05232000,0.03940700,0.15884100]],[0.078,[0.05661500,0.04216000,0.16744600]],[0.082,[0.06094900,0.04479400,0.17612900]],[0.086,[0.06533000,0.04731800,0.18489200]],[0.090,[0.06976400,0.04972600,0.19373500]],[0.094,[0.07425700,0.05201700,0.20266000]],[0.098,[0.07881500,0.05418400,0.21166700]],[0.102,[0.08344600,0.05622500,0.22075500]],[0.106,[0.08815500,0.05813300,0.22992200]],[0.110,[0.09294900,0.05990400,0.23916400]],[0.114,[0.09783300,0.06153100,0.24847700]],[0.118,[0.10281500,0.06301000,0.25785400]],[0.122,[0.10789900,0.06433500,0.26728900]],[0.125,[0.11309400,0.06549200,0.27678400]],[0.129,[0.11840500,0.06647900,0.28632100]],[0.133,[0.12383300,0.06729500,0.29587900]],[0.137,[0.12938000,0.06793500,0.30544300]],[0.141,[0.13505300,0.06839100,0.31500000]],[0.145,[0.14085800,0.06865400,0.32453800]],[0.149,[0.14678500,0.06873800,0.33401100]],[0.153,[0.15283900,0.06863700,0.34340400]],[0.157,[0.15901800,0.06835400,0.35268800]],[0.161,[0.16530800,0.06791100,0.36181600]],[0.165,[0.17171300,0.06730500,0.37077100]],[0.169,[0.17821200,0.06657600,0.37949700]],[0.173,[0.18480100,0.06573200,0.38797300]],[0.176,[0.19146000,0.06481800,0.39615200]],[0.180,[0.19817700,0.06386200,0.40400900]],[0.184,[0.20493500,0.06290700,0.41151400]],[0.188,[0.21171800,0.06199200,0.41864700]],[0.192,[0.21851200,0.06115800,0.42539200]],[0.196,[0.22530200,0.06044500,0.43174200]],[0.200,[0.23207700,0.05988900,0.43769500]],[0.204,[0.23882600,0.05951700,0.44325600]],[0.208,[0.24554300,0.05935200,0.44843600]],[0.212,[0.25222000,0.05941500,0.45324800]],[0.216,[0.25885700,0.05970600,0.45771000]],[0.220,[0.26544700,0.06023700,0.46184000]],[0.224,[0.27199400,0.06099400,0.46566000]],[0.227,[0.27849300,0.06197800,0.46919000]],[0.231,[0.28495100,0.06316800,0.47245100]],[0.235,[0.29136600,0.06455300,0.47546200]],[0.239,[0.29774000,0.06611700,0.47824300]],[0.243,[0.30408100,0.06783500,0.48081200]],[0.247,[0.31038200,0.06970200,0.48318600]],[0.251,[0.31665400,0.07169000,0.48538000]],[0.255,[0.32289900,0.07378200,0.48740800]],[0.259,[0.32911400,0.07597200,0.48928700]],[0.263,[0.33530800,0.07823600,0.49102400]],[0.267,[0.34148200,0.08056400,0.49263100]],[0.271,[0.34763600,0.08294600,0.49412100]],[0.275,[0.35377300,0.08537300,0.49550100]],[0.278,[0.35989800,0.08783100,0.49677800]],[0.282,[0.36601200,0.09031400,0.49796000]],[0.286,[0.37211600,0.09281600,0.49905300]],[0.290,[0.37821100,0.09533200,0.50006700]],[0.294,[0.38429900,0.09785500,0.50100200]],[0.298,[0.39038400,0.10037900,0.50186400]],[0.302,[0.39646700,0.10290200,0.50265800]],[0.306,[0.40254800,0.10542000,0.50338600]],[0.310,[0.40862900,0.10793000,0.50405200]],[0.314,[0.41470900,0.11043100,0.50466200]],[0.318,[0.42079100,0.11292000,0.50521500]],[0.322,[0.42687700,0.11539500,0.50571400]],[0.325,[0.43296700,0.11785500,0.50616000]],[0.329,[0.43906200,0.12029800,0.50655500]],[0.333,[0.44516300,0.12272400,0.50690100]],[0.337,[0.45127100,0.12513200,0.50719800]],[0.341,[0.45738600,0.12752200,0.50744800]],[0.345,[0.46350800,0.12989300,0.50765200]],[0.349,[0.46964000,0.13224500,0.50780900]],[0.353,[0.47578000,0.13457700,0.50792100]],[0.357,[0.48192900,0.13689100,0.50798900]],[0.361,[0.48808800,0.13918600,0.50801100]],[0.365,[0.49425800,0.14146200,0.50798800]],[0.369,[0.50043800,0.14371900,0.50792000]],[0.373,[0.50662900,0.14595800,0.50780600]],[0.376,[0.51283100,0.14817900,0.50764800]],[0.380,[0.51904500,0.15038300,0.50744300]],[0.384,[0.52527000,0.15256900,0.50719200]],[0.388,[0.53150700,0.15473900,0.50689500]],[0.392,[0.53775500,0.15689400,0.50655100]],[0.396,[0.54401500,0.15903300,0.50615900]],[0.400,[0.55028700,0.16115800,0.50571900]],[0.404,[0.55657100,0.16326900,0.50523000]],[0.408,[0.56286600,0.16536800,0.50469200]],[0.412,[0.56917200,0.16745400,0.50410500]],[0.416,[0.57549000,0.16953000,0.50346600]],[0.420,[0.58181900,0.17159600,0.50277700]],[0.424,[0.58815800,0.17365200,0.50203500]],[0.427,[0.59450800,0.17570100,0.50124100]],[0.431,[0.60086800,0.17774300,0.50039400]],[0.435,[0.60723800,0.17977900,0.49949200]],[0.439,[0.61361700,0.18181100,0.49853600]],[0.443,[0.62000500,0.18384000,0.49752400]],[0.447,[0.62640100,0.18586700,0.49645600]],[0.451,[0.63280500,0.18789300,0.49533200]],[0.455,[0.63921600,0.18992100,0.49415000]],[0.459,[0.64563300,0.19195200,0.49291000]],[0.463,[0.65205600,0.19398600,0.49161100]],[0.467,[0.65848300,0.19602700,0.49025300]],[0.471,[0.66491500,0.19807500,0.48883600]],[0.475,[0.67134900,0.20013300,0.48735800]],[0.478,[0.67778600,0.20220300,0.48581900]],[0.482,[0.68422400,0.20428600,0.48421900]],[0.486,[0.69066100,0.20638400,0.48255800]],[0.490,[0.69709800,0.20850100,0.48083500]],[0.494,[0.70353200,0.21063800,0.47904900]],[0.498,[0.70996200,0.21279700,0.47720100]],[0.502,[0.71638700,0.21498200,0.47529000]],[0.506,[0.72280500,0.21719400,0.47331600]],[0.510,[0.72921600,0.21943700,0.47127900]],[0.514,[0.73561600,0.22171300,0.46918000]],[0.518,[0.74200400,0.22402500,0.46701800]],[0.522,[0.74837800,0.22637700,0.46479400]],[0.525,[0.75473700,0.22877200,0.46250900]],[0.529,[0.76107700,0.23121400,0.46016200]],[0.533,[0.76739800,0.23370500,0.45775500]],[0.537,[0.77369500,0.23624900,0.45528900]],[0.541,[0.77996800,0.23885100,0.45276500]],[0.545,[0.78621200,0.24151400,0.45018400]],[0.549,[0.79242700,0.24424200,0.44754300]],[0.553,[0.79860800,0.24704000,0.44484800]],[0.557,[0.80475200,0.24991100,0.44210200]],[0.561,[0.81085500,0.25286100,0.43930500]],[0.565,[0.81691400,0.25589500,0.43646100]],[0.569,[0.82292600,0.25901600,0.43357300]],[0.573,[0.82888600,0.26222900,0.43064400]],[0.576,[0.83479100,0.26554000,0.42767100]],[0.580,[0.84063600,0.26895300,0.42466600]],[0.584,[0.84641600,0.27247300,0.42163100]],[0.588,[0.85212600,0.27610600,0.41857300]],[0.592,[0.85776300,0.27985700,0.41549600]],[0.596,[0.86332000,0.28372900,0.41240300]],[0.600,[0.86879300,0.28772800,0.40930300]],[0.604,[0.87417600,0.29185900,0.40620500]],[0.608,[0.87946400,0.29612500,0.40311800]],[0.612,[0.88465100,0.30053000,0.40004700]],[0.616,[0.88973100,0.30507900,0.39700200]],[0.620,[0.89470000,0.30977300,0.39399500]],[0.624,[0.89955200,0.31461600,0.39103700]],[0.627,[0.90428100,0.31961000,0.38813700]],[0.631,[0.90888400,0.32475500,0.38530800]],[0.635,[0.91335400,0.33005200,0.38256300]],[0.639,[0.91768900,0.33550000,0.37991500]],[0.643,[0.92188400,0.34109800,0.37737600]],[0.647,[0.92593700,0.34684400,0.37495900]],[0.651,[0.92984500,0.35273400,0.37267700]],[0.655,[0.93360600,0.35876400,0.37054100]],[0.659,[0.93722100,0.36492900,0.36856700]],[0.663,[0.94068700,0.37122400,0.36676200]],[0.667,[0.94400600,0.37764300,0.36513600]],[0.671,[0.94718000,0.38417800,0.36370100]],[0.675,[0.95021000,0.39082000,0.36246800]],[0.678,[0.95309900,0.39756300,0.36143800]],[0.682,[0.95584900,0.40440000,0.36061900]],[0.686,[0.95846400,0.41132400,0.36001400]],[0.690,[0.96094900,0.41832300,0.35963000]],[0.694,[0.96331000,0.42539000,0.35946900]],[0.698,[0.96554900,0.43251900,0.35952900]],[0.702,[0.96767100,0.43970300,0.35981000]],[0.706,[0.96968000,0.44693600,0.36031100]],[0.710,[0.97158200,0.45421000,0.36103000]],[0.714,[0.97338100,0.46152000,0.36196500]],[0.718,[0.97508200,0.46886100,0.36311100]],[0.722,[0.97669000,0.47622600,0.36446600]],[0.725,[0.97821000,0.48361200,0.36602500]],[0.729,[0.97964500,0.49101400,0.36778300]],[0.733,[0.98100000,0.49842800,0.36973400]],[0.737,[0.98227900,0.50585100,0.37187400]],[0.741,[0.98348500,0.51328000,0.37419800]],[0.745,[0.98462200,0.52071300,0.37669800]],[0.749,[0.98569300,0.52814800,0.37937100]],[0.753,[0.98670000,0.53558200,0.38221000]],[0.757,[0.98764600,0.54301500,0.38521000]],[0.761,[0.98853300,0.55044600,0.38836500]],[0.765,[0.98936300,0.55787300,0.39167100]],[0.769,[0.99013800,0.56529600,0.39512200]],[0.773,[0.99087100,0.57270600,0.39871400]],[0.776,[0.99155800,0.58010700,0.40244100]],[0.780,[0.99219600,0.58750200,0.40629900]],[0.784,[0.99278500,0.59489100,0.41028300]],[0.788,[0.99332600,0.60227500,0.41439000]],[0.792,[0.99383400,0.60964400,0.41861300]],[0.796,[0.99430900,0.61699900,0.42295000]],[0.800,[0.99473800,0.62435000,0.42739700]],[0.804,[0.99512200,0.63169600,0.43195100]],[0.808,[0.99548000,0.63902700,0.43660700]],[0.812,[0.99581000,0.64634400,0.44136100]],[0.816,[0.99609600,0.65365900,0.44621300]],[0.820,[0.99634100,0.66096900,0.45116000]],[0.824,[0.99658000,0.66825600,0.45619200]],[0.827,[0.99677500,0.67554100,0.46131400]],[0.831,[0.99692500,0.68282800,0.46652600]],[0.835,[0.99707700,0.69008800,0.47181100]],[0.839,[0.99718600,0.69734900,0.47718200]],[0.843,[0.99725400,0.70461100,0.48263500]],[0.847,[0.99732500,0.71184800,0.48815400]],[0.851,[0.99735100,0.71908900,0.49375500]],[0.855,[0.99735100,0.72632400,0.49942800]],[0.859,[0.99734100,0.73354500,0.50516700]],[0.863,[0.99728500,0.74077200,0.51098300]],[0.867,[0.99722800,0.74798100,0.51685900]],[0.871,[0.99713800,0.75519000,0.52280600]],[0.875,[0.99701900,0.76239800,0.52882100]],[0.878,[0.99689800,0.76959100,0.53489200]],[0.882,[0.99672700,0.77679500,0.54103900]],[0.886,[0.99657100,0.78397700,0.54723300]],[0.890,[0.99636900,0.79116700,0.55349900]],[0.894,[0.99616200,0.79834800,0.55982000]],[0.898,[0.99593200,0.80552700,0.56620200]],[0.902,[0.99568000,0.81270600,0.57264500]],[0.906,[0.99542400,0.81987500,0.57914000]],[0.910,[0.99513100,0.82705200,0.58570100]],[0.914,[0.99485100,0.83421300,0.59230700]],[0.918,[0.99452400,0.84138700,0.59898300]],[0.922,[0.99422200,0.84854000,0.60569600]],[0.925,[0.99386600,0.85571100,0.61248200]],[0.929,[0.99354500,0.86285900,0.61929900]],[0.933,[0.99317000,0.87002400,0.62618900]],[0.937,[0.99283100,0.87716800,0.63310900]],[0.941,[0.99244000,0.88433000,0.64009900]],[0.945,[0.99208900,0.89147000,0.64711600]],[0.949,[0.99168800,0.89862700,0.65420200]],[0.953,[0.99133200,0.90576300,0.66130900]],[0.957,[0.99093000,0.91291500,0.66848100]],[0.961,[0.99057000,0.92004900,0.67567500]],[0.965,[0.99017500,0.92719600,0.68292600]],[0.969,[0.98981500,0.93432900,0.69019800]],[0.973,[0.98943400,0.94147000,0.69751900]],[0.976,[0.98907700,0.94860400,0.70486300]],[0.980,[0.98871700,0.95574200,0.71224200]],[0.984,[0.98836700,0.96287800,0.71964900]],[0.988,[0.98803300,0.97001200,0.72707700]],[0.992,[0.98769100,0.97715400,0.73453600]],[0.996,[0.98738700,0.98428800,0.74200200]],[1.000,[0.98705300,0.99143800,0.74950400]]]
H.colormap_matter = [[0.000,[0.99429361,0.93032780,0.69109690]],[0.004,[0.99380347,0.92480678,0.68564709]],[0.008,[0.99329154,0.91929937,0.68023089]],[0.012,[0.99279222,0.91379173,0.67483294]],[0.016,[0.99229377,0.90828822,0.66945902]],[0.020,[0.99178436,0.90279340,0.66411480]],[0.024,[0.99129627,0.89729384,0.65878604]],[0.027,[0.99078259,0.89180853,0.65349411]],[0.031,[0.99029495,0.88631589,0.64821615]],[0.035,[0.98978682,0.88083501,0.64297311]],[0.039,[0.98928575,0.87535412,0.63775296]],[0.043,[0.98878008,0.86987788,0.63256100]],[0.047,[0.98826470,0.86440831,0.62739957]],[0.051,[0.98775850,0.85893700,0.62226060]],[0.055,[0.98722803,0.85347830,0.61715857]],[0.059,[0.98671839,0.84801220,0.61207428]],[0.063,[0.98617668,0.84256188,0.60703023]],[0.067,[0.98565630,0.83710333,0.60200398]],[0.071,[0.98510705,0.83165888,0.59701657]],[0.075,[0.98456902,0.82621018,0.59205135]],[0.078,[0.98400967,0.82077189,0.58712176]],[0.082,[0.98345358,0.81533250,0.58221775]],[0.086,[0.98288171,0.80990066,0.57734705]],[0.090,[0.98230724,0.80446999,0.57250437]],[0.094,[0.98172055,0.79904486,0.56769355]],[0.098,[0.98112747,0.79362230,0.56291231]],[0.102,[0.98052378,0.78820414,0.55816232]],[0.106,[0.97991190,0.78278902,0.55344266]],[0.110,[0.97928916,0.77737806,0.54875439]],[0.114,[0.97865835,0.77196968,0.54409650]],[0.118,[0.97801457,0.76656615,0.53947089]],[0.122,[0.97736473,0.76116379,0.53487508]],[0.125,[0.97669802,0.75576791,0.53031308]],[0.129,[0.97602903,0.75037081,0.52577975]],[0.133,[0.97533754,0.74498280,0.52128239]],[0.137,[0.97464928,0.73959020,0.51681211]],[0.141,[0.97393124,0.73421027,0.51238049]],[0.145,[0.97322354,0.72882140,0.50797400]],[0.149,[0.97248364,0.72344627,0.50360719]],[0.153,[0.97174984,0.71806387,0.49926753]],[0.157,[0.97099121,0.71269094,0.49496543]],[0.161,[0.97022616,0.70731710,0.49069515]],[0.165,[0.96944845,0.70194560,0.48645901]],[0.169,[0.96865040,0.69658060,0.48225963]],[0.173,[0.96785315,0.69120980,0.47809096]],[0.176,[0.96702730,0.68584991,0.47396210]],[0.180,[0.96620304,0.68048317,0.46986463]],[0.184,[0.96535776,0.67512254,0.46580546]],[0.188,[0.96449566,0.66976540,0.46178377]],[0.192,[0.96363020,0.66440340,0.45779644]],[0.196,[0.96273830,0.65905026,0.45385005]],[0.200,[0.96184190,0.65369237,0.44993943]],[0.204,[0.96092933,0.64833660,0.44606817]],[0.208,[0.95999158,0.64298842,0.44223886]],[0.212,[0.95905559,0.63763057,0.43844592]],[0.216,[0.95809626,0.63227868,0.43469575]],[0.220,[0.95711389,0.62693242,0.43098874]],[0.224,[0.95613153,0.62157650,0.42732096]],[0.227,[0.95512504,0.61622639,0.42369803]],[0.231,[0.95409505,0.61088157,0.42012037]],[0.235,[0.95306267,0.60552755,0.41658520]],[0.239,[0.95200784,0.60017752,0.41309682]],[0.243,[0.95092987,0.59483180,0.40965603]],[0.247,[0.94984002,0.58948232,0.40626218]],[0.251,[0.94873480,0.58413113,0.40291682]],[0.255,[0.94760645,0.57878343,0.39962183]],[0.259,[0.94645531,0.57343881,0.39637803]],[0.263,[0.94529398,0.56808778,0.39318551]],[0.267,[0.94411192,0.56273764,0.39004635]],[0.271,[0.94290654,0.55739007,0.38696177]],[0.275,[0.94167798,0.55204474,0.38393283]],[0.278,[0.94043129,0.54669749,0.38096067]],[0.282,[0.93916701,0.54134751,0.37804676]],[0.286,[0.93787845,0.53599965,0.37519244]],[0.290,[0.93656551,0.53065374,0.37239898]],[0.294,[0.93522801,0.52530964,0.36966771]],[0.298,[0.93386574,0.51996726,0.36700002]],[0.302,[0.93248345,0.51462233,0.36439800]],[0.306,[0.93107641,0.50927839,0.36186284]],[0.310,[0.92964257,0.50393685,0.35939586]],[0.314,[0.92818145,0.49859784,0.35699858]],[0.318,[0.92669252,0.49326154,0.35467254]],[0.322,[0.92517515,0.48792820,0.35241933]],[0.325,[0.92362867,0.48259816,0.35024054]],[0.329,[0.92205233,0.47727179,0.34813776]],[0.333,[0.92044532,0.47194958,0.34611260]],[0.337,[0.91880676,0.46663207,0.34416665]],[0.341,[0.91713572,0.46131990,0.34230146]],[0.345,[0.91543120,0.45601377,0.34051856]],[0.349,[0.91369216,0.45071447,0.33881946]],[0.353,[0.91191750,0.44542290,0.33720557]],[0.357,[0.91010609,0.44014000,0.33567825]],[0.361,[0.90825675,0.43486684,0.33423877]],[0.365,[0.90636827,0.42960453,0.33288831]],[0.369,[0.90443943,0.42435429,0.33162793]],[0.373,[0.90246898,0.41911741,0.33045857]],[0.376,[0.90045568,0.41389524,0.32938102]],[0.380,[0.89839827,0.40868922,0.32839594]],[0.384,[0.89629551,0.40350084,0.32750381]],[0.388,[0.89414811,0.39832940,0.32670706]],[0.392,[0.89195365,0.39317783,0.32600483]],[0.396,[0.88971012,0.38804876,0.32539617]],[0.400,[0.88741638,0.38294391,0.32488078]],[0.404,[0.88507136,0.37786501,0.32445816]],[0.408,[0.88267554,0.37281188,0.32412991]],[0.412,[0.88022743,0.36778691,0.32389464]],[0.416,[0.87772497,0.36279339,0.32374939]],[0.420,[0.87516740,0.35783305,0.32369276]],[0.424,[0.87255551,0.35290558,0.32372610]],[0.427,[0.86988775,0.34801394,0.32384604]],[0.431,[0.86716293,0.34316081,0.32404903]],[0.435,[0.86438132,0.33834687,0.32433433]],[0.439,[0.86154301,0.33357304,0.32470075]],[0.443,[0.85864675,0.32884252,0.32514279]],[0.447,[0.85569300,0.32415591,0.32565907]],[0.451,[0.85268212,0.31951405,0.32624774]],[0.455,[0.84961352,0.31491948,0.32690313]],[0.459,[0.84648807,0.31037235,0.32762406]],[0.463,[0.84330599,0.30587398,0.32840668]],[0.467,[0.84006752,0.30142586,0.32924624]],[0.471,[0.83677380,0.29702773,0.33014193]],[0.475,[0.83342508,0.29268122,0.33108793]],[0.478,[0.83002232,0.28838659,0.33208153]],[0.482,[0.82656645,0.28414414,0.33311978]],[0.486,[0.82305829,0.27995459,0.33419807]],[0.490,[0.81949900,0.27581774,0.33531442]],[0.494,[0.81588953,0.27173408,0.33646439]],[0.498,[0.81223105,0.26770354,0.33764514]],[0.502,[0.80852469,0.26372603,0.33885362]],[0.506,[0.80477161,0.25980154,0.34008638]],[0.510,[0.80097301,0.25592978,0.34134093]],[0.514,[0.79713009,0.25211056,0.34261402]],[0.518,[0.79324405,0.24834357,0.34390302]],[0.522,[0.78931609,0.24462845,0.34520528]],[0.525,[0.78534739,0.24096482,0.34651830]],[0.529,[0.78133913,0.23735228,0.34783945]],[0.533,[0.77729245,0.23379036,0.34916672]],[0.537,[0.77320850,0.23027866,0.35049752]],[0.541,[0.76908837,0.22681667,0.35183001]],[0.545,[0.76493312,0.22340394,0.35316213]],[0.549,[0.76074383,0.22004003,0.35449167]],[0.553,[0.75652144,0.21672446,0.35581731]],[0.557,[0.75226701,0.21345683,0.35713657]],[0.561,[0.74798139,0.21023669,0.35844838]],[0.565,[0.74366551,0.20706364,0.35975091]],[0.569,[0.73932024,0.20393732,0.36104238]],[0.573,[0.73494635,0.20085737,0.36232191]],[0.576,[0.73054471,0.19782348,0.36358718]],[0.580,[0.72611598,0.19483537,0.36483758]],[0.584,[0.72166090,0.19189279,0.36607151]],[0.588,[0.71718017,0.18899550,0.36728743]],[0.592,[0.71267433,0.18614338,0.36848468]],[0.596,[0.70814412,0.18333622,0.36966126]],[0.600,[0.70359001,0.18057398,0.37081657]],[0.604,[0.69901252,0.17785660,0.37194940]],[0.608,[0.69441228,0.17518398,0.37305808]],[0.612,[0.68978961,0.17255625,0.37414221]],[0.616,[0.68514508,0.16997338,0.37520008]],[0.620,[0.68047906,0.16743548,0.37623081]],[0.624,[0.67579188,0.16494277,0.37723366]],[0.627,[0.67108412,0.16249519,0.37820659]],[0.631,[0.66635592,0.16009315,0.37914944]],[0.635,[0.66160768,0.15773679,0.38006084]],[0.639,[0.65683983,0.15542627,0.38093931]],[0.643,[0.65205246,0.15316203,0.38178446]],[0.647,[0.64724605,0.15094418,0.38259458]],[0.651,[0.64242081,0.14877308,0.38336876]],[0.655,[0.63757687,0.14664919,0.38410635]],[0.659,[0.63271477,0.14457248,0.38480529]],[0.663,[0.62783454,0.14254354,0.38546523]],[0.667,[0.62293634,0.14056274,0.38608522]],[0.671,[0.61802083,0.13862993,0.38666300]],[0.675,[0.61308782,0.13674584,0.38719864]],[0.678,[0.60813763,0.13491065,0.38769077]],[0.682,[0.60317083,0.13312418,0.38813742]],[0.686,[0.59818726,0.13138711,0.38853858]],[0.690,[0.59318730,0.12969941,0.38889274]],[0.694,[0.58817152,0.12806077,0.38919810]],[0.698,[0.58313973,0.12647180,0.38945465]],[0.702,[0.57809238,0.12493225,0.38966089]],[0.706,[0.57303015,0.12344147,0.38981494]],[0.710,[0.56795278,0.12200003,0.38991698]],[0.714,[0.56286070,0.12060752,0.38996572]],[0.718,[0.55775491,0.11926261,0.38995887]],[0.722,[0.55263500,0.11796595,0.38989699]],[0.725,[0.54750131,0.11671701,0.38977915]],[0.729,[0.54235522,0.11551369,0.38960269]],[0.733,[0.53719631,0.11435643,0.38936827]],[0.737,[0.53202486,0.11324458,0.38907529]],[0.741,[0.52684188,0.11217633,0.38872207]],[0.745,[0.52164803,0.11115027,0.38830764]],[0.749,[0.51644309,0.11016633,0.38783247]],[0.753,[0.51122751,0.10922327,0.38729597]],[0.757,[0.50600291,0.10831803,0.38669608]],[0.761,[0.50076923,0.10745003,0.38603324]],[0.765,[0.49552659,0.10661841,0.38530760]],[0.769,[0.49027555,0.10582154,0.38451884]],[0.773,[0.48501765,0.10505620,0.38366550]],[0.776,[0.47975329,0.10432087,0.38274769]],[0.780,[0.47448238,0.10361485,0.38176614]],[0.784,[0.46920552,0.10293623,0.38072076]],[0.788,[0.46392333,0.10228310,0.37961155]],[0.792,[0.45863773,0.10165142,0.37843733]],[0.796,[0.45334861,0.10104040,0.37719908]],[0.800,[0.44805611,0.10044877,0.37589749]],[0.804,[0.44276088,0.09987450,0.37453284]],[0.808,[0.43746355,0.09931556,0.37310547]],[0.812,[0.43216478,0.09876992,0.37161577]],[0.816,[0.42686586,0.09823449,0.37006371]],[0.820,[0.42156767,0.09770691,0.36844971]],[0.824,[0.41626992,0.09718665,0.36677507]],[0.827,[0.41097320,0.09667179,0.36504042]],[0.831,[0.40567812,0.09616044,0.36324644]],[0.835,[0.40038526,0.09565075,0.36139387]],[0.839,[0.39509521,0.09514090,0.35948347]],[0.843,[0.38980852,0.09462915,0.35751606]],[0.847,[0.38452573,0.09411380,0.35549249]],[0.851,[0.37924738,0.09359321,0.35341364]],[0.855,[0.37397397,0.09306580,0.35128042]],[0.859,[0.36870599,0.09253005,0.34909377]],[0.863,[0.36344392,0.09198450,0.34685464]],[0.867,[0.35818819,0.09142777,0.34456401]],[0.871,[0.35293923,0.09085853,0.34222288]],[0.875,[0.34769744,0.09027551,0.33983225]],[0.878,[0.34246320,0.08967752,0.33739313]],[0.882,[0.33723686,0.08906342,0.33490656]],[0.886,[0.33201875,0.08843214,0.33237355]],[0.890,[0.32680918,0.08778266,0.32979513]],[0.894,[0.32160842,0.08711404,0.32717232]],[0.898,[0.31641672,0.08642536,0.32450613]],[0.902,[0.31123432,0.08571579,0.32179759]],[0.906,[0.30606141,0.08498453,0.31904770]],[0.910,[0.30089818,0.08423083,0.31625744]],[0.914,[0.29574478,0.08345400,0.31342780]],[0.918,[0.29060135,0.08265337,0.31055974]],[0.922,[0.28546798,0.08182832,0.30765422]],[0.925,[0.28034773,0.08097432,0.30471204]],[0.929,[0.27523807,0.08009433,0.30173433]],[0.933,[0.27013893,0.07918798,0.29872202]],[0.937,[0.26505035,0.07825478,0.29567600]],[0.941,[0.25997231,0.07729426,0.29259714]],[0.945,[0.25490478,0.07630599,0.28948629]],[0.949,[0.24984931,0.07528753,0.28634437]],[0.953,[0.24480741,0.07423648,0.28317235]],[0.957,[0.23977611,0.07315619,0.27997094]],[0.961,[0.23475530,0.07204628,0.27674091]],[0.965,[0.22974485,0.07090635,0.27348302]],[0.969,[0.22474604,0.06973430,0.27019819]],[0.973,[0.21976179,0.06852599,0.26688759]],[0.976,[0.21478769,0.06728631,0.26355148]],[0.980,[0.20982353,0.06601486,0.26019056]],[0.984,[0.20486910,0.06471124,0.25680549]],[0.988,[0.19993023,0.06336778,0.25339803]],[0.992,[0.19500160,0.06199021,0.24996805]],[0.996,[0.19008219,0.06057894,0.24651605]],[1.000,[0.18517171,0.05913349,0.24304267]]]
H.colormap_nipy_spectral = [[0.000, [0.000, 0.000, 0.000]], [0.002, [0.000, 0.000, 0.000]], [0.004, [0.037, 0.000, 0.042]], [0.006, [0.037, 0.000, 0.042]], [0.008, [0.073, 0.000, 0.084]], [0.010, [0.073, 0.000, 0.084]], [0.012, [0.110, 0.000, 0.125]], [0.014, [0.110, 0.000, 0.125]], [0.016, [0.146, 0.000, 0.167]], [0.018, [0.146, 0.000, 0.167]], [0.020, [0.183, 0.000, 0.209]], [0.022, [0.183, 0.000, 0.209]], [0.023, [0.220, 0.000, 0.251]], [0.025, [0.220, 0.000, 0.251]], [0.027, [0.256, 0.000, 0.293]], [0.029, [0.256, 0.000, 0.293]], [0.031, [0.293, 0.000, 0.335]], [0.033, [0.293, 0.000, 0.335]], [0.035, [0.329, 0.000, 0.376]], [0.037, [0.329, 0.000, 0.376]], [0.039, [0.366, 0.000, 0.418]], [0.041, [0.366, 0.000, 0.418]], [0.043, [0.403, 0.000, 0.460]], [0.045, [0.403, 0.000, 0.460]], [0.047, [0.439, 0.000, 0.502]], [0.049, [0.439, 0.000, 0.502]], [0.051, [0.468, 0.000, 0.535]], [0.053, [0.468, 0.000, 0.535]], [0.055, [0.473, 0.000, 0.540]], [0.057, [0.473, 0.000, 0.540]], [0.059, [0.478, 0.000, 0.545]], [0.061, [0.478, 0.000, 0.545]], [0.063, [0.484, 0.000, 0.550]], [0.065, [0.484, 0.000, 0.550]], [0.067, [0.489, 0.000, 0.556]], [0.068, [0.489, 0.000, 0.556]], [0.070, [0.494, 0.000, 0.561]], [0.072, [0.494, 0.000, 0.561]], [0.074, [0.499, 0.000, 0.566]], [0.076, [0.499, 0.000, 0.566]], [0.078, [0.505, 0.000, 0.571]], [0.080, [0.505, 0.000, 0.571]], [0.082, [0.510, 0.000, 0.576]], [0.084, [0.510, 0.000, 0.576]], [0.086, [0.515, 0.000, 0.582]], [0.088, [0.515, 0.000, 0.582]], [0.090, [0.520, 0.000, 0.587]], [0.092, [0.520, 0.000, 0.587]], [0.094, [0.525, 0.000, 0.592]], [0.096, [0.525, 0.000, 0.592]], [0.098, [0.531, 0.000, 0.597]], [0.100, [0.531, 0.000, 0.597]], [0.102, [0.512, 0.000, 0.603]], [0.104, [0.512, 0.000, 0.603]], [0.106, [0.471, 0.000, 0.608]], [0.108, [0.471, 0.000, 0.608]], [0.110, [0.429, 0.000, 0.613]], [0.112, [0.429, 0.000, 0.613]], [0.114, [0.387, 0.000, 0.618]], [0.115, [0.387, 0.000, 0.618]], [0.117, [0.345, 0.000, 0.624]], [0.119, [0.345, 0.000, 0.624]], [0.121, [0.303, 0.000, 0.629]], [0.123, [0.303, 0.000, 0.629]], [0.125, [0.261, 0.000, 0.634]], [0.127, [0.261, 0.000, 0.634]], [0.129, [0.220, 0.000, 0.639]], [0.131, [0.220, 0.000, 0.639]], [0.133, [0.178, 0.000, 0.644]], [0.135, [0.178, 0.000, 0.644]], [0.137, [0.136, 0.000, 0.650]], [0.139, [0.136, 0.000, 0.650]], [0.141, [0.094, 0.000, 0.655]], [0.143, [0.094, 0.000, 0.655]], [0.145, [0.052, 0.000, 0.660]], [0.147, [0.052, 0.000, 0.660]], [0.149, [0.010, 0.000, 0.665]], [0.151, [0.010, 0.000, 0.665]], [0.153, [0.000, 0.000, 0.678]], [0.155, [0.000, 0.000, 0.678]], [0.157, [0.000, 0.000, 0.694]], [0.159, [0.000, 0.000, 0.694]], [0.160, [0.000, 0.000, 0.710]], [0.162, [0.000, 0.000, 0.710]], [0.164, [0.000, 0.000, 0.726]], [0.166, [0.000, 0.000, 0.726]], [0.168, [0.000, 0.000, 0.741]], [0.170, [0.000, 0.000, 0.741]], [0.172, [0.000, 0.000, 0.757]], [0.174, [0.000, 0.000, 0.757]], [0.176, [0.000, 0.000, 0.773]], [0.178, [0.000, 0.000, 0.773]], [0.180, [0.000, 0.000, 0.788]], [0.182, [0.000, 0.000, 0.788]], [0.184, [0.000, 0.000, 0.804]], [0.186, [0.000, 0.000, 0.804]], [0.188, [0.000, 0.000, 0.820]], [0.190, [0.000, 0.000, 0.820]], [0.192, [0.000, 0.000, 0.835]], [0.194, [0.000, 0.000, 0.835]], [0.196, [0.000, 0.000, 0.851]], [0.198, [0.000, 0.000, 0.851]], [0.200, [0.000, 0.000, 0.867]], [0.202, [0.000, 0.000, 0.867]], [0.204, [0.000, 0.037, 0.867]], [0.205, [0.000, 0.037, 0.867]], [0.207, [0.000, 0.073, 0.867]], [0.209, [0.000, 0.073, 0.867]], [0.211, [0.000, 0.110, 0.867]], [0.213, [0.000, 0.110, 0.867]], [0.215, [0.000, 0.146, 0.867]], [0.217, [0.000, 0.146, 0.867]], [0.219, [0.000, 0.183, 0.867]], [0.221, [0.000, 0.183, 0.867]], [0.223, [0.000, 0.220, 0.867]], [0.225, [0.000, 0.220, 0.867]], [0.227, [0.000, 0.256, 0.867]], [0.229, [0.000, 0.256, 0.867]], [0.231, [0.000, 0.293, 0.867]], [0.233, [0.000, 0.293, 0.867]], [0.235, [0.000, 0.329, 0.867]], [0.237, [0.000, 0.329, 0.867]], [0.239, [0.000, 0.366, 0.867]], [0.241, [0.000, 0.366, 0.867]], [0.243, [0.000, 0.403, 0.867]], [0.245, [0.000, 0.403, 0.867]], [0.247, [0.000, 0.439, 0.867]], [0.249, [0.000, 0.439, 0.867]], [0.250, [0.000, 0.469, 0.867]], [0.252, [0.000, 0.469, 0.867]], [0.254, [0.000, 0.480, 0.867]], [0.256, [0.000, 0.480, 0.867]], [0.258, [0.000, 0.490, 0.867]], [0.260, [0.000, 0.490, 0.867]], [0.262, [0.000, 0.501, 0.867]], [0.264, [0.000, 0.501, 0.867]], [0.266, [0.000, 0.511, 0.867]], [0.268, [0.000, 0.511, 0.867]], [0.270, [0.000, 0.522, 0.867]], [0.272, [0.000, 0.522, 0.867]], [0.274, [0.000, 0.532, 0.867]], [0.276, [0.000, 0.532, 0.867]], [0.278, [0.000, 0.542, 0.867]], [0.280, [0.000, 0.542, 0.867]], [0.282, [0.000, 0.553, 0.867]], [0.284, [0.000, 0.553, 0.867]], [0.286, [0.000, 0.563, 0.867]], [0.288, [0.000, 0.563, 0.867]], [0.290, [0.000, 0.574, 0.867]], [0.292, [0.000, 0.574, 0.867]], [0.294, [0.000, 0.584, 0.867]], [0.295, [0.000, 0.584, 0.867]], [0.297, [0.000, 0.595, 0.867]], [0.299, [0.000, 0.595, 0.867]], [0.301, [0.000, 0.603, 0.859]], [0.303, [0.000, 0.603, 0.859]], [0.305, [0.000, 0.608, 0.843]], [0.307, [0.000, 0.608, 0.843]], [0.309, [0.000, 0.613, 0.827]], [0.311, [0.000, 0.613, 0.827]], [0.313, [0.000, 0.618, 0.812]], [0.315, [0.000, 0.618, 0.812]], [0.317, [0.000, 0.624, 0.796]], [0.319, [0.000, 0.624, 0.796]], [0.321, [0.000, 0.629, 0.780]], [0.323, [0.000, 0.629, 0.780]], [0.325, [0.000, 0.634, 0.765]], [0.327, [0.000, 0.634, 0.765]], [0.329, [0.000, 0.639, 0.749]], [0.331, [0.000, 0.639, 0.749]], [0.333, [0.000, 0.644, 0.733]], [0.335, [0.000, 0.644, 0.733]], [0.337, [0.000, 0.650, 0.718]], [0.339, [0.000, 0.650, 0.718]], [0.341, [0.000, 0.655, 0.702]], [0.342, [0.000, 0.655, 0.702]], [0.344, [0.000, 0.660, 0.686]], [0.346, [0.000, 0.660, 0.686]], [0.348, [0.000, 0.665, 0.671]], [0.350, [0.000, 0.665, 0.671]], [0.352, [0.000, 0.667, 0.659]], [0.354, [0.000, 0.667, 0.659]], [0.356, [0.000, 0.667, 0.648]], [0.358, [0.000, 0.667, 0.648]], [0.360, [0.000, 0.667, 0.638]], [0.362, [0.000, 0.667, 0.638]], [0.364, [0.000, 0.667, 0.627]], [0.366, [0.000, 0.667, 0.627]], [0.368, [0.000, 0.667, 0.617]], [0.370, [0.000, 0.667, 0.617]], [0.372, [0.000, 0.667, 0.607]], [0.374, [0.000, 0.667, 0.607]], [0.376, [0.000, 0.667, 0.596]], [0.378, [0.000, 0.667, 0.596]], [0.380, [0.000, 0.667, 0.586]], [0.382, [0.000, 0.667, 0.586]], [0.384, [0.000, 0.667, 0.575]], [0.386, [0.000, 0.667, 0.575]], [0.387, [0.000, 0.667, 0.565]], [0.389, [0.000, 0.667, 0.565]], [0.391, [0.000, 0.667, 0.554]], [0.393, [0.000, 0.667, 0.554]], [0.395, [0.000, 0.667, 0.544]], [0.397, [0.000, 0.667, 0.544]], [0.399, [0.000, 0.667, 0.533]], [0.401, [0.000, 0.667, 0.533]], [0.403, [0.000, 0.661, 0.491]], [0.405, [0.000, 0.661, 0.491]], [0.407, [0.000, 0.656, 0.450]], [0.409, [0.000, 0.656, 0.450]], [0.411, [0.000, 0.651, 0.408]], [0.413, [0.000, 0.651, 0.408]], [0.415, [0.000, 0.646, 0.366]], [0.417, [0.000, 0.646, 0.366]], [0.419, [0.000, 0.641, 0.324]], [0.421, [0.000, 0.641, 0.324]], [0.423, [0.000, 0.635, 0.282]], [0.425, [0.000, 0.635, 0.282]], [0.427, [0.000, 0.630, 0.241]], [0.429, [0.000, 0.630, 0.241]], [0.431, [0.000, 0.625, 0.199]], [0.432, [0.000, 0.625, 0.199]], [0.434, [0.000, 0.620, 0.157]], [0.436, [0.000, 0.620, 0.157]], [0.438, [0.000, 0.614, 0.115]], [0.440, [0.000, 0.614, 0.115]], [0.442, [0.000, 0.609, 0.073]], [0.444, [0.000, 0.609, 0.073]], [0.446, [0.000, 0.604, 0.031]], [0.448, [0.000, 0.604, 0.031]], [0.450, [0.000, 0.603, 0.000]], [0.452, [0.000, 0.603, 0.000]], [0.454, [0.000, 0.613, 0.000]], [0.456, [0.000, 0.613, 0.000]], [0.458, [0.000, 0.624, 0.000]], [0.460, [0.000, 0.624, 0.000]], [0.462, [0.000, 0.634, 0.000]], [0.464, [0.000, 0.634, 0.000]], [0.466, [0.000, 0.644, 0.000]], [0.468, [0.000, 0.644, 0.000]], [0.470, [0.000, 0.655, 0.000]], [0.472, [0.000, 0.655, 0.000]], [0.474, [0.000, 0.665, 0.000]], [0.476, [0.000, 0.665, 0.000]], [0.477, [0.000, 0.676, 0.000]], [0.479, [0.000, 0.676, 0.000]], [0.481, [0.000, 0.686, 0.000]], [0.483, [0.000, 0.686, 0.000]], [0.485, [0.000, 0.697, 0.000]], [0.487, [0.000, 0.697, 0.000]], [0.489, [0.000, 0.707, 0.000]], [0.491, [0.000, 0.707, 0.000]], [0.493, [0.000, 0.718, 0.000]], [0.495, [0.000, 0.718, 0.000]], [0.497, [0.000, 0.728, 0.000]], [0.499, [0.000, 0.728, 0.000]], [0.501, [0.000, 0.739, 0.000]], [0.503, [0.000, 0.739, 0.000]], [0.505, [0.000, 0.749, 0.000]], [0.507, [0.000, 0.749, 0.000]], [0.509, [0.000, 0.759, 0.000]], [0.511, [0.000, 0.759, 0.000]], [0.513, [0.000, 0.770, 0.000]], [0.515, [0.000, 0.770, 0.000]], [0.517, [0.000, 0.780, 0.000]], [0.519, [0.000, 0.780, 0.000]], [0.521, [0.000, 0.791, 0.000]], [0.523, [0.000, 0.791, 0.000]], [0.524, [0.000, 0.801, 0.000]], [0.526, [0.000, 0.801, 0.000]], [0.528, [0.000, 0.812, 0.000]], [0.530, [0.000, 0.812, 0.000]], [0.532, [0.000, 0.822, 0.000]], [0.534, [0.000, 0.822, 0.000]], [0.536, [0.000, 0.833, 0.000]], [0.538, [0.000, 0.833, 0.000]], [0.540, [0.000, 0.843, 0.000]], [0.542, [0.000, 0.843, 0.000]], [0.544, [0.000, 0.854, 0.000]], [0.546, [0.000, 0.854, 0.000]], [0.548, [0.000, 0.864, 0.000]], [0.550, [0.000, 0.864, 0.000]], [0.552, [0.000, 0.875, 0.000]], [0.554, [0.000, 0.875, 0.000]], [0.556, [0.000, 0.885, 0.000]], [0.558, [0.000, 0.885, 0.000]], [0.560, [0.000, 0.895, 0.000]], [0.562, [0.000, 0.895, 0.000]], [0.564, [0.000, 0.906, 0.000]], [0.566, [0.000, 0.906, 0.000]], [0.568, [0.000, 0.916, 0.000]], [0.569, [0.000, 0.916, 0.000]], [0.571, [0.000, 0.927, 0.000]], [0.573, [0.000, 0.927, 0.000]], [0.575, [0.000, 0.937, 0.000]], [0.577, [0.000, 0.937, 0.000]], [0.579, [0.000, 0.948, 0.000]], [0.581, [0.000, 0.948, 0.000]], [0.583, [0.000, 0.958, 0.000]], [0.585, [0.000, 0.958, 0.000]], [0.587, [0.000, 0.969, 0.000]], [0.589, [0.000, 0.969, 0.000]], [0.591, [0.000, 0.979, 0.000]], [0.593, [0.000, 0.979, 0.000]], [0.595, [0.000, 0.990, 0.000]], [0.597, [0.000, 0.990, 0.000]], [0.599, [0.000, 1.000, 0.000]], [0.601, [0.000, 1.000, 0.000]], [0.603, [0.058, 1.000, 0.000]], [0.605, [0.058, 1.000, 0.000]], [0.607, [0.115, 1.000, 0.000]], [0.609, [0.115, 1.000, 0.000]], [0.611, [0.173, 1.000, 0.000]], [0.613, [0.173, 1.000, 0.000]], [0.614, [0.230, 1.000, 0.000]], [0.616, [0.230, 1.000, 0.000]], [0.618, [0.288, 1.000, 0.000]], [0.620, [0.288, 1.000, 0.000]], [0.622, [0.345, 1.000, 0.000]], [0.624, [0.345, 1.000, 0.000]], [0.626, [0.403, 1.000, 0.000]], [0.628, [0.403, 1.000, 0.000]], [0.630, [0.460, 1.000, 0.000]], [0.632, [0.460, 1.000, 0.000]], [0.634, [0.518, 1.000, 0.000]], [0.636, [0.518, 1.000, 0.000]], [0.638, [0.575, 1.000, 0.000]], [0.640, [0.575, 1.000, 0.000]], [0.642, [0.633, 1.000, 0.000]], [0.644, [0.633, 1.000, 0.000]], [0.646, [0.690, 1.000, 0.000]], [0.648, [0.690, 1.000, 0.000]], [0.650, [0.737, 0.999, 0.000]], [0.652, [0.737, 0.999, 0.000]], [0.654, [0.753, 0.993, 0.000]], [0.656, [0.753, 0.993, 0.000]], [0.658, [0.769, 0.988, 0.000]], [0.659, [0.769, 0.988, 0.000]], [0.661, [0.784, 0.983, 0.000]], [0.663, [0.784, 0.983, 0.000]], [0.665, [0.800, 0.978, 0.000]], [0.667, [0.800, 0.978, 0.000]], [0.669, [0.816, 0.973, 0.000]], [0.671, [0.816, 0.973, 0.000]], [0.673, [0.831, 0.967, 0.000]], [0.675, [0.831, 0.967, 0.000]], [0.677, [0.847, 0.962, 0.000]], [0.679, [0.847, 0.962, 0.000]], [0.681, [0.863, 0.957, 0.000]], [0.683, [0.863, 0.957, 0.000]], [0.685, [0.878, 0.952, 0.000]], [0.687, [0.878, 0.952, 0.000]], [0.689, [0.894, 0.946, 0.000]], [0.691, [0.894, 0.946, 0.000]], [0.693, [0.910, 0.941, 0.000]], [0.695, [0.910, 0.941, 0.000]], [0.697, [0.925, 0.936, 0.000]], [0.699, [0.925, 0.936, 0.000]], [0.701, [0.936, 0.928, 0.000]], [0.703, [0.936, 0.928, 0.000]], [0.705, [0.941, 0.918, 0.000]], [0.706, [0.941, 0.918, 0.000]], [0.708, [0.946, 0.907, 0.000]], [0.710, [0.946, 0.907, 0.000]], [0.712, [0.952, 0.897, 0.000]], [0.714, [0.952, 0.897, 0.000]], [0.716, [0.957, 0.886, 0.000]], [0.718, [0.957, 0.886, 0.000]], [0.720, [0.962, 0.876, 0.000]], [0.722, [0.962, 0.876, 0.000]], [0.724, [0.967, 0.865, 0.000]], [0.726, [0.967, 0.865, 0.000]], [0.728, [0.973, 0.855, 0.000]], [0.730, [0.973, 0.855, 0.000]], [0.732, [0.978, 0.844, 0.000]], [0.734, [0.978, 0.844, 0.000]], [0.736, [0.983, 0.834, 0.000]], [0.738, [0.983, 0.834, 0.000]], [0.740, [0.988, 0.824, 0.000]], [0.742, [0.988, 0.824, 0.000]], [0.744, [0.993, 0.813, 0.000]], [0.746, [0.993, 0.813, 0.000]], [0.748, [0.999, 0.803, 0.000]], [0.750, [0.999, 0.803, 0.000]], [0.751, [1.000, 0.788, 0.000]], [0.753, [1.000, 0.788, 0.000]], [0.755, [1.000, 0.773, 0.000]], [0.757, [1.000, 0.773, 0.000]], [0.759, [1.000, 0.757, 0.000]], [0.761, [1.000, 0.757, 0.000]], [0.763, [1.000, 0.741, 0.000]], [0.765, [1.000, 0.741, 0.000]], [0.767, [1.000, 0.725, 0.000]], [0.769, [1.000, 0.725, 0.000]], [0.771, [1.000, 0.710, 0.000]], [0.773, [1.000, 0.710, 0.000]], [0.775, [1.000, 0.694, 0.000]], [0.777, [1.000, 0.694, 0.000]], [0.779, [1.000, 0.678, 0.000]], [0.781, [1.000, 0.678, 0.000]], [0.783, [1.000, 0.663, 0.000]], [0.785, [1.000, 0.663, 0.000]], [0.787, [1.000, 0.647, 0.000]], [0.789, [1.000, 0.647, 0.000]], [0.791, [1.000, 0.631, 0.000]], [0.793, [1.000, 0.631, 0.000]], [0.795, [1.000, 0.616, 0.000]], [0.796, [1.000, 0.616, 0.000]], [0.798, [1.000, 0.600, 0.000]], [0.800, [1.000, 0.600, 0.000]], [0.802, [1.000, 0.553, 0.000]], [0.804, [1.000, 0.553, 0.000]], [0.806, [1.000, 0.506, 0.000]], [0.808, [1.000, 0.506, 0.000]], [0.810, [1.000, 0.459, 0.000]], [0.812, [1.000, 0.459, 0.000]], [0.814, [1.000, 0.412, 0.000]], [0.816, [1.000, 0.412, 0.000]], [0.818, [1.000, 0.365, 0.000]], [0.820, [1.000, 0.365, 0.000]], [0.822, [1.000, 0.318, 0.000]], [0.824, [1.000, 0.318, 0.000]], [0.826, [1.000, 0.271, 0.000]], [0.828, [1.000, 0.271, 0.000]], [0.830, [1.000, 0.224, 0.000]], [0.832, [1.000, 0.224, 0.000]], [0.834, [1.000, 0.176, 0.000]], [0.836, [1.000, 0.176, 0.000]], [0.838, [1.000, 0.129, 0.000]], [0.840, [1.000, 0.129, 0.000]], [0.841, [1.000, 0.082, 0.000]], [0.843, [1.000, 0.082, 0.000]], [0.845, [1.000, 0.035, 0.000]], [0.847, [1.000, 0.035, 0.000]], [0.849, [0.997, 0.000, 0.000]], [0.851, [0.997, 0.000, 0.000]], [0.853, [0.987, 0.000, 0.000]], [0.855, [0.987, 0.000, 0.000]], [0.857, [0.976, 0.000, 0.000]], [0.859, [0.976, 0.000, 0.000]], [0.861, [0.966, 0.000, 0.000]], [0.863, [0.966, 0.000, 0.000]], [0.865, [0.956, 0.000, 0.000]], [0.867, [0.956, 0.000, 0.000]], [0.869, [0.945, 0.000, 0.000]], [0.871, [0.945, 0.000, 0.000]], [0.873, [0.935, 0.000, 0.000]], [0.875, [0.935, 0.000, 0.000]], [0.877, [0.924, 0.000, 0.000]], [0.879, [0.924, 0.000, 0.000]], [0.881, [0.914, 0.000, 0.000]], [0.883, [0.914, 0.000, 0.000]], [0.885, [0.903, 0.000, 0.000]], [0.886, [0.903, 0.000, 0.000]], [0.888, [0.893, 0.000, 0.000]], [0.890, [0.893, 0.000, 0.000]], [0.892, [0.882, 0.000, 0.000]], [0.894, [0.882, 0.000, 0.000]], [0.896, [0.872, 0.000, 0.000]], [0.898, [0.872, 0.000, 0.000]], [0.900, [0.864, 0.000, 0.000]], [0.902, [0.864, 0.000, 0.000]], [0.904, [0.859, 0.000, 0.000]], [0.906, [0.859, 0.000, 0.000]], [0.908, [0.854, 0.000, 0.000]], [0.910, [0.854, 0.000, 0.000]], [0.912, [0.848, 0.000, 0.000]], [0.914, [0.848, 0.000, 0.000]], [0.916, [0.843, 0.000, 0.000]], [0.918, [0.843, 0.000, 0.000]], [0.920, [0.838, 0.000, 0.000]], [0.922, [0.838, 0.000, 0.000]], [0.924, [0.833, 0.000, 0.000]], [0.926, [0.833, 0.000, 0.000]], [0.928, [0.827, 0.000, 0.000]], [0.930, [0.827, 0.000, 0.000]], [0.932, [0.822, 0.000, 0.000]], [0.933, [0.822, 0.000, 0.000]], [0.935, [0.817, 0.000, 0.000]], [0.937, [0.817, 0.000, 0.000]], [0.939, [0.812, 0.000, 0.000]], [0.941, [0.812, 0.000, 0.000]], [0.943, [0.807, 0.000, 0.000]], [0.945, [0.807, 0.000, 0.000]], [0.947, [0.801, 0.000, 0.000]], [0.949, [0.801, 0.000, 0.000]], [0.951, [0.800, 0.047, 0.047]], [0.953, [0.800, 0.047, 0.047]], [0.955, [0.800, 0.110, 0.110]], [0.957, [0.800, 0.110, 0.110]], [0.959, [0.800, 0.173, 0.173]], [0.961, [0.800, 0.173, 0.173]], [0.963, [0.800, 0.235, 0.235]], [0.965, [0.800, 0.235, 0.235]], [0.967, [0.800, 0.298, 0.298]], [0.969, [0.800, 0.298, 0.298]], [0.971, [0.800, 0.361, 0.361]], [0.973, [0.800, 0.361, 0.361]], [0.975, [0.800, 0.424, 0.424]], [0.977, [0.800, 0.424, 0.424]], [0.978, [0.800, 0.486, 0.486]], [0.980, [0.800, 0.486, 0.486]], [0.982, [0.800, 0.549, 0.549]], [0.984, [0.800, 0.549, 0.549]], [0.986, [0.800, 0.612, 0.612]], [0.988, [0.800, 0.612, 0.612]], [0.990, [0.800, 0.675, 0.675]], [0.992, [0.800, 0.675, 0.675]], [0.994, [0.800, 0.737, 0.737]], [0.996, [0.800, 0.737, 0.737]], [0.998, [0.800, 0.800, 0.800]], [1.000, [0.800, 0.800, 0.800]]];
H.colormap_ocean = [[0.000, [0.000, 0.500, 0.000]], [0.002, [0.000, 0.500, 0.000]], [0.004, [0.000, 0.494, 0.004]], [0.006, [0.000, 0.494, 0.004]], [0.008, [0.000, 0.488, 0.008]], [0.010, [0.000, 0.488, 0.008]], [0.012, [0.000, 0.482, 0.012]], [0.014, [0.000, 0.482, 0.012]], [0.016, [0.000, 0.476, 0.016]], [0.018, [0.000, 0.476, 0.016]], [0.020, [0.000, 0.471, 0.020]], [0.022, [0.000, 0.471, 0.020]], [0.023, [0.000, 0.465, 0.024]], [0.025, [0.000, 0.465, 0.024]], [0.027, [0.000, 0.459, 0.027]], [0.029, [0.000, 0.459, 0.027]], [0.031, [0.000, 0.453, 0.031]], [0.033, [0.000, 0.453, 0.031]], [0.035, [0.000, 0.447, 0.035]], [0.037, [0.000, 0.447, 0.035]], [0.039, [0.000, 0.441, 0.039]], [0.041, [0.000, 0.441, 0.039]], [0.043, [0.000, 0.435, 0.043]], [0.045, [0.000, 0.435, 0.043]], [0.047, [0.000, 0.429, 0.047]], [0.049, [0.000, 0.429, 0.047]], [0.051, [0.000, 0.424, 0.051]], [0.053, [0.000, 0.424, 0.051]], [0.055, [0.000, 0.418, 0.055]], [0.057, [0.000, 0.418, 0.055]], [0.059, [0.000, 0.412, 0.059]], [0.061, [0.000, 0.412, 0.059]], [0.063, [0.000, 0.406, 0.063]], [0.065, [0.000, 0.406, 0.063]], [0.067, [0.000, 0.400, 0.067]], [0.068, [0.000, 0.400, 0.067]], [0.070, [0.000, 0.394, 0.071]], [0.072, [0.000, 0.394, 0.071]], [0.074, [0.000, 0.388, 0.075]], [0.076, [0.000, 0.388, 0.075]], [0.078, [0.000, 0.382, 0.078]], [0.080, [0.000, 0.382, 0.078]], [0.082, [0.000, 0.376, 0.082]], [0.084, [0.000, 0.376, 0.082]], [0.086, [0.000, 0.371, 0.086]], [0.088, [0.000, 0.371, 0.086]], [0.090, [0.000, 0.365, 0.090]], [0.092, [0.000, 0.365, 0.090]], [0.094, [0.000, 0.359, 0.094]], [0.096, [0.000, 0.359, 0.094]], [0.098, [0.000, 0.353, 0.098]], [0.100, [0.000, 0.353, 0.098]], [0.102, [0.000, 0.347, 0.102]], [0.104, [0.000, 0.347, 0.102]], [0.106, [0.000, 0.341, 0.106]], [0.108, [0.000, 0.341, 0.106]], [0.110, [0.000, 0.335, 0.110]], [0.112, [0.000, 0.335, 0.110]], [0.114, [0.000, 0.329, 0.114]], [0.115, [0.000, 0.329, 0.114]], [0.117, [0.000, 0.324, 0.118]], [0.119, [0.000, 0.324, 0.118]], [0.121, [0.000, 0.318, 0.122]], [0.123, [0.000, 0.318, 0.122]], [0.125, [0.000, 0.312, 0.125]], [0.127, [0.000, 0.312, 0.125]], [0.129, [0.000, 0.306, 0.129]], [0.131, [0.000, 0.306, 0.129]], [0.133, [0.000, 0.300, 0.133]], [0.135, [0.000, 0.300, 0.133]], [0.137, [0.000, 0.294, 0.137]], [0.139, [0.000, 0.294, 0.137]], [0.141, [0.000, 0.288, 0.141]], [0.143, [0.000, 0.288, 0.141]], [0.145, [0.000, 0.282, 0.145]], [0.147, [0.000, 0.282, 0.145]], [0.149, [0.000, 0.276, 0.149]], [0.151, [0.000, 0.276, 0.149]], [0.153, [0.000, 0.271, 0.153]], [0.155, [0.000, 0.271, 0.153]], [0.157, [0.000, 0.265, 0.157]], [0.159, [0.000, 0.265, 0.157]], [0.160, [0.000, 0.259, 0.161]], [0.162, [0.000, 0.259, 0.161]], [0.164, [0.000, 0.253, 0.165]], [0.166, [0.000, 0.253, 0.165]], [0.168, [0.000, 0.247, 0.169]], [0.170, [0.000, 0.247, 0.169]], [0.172, [0.000, 0.241, 0.173]], [0.174, [0.000, 0.241, 0.173]], [0.176, [0.000, 0.235, 0.176]], [0.178, [0.000, 0.235, 0.176]], [0.180, [0.000, 0.229, 0.180]], [0.182, [0.000, 0.229, 0.180]], [0.184, [0.000, 0.224, 0.184]], [0.186, [0.000, 0.224, 0.184]], [0.188, [0.000, 0.218, 0.188]], [0.190, [0.000, 0.218, 0.188]], [0.192, [0.000, 0.212, 0.192]], [0.194, [0.000, 0.212, 0.192]], [0.196, [0.000, 0.206, 0.196]], [0.198, [0.000, 0.206, 0.196]], [0.200, [0.000, 0.200, 0.200]], [0.202, [0.000, 0.200, 0.200]], [0.204, [0.000, 0.194, 0.204]], [0.205, [0.000, 0.194, 0.204]], [0.207, [0.000, 0.188, 0.208]], [0.209, [0.000, 0.188, 0.208]], [0.211, [0.000, 0.182, 0.212]], [0.213, [0.000, 0.182, 0.212]], [0.215, [0.000, 0.176, 0.216]], [0.217, [0.000, 0.176, 0.216]], [0.219, [0.000, 0.171, 0.220]], [0.221, [0.000, 0.171, 0.220]], [0.223, [0.000, 0.165, 0.224]], [0.225, [0.000, 0.165, 0.224]], [0.227, [0.000, 0.159, 0.227]], [0.229, [0.000, 0.159, 0.227]], [0.231, [0.000, 0.153, 0.231]], [0.233, [0.000, 0.153, 0.231]], [0.235, [0.000, 0.147, 0.235]], [0.237, [0.000, 0.147, 0.235]], [0.239, [0.000, 0.141, 0.239]], [0.241, [0.000, 0.141, 0.239]], [0.243, [0.000, 0.135, 0.243]], [0.245, [0.000, 0.135, 0.243]], [0.247, [0.000, 0.129, 0.247]], [0.249, [0.000, 0.129, 0.247]], [0.250, [0.000, 0.124, 0.251]], [0.252, [0.000, 0.124, 0.251]], [0.254, [0.000, 0.118, 0.255]], [0.256, [0.000, 0.118, 0.255]], [0.258, [0.000, 0.112, 0.259]], [0.260, [0.000, 0.112, 0.259]], [0.262, [0.000, 0.106, 0.263]], [0.264, [0.000, 0.106, 0.263]], [0.266, [0.000, 0.100, 0.267]], [0.268, [0.000, 0.100, 0.267]], [0.270, [0.000, 0.094, 0.271]], [0.272, [0.000, 0.094, 0.271]], [0.274, [0.000, 0.088, 0.275]], [0.276, [0.000, 0.088, 0.275]], [0.278, [0.000, 0.082, 0.278]], [0.280, [0.000, 0.082, 0.278]], [0.282, [0.000, 0.076, 0.282]], [0.284, [0.000, 0.076, 0.282]], [0.286, [0.000, 0.071, 0.286]], [0.288, [0.000, 0.071, 0.286]], [0.290, [0.000, 0.065, 0.290]], [0.292, [0.000, 0.065, 0.290]], [0.294, [0.000, 0.059, 0.294]], [0.295, [0.000, 0.059, 0.294]], [0.297, [0.000, 0.053, 0.298]], [0.299, [0.000, 0.053, 0.298]], [0.301, [0.000, 0.047, 0.302]], [0.303, [0.000, 0.047, 0.302]], [0.305, [0.000, 0.041, 0.306]], [0.307, [0.000, 0.041, 0.306]], [0.309, [0.000, 0.035, 0.310]], [0.311, [0.000, 0.035, 0.310]], [0.313, [0.000, 0.029, 0.314]], [0.315, [0.000, 0.029, 0.314]], [0.317, [0.000, 0.024, 0.318]], [0.319, [0.000, 0.024, 0.318]], [0.321, [0.000, 0.018, 0.322]], [0.323, [0.000, 0.018, 0.322]], [0.325, [0.000, 0.012, 0.325]], [0.327, [0.000, 0.012, 0.325]], [0.329, [0.000, 0.006, 0.329]], [0.331, [0.000, 0.006, 0.329]], [0.333, [0.000, 0.000, 0.333]], [0.335, [0.000, 0.000, 0.333]], [0.337, [0.000, 0.006, 0.337]], [0.339, [0.000, 0.006, 0.337]], [0.341, [0.000, 0.012, 0.341]], [0.342, [0.000, 0.012, 0.341]], [0.344, [0.000, 0.018, 0.345]], [0.346, [0.000, 0.018, 0.345]], [0.348, [0.000, 0.024, 0.349]], [0.350, [0.000, 0.024, 0.349]], [0.352, [0.000, 0.029, 0.353]], [0.354, [0.000, 0.029, 0.353]], [0.356, [0.000, 0.035, 0.357]], [0.358, [0.000, 0.035, 0.357]], [0.360, [0.000, 0.041, 0.361]], [0.362, [0.000, 0.041, 0.361]], [0.364, [0.000, 0.047, 0.365]], [0.366, [0.000, 0.047, 0.365]], [0.368, [0.000, 0.053, 0.369]], [0.370, [0.000, 0.053, 0.369]], [0.372, [0.000, 0.059, 0.373]], [0.374, [0.000, 0.059, 0.373]], [0.376, [0.000, 0.065, 0.376]], [0.378, [0.000, 0.065, 0.376]], [0.380, [0.000, 0.071, 0.380]], [0.382, [0.000, 0.071, 0.380]], [0.384, [0.000, 0.076, 0.384]], [0.386, [0.000, 0.076, 0.384]], [0.387, [0.000, 0.082, 0.388]], [0.389, [0.000, 0.082, 0.388]], [0.391, [0.000, 0.088, 0.392]], [0.393, [0.000, 0.088, 0.392]], [0.395, [0.000, 0.094, 0.396]], [0.397, [0.000, 0.094, 0.396]], [0.399, [0.000, 0.100, 0.400]], [0.401, [0.000, 0.100, 0.400]], [0.403, [0.000, 0.106, 0.404]], [0.405, [0.000, 0.106, 0.404]], [0.407, [0.000, 0.112, 0.408]], [0.409, [0.000, 0.112, 0.408]], [0.411, [0.000, 0.118, 0.412]], [0.413, [0.000, 0.118, 0.412]], [0.415, [0.000, 0.124, 0.416]], [0.417, [0.000, 0.124, 0.416]], [0.419, [0.000, 0.129, 0.420]], [0.421, [0.000, 0.129, 0.420]], [0.423, [0.000, 0.135, 0.424]], [0.425, [0.000, 0.135, 0.424]], [0.427, [0.000, 0.141, 0.427]], [0.429, [0.000, 0.141, 0.427]], [0.431, [0.000, 0.147, 0.431]], [0.432, [0.000, 0.147, 0.431]], [0.434, [0.000, 0.153, 0.435]], [0.436, [0.000, 0.153, 0.435]], [0.438, [0.000, 0.159, 0.439]], [0.440, [0.000, 0.159, 0.439]], [0.442, [0.000, 0.165, 0.443]], [0.444, [0.000, 0.165, 0.443]], [0.446, [0.000, 0.171, 0.447]], [0.448, [0.000, 0.171, 0.447]], [0.450, [0.000, 0.176, 0.451]], [0.452, [0.000, 0.176, 0.451]], [0.454, [0.000, 0.182, 0.455]], [0.456, [0.000, 0.182, 0.455]], [0.458, [0.000, 0.188, 0.459]], [0.460, [0.000, 0.188, 0.459]], [0.462, [0.000, 0.194, 0.463]], [0.464, [0.000, 0.194, 0.463]], [0.466, [0.000, 0.200, 0.467]], [0.468, [0.000, 0.200, 0.467]], [0.470, [0.000, 0.206, 0.471]], [0.472, [0.000, 0.206, 0.471]], [0.474, [0.000, 0.212, 0.475]], [0.476, [0.000, 0.212, 0.475]], [0.477, [0.000, 0.218, 0.478]], [0.479, [0.000, 0.218, 0.478]], [0.481, [0.000, 0.224, 0.482]], [0.483, [0.000, 0.224, 0.482]], [0.485, [0.000, 0.229, 0.486]], [0.487, [0.000, 0.229, 0.486]], [0.489, [0.000, 0.235, 0.490]], [0.491, [0.000, 0.235, 0.490]], [0.493, [0.000, 0.241, 0.494]], [0.495, [0.000, 0.241, 0.494]], [0.497, [0.000, 0.247, 0.498]], [0.499, [0.000, 0.247, 0.498]], [0.501, [0.000, 0.253, 0.502]], [0.503, [0.000, 0.253, 0.502]], [0.505, [0.000, 0.259, 0.506]], [0.507, [0.000, 0.259, 0.506]], [0.509, [0.000, 0.265, 0.510]], [0.511, [0.000, 0.265, 0.510]], [0.513, [0.000, 0.271, 0.514]], [0.515, [0.000, 0.271, 0.514]], [0.517, [0.000, 0.276, 0.518]], [0.519, [0.000, 0.276, 0.518]], [0.521, [0.000, 0.282, 0.522]], [0.523, [0.000, 0.282, 0.522]], [0.524, [0.000, 0.288, 0.525]], [0.526, [0.000, 0.288, 0.525]], [0.528, [0.000, 0.294, 0.529]], [0.530, [0.000, 0.294, 0.529]], [0.532, [0.000, 0.300, 0.533]], [0.534, [0.000, 0.300, 0.533]], [0.536, [0.000, 0.306, 0.537]], [0.538, [0.000, 0.306, 0.537]], [0.540, [0.000, 0.312, 0.541]], [0.542, [0.000, 0.312, 0.541]], [0.544, [0.000, 0.318, 0.545]], [0.546, [0.000, 0.318, 0.545]], [0.548, [0.000, 0.324, 0.549]], [0.550, [0.000, 0.324, 0.549]], [0.552, [0.000, 0.329, 0.553]], [0.554, [0.000, 0.329, 0.553]], [0.556, [0.000, 0.335, 0.557]], [0.558, [0.000, 0.335, 0.557]], [0.560, [0.000, 0.341, 0.561]], [0.562, [0.000, 0.341, 0.561]], [0.564, [0.000, 0.347, 0.565]], [0.566, [0.000, 0.347, 0.565]], [0.568, [0.000, 0.353, 0.569]], [0.569, [0.000, 0.353, 0.569]], [0.571, [0.000, 0.359, 0.573]], [0.573, [0.000, 0.359, 0.573]], [0.575, [0.000, 0.365, 0.576]], [0.577, [0.000, 0.365, 0.576]], [0.579, [0.000, 0.371, 0.580]], [0.581, [0.000, 0.371, 0.580]], [0.583, [0.000, 0.376, 0.584]], [0.585, [0.000, 0.376, 0.584]], [0.587, [0.000, 0.382, 0.588]], [0.589, [0.000, 0.382, 0.588]], [0.591, [0.000, 0.388, 0.592]], [0.593, [0.000, 0.388, 0.592]], [0.595, [0.000, 0.394, 0.596]], [0.597, [0.000, 0.394, 0.596]], [0.599, [0.000, 0.400, 0.600]], [0.601, [0.000, 0.400, 0.600]], [0.603, [0.000, 0.406, 0.604]], [0.605, [0.000, 0.406, 0.604]], [0.607, [0.000, 0.412, 0.608]], [0.609, [0.000, 0.412, 0.608]], [0.611, [0.000, 0.418, 0.612]], [0.613, [0.000, 0.418, 0.612]], [0.614, [0.000, 0.424, 0.616]], [0.616, [0.000, 0.424, 0.616]], [0.618, [0.000, 0.429, 0.620]], [0.620, [0.000, 0.429, 0.620]], [0.622, [0.000, 0.435, 0.624]], [0.624, [0.000, 0.435, 0.624]], [0.626, [0.000, 0.441, 0.627]], [0.628, [0.000, 0.441, 0.627]], [0.630, [0.000, 0.447, 0.631]], [0.632, [0.000, 0.447, 0.631]], [0.634, [0.000, 0.453, 0.635]], [0.636, [0.000, 0.453, 0.635]], [0.638, [0.000, 0.459, 0.639]], [0.640, [0.000, 0.459, 0.639]], [0.642, [0.000, 0.465, 0.643]], [0.644, [0.000, 0.465, 0.643]], [0.646, [0.000, 0.471, 0.647]], [0.648, [0.000, 0.471, 0.647]], [0.650, [0.000, 0.476, 0.651]], [0.652, [0.000, 0.476, 0.651]], [0.654, [0.000, 0.482, 0.655]], [0.656, [0.000, 0.482, 0.655]], [0.658, [0.000, 0.488, 0.659]], [0.659, [0.000, 0.488, 0.659]], [0.661, [0.000, 0.494, 0.663]], [0.663, [0.000, 0.494, 0.663]], [0.665, [0.000, 0.500, 0.667]], [0.667, [0.000, 0.500, 0.667]], [0.669, [0.012, 0.506, 0.671]], [0.671, [0.012, 0.506, 0.671]], [0.673, [0.024, 0.512, 0.675]], [0.675, [0.024, 0.512, 0.675]], [0.677, [0.035, 0.518, 0.678]], [0.679, [0.035, 0.518, 0.678]], [0.681, [0.047, 0.524, 0.682]], [0.683, [0.047, 0.524, 0.682]], [0.685, [0.059, 0.529, 0.686]], [0.687, [0.059, 0.529, 0.686]], [0.689, [0.071, 0.535, 0.690]], [0.691, [0.071, 0.535, 0.690]], [0.693, [0.082, 0.541, 0.694]], [0.695, [0.082, 0.541, 0.694]], [0.697, [0.094, 0.547, 0.698]], [0.699, [0.094, 0.547, 0.698]], [0.701, [0.106, 0.553, 0.702]], [0.703, [0.106, 0.553, 0.702]], [0.705, [0.118, 0.559, 0.706]], [0.706, [0.118, 0.559, 0.706]], [0.708, [0.129, 0.565, 0.710]], [0.710, [0.129, 0.565, 0.710]], [0.712, [0.141, 0.571, 0.714]], [0.714, [0.141, 0.571, 0.714]], [0.716, [0.153, 0.576, 0.718]], [0.718, [0.153, 0.576, 0.718]], [0.720, [0.165, 0.582, 0.722]], [0.722, [0.165, 0.582, 0.722]], [0.724, [0.176, 0.588, 0.725]], [0.726, [0.176, 0.588, 0.725]], [0.728, [0.188, 0.594, 0.729]], [0.730, [0.188, 0.594, 0.729]], [0.732, [0.200, 0.600, 0.733]], [0.734, [0.200, 0.600, 0.733]], [0.736, [0.212, 0.606, 0.737]], [0.738, [0.212, 0.606, 0.737]], [0.740, [0.224, 0.612, 0.741]], [0.742, [0.224, 0.612, 0.741]], [0.744, [0.235, 0.618, 0.745]], [0.746, [0.235, 0.618, 0.745]], [0.748, [0.247, 0.624, 0.749]], [0.750, [0.247, 0.624, 0.749]], [0.751, [0.259, 0.629, 0.753]], [0.753, [0.259, 0.629, 0.753]], [0.755, [0.271, 0.635, 0.757]], [0.757, [0.271, 0.635, 0.757]], [0.759, [0.282, 0.641, 0.761]], [0.761, [0.282, 0.641, 0.761]], [0.763, [0.294, 0.647, 0.765]], [0.765, [0.294, 0.647, 0.765]], [0.767, [0.306, 0.653, 0.769]], [0.769, [0.306, 0.653, 0.769]], [0.771, [0.318, 0.659, 0.773]], [0.773, [0.318, 0.659, 0.773]], [0.775, [0.329, 0.665, 0.776]], [0.777, [0.329, 0.665, 0.776]], [0.779, [0.341, 0.671, 0.780]], [0.781, [0.341, 0.671, 0.780]], [0.783, [0.353, 0.676, 0.784]], [0.785, [0.353, 0.676, 0.784]], [0.787, [0.365, 0.682, 0.788]], [0.789, [0.365, 0.682, 0.788]], [0.791, [0.376, 0.688, 0.792]], [0.793, [0.376, 0.688, 0.792]], [0.795, [0.388, 0.694, 0.796]], [0.796, [0.388, 0.694, 0.796]], [0.798, [0.400, 0.700, 0.800]], [0.800, [0.400, 0.700, 0.800]], [0.802, [0.412, 0.706, 0.804]], [0.804, [0.412, 0.706, 0.804]], [0.806, [0.424, 0.712, 0.808]], [0.808, [0.424, 0.712, 0.808]], [0.810, [0.435, 0.718, 0.812]], [0.812, [0.435, 0.718, 0.812]], [0.814, [0.447, 0.724, 0.816]], [0.816, [0.447, 0.724, 0.816]], [0.818, [0.459, 0.729, 0.820]], [0.820, [0.459, 0.729, 0.820]], [0.822, [0.471, 0.735, 0.824]], [0.824, [0.471, 0.735, 0.824]], [0.826, [0.482, 0.741, 0.827]], [0.828, [0.482, 0.741, 0.827]], [0.830, [0.494, 0.747, 0.831]], [0.832, [0.494, 0.747, 0.831]], [0.834, [0.506, 0.753, 0.835]], [0.836, [0.506, 0.753, 0.835]], [0.838, [0.518, 0.759, 0.839]], [0.840, [0.518, 0.759, 0.839]], [0.841, [0.529, 0.765, 0.843]], [0.843, [0.529, 0.765, 0.843]], [0.845, [0.541, 0.771, 0.847]], [0.847, [0.541, 0.771, 0.847]], [0.849, [0.553, 0.776, 0.851]], [0.851, [0.553, 0.776, 0.851]], [0.853, [0.565, 0.782, 0.855]], [0.855, [0.565, 0.782, 0.855]], [0.857, [0.576, 0.788, 0.859]], [0.859, [0.576, 0.788, 0.859]], [0.861, [0.588, 0.794, 0.863]], [0.863, [0.588, 0.794, 0.863]], [0.865, [0.600, 0.800, 0.867]], [0.867, [0.600, 0.800, 0.867]], [0.869, [0.612, 0.806, 0.871]], [0.871, [0.612, 0.806, 0.871]], [0.873, [0.624, 0.812, 0.875]], [0.875, [0.624, 0.812, 0.875]], [0.877, [0.635, 0.818, 0.878]], [0.879, [0.635, 0.818, 0.878]], [0.881, [0.647, 0.824, 0.882]], [0.883, [0.647, 0.824, 0.882]], [0.885, [0.659, 0.829, 0.886]], [0.886, [0.659, 0.829, 0.886]], [0.888, [0.671, 0.835, 0.890]], [0.890, [0.671, 0.835, 0.890]], [0.892, [0.682, 0.841, 0.894]], [0.894, [0.682, 0.841, 0.894]], [0.896, [0.694, 0.847, 0.898]], [0.898, [0.694, 0.847, 0.898]], [0.900, [0.706, 0.853, 0.902]], [0.902, [0.706, 0.853, 0.902]], [0.904, [0.718, 0.859, 0.906]], [0.906, [0.718, 0.859, 0.906]], [0.908, [0.729, 0.865, 0.910]], [0.910, [0.729, 0.865, 0.910]], [0.912, [0.741, 0.871, 0.914]], [0.914, [0.741, 0.871, 0.914]], [0.916, [0.753, 0.876, 0.918]], [0.918, [0.753, 0.876, 0.918]], [0.920, [0.765, 0.882, 0.922]], [0.922, [0.765, 0.882, 0.922]], [0.924, [0.776, 0.888, 0.925]], [0.926, [0.776, 0.888, 0.925]], [0.928, [0.788, 0.894, 0.929]], [0.930, [0.788, 0.894, 0.929]], [0.932, [0.800, 0.900, 0.933]], [0.933, [0.800, 0.900, 0.933]], [0.935, [0.812, 0.906, 0.937]], [0.937, [0.812, 0.906, 0.937]], [0.939, [0.824, 0.912, 0.941]], [0.941, [0.824, 0.912, 0.941]], [0.943, [0.835, 0.918, 0.945]], [0.945, [0.835, 0.918, 0.945]], [0.947, [0.847, 0.924, 0.949]], [0.949, [0.847, 0.924, 0.949]], [0.951, [0.859, 0.929, 0.953]], [0.953, [0.859, 0.929, 0.953]], [0.955, [0.871, 0.935, 0.957]], [0.957, [0.871, 0.935, 0.957]], [0.959, [0.882, 0.941, 0.961]], [0.961, [0.882, 0.941, 0.961]], [0.963, [0.894, 0.947, 0.965]], [0.965, [0.894, 0.947, 0.965]], [0.967, [0.906, 0.953, 0.969]], [0.969, [0.906, 0.953, 0.969]], [0.971, [0.918, 0.959, 0.973]], [0.973, [0.918, 0.959, 0.973]], [0.975, [0.929, 0.965, 0.976]], [0.977, [0.929, 0.965, 0.976]], [0.978, [0.941, 0.971, 0.980]], [0.980, [0.941, 0.971, 0.980]], [0.982, [0.953, 0.976, 0.984]], [0.984, [0.953, 0.976, 0.984]], [0.986, [0.965, 0.982, 0.988]], [0.988, [0.965, 0.982, 0.988]], [0.990, [0.976, 0.988, 0.992]], [0.992, [0.976, 0.988, 0.992]], [0.994, [0.988, 0.994, 0.996]], [0.996, [0.988, 0.994, 0.996]], [0.998, [1.000, 1.000, 1.000]], [1.000, [1.000, 1.000, 1.000]]];
H.colormap_Oranges = [[0.000, [1.000, 0.961, 0.922]], [0.002, [1.000, 0.961, 0.922]], [0.004, [1.000, 0.959, 0.918]], [0.006, [1.000, 0.959, 0.918]], [0.008, [1.000, 0.957, 0.914]], [0.010, [1.000, 0.957, 0.914]], [0.012, [1.000, 0.955, 0.911]], [0.014, [1.000, 0.955, 0.911]], [0.016, [1.000, 0.953, 0.907]], [0.018, [1.000, 0.953, 0.907]], [0.020, [0.999, 0.952, 0.904]], [0.022, [0.999, 0.952, 0.904]], [0.023, [0.999, 0.950, 0.900]], [0.025, [0.999, 0.950, 0.900]], [0.027, [0.999, 0.948, 0.897]], [0.029, [0.999, 0.948, 0.897]], [0.031, [0.999, 0.946, 0.893]], [0.033, [0.999, 0.946, 0.893]], [0.035, [0.999, 0.944, 0.889]], [0.037, [0.999, 0.944, 0.889]], [0.039, [0.999, 0.942, 0.886]], [0.041, [0.999, 0.942, 0.886]], [0.043, [0.999, 0.940, 0.882]], [0.045, [0.999, 0.940, 0.882]], [0.047, [0.999, 0.939, 0.879]], [0.049, [0.999, 0.939, 0.879]], [0.051, [0.998, 0.937, 0.875]], [0.053, [0.998, 0.937, 0.875]], [0.055, [0.998, 0.935, 0.872]], [0.057, [0.998, 0.935, 0.872]], [0.059, [0.998, 0.933, 0.868]], [0.061, [0.998, 0.933, 0.868]], [0.063, [0.998, 0.931, 0.864]], [0.065, [0.998, 0.931, 0.864]], [0.067, [0.998, 0.929, 0.861]], [0.068, [0.998, 0.929, 0.861]], [0.070, [0.998, 0.928, 0.857]], [0.072, [0.998, 0.928, 0.857]], [0.074, [0.998, 0.926, 0.854]], [0.076, [0.998, 0.926, 0.854]], [0.078, [0.998, 0.924, 0.850]], [0.080, [0.998, 0.924, 0.850]], [0.082, [0.997, 0.922, 0.847]], [0.084, [0.997, 0.922, 0.847]], [0.086, [0.997, 0.920, 0.843]], [0.088, [0.997, 0.920, 0.843]], [0.090, [0.997, 0.918, 0.840]], [0.092, [0.997, 0.918, 0.840]], [0.094, [0.997, 0.916, 0.836]], [0.096, [0.997, 0.916, 0.836]], [0.098, [0.997, 0.915, 0.832]], [0.100, [0.997, 0.915, 0.832]], [0.102, [0.997, 0.913, 0.829]], [0.104, [0.997, 0.913, 0.829]], [0.106, [0.997, 0.911, 0.825]], [0.108, [0.997, 0.911, 0.825]], [0.110, [0.997, 0.909, 0.822]], [0.112, [0.997, 0.909, 0.822]], [0.114, [0.996, 0.907, 0.818]], [0.115, [0.996, 0.907, 0.818]], [0.117, [0.996, 0.905, 0.815]], [0.119, [0.996, 0.905, 0.815]], [0.121, [0.996, 0.904, 0.811]], [0.123, [0.996, 0.904, 0.811]], [0.125, [0.996, 0.902, 0.807]], [0.127, [0.996, 0.902, 0.807]], [0.129, [0.996, 0.899, 0.802]], [0.131, [0.996, 0.899, 0.802]], [0.133, [0.996, 0.896, 0.796]], [0.135, [0.996, 0.896, 0.796]], [0.137, [0.996, 0.894, 0.791]], [0.139, [0.996, 0.894, 0.791]], [0.141, [0.996, 0.891, 0.786]], [0.143, [0.996, 0.891, 0.786]], [0.145, [0.995, 0.888, 0.780]], [0.147, [0.995, 0.888, 0.780]], [0.149, [0.995, 0.885, 0.775]], [0.151, [0.995, 0.885, 0.775]], [0.153, [0.995, 0.883, 0.769]], [0.155, [0.995, 0.883, 0.769]], [0.157, [0.995, 0.880, 0.764]], [0.159, [0.995, 0.880, 0.764]], [0.160, [0.995, 0.877, 0.758]], [0.162, [0.995, 0.877, 0.758]], [0.164, [0.995, 0.875, 0.753]], [0.166, [0.995, 0.875, 0.753]], [0.168, [0.995, 0.872, 0.748]], [0.170, [0.995, 0.872, 0.748]], [0.172, [0.995, 0.869, 0.742]], [0.174, [0.995, 0.869, 0.742]], [0.176, [0.994, 0.866, 0.737]], [0.178, [0.994, 0.866, 0.737]], [0.180, [0.994, 0.864, 0.731]], [0.182, [0.994, 0.864, 0.731]], [0.184, [0.994, 0.861, 0.726]], [0.186, [0.994, 0.861, 0.726]], [0.188, [0.994, 0.858, 0.721]], [0.190, [0.994, 0.858, 0.721]], [0.192, [0.994, 0.856, 0.715]], [0.194, [0.994, 0.856, 0.715]], [0.196, [0.994, 0.853, 0.710]], [0.198, [0.994, 0.853, 0.710]], [0.200, [0.994, 0.850, 0.704]], [0.202, [0.994, 0.850, 0.704]], [0.204, [0.994, 0.847, 0.699]], [0.205, [0.994, 0.847, 0.699]], [0.207, [0.993, 0.845, 0.693]], [0.209, [0.993, 0.845, 0.693]], [0.211, [0.993, 0.842, 0.688]], [0.213, [0.993, 0.842, 0.688]], [0.215, [0.993, 0.839, 0.683]], [0.217, [0.993, 0.839, 0.683]], [0.219, [0.993, 0.837, 0.677]], [0.221, [0.993, 0.837, 0.677]], [0.223, [0.993, 0.834, 0.672]], [0.225, [0.993, 0.834, 0.672]], [0.227, [0.993, 0.831, 0.666]], [0.229, [0.993, 0.831, 0.666]], [0.231, [0.993, 0.829, 0.661]], [0.233, [0.993, 0.829, 0.661]], [0.235, [0.993, 0.826, 0.656]], [0.237, [0.993, 0.826, 0.656]], [0.239, [0.992, 0.823, 0.650]], [0.241, [0.992, 0.823, 0.650]], [0.243, [0.992, 0.820, 0.645]], [0.245, [0.992, 0.820, 0.645]], [0.247, [0.992, 0.818, 0.639]], [0.249, [0.992, 0.818, 0.639]], [0.250, [0.992, 0.815, 0.634]], [0.252, [0.992, 0.815, 0.634]], [0.254, [0.992, 0.810, 0.627]], [0.256, [0.992, 0.810, 0.627]], [0.258, [0.992, 0.806, 0.620]], [0.260, [0.992, 0.806, 0.620]], [0.262, [0.992, 0.802, 0.613]], [0.264, [0.992, 0.802, 0.613]], [0.266, [0.992, 0.798, 0.607]], [0.268, [0.992, 0.798, 0.607]], [0.270, [0.992, 0.794, 0.600]], [0.272, [0.992, 0.794, 0.600]], [0.274, [0.992, 0.790, 0.593]], [0.276, [0.992, 0.790, 0.593]], [0.278, [0.992, 0.785, 0.586]], [0.280, [0.992, 0.785, 0.586]], [0.282, [0.992, 0.781, 0.579]], [0.284, [0.992, 0.781, 0.579]], [0.286, [0.992, 0.777, 0.573]], [0.288, [0.992, 0.777, 0.573]], [0.290, [0.992, 0.773, 0.566]], [0.292, [0.992, 0.773, 0.566]], [0.294, [0.992, 0.769, 0.559]], [0.295, [0.992, 0.769, 0.559]], [0.297, [0.992, 0.764, 0.552]], [0.299, [0.992, 0.764, 0.552]], [0.301, [0.992, 0.760, 0.546]], [0.303, [0.992, 0.760, 0.546]], [0.305, [0.992, 0.756, 0.539]], [0.307, [0.992, 0.756, 0.539]], [0.309, [0.992, 0.752, 0.532]], [0.311, [0.992, 0.752, 0.532]], [0.313, [0.992, 0.748, 0.525]], [0.315, [0.992, 0.748, 0.525]], [0.317, [0.992, 0.744, 0.519]], [0.319, [0.992, 0.744, 0.519]], [0.321, [0.992, 0.739, 0.512]], [0.323, [0.992, 0.739, 0.512]], [0.325, [0.992, 0.735, 0.505]], [0.327, [0.992, 0.735, 0.505]], [0.329, [0.992, 0.731, 0.498]], [0.331, [0.992, 0.731, 0.498]], [0.333, [0.992, 0.727, 0.492]], [0.335, [0.992, 0.727, 0.492]], [0.337, [0.992, 0.723, 0.485]], [0.339, [0.992, 0.723, 0.485]], [0.341, [0.992, 0.718, 0.478]], [0.342, [0.992, 0.718, 0.478]], [0.344, [0.992, 0.714, 0.471]], [0.346, [0.992, 0.714, 0.471]], [0.348, [0.992, 0.710, 0.464]], [0.350, [0.992, 0.710, 0.464]], [0.352, [0.992, 0.706, 0.458]], [0.354, [0.992, 0.706, 0.458]], [0.356, [0.992, 0.702, 0.451]], [0.358, [0.992, 0.702, 0.451]], [0.360, [0.992, 0.698, 0.444]], [0.362, [0.992, 0.698, 0.444]], [0.364, [0.992, 0.693, 0.437]], [0.366, [0.992, 0.693, 0.437]], [0.368, [0.992, 0.689, 0.431]], [0.370, [0.992, 0.689, 0.431]], [0.372, [0.992, 0.685, 0.424]], [0.374, [0.992, 0.685, 0.424]], [0.376, [0.992, 0.681, 0.417]], [0.378, [0.992, 0.681, 0.417]], [0.380, [0.992, 0.677, 0.412]], [0.382, [0.992, 0.677, 0.412]], [0.384, [0.992, 0.673, 0.406]], [0.386, [0.992, 0.673, 0.406]], [0.387, [0.992, 0.669, 0.400]], [0.389, [0.992, 0.669, 0.400]], [0.391, [0.992, 0.665, 0.394]], [0.393, [0.992, 0.665, 0.394]], [0.395, [0.992, 0.661, 0.389]], [0.397, [0.992, 0.661, 0.389]], [0.399, [0.992, 0.656, 0.383]], [0.401, [0.992, 0.656, 0.383]], [0.403, [0.992, 0.652, 0.377]], [0.405, [0.992, 0.652, 0.377]], [0.407, [0.992, 0.648, 0.371]], [0.409, [0.992, 0.648, 0.371]], [0.411, [0.992, 0.644, 0.365]], [0.413, [0.992, 0.644, 0.365]], [0.415, [0.992, 0.640, 0.360]], [0.417, [0.992, 0.640, 0.360]], [0.419, [0.992, 0.636, 0.354]], [0.421, [0.992, 0.636, 0.354]], [0.423, [0.992, 0.632, 0.348]], [0.425, [0.992, 0.632, 0.348]], [0.427, [0.992, 0.628, 0.342]], [0.429, [0.992, 0.628, 0.342]], [0.431, [0.992, 0.624, 0.336]], [0.432, [0.992, 0.624, 0.336]], [0.434, [0.992, 0.620, 0.331]], [0.436, [0.992, 0.620, 0.331]], [0.438, [0.992, 0.616, 0.325]], [0.440, [0.992, 0.616, 0.325]], [0.442, [0.992, 0.612, 0.319]], [0.444, [0.992, 0.612, 0.319]], [0.446, [0.992, 0.608, 0.313]], [0.448, [0.992, 0.608, 0.313]], [0.450, [0.992, 0.604, 0.308]], [0.452, [0.992, 0.604, 0.308]], [0.454, [0.992, 0.600, 0.302]], [0.456, [0.992, 0.600, 0.302]], [0.458, [0.992, 0.596, 0.296]], [0.460, [0.992, 0.596, 0.296]], [0.462, [0.992, 0.592, 0.290]], [0.464, [0.992, 0.592, 0.290]], [0.466, [0.992, 0.587, 0.284]], [0.468, [0.992, 0.587, 0.284]], [0.470, [0.992, 0.583, 0.279]], [0.472, [0.992, 0.583, 0.279]], [0.474, [0.992, 0.579, 0.273]], [0.476, [0.992, 0.579, 0.273]], [0.477, [0.992, 0.575, 0.267]], [0.479, [0.992, 0.575, 0.267]], [0.481, [0.992, 0.571, 0.261]], [0.483, [0.992, 0.571, 0.261]], [0.485, [0.992, 0.567, 0.256]], [0.487, [0.992, 0.567, 0.256]], [0.489, [0.992, 0.563, 0.250]], [0.491, [0.992, 0.563, 0.250]], [0.493, [0.992, 0.559, 0.244]], [0.495, [0.992, 0.559, 0.244]], [0.497, [0.992, 0.555, 0.238]], [0.499, [0.992, 0.555, 0.238]], [0.501, [0.991, 0.551, 0.233]], [0.503, [0.991, 0.551, 0.233]], [0.505, [0.990, 0.546, 0.228]], [0.507, [0.990, 0.546, 0.228]], [0.509, [0.988, 0.542, 0.223]], [0.511, [0.988, 0.542, 0.223]], [0.513, [0.987, 0.537, 0.218]], [0.515, [0.987, 0.537, 0.218]], [0.517, [0.986, 0.533, 0.213]], [0.519, [0.986, 0.533, 0.213]], [0.521, [0.984, 0.529, 0.208]], [0.523, [0.984, 0.529, 0.208]], [0.524, [0.983, 0.524, 0.203]], [0.526, [0.983, 0.524, 0.203]], [0.528, [0.981, 0.520, 0.197]], [0.530, [0.981, 0.520, 0.197]], [0.532, [0.980, 0.515, 0.192]], [0.534, [0.980, 0.515, 0.192]], [0.536, [0.978, 0.511, 0.187]], [0.538, [0.978, 0.511, 0.187]], [0.540, [0.977, 0.506, 0.182]], [0.542, [0.977, 0.506, 0.182]], [0.544, [0.975, 0.502, 0.177]], [0.546, [0.975, 0.502, 0.177]], [0.548, [0.974, 0.498, 0.172]], [0.550, [0.974, 0.498, 0.172]], [0.552, [0.972, 0.493, 0.167]], [0.554, [0.972, 0.493, 0.167]], [0.556, [0.971, 0.489, 0.162]], [0.558, [0.971, 0.489, 0.162]], [0.560, [0.969, 0.484, 0.157]], [0.562, [0.969, 0.484, 0.157]], [0.564, [0.968, 0.480, 0.152]], [0.566, [0.968, 0.480, 0.152]], [0.568, [0.966, 0.475, 0.147]], [0.569, [0.966, 0.475, 0.147]], [0.571, [0.965, 0.471, 0.142]], [0.573, [0.965, 0.471, 0.142]], [0.575, [0.963, 0.467, 0.137]], [0.577, [0.963, 0.467, 0.137]], [0.579, [0.962, 0.462, 0.132]], [0.581, [0.962, 0.462, 0.132]], [0.583, [0.960, 0.458, 0.127]], [0.585, [0.960, 0.458, 0.127]], [0.587, [0.959, 0.453, 0.122]], [0.589, [0.959, 0.453, 0.122]], [0.591, [0.957, 0.449, 0.117]], [0.593, [0.957, 0.449, 0.117]], [0.595, [0.956, 0.444, 0.112]], [0.597, [0.956, 0.444, 0.112]], [0.599, [0.955, 0.440, 0.107]], [0.601, [0.955, 0.440, 0.107]], [0.603, [0.953, 0.436, 0.102]], [0.605, [0.953, 0.436, 0.102]], [0.607, [0.952, 0.431, 0.097]], [0.609, [0.952, 0.431, 0.097]], [0.611, [0.950, 0.427, 0.092]], [0.613, [0.950, 0.427, 0.092]], [0.614, [0.949, 0.422, 0.086]], [0.616, [0.949, 0.422, 0.086]], [0.618, [0.947, 0.418, 0.081]], [0.620, [0.947, 0.418, 0.081]], [0.622, [0.946, 0.413, 0.076]], [0.624, [0.946, 0.413, 0.076]], [0.626, [0.943, 0.409, 0.073]], [0.628, [0.943, 0.409, 0.073]], [0.630, [0.940, 0.405, 0.071]], [0.632, [0.940, 0.405, 0.071]], [0.634, [0.937, 0.401, 0.069]], [0.636, [0.937, 0.401, 0.069]], [0.638, [0.934, 0.397, 0.066]], [0.640, [0.934, 0.397, 0.066]], [0.642, [0.931, 0.393, 0.064]], [0.644, [0.931, 0.393, 0.064]], [0.646, [0.928, 0.389, 0.062]], [0.648, [0.928, 0.389, 0.062]], [0.650, [0.926, 0.385, 0.060]], [0.652, [0.926, 0.385, 0.060]], [0.654, [0.923, 0.381, 0.058]], [0.656, [0.923, 0.381, 0.058]], [0.658, [0.920, 0.377, 0.055]], [0.659, [0.920, 0.377, 0.055]], [0.661, [0.917, 0.373, 0.053]], [0.663, [0.917, 0.373, 0.053]], [0.665, [0.914, 0.369, 0.051]], [0.667, [0.914, 0.369, 0.051]], [0.669, [0.911, 0.365, 0.049]], [0.671, [0.911, 0.365, 0.049]], [0.673, [0.908, 0.361, 0.047]], [0.675, [0.908, 0.361, 0.047]], [0.677, [0.905, 0.356, 0.044]], [0.679, [0.905, 0.356, 0.044]], [0.681, [0.902, 0.352, 0.042]], [0.683, [0.902, 0.352, 0.042]], [0.685, [0.899, 0.348, 0.040]], [0.687, [0.899, 0.348, 0.040]], [0.689, [0.896, 0.344, 0.038]], [0.691, [0.896, 0.344, 0.038]], [0.693, [0.893, 0.340, 0.035]], [0.695, [0.893, 0.340, 0.035]], [0.697, [0.890, 0.336, 0.033]], [0.699, [0.890, 0.336, 0.033]], [0.701, [0.887, 0.332, 0.031]], [0.703, [0.887, 0.332, 0.031]], [0.705, [0.884, 0.328, 0.029]], [0.706, [0.884, 0.328, 0.029]], [0.708, [0.881, 0.324, 0.027]], [0.710, [0.881, 0.324, 0.027]], [0.712, [0.878, 0.320, 0.024]], [0.714, [0.878, 0.320, 0.024]], [0.716, [0.875, 0.316, 0.022]], [0.718, [0.875, 0.316, 0.022]], [0.720, [0.872, 0.312, 0.020]], [0.722, [0.872, 0.312, 0.020]], [0.724, [0.869, 0.308, 0.018]], [0.726, [0.869, 0.308, 0.018]], [0.728, [0.866, 0.304, 0.016]], [0.730, [0.866, 0.304, 0.016]], [0.732, [0.864, 0.300, 0.013]], [0.734, [0.864, 0.300, 0.013]], [0.736, [0.861, 0.296, 0.011]], [0.738, [0.861, 0.296, 0.011]], [0.740, [0.858, 0.291, 0.009]], [0.742, [0.858, 0.291, 0.009]], [0.744, [0.855, 0.287, 0.007]], [0.746, [0.855, 0.287, 0.007]], [0.748, [0.852, 0.283, 0.004]], [0.750, [0.852, 0.283, 0.004]], [0.751, [0.846, 0.281, 0.004]], [0.753, [0.846, 0.281, 0.004]], [0.755, [0.840, 0.278, 0.004]], [0.757, [0.840, 0.278, 0.004]], [0.759, [0.834, 0.276, 0.005]], [0.761, [0.834, 0.276, 0.005]], [0.763, [0.827, 0.274, 0.005]], [0.765, [0.827, 0.274, 0.005]], [0.767, [0.821, 0.272, 0.005]], [0.769, [0.821, 0.272, 0.005]], [0.771, [0.815, 0.270, 0.005]], [0.773, [0.815, 0.270, 0.005]], [0.775, [0.809, 0.267, 0.006]], [0.777, [0.809, 0.267, 0.006]], [0.779, [0.802, 0.265, 0.006]], [0.781, [0.802, 0.265, 0.006]], [0.783, [0.796, 0.263, 0.006]], [0.785, [0.796, 0.263, 0.006]], [0.787, [0.790, 0.261, 0.006]], [0.789, [0.790, 0.261, 0.006]], [0.791, [0.784, 0.259, 0.007]], [0.793, [0.784, 0.259, 0.007]], [0.795, [0.777, 0.256, 0.007]], [0.796, [0.777, 0.256, 0.007]], [0.798, [0.771, 0.254, 0.007]], [0.800, [0.771, 0.254, 0.007]], [0.802, [0.765, 0.252, 0.007]], [0.804, [0.765, 0.252, 0.007]], [0.806, [0.758, 0.250, 0.008]], [0.808, [0.758, 0.250, 0.008]], [0.810, [0.752, 0.247, 0.008]], [0.812, [0.752, 0.247, 0.008]], [0.814, [0.746, 0.245, 0.008]], [0.816, [0.746, 0.245, 0.008]], [0.818, [0.740, 0.243, 0.008]], [0.820, [0.740, 0.243, 0.008]], [0.822, [0.733, 0.241, 0.009]], [0.824, [0.733, 0.241, 0.009]], [0.826, [0.727, 0.239, 0.009]], [0.828, [0.727, 0.239, 0.009]], [0.830, [0.721, 0.236, 0.009]], [0.832, [0.721, 0.236, 0.009]], [0.834, [0.715, 0.234, 0.009]], [0.836, [0.715, 0.234, 0.009]], [0.838, [0.708, 0.232, 0.010]], [0.840, [0.708, 0.232, 0.010]], [0.841, [0.702, 0.230, 0.010]], [0.843, [0.702, 0.230, 0.010]], [0.845, [0.696, 0.228, 0.010]], [0.847, [0.696, 0.228, 0.010]], [0.849, [0.689, 0.225, 0.010]], [0.851, [0.689, 0.225, 0.010]], [0.853, [0.683, 0.223, 0.011]], [0.855, [0.683, 0.223, 0.011]], [0.857, [0.677, 0.221, 0.011]], [0.859, [0.677, 0.221, 0.011]], [0.861, [0.671, 0.219, 0.011]], [0.863, [0.671, 0.219, 0.011]], [0.865, [0.664, 0.216, 0.011]], [0.867, [0.664, 0.216, 0.011]], [0.869, [0.658, 0.214, 0.011]], [0.871, [0.658, 0.214, 0.011]], [0.873, [0.652, 0.212, 0.012]], [0.875, [0.652, 0.212, 0.012]], [0.877, [0.647, 0.210, 0.012]], [0.879, [0.647, 0.210, 0.012]], [0.881, [0.642, 0.208, 0.012]], [0.883, [0.642, 0.208, 0.012]], [0.885, [0.637, 0.206, 0.012]], [0.886, [0.637, 0.206, 0.012]], [0.888, [0.632, 0.205, 0.012]], [0.890, [0.632, 0.205, 0.012]], [0.892, [0.628, 0.203, 0.012]], [0.894, [0.628, 0.203, 0.012]], [0.896, [0.623, 0.201, 0.012]], [0.898, [0.623, 0.201, 0.012]], [0.900, [0.618, 0.199, 0.013]], [0.902, [0.618, 0.199, 0.013]], [0.904, [0.613, 0.197, 0.013]], [0.906, [0.613, 0.197, 0.013]], [0.908, [0.608, 0.195, 0.013]], [0.910, [0.608, 0.195, 0.013]], [0.912, [0.604, 0.194, 0.013]], [0.914, [0.604, 0.194, 0.013]], [0.916, [0.599, 0.192, 0.013]], [0.918, [0.599, 0.192, 0.013]], [0.920, [0.594, 0.190, 0.013]], [0.922, [0.594, 0.190, 0.013]], [0.924, [0.589, 0.188, 0.013]], [0.926, [0.589, 0.188, 0.013]], [0.928, [0.584, 0.186, 0.013]], [0.930, [0.584, 0.186, 0.013]], [0.932, [0.580, 0.184, 0.014]], [0.933, [0.580, 0.184, 0.014]], [0.935, [0.575, 0.182, 0.014]], [0.937, [0.575, 0.182, 0.014]], [0.939, [0.570, 0.181, 0.014]], [0.941, [0.570, 0.181, 0.014]], [0.943, [0.565, 0.179, 0.014]], [0.945, [0.565, 0.179, 0.014]], [0.947, [0.560, 0.177, 0.014]], [0.949, [0.560, 0.177, 0.014]], [0.951, [0.556, 0.175, 0.014]], [0.953, [0.556, 0.175, 0.014]], [0.955, [0.551, 0.173, 0.014]], [0.957, [0.551, 0.173, 0.014]], [0.959, [0.546, 0.171, 0.014]], [0.961, [0.546, 0.171, 0.014]], [0.963, [0.541, 0.170, 0.015]], [0.965, [0.541, 0.170, 0.015]], [0.967, [0.536, 0.168, 0.015]], [0.969, [0.536, 0.168, 0.015]], [0.971, [0.532, 0.166, 0.015]], [0.973, [0.532, 0.166, 0.015]], [0.975, [0.527, 0.164, 0.015]], [0.977, [0.527, 0.164, 0.015]], [0.978, [0.522, 0.162, 0.015]], [0.980, [0.522, 0.162, 0.015]], [0.982, [0.517, 0.160, 0.015]], [0.984, [0.517, 0.160, 0.015]], [0.986, [0.512, 0.158, 0.015]], [0.988, [0.512, 0.158, 0.015]], [0.990, [0.508, 0.157, 0.015]], [0.992, [0.508, 0.157, 0.015]], [0.994, [0.503, 0.155, 0.016]], [0.996, [0.503, 0.155, 0.016]], [0.998, [0.498, 0.153, 0.016]], [1.000, [0.498, 0.153, 0.016]]];
H.colormap_OrRd = [[0.000, [1.000, 0.969, 0.925]], [0.002, [1.000, 0.969, 0.925]], [0.004, [1.000, 0.967, 0.921]], [0.006, [1.000, 0.967, 0.921]], [0.008, [1.000, 0.965, 0.917]], [0.010, [1.000, 0.965, 0.917]], [0.012, [1.000, 0.963, 0.912]], [0.014, [1.000, 0.963, 0.912]], [0.016, [1.000, 0.961, 0.908]], [0.018, [1.000, 0.961, 0.908]], [0.020, [0.999, 0.959, 0.903]], [0.022, [0.999, 0.959, 0.903]], [0.023, [0.999, 0.958, 0.899]], [0.025, [0.999, 0.958, 0.899]], [0.027, [0.999, 0.956, 0.894]], [0.029, [0.999, 0.956, 0.894]], [0.031, [0.999, 0.954, 0.890]], [0.033, [0.999, 0.954, 0.890]], [0.035, [0.999, 0.952, 0.886]], [0.037, [0.999, 0.952, 0.886]], [0.039, [0.999, 0.950, 0.881]], [0.041, [0.999, 0.950, 0.881]], [0.043, [0.999, 0.948, 0.877]], [0.045, [0.999, 0.948, 0.877]], [0.047, [0.999, 0.946, 0.872]], [0.049, [0.999, 0.946, 0.872]], [0.051, [0.998, 0.945, 0.868]], [0.053, [0.998, 0.945, 0.868]], [0.055, [0.998, 0.943, 0.863]], [0.057, [0.998, 0.943, 0.863]], [0.059, [0.998, 0.941, 0.859]], [0.061, [0.998, 0.941, 0.859]], [0.063, [0.998, 0.939, 0.855]], [0.065, [0.998, 0.939, 0.855]], [0.067, [0.998, 0.937, 0.850]], [0.068, [0.998, 0.937, 0.850]], [0.070, [0.998, 0.935, 0.846]], [0.072, [0.998, 0.935, 0.846]], [0.074, [0.998, 0.934, 0.841]], [0.076, [0.998, 0.934, 0.841]], [0.078, [0.998, 0.932, 0.837]], [0.080, [0.998, 0.932, 0.837]], [0.082, [0.997, 0.930, 0.832]], [0.084, [0.997, 0.930, 0.832]], [0.086, [0.997, 0.928, 0.828]], [0.088, [0.997, 0.928, 0.828]], [0.090, [0.997, 0.926, 0.824]], [0.092, [0.997, 0.926, 0.824]], [0.094, [0.997, 0.924, 0.819]], [0.096, [0.997, 0.924, 0.819]], [0.098, [0.997, 0.922, 0.815]], [0.100, [0.997, 0.922, 0.815]], [0.102, [0.997, 0.921, 0.810]], [0.104, [0.997, 0.921, 0.810]], [0.106, [0.997, 0.919, 0.806]], [0.108, [0.997, 0.919, 0.806]], [0.110, [0.997, 0.917, 0.801]], [0.112, [0.997, 0.917, 0.801]], [0.114, [0.996, 0.915, 0.797]], [0.115, [0.996, 0.915, 0.797]], [0.117, [0.996, 0.913, 0.793]], [0.119, [0.996, 0.913, 0.793]], [0.121, [0.996, 0.911, 0.788]], [0.123, [0.996, 0.911, 0.788]], [0.125, [0.996, 0.909, 0.784]], [0.127, [0.996, 0.909, 0.784]], [0.129, [0.996, 0.907, 0.779]], [0.131, [0.996, 0.907, 0.779]], [0.133, [0.996, 0.905, 0.773]], [0.135, [0.996, 0.905, 0.773]], [0.137, [0.996, 0.902, 0.768]], [0.139, [0.996, 0.902, 0.768]], [0.141, [0.996, 0.900, 0.763]], [0.143, [0.996, 0.900, 0.763]], [0.145, [0.995, 0.897, 0.758]], [0.147, [0.995, 0.897, 0.758]], [0.149, [0.995, 0.895, 0.753]], [0.151, [0.995, 0.895, 0.753]], [0.153, [0.995, 0.892, 0.747]], [0.155, [0.995, 0.892, 0.747]], [0.157, [0.995, 0.890, 0.742]], [0.159, [0.995, 0.890, 0.742]], [0.160, [0.995, 0.887, 0.737]], [0.162, [0.995, 0.887, 0.737]], [0.164, [0.995, 0.885, 0.732]], [0.166, [0.995, 0.885, 0.732]], [0.168, [0.995, 0.882, 0.727]], [0.170, [0.995, 0.882, 0.727]], [0.172, [0.995, 0.880, 0.722]], [0.174, [0.995, 0.880, 0.722]], [0.176, [0.994, 0.878, 0.716]], [0.178, [0.994, 0.878, 0.716]], [0.180, [0.994, 0.875, 0.711]], [0.182, [0.994, 0.875, 0.711]], [0.184, [0.994, 0.873, 0.706]], [0.186, [0.994, 0.873, 0.706]], [0.188, [0.994, 0.870, 0.701]], [0.190, [0.994, 0.870, 0.701]], [0.192, [0.994, 0.868, 0.696]], [0.194, [0.994, 0.868, 0.696]], [0.196, [0.994, 0.865, 0.691]], [0.198, [0.994, 0.865, 0.691]], [0.200, [0.994, 0.863, 0.685]], [0.202, [0.994, 0.863, 0.685]], [0.204, [0.994, 0.860, 0.680]], [0.205, [0.994, 0.860, 0.680]], [0.207, [0.993, 0.858, 0.675]], [0.209, [0.993, 0.858, 0.675]], [0.211, [0.993, 0.855, 0.670]], [0.213, [0.993, 0.855, 0.670]], [0.215, [0.993, 0.853, 0.665]], [0.217, [0.993, 0.853, 0.665]], [0.219, [0.993, 0.850, 0.660]], [0.221, [0.993, 0.850, 0.660]], [0.223, [0.993, 0.848, 0.654]], [0.225, [0.993, 0.848, 0.654]], [0.227, [0.993, 0.846, 0.649]], [0.229, [0.993, 0.846, 0.649]], [0.231, [0.993, 0.843, 0.644]], [0.233, [0.993, 0.843, 0.644]], [0.235, [0.993, 0.841, 0.639]], [0.237, [0.993, 0.841, 0.639]], [0.239, [0.992, 0.838, 0.634]], [0.241, [0.992, 0.838, 0.634]], [0.243, [0.992, 0.836, 0.629]], [0.245, [0.992, 0.836, 0.629]], [0.247, [0.992, 0.833, 0.623]], [0.249, [0.992, 0.833, 0.623]], [0.250, [0.992, 0.831, 0.619]], [0.252, [0.992, 0.831, 0.619]], [0.254, [0.992, 0.828, 0.616]], [0.256, [0.992, 0.828, 0.616]], [0.258, [0.992, 0.824, 0.612]], [0.260, [0.992, 0.824, 0.612]], [0.262, [0.992, 0.821, 0.609]], [0.264, [0.992, 0.821, 0.609]], [0.266, [0.992, 0.818, 0.606]], [0.268, [0.992, 0.818, 0.606]], [0.270, [0.992, 0.815, 0.603]], [0.272, [0.992, 0.815, 0.603]], [0.274, [0.992, 0.812, 0.600]], [0.276, [0.992, 0.812, 0.600]], [0.278, [0.992, 0.809, 0.596]], [0.280, [0.992, 0.809, 0.596]], [0.282, [0.992, 0.806, 0.593]], [0.284, [0.992, 0.806, 0.593]], [0.286, [0.992, 0.803, 0.590]], [0.288, [0.992, 0.803, 0.590]], [0.290, [0.992, 0.800, 0.587]], [0.292, [0.992, 0.800, 0.587]], [0.294, [0.992, 0.797, 0.584]], [0.295, [0.992, 0.797, 0.584]], [0.297, [0.992, 0.794, 0.580]], [0.299, [0.992, 0.794, 0.580]], [0.301, [0.992, 0.791, 0.577]], [0.303, [0.992, 0.791, 0.577]], [0.305, [0.992, 0.788, 0.574]], [0.307, [0.992, 0.788, 0.574]], [0.309, [0.992, 0.784, 0.571]], [0.311, [0.992, 0.784, 0.571]], [0.313, [0.992, 0.781, 0.568]], [0.315, [0.992, 0.781, 0.568]], [0.317, [0.992, 0.778, 0.564]], [0.319, [0.992, 0.778, 0.564]], [0.321, [0.992, 0.775, 0.561]], [0.323, [0.992, 0.775, 0.561]], [0.325, [0.992, 0.772, 0.558]], [0.327, [0.992, 0.772, 0.558]], [0.329, [0.992, 0.769, 0.555]], [0.331, [0.992, 0.769, 0.555]], [0.333, [0.992, 0.766, 0.552]], [0.335, [0.992, 0.766, 0.552]], [0.337, [0.992, 0.763, 0.548]], [0.339, [0.992, 0.763, 0.548]], [0.341, [0.992, 0.760, 0.545]], [0.342, [0.992, 0.760, 0.545]], [0.344, [0.992, 0.757, 0.542]], [0.346, [0.992, 0.757, 0.542]], [0.348, [0.992, 0.754, 0.539]], [0.350, [0.992, 0.754, 0.539]], [0.352, [0.992, 0.751, 0.536]], [0.354, [0.992, 0.751, 0.536]], [0.356, [0.992, 0.748, 0.532]], [0.358, [0.992, 0.748, 0.532]], [0.360, [0.992, 0.744, 0.529]], [0.362, [0.992, 0.744, 0.529]], [0.364, [0.992, 0.741, 0.526]], [0.366, [0.992, 0.741, 0.526]], [0.368, [0.992, 0.738, 0.523]], [0.370, [0.992, 0.738, 0.523]], [0.372, [0.992, 0.735, 0.520]], [0.374, [0.992, 0.735, 0.520]], [0.376, [0.992, 0.731, 0.516]], [0.378, [0.992, 0.731, 0.516]], [0.380, [0.992, 0.726, 0.510]], [0.382, [0.992, 0.726, 0.510]], [0.384, [0.992, 0.720, 0.505]], [0.386, [0.992, 0.720, 0.505]], [0.387, [0.992, 0.714, 0.500]], [0.389, [0.992, 0.714, 0.500]], [0.391, [0.992, 0.709, 0.495]], [0.393, [0.992, 0.709, 0.495]], [0.395, [0.991, 0.703, 0.489]], [0.397, [0.991, 0.703, 0.489]], [0.399, [0.991, 0.697, 0.484]], [0.401, [0.991, 0.697, 0.484]], [0.403, [0.991, 0.692, 0.479]], [0.405, [0.991, 0.692, 0.479]], [0.407, [0.991, 0.686, 0.473]], [0.409, [0.991, 0.686, 0.473]], [0.411, [0.991, 0.680, 0.468]], [0.413, [0.991, 0.680, 0.468]], [0.415, [0.991, 0.675, 0.463]], [0.417, [0.991, 0.675, 0.463]], [0.419, [0.991, 0.669, 0.457]], [0.421, [0.991, 0.669, 0.457]], [0.423, [0.991, 0.663, 0.452]], [0.425, [0.991, 0.663, 0.452]], [0.427, [0.991, 0.658, 0.447]], [0.429, [0.991, 0.658, 0.447]], [0.431, [0.990, 0.652, 0.442]], [0.432, [0.990, 0.652, 0.442]], [0.434, [0.990, 0.646, 0.436]], [0.436, [0.990, 0.646, 0.436]], [0.438, [0.990, 0.641, 0.431]], [0.440, [0.990, 0.641, 0.431]], [0.442, [0.990, 0.635, 0.426]], [0.444, [0.990, 0.635, 0.426]], [0.446, [0.990, 0.629, 0.420]], [0.448, [0.990, 0.629, 0.420]], [0.450, [0.990, 0.624, 0.415]], [0.452, [0.990, 0.624, 0.415]], [0.454, [0.990, 0.618, 0.410]], [0.456, [0.990, 0.618, 0.410]], [0.458, [0.990, 0.612, 0.405]], [0.460, [0.990, 0.612, 0.405]], [0.462, [0.989, 0.607, 0.399]], [0.464, [0.989, 0.607, 0.399]], [0.466, [0.989, 0.601, 0.394]], [0.468, [0.989, 0.601, 0.394]], [0.470, [0.989, 0.595, 0.389]], [0.472, [0.989, 0.595, 0.389]], [0.474, [0.989, 0.590, 0.383]], [0.476, [0.989, 0.590, 0.383]], [0.477, [0.989, 0.584, 0.378]], [0.479, [0.989, 0.584, 0.378]], [0.481, [0.989, 0.578, 0.373]], [0.483, [0.989, 0.578, 0.373]], [0.485, [0.989, 0.573, 0.368]], [0.487, [0.989, 0.573, 0.368]], [0.489, [0.989, 0.567, 0.362]], [0.491, [0.989, 0.567, 0.362]], [0.493, [0.988, 0.561, 0.357]], [0.495, [0.988, 0.561, 0.357]], [0.497, [0.988, 0.556, 0.352]], [0.499, [0.988, 0.556, 0.352]], [0.501, [0.987, 0.550, 0.348]], [0.503, [0.987, 0.550, 0.348]], [0.505, [0.986, 0.546, 0.346]], [0.507, [0.986, 0.546, 0.346]], [0.509, [0.984, 0.541, 0.344]], [0.511, [0.984, 0.541, 0.344]], [0.513, [0.983, 0.536, 0.342]], [0.515, [0.983, 0.536, 0.342]], [0.517, [0.981, 0.531, 0.340]], [0.519, [0.981, 0.531, 0.340]], [0.521, [0.979, 0.526, 0.338]], [0.523, [0.979, 0.526, 0.338]], [0.524, [0.978, 0.521, 0.335]], [0.526, [0.978, 0.521, 0.335]], [0.528, [0.976, 0.516, 0.333]], [0.530, [0.976, 0.516, 0.333]], [0.532, [0.975, 0.511, 0.331]], [0.534, [0.975, 0.511, 0.331]], [0.536, [0.973, 0.506, 0.329]], [0.538, [0.973, 0.506, 0.329]], [0.540, [0.971, 0.501, 0.327]], [0.542, [0.971, 0.501, 0.327]], [0.544, [0.970, 0.496, 0.325]], [0.546, [0.970, 0.496, 0.325]], [0.548, [0.968, 0.491, 0.323]], [0.550, [0.968, 0.491, 0.323]], [0.552, [0.967, 0.487, 0.321]], [0.554, [0.967, 0.487, 0.321]], [0.556, [0.965, 0.482, 0.319]], [0.558, [0.965, 0.482, 0.319]], [0.560, [0.963, 0.477, 0.317]], [0.562, [0.963, 0.477, 0.317]], [0.564, [0.962, 0.472, 0.315]], [0.566, [0.962, 0.472, 0.315]], [0.568, [0.960, 0.467, 0.312]], [0.569, [0.960, 0.467, 0.312]], [0.571, [0.959, 0.462, 0.310]], [0.573, [0.959, 0.462, 0.310]], [0.575, [0.957, 0.457, 0.308]], [0.577, [0.957, 0.457, 0.308]], [0.579, [0.955, 0.452, 0.306]], [0.581, [0.955, 0.452, 0.306]], [0.583, [0.954, 0.447, 0.304]], [0.585, [0.954, 0.447, 0.304]], [0.587, [0.952, 0.442, 0.302]], [0.589, [0.952, 0.442, 0.302]], [0.591, [0.951, 0.437, 0.300]], [0.593, [0.951, 0.437, 0.300]], [0.595, [0.949, 0.432, 0.298]], [0.597, [0.949, 0.432, 0.298]], [0.599, [0.947, 0.427, 0.296]], [0.601, [0.947, 0.427, 0.296]], [0.603, [0.946, 0.423, 0.294]], [0.605, [0.946, 0.423, 0.294]], [0.607, [0.944, 0.418, 0.292]], [0.609, [0.944, 0.418, 0.292]], [0.611, [0.943, 0.413, 0.289]], [0.613, [0.943, 0.413, 0.289]], [0.614, [0.941, 0.408, 0.287]], [0.616, [0.941, 0.408, 0.287]], [0.618, [0.939, 0.403, 0.285]], [0.620, [0.939, 0.403, 0.285]], [0.622, [0.938, 0.398, 0.283]], [0.624, [0.938, 0.398, 0.283]], [0.626, [0.935, 0.392, 0.279]], [0.628, [0.935, 0.392, 0.279]], [0.630, [0.932, 0.385, 0.274]], [0.632, [0.932, 0.385, 0.274]], [0.634, [0.930, 0.379, 0.269]], [0.636, [0.930, 0.379, 0.269]], [0.638, [0.927, 0.372, 0.264]], [0.640, [0.927, 0.372, 0.264]], [0.642, [0.924, 0.366, 0.259]], [0.644, [0.924, 0.366, 0.259]], [0.646, [0.921, 0.359, 0.254]], [0.648, [0.921, 0.359, 0.254]], [0.650, [0.918, 0.353, 0.249]], [0.652, [0.918, 0.353, 0.249]], [0.654, [0.915, 0.346, 0.244]], [0.656, [0.915, 0.346, 0.244]], [0.658, [0.912, 0.340, 0.239]], [0.659, [0.912, 0.340, 0.239]], [0.661, [0.909, 0.333, 0.234]], [0.663, [0.909, 0.333, 0.234]], [0.665, [0.906, 0.327, 0.229]], [0.667, [0.906, 0.327, 0.229]], [0.669, [0.903, 0.320, 0.224]], [0.671, [0.903, 0.320, 0.224]], [0.673, [0.900, 0.314, 0.219]], [0.675, [0.900, 0.314, 0.219]], [0.677, [0.897, 0.307, 0.214]], [0.679, [0.897, 0.307, 0.214]], [0.681, [0.894, 0.301, 0.209]], [0.683, [0.894, 0.301, 0.209]], [0.685, [0.891, 0.294, 0.204]], [0.687, [0.891, 0.294, 0.204]], [0.689, [0.888, 0.288, 0.198]], [0.691, [0.888, 0.288, 0.198]], [0.693, [0.885, 0.281, 0.193]], [0.695, [0.885, 0.281, 0.193]], [0.697, [0.882, 0.275, 0.188]], [0.699, [0.882, 0.275, 0.188]], [0.701, [0.879, 0.268, 0.183]], [0.703, [0.879, 0.268, 0.183]], [0.705, [0.876, 0.262, 0.178]], [0.706, [0.876, 0.262, 0.178]], [0.708, [0.873, 0.255, 0.173]], [0.710, [0.873, 0.255, 0.173]], [0.712, [0.870, 0.249, 0.168]], [0.714, [0.870, 0.249, 0.168]], [0.716, [0.867, 0.242, 0.163]], [0.718, [0.867, 0.242, 0.163]], [0.720, [0.865, 0.236, 0.158]], [0.722, [0.865, 0.236, 0.158]], [0.724, [0.862, 0.229, 0.153]], [0.726, [0.862, 0.229, 0.153]], [0.728, [0.859, 0.222, 0.148]], [0.730, [0.859, 0.222, 0.148]], [0.732, [0.856, 0.216, 0.143]], [0.734, [0.856, 0.216, 0.143]], [0.736, [0.853, 0.209, 0.138]], [0.738, [0.853, 0.209, 0.138]], [0.740, [0.850, 0.203, 0.133]], [0.742, [0.850, 0.203, 0.133]], [0.744, [0.847, 0.196, 0.128]], [0.746, [0.847, 0.196, 0.128]], [0.748, [0.844, 0.190, 0.123]], [0.750, [0.844, 0.190, 0.123]], [0.751, [0.840, 0.184, 0.119]], [0.753, [0.840, 0.184, 0.119]], [0.755, [0.835, 0.178, 0.115]], [0.757, [0.835, 0.178, 0.115]], [0.759, [0.831, 0.172, 0.111]], [0.761, [0.831, 0.172, 0.111]], [0.763, [0.827, 0.166, 0.107]], [0.765, [0.827, 0.166, 0.107]], [0.767, [0.822, 0.160, 0.103]], [0.769, [0.822, 0.160, 0.103]], [0.771, [0.818, 0.154, 0.100]], [0.773, [0.818, 0.154, 0.100]], [0.775, [0.813, 0.148, 0.096]], [0.777, [0.813, 0.148, 0.096]], [0.779, [0.809, 0.142, 0.092]], [0.781, [0.809, 0.142, 0.092]], [0.783, [0.804, 0.137, 0.088]], [0.785, [0.804, 0.137, 0.088]], [0.787, [0.800, 0.131, 0.084]], [0.789, [0.800, 0.131, 0.084]], [0.791, [0.796, 0.125, 0.081]], [0.793, [0.796, 0.125, 0.081]], [0.795, [0.791, 0.119, 0.077]], [0.796, [0.791, 0.119, 0.077]], [0.798, [0.787, 0.113, 0.073]], [0.800, [0.787, 0.113, 0.073]], [0.802, [0.782, 0.107, 0.069]], [0.804, [0.782, 0.107, 0.069]], [0.806, [0.778, 0.101, 0.065]], [0.808, [0.778, 0.101, 0.065]], [0.810, [0.773, 0.095, 0.061]], [0.812, [0.773, 0.095, 0.061]], [0.814, [0.769, 0.089, 0.058]], [0.816, [0.769, 0.089, 0.058]], [0.818, [0.765, 0.083, 0.054]], [0.820, [0.765, 0.083, 0.054]], [0.822, [0.760, 0.078, 0.050]], [0.824, [0.760, 0.078, 0.050]], [0.826, [0.756, 0.072, 0.046]], [0.828, [0.756, 0.072, 0.046]], [0.830, [0.751, 0.066, 0.042]], [0.832, [0.751, 0.066, 0.042]], [0.834, [0.747, 0.060, 0.039]], [0.836, [0.747, 0.060, 0.039]], [0.838, [0.742, 0.054, 0.035]], [0.840, [0.742, 0.054, 0.035]], [0.841, [0.738, 0.048, 0.031]], [0.843, [0.738, 0.048, 0.031]], [0.845, [0.734, 0.042, 0.027]], [0.847, [0.734, 0.042, 0.027]], [0.849, [0.729, 0.036, 0.023]], [0.851, [0.729, 0.036, 0.023]], [0.853, [0.725, 0.030, 0.020]], [0.855, [0.725, 0.030, 0.020]], [0.857, [0.720, 0.024, 0.016]], [0.859, [0.720, 0.024, 0.016]], [0.861, [0.716, 0.018, 0.012]], [0.863, [0.716, 0.018, 0.012]], [0.865, [0.711, 0.013, 0.008]], [0.867, [0.711, 0.013, 0.008]], [0.869, [0.707, 0.007, 0.004]], [0.871, [0.707, 0.007, 0.004]], [0.873, [0.703, 0.001, 0.000]], [0.875, [0.703, 0.001, 0.000]], [0.877, [0.696, 0.000, 0.000]], [0.879, [0.696, 0.000, 0.000]], [0.881, [0.690, 0.000, 0.000]], [0.883, [0.690, 0.000, 0.000]], [0.885, [0.684, 0.000, 0.000]], [0.886, [0.684, 0.000, 0.000]], [0.888, [0.677, 0.000, 0.000]], [0.890, [0.677, 0.000, 0.000]], [0.892, [0.671, 0.000, 0.000]], [0.894, [0.671, 0.000, 0.000]], [0.896, [0.664, 0.000, 0.000]], [0.898, [0.664, 0.000, 0.000]], [0.900, [0.658, 0.000, 0.000]], [0.902, [0.658, 0.000, 0.000]], [0.904, [0.652, 0.000, 0.000]], [0.906, [0.652, 0.000, 0.000]], [0.908, [0.645, 0.000, 0.000]], [0.910, [0.645, 0.000, 0.000]], [0.912, [0.639, 0.000, 0.000]], [0.914, [0.639, 0.000, 0.000]], [0.916, [0.632, 0.000, 0.000]], [0.918, [0.632, 0.000, 0.000]], [0.920, [0.626, 0.000, 0.000]], [0.922, [0.626, 0.000, 0.000]], [0.924, [0.620, 0.000, 0.000]], [0.926, [0.620, 0.000, 0.000]], [0.928, [0.613, 0.000, 0.000]], [0.930, [0.613, 0.000, 0.000]], [0.932, [0.607, 0.000, 0.000]], [0.933, [0.607, 0.000, 0.000]], [0.935, [0.600, 0.000, 0.000]], [0.937, [0.600, 0.000, 0.000]], [0.939, [0.594, 0.000, 0.000]], [0.941, [0.594, 0.000, 0.000]], [0.943, [0.588, 0.000, 0.000]], [0.945, [0.588, 0.000, 0.000]], [0.947, [0.581, 0.000, 0.000]], [0.949, [0.581, 0.000, 0.000]], [0.951, [0.575, 0.000, 0.000]], [0.953, [0.575, 0.000, 0.000]], [0.955, [0.568, 0.000, 0.000]], [0.957, [0.568, 0.000, 0.000]], [0.959, [0.562, 0.000, 0.000]], [0.961, [0.562, 0.000, 0.000]], [0.963, [0.556, 0.000, 0.000]], [0.965, [0.556, 0.000, 0.000]], [0.967, [0.549, 0.000, 0.000]], [0.969, [0.549, 0.000, 0.000]], [0.971, [0.543, 0.000, 0.000]], [0.973, [0.543, 0.000, 0.000]], [0.975, [0.536, 0.000, 0.000]], [0.977, [0.536, 0.000, 0.000]], [0.978, [0.530, 0.000, 0.000]], [0.980, [0.530, 0.000, 0.000]], [0.982, [0.524, 0.000, 0.000]], [0.984, [0.524, 0.000, 0.000]], [0.986, [0.517, 0.000, 0.000]], [0.988, [0.517, 0.000, 0.000]], [0.990, [0.511, 0.000, 0.000]], [0.992, [0.511, 0.000, 0.000]], [0.994, [0.504, 0.000, 0.000]], [0.996, [0.504, 0.000, 0.000]], [0.998, [0.498, 0.000, 0.000]], [1.000, [0.498, 0.000, 0.000]]];
H.colormap_oxygen = [[0.000,[0.25032177,0.02046237,0.01966892]],[0.004,[0.25556485,0.02111591,0.02090008]],[0.008,[0.26080155,0.02176437,0.02215967]],[0.012,[0.26604463,0.02238304,0.02344016]],[0.016,[0.27128867,0.02298149,0.02474302]],[0.020,[0.27653264,0.02356134,0.02606762]],[0.024,[0.28178616,0.02410204,0.02740685]],[0.027,[0.28703680,0.02462864,0.02876669]],[0.031,[0.29229647,0.02511521,0.03013811]],[0.035,[0.29755977,0.02557236,0.03152275]],[0.039,[0.30282213,0.02600981,0.03292221]],[0.043,[0.30809895,0.02639179,0.03432345]],[0.047,[0.31337668,0.02674829,0.03573423]],[0.051,[0.31865532,0.02707913,0.03715281]],[0.055,[0.32394949,0.02734825,0.03856493]],[0.059,[0.32924566,0.02758740,0.03997916]],[0.063,[0.33454443,0.02779483,0.04137064]],[0.067,[0.33985476,0.02794706,0.04271748]],[0.071,[0.34517249,0.02805369,0.04402858]],[0.075,[0.35049427,0.02812284,0.04530589]],[0.078,[0.35582068,0.02815263,0.04654771]],[0.082,[0.36115912,0.02812226,0.04774545]],[0.086,[0.36650539,0.02804229,0.04890135]],[0.090,[0.37185718,0.02791864,0.05001584]],[0.094,[0.37721491,0.02774988,0.05108646]],[0.098,[0.38257895,0.02753472,0.05211053]],[0.102,[0.38794955,0.02727216,0.05308510]],[0.106,[0.39332999,0.02695212,0.05400333]],[0.110,[0.39871727,0.02658339,0.05486495]],[0.114,[0.40411010,0.02617015,0.05566751]],[0.118,[0.40950809,0.02571398,0.05640694]],[0.122,[0.41491066,0.02521742,0.05707881]],[0.125,[0.42031692,0.02468426,0.05767829]],[0.129,[0.42572564,0.02411983,0.05820017]],[0.133,[0.43113554,0.02353014,0.05863828]],[0.137,[0.43654919,0.02290868,0.05897909]],[0.141,[0.44195989,0.02228071,0.05922146]],[0.145,[0.44736413,0.02166211,0.05935828]],[0.149,[0.45275755,0.02107282,0.05938213]],[0.153,[0.45814185,0.02051271,0.05927134]],[0.157,[0.46350709,0.02002405,0.05902266]],[0.161,[0.46884497,0.01964556,0.05862776]],[0.165,[0.47415166,0.01940234,0.05806381]],[0.169,[0.47941183,0.01936335,0.05733102]],[0.173,[0.48461318,0.01958983,0.05642063]],[0.176,[0.48974345,0.02014613,0.05532002]],[0.180,[0.49478242,0.02112808,0.05404462]],[0.184,[0.49971373,0.02261950,0.05260679]],[0.188,[0.50452218,0.02470022,0.05103037]],[0.192,[0.50919629,0.02743498,0.04934859]],[0.196,[0.51373016,0.03086488,0.04759931]],[0.200,[0.51812392,0.03500463,0.04582043]],[0.204,[0.52238301,0.03984501,0.04404711]],[0.208,[0.52651678,0.04511655,0.04230179]],[0.212,[0.53053614,0.05056764,0.04059910]],[0.216,[0.53445216,0.05613230,0.03893708]],[0.220,[0.53827673,0.06174820,0.03738225]],[0.224,[0.54201853,0.06738178,0.03591446]],[0.227,[0.54568722,0.07300021,0.03454024]],[0.231,[0.54928963,0.07858770,0.03324672]],[0.235,[0.55283335,0.08412806,0.03203531]],[0.239,[0.55632188,0.08962115,0.03088638]],[0.243,[0.55976329,0.09505189,0.02981373]],[0.247,[0.56315905,0.10042718,0.02879664]],[0.251,[0.56651252,0.10574699,0.02783021]],[0.255,[0.56982815,0.11100806,0.02691693]],[0.259,[0.57310894,0.11621126,0.02605384]],[0.263,[0.57635575,0.12136236,0.02523129]],[0.267,[0.57957073,0.12646316,0.02444688]],[0.271,[0.58275576,0.13151570,0.02369841]],[0.275,[0.58591250,0.13652212,0.02298378]],[0.278,[0.58904242,0.14148465,0.02230110]],[0.282,[0.59214700,0.14640517,0.02164915]],[0.286,[0.59522770,0.15128527,0.02102731]],[0.290,[0.59828484,0.15612864,0.02043163]],[0.294,[0.60131931,0.16093734,0.01986079]],[0.298,[0.60433195,0.16571333,0.01931361]],[0.302,[0.60732351,0.17045851,0.01878899]],[0.306,[0.61029466,0.17517467,0.01828593]],[0.310,[0.61324599,0.17986355,0.01780353]],[0.314,[0.61617893,0.18452532,0.01734338]],[0.318,[0.61909328,0.18916277,0.01690272]],[0.322,[0.62198950,0.19377738,0.01648082]],[0.325,[0.62486798,0.19837060,0.01607703]],[0.329,[0.62772912,0.20294375,0.01569076]],[0.333,[0.63057325,0.20749811,0.01532150]],[0.337,[0.63340069,0.21203487,0.01496877]],[0.341,[0.63621174,0.21655515,0.01463216]],[0.345,[0.63900669,0.22106003,0.01431132]],[0.349,[0.64178639,0.22554964,0.01400751]],[0.353,[0.64455206,0.23002362,0.01372295]],[0.357,[0.64730240,0.23448507,0.01345343]],[0.361,[0.65003764,0.23893485,0.01319875]],[0.365,[0.65275796,0.24337375,0.01295875]],[0.369,[0.65546356,0.24780256,0.01273331]],[0.373,[0.65815552,0.25222081,0.01252464]],[0.376,[0.66083480,0.25662825,0.01233463]],[0.380,[0.66349987,0.26102774,0.01215897]],[0.384,[0.66615089,0.26541990,0.01199767]],[0.388,[0.66878801,0.26980530,0.01185078]],[0.392,[0.67141252,0.27418313,0.01172117]],[0.396,[0.67402504,0.27855337,0.01161017]],[0.400,[0.67662404,0.28291857,0.01151371]],[0.404,[0.67920965,0.28727919,0.01143195]],[0.408,[0.68178200,0.29163567,0.01136508]],[0.412,[0.68434402,0.29598530,0.01132014]],[0.416,[0.68689300,0.30033171,0.01129044]],[0.420,[0.68942903,0.30467536,0.01127608]],[0.424,[0.69195221,0.30901660,0.01127734]],[0.427,[0.69446517,0.31335309,0.01130065]],[0.431,[0.69696575,0.31768766,0.01134076]],[0.435,[0.69945374,0.32202097,0.01139719]],[0.439,[0.70192928,0.32635330,0.01147037]],[0.443,[0.70439517,0.33068214,0.01156730]],[0.447,[0.70684868,0.33501077,0.01168139]],[0.451,[0.70928991,0.33933943,0.01181309]],[0.455,[0.71171981,0.34366752,0.01196487]],[0.459,[0.71413942,0.34799439,0.01213950]],[0.463,[0.71654695,0.35232217,0.01233279]],[0.467,[0.71894251,0.35665105,0.01254529]],[0.471,[0.72132803,0.36097949,0.01278202]],[0.475,[0.72370232,0.36530896,0.01304031]],[0.478,[0.72606481,0.36964029,0.01331909]],[0.482,[0.72841623,0.37397307,0.01362047]],[0.486,[0.73075769,0.37830656,0.01394753]],[0.490,[0.73308750,0.38264260,0.01429651]],[0.494,[0.73540578,0.38698130,0.01466810]],[0.498,[0.73771444,0.39132123,0.01506735]],[0.502,[0.74001188,0.39566404,0.01549080]],[0.506,[0.74229795,0.40001012,0.01593850]],[0.510,[0.74457375,0.40435871,0.01641363]],[0.514,[0.74683910,0.40871021,0.01691622]],[0.518,[0.74909321,0.41306552,0.01744482]],[0.522,[0.75133661,0.41742436,0.01800127]],[0.525,[0.75357007,0.42178631,0.01858798]],[0.529,[0.75579243,0.42615255,0.01920263]],[0.533,[0.75800383,0.43052314,0.01984613]],[0.537,[0.76020558,0.43489718,0.02052233]],[0.541,[0.76239635,0.43927596,0.02122851]],[0.545,[0.76457628,0.44365952,0.02196563]],[0.549,[0.76674624,0.44804735,0.02273648]],[0.553,[0.76890556,0.45244015,0.02354003]],[0.557,[0.77105415,0.45683815,0.02437675]],[0.561,[0.77319254,0.46124109,0.02524862]],[0.565,[0.77532049,0.46564932,0.02615572]],[0.569,[0.77743783,0.47006311,0.02709835]],[0.573,[0.77954483,0.47448241,0.02807794]],[0.576,[0.78164146,0.47890740,0.02909510]],[0.580,[0.78372758,0.48333830,0.03015029]],[0.584,[0.78580334,0.48777515,0.03124464]],[0.588,[0.78786865,0.49221815,0.03237872]],[0.592,[0.78992356,0.49666740,0.03355346]],[0.596,[0.79196818,0.50112295,0.03476996]],[0.600,[0.79400213,0.50558518,0.03602816]],[0.604,[0.79602577,0.51005397,0.03732978]],[0.608,[0.79803924,0.51452935,0.03867607]],[0.612,[0.80004182,0.51901194,0.04006614]],[0.616,[0.80203408,0.52350144,0.04147691]],[0.620,[0.80401624,0.52799783,0.04289943]],[0.624,[0.80598747,0.53250179,0.04433686]],[0.627,[0.80794820,0.53701313,0.04579001]],[0.631,[0.80989886,0.54153165,0.04725970]],[0.635,[0.81183872,0.54605798,0.04874406]],[0.639,[0.81376767,0.55059227,0.05024275]],[0.643,[0.81568657,0.55513405,0.05175753]],[0.647,[0.81759499,0.55968372,0.05328731]],[0.651,[0.81949185,0.56424207,0.05482979]],[0.655,[0.82137865,0.56880822,0.05638803]],[0.659,[0.82325551,0.57338218,0.05796215]],[0.663,[0.82511990,0.57796567,0.05954713]],[0.667,[0.82697416,0.58255729,0.06114760]],[0.671,[0.82881842,0.58715704,0.06276375]],[0.675,[0.83065077,0.59176621,0.06439206]],[0.678,[0.83247193,0.59638442,0.06603397]],[0.682,[0.83428298,0.60101108,0.06769149]],[0.686,[0.83608314,0.60564678,0.06936327]],[0.690,[0.83787054,0.61029272,0.07104627]],[0.694,[0.83964766,0.61494746,0.07274493]],[0.698,[0.84141458,0.61961104,0.07445946]],[0.702,[0.84316828,0.62428535,0.07618511]],[0.706,[0.84491060,0.62896934,0.07792519]],[0.710,[0.84664248,0.63366253,0.07968136]],[0.714,[0.84836317,0.63836545,0.08145269]],[0.718,[0.85006967,0.64307988,0.08323499]],[0.722,[0.85176540,0.64780392,0.08503379]],[0.725,[0.85345037,0.65253762,0.08684936]],[0.729,[0.85512241,0.65728228,0.08867898]],[0.733,[0.85678071,0.66203842,0.09052203]],[0.737,[0.85842781,0.66680464,0.09238251]],[0.741,[0.86006366,0.67158104,0.09426077]],[0.745,[0.86168545,0.67636924,0.09615360]],[0.749,[0.86329311,0.68116930,0.09806161]],[0.753,[0.86488895,0.68598001,0.09998839]],[0.757,[0.86647286,0.69080147,0.10193437]],[0.761,[0.86804282,0.69563482,0.10389775]],[0.765,[0.86959676,0.70048120,0.10587693]],[0.769,[0.87113804,0.70533885,0.10787672]],[0.773,[0.87266647,0.71020788,0.10989772]],[0.776,[0.87418187,0.71508846,0.11194054]],[0.780,[0.87567959,0.71998302,0.11400111]],[0.784,[0.87716225,0.72489021,0.11608345]],[0.788,[0.87863089,0.72980951,0.11818975]],[0.792,[0.88008521,0.73474108,0.12032085]],[0.796,[0.88152491,0.73968512,0.12247764]],[0.800,[0.88294684,0.74464321,0.12465844]],[0.804,[0.88435056,0.74961555,0.12686440]],[0.808,[0.88573838,0.75460097,0.12909932]],[0.812,[0.88710988,0.75959969,0.13136443]],[0.816,[0.88846459,0.76461192,0.13366106]],[0.820,[0.88980202,0.76963789,0.13599066]],[0.824,[0.89112162,0.77467784,0.13835480]],[0.827,[0.89242043,0.77973314,0.14075338]],[0.831,[0.89369837,0.78480379,0.14318884]],[0.835,[0.89495679,0.78988908,0.14566486]],[0.839,[0.89619502,0.79498925,0.14818373]],[0.843,[0.89741236,0.80010458,0.15074796]],[0.847,[0.89860807,0.80523531,0.15336033]],[0.851,[0.89978135,0.81038173,0.15602391]],[0.855,[0.90093137,0.81554410,0.15874211]],[0.859,[0.90205726,0.82072269,0.16151872]],[0.863,[0.90315814,0.82591775,0.16435797]],[0.867,[0.90423307,0.83112953,0.16726459]],[0.871,[0.90528113,0.83635827,0.17024392]],[0.875,[0.90630138,0.84160414,0.17330195]],[0.878,[0.90729292,0.84686732,0.17644545]],[0.882,[0.90825490,0.85214790,0.17968212]],[0.886,[0.90918541,0.85744638,0.18302038]],[0.890,[0.91007520,0.86276633,0.18646838]],[0.894,[0.91093120,0.86810433,0.19004033]],[0.898,[0.91175302,0.87346008,0.19374980]],[0.902,[0.91254071,0.87883301,0.19761251]],[0.906,[0.91327552,0.88423014,0.20164647]],[0.910,[0.91397111,0.88964499,0.20587612]],[0.914,[0.91462416,0.89507797,0.21032894]],[0.918,[0.91521971,0.90053380,0.21504180]],[0.922,[0.91576919,0.90600639,0.22005714]],[0.925,[0.91626750,0.91149583,0.22543188]],[0.929,[0.91670208,0.91700434,0.23124674]],[0.933,[0.91708955,0.92252213,0.23759656]],[0.937,[0.91744010,0.92804079,0.24461551]],[0.941,[0.91778416,0.93354269,0.25248000]],[0.945,[0.91818209,0.93899707,0.26142023]],[0.949,[0.91880144,0.94433427,0.27160124]],[0.953,[0.91988874,0.94946138,0.28299331]],[0.957,[0.92170201,0.95429517,0.29515795]],[0.961,[0.92432629,0.95882577,0.30744836]],[0.965,[0.92765151,0.96310918,0.31947504]],[0.969,[0.93152190,0.96721160,0.33105536]],[0.973,[0.93580128,0.97118464,0.34221253]],[0.976,[0.94039225,0.97506515,0.35296587]],[0.980,[0.94522476,0.97887874,0.36335720]],[0.984,[0.95025594,0.98263870,0.37347976]],[0.988,[0.95544153,0.98636342,0.38330209]],[0.992,[0.96076275,0.99005723,0.39290859]],[0.996,[0.96620066,0.99372665,0.40232518]],[1.000,[0.97173864,0.99737776,0.41156586]]]
H.colormap_Paired = [[0.000, [0.651, 0.808, 0.890]], [0.002, [0.651, 0.808, 0.890]], [0.004, [0.628, 0.793, 0.882]], [0.006, [0.628, 0.793, 0.882]], [0.008, [0.605, 0.779, 0.874]], [0.010, [0.605, 0.779, 0.874]], [0.012, [0.582, 0.764, 0.866]], [0.014, [0.582, 0.764, 0.866]], [0.016, [0.560, 0.750, 0.858]], [0.018, [0.560, 0.750, 0.858]], [0.020, [0.537, 0.735, 0.850]], [0.022, [0.537, 0.735, 0.850]], [0.023, [0.514, 0.721, 0.842]], [0.025, [0.514, 0.721, 0.842]], [0.027, [0.491, 0.706, 0.835]], [0.029, [0.491, 0.706, 0.835]], [0.031, [0.468, 0.691, 0.827]], [0.033, [0.468, 0.691, 0.827]], [0.035, [0.445, 0.677, 0.819]], [0.037, [0.445, 0.677, 0.819]], [0.039, [0.423, 0.662, 0.811]], [0.041, [0.423, 0.662, 0.811]], [0.043, [0.400, 0.648, 0.803]], [0.045, [0.400, 0.648, 0.803]], [0.047, [0.377, 0.633, 0.795]], [0.049, [0.377, 0.633, 0.795]], [0.051, [0.354, 0.619, 0.787]], [0.053, [0.354, 0.619, 0.787]], [0.055, [0.331, 0.604, 0.779]], [0.057, [0.331, 0.604, 0.779]], [0.059, [0.308, 0.590, 0.771]], [0.061, [0.308, 0.590, 0.771]], [0.063, [0.286, 0.575, 0.763]], [0.065, [0.286, 0.575, 0.763]], [0.067, [0.263, 0.561, 0.755]], [0.068, [0.263, 0.561, 0.755]], [0.070, [0.240, 0.546, 0.747]], [0.072, [0.240, 0.546, 0.747]], [0.074, [0.217, 0.531, 0.739]], [0.076, [0.217, 0.531, 0.739]], [0.078, [0.194, 0.517, 0.731]], [0.080, [0.194, 0.517, 0.731]], [0.082, [0.171, 0.502, 0.723]], [0.084, [0.171, 0.502, 0.723]], [0.086, [0.149, 0.488, 0.715]], [0.088, [0.149, 0.488, 0.715]], [0.090, [0.126, 0.473, 0.707]], [0.092, [0.126, 0.473, 0.707]], [0.094, [0.142, 0.485, 0.700]], [0.096, [0.142, 0.485, 0.700]], [0.098, [0.167, 0.502, 0.693]], [0.100, [0.167, 0.502, 0.693]], [0.102, [0.192, 0.520, 0.686]], [0.104, [0.192, 0.520, 0.686]], [0.106, [0.217, 0.537, 0.679]], [0.108, [0.217, 0.537, 0.679]], [0.110, [0.241, 0.555, 0.672]], [0.112, [0.241, 0.555, 0.672]], [0.114, [0.266, 0.572, 0.665]], [0.115, [0.266, 0.572, 0.665]], [0.117, [0.291, 0.589, 0.657]], [0.119, [0.291, 0.589, 0.657]], [0.121, [0.316, 0.607, 0.650]], [0.123, [0.316, 0.607, 0.650]], [0.125, [0.341, 0.624, 0.643]], [0.127, [0.341, 0.624, 0.643]], [0.129, [0.366, 0.642, 0.636]], [0.131, [0.366, 0.642, 0.636]], [0.133, [0.391, 0.659, 0.629]], [0.135, [0.391, 0.659, 0.629]], [0.137, [0.415, 0.677, 0.622]], [0.139, [0.415, 0.677, 0.622]], [0.141, [0.440, 0.694, 0.615]], [0.143, [0.440, 0.694, 0.615]], [0.145, [0.465, 0.711, 0.608]], [0.147, [0.465, 0.711, 0.608]], [0.149, [0.490, 0.729, 0.601]], [0.151, [0.490, 0.729, 0.601]], [0.153, [0.515, 0.746, 0.593]], [0.155, [0.515, 0.746, 0.593]], [0.157, [0.540, 0.764, 0.586]], [0.159, [0.540, 0.764, 0.586]], [0.160, [0.565, 0.781, 0.579]], [0.162, [0.565, 0.781, 0.579]], [0.164, [0.590, 0.798, 0.572]], [0.166, [0.590, 0.798, 0.572]], [0.168, [0.614, 0.816, 0.565]], [0.170, [0.614, 0.816, 0.565]], [0.172, [0.639, 0.833, 0.558]], [0.174, [0.639, 0.833, 0.558]], [0.176, [0.664, 0.851, 0.551]], [0.178, [0.664, 0.851, 0.551]], [0.180, [0.689, 0.868, 0.544]], [0.182, [0.689, 0.868, 0.544]], [0.184, [0.684, 0.868, 0.531]], [0.186, [0.684, 0.868, 0.531]], [0.188, [0.663, 0.857, 0.515]], [0.190, [0.663, 0.857, 0.515]], [0.192, [0.641, 0.846, 0.499]], [0.194, [0.641, 0.846, 0.499]], [0.196, [0.620, 0.836, 0.483]], [0.198, [0.620, 0.836, 0.483]], [0.200, [0.598, 0.825, 0.467]], [0.202, [0.598, 0.825, 0.467]], [0.204, [0.577, 0.814, 0.452]], [0.205, [0.577, 0.814, 0.452]], [0.207, [0.555, 0.804, 0.436]], [0.209, [0.555, 0.804, 0.436]], [0.211, [0.534, 0.793, 0.420]], [0.213, [0.534, 0.793, 0.420]], [0.215, [0.512, 0.782, 0.404]], [0.217, [0.512, 0.782, 0.404]], [0.219, [0.491, 0.772, 0.388]], [0.221, [0.491, 0.772, 0.388]], [0.223, [0.470, 0.761, 0.372]], [0.225, [0.470, 0.761, 0.372]], [0.227, [0.448, 0.750, 0.356]], [0.229, [0.448, 0.750, 0.356]], [0.231, [0.427, 0.740, 0.340]], [0.233, [0.427, 0.740, 0.340]], [0.235, [0.405, 0.729, 0.324]], [0.237, [0.405, 0.729, 0.324]], [0.239, [0.384, 0.719, 0.308]], [0.241, [0.384, 0.719, 0.308]], [0.243, [0.362, 0.708, 0.293]], [0.245, [0.362, 0.708, 0.293]], [0.247, [0.341, 0.697, 0.277]], [0.249, [0.341, 0.697, 0.277]], [0.250, [0.319, 0.687, 0.261]], [0.252, [0.319, 0.687, 0.261]], [0.254, [0.298, 0.676, 0.245]], [0.256, [0.298, 0.676, 0.245]], [0.258, [0.276, 0.665, 0.229]], [0.260, [0.276, 0.665, 0.229]], [0.262, [0.255, 0.655, 0.213]], [0.264, [0.255, 0.655, 0.213]], [0.266, [0.233, 0.644, 0.197]], [0.268, [0.233, 0.644, 0.197]], [0.270, [0.212, 0.633, 0.181]], [0.272, [0.212, 0.633, 0.181]], [0.274, [0.215, 0.627, 0.181]], [0.276, [0.215, 0.627, 0.181]], [0.278, [0.249, 0.626, 0.199]], [0.280, [0.249, 0.626, 0.199]], [0.282, [0.283, 0.625, 0.218]], [0.284, [0.283, 0.625, 0.218]], [0.286, [0.317, 0.624, 0.236]], [0.288, [0.317, 0.624, 0.236]], [0.290, [0.351, 0.623, 0.255]], [0.292, [0.351, 0.623, 0.255]], [0.294, [0.385, 0.622, 0.273]], [0.295, [0.385, 0.622, 0.273]], [0.297, [0.418, 0.621, 0.292]], [0.299, [0.418, 0.621, 0.292]], [0.301, [0.452, 0.620, 0.310]], [0.303, [0.452, 0.620, 0.310]], [0.305, [0.486, 0.619, 0.328]], [0.307, [0.486, 0.619, 0.328]], [0.309, [0.520, 0.618, 0.347]], [0.311, [0.520, 0.618, 0.347]], [0.313, [0.554, 0.617, 0.365]], [0.315, [0.554, 0.617, 0.365]], [0.317, [0.588, 0.616, 0.384]], [0.319, [0.588, 0.616, 0.384]], [0.321, [0.621, 0.615, 0.402]], [0.323, [0.621, 0.615, 0.402]], [0.325, [0.655, 0.614, 0.421]], [0.327, [0.655, 0.614, 0.421]], [0.329, [0.689, 0.613, 0.439]], [0.331, [0.689, 0.613, 0.439]], [0.333, [0.723, 0.612, 0.458]], [0.335, [0.723, 0.612, 0.458]], [0.337, [0.757, 0.611, 0.476]], [0.339, [0.757, 0.611, 0.476]], [0.341, [0.791, 0.610, 0.494]], [0.342, [0.791, 0.610, 0.494]], [0.344, [0.824, 0.609, 0.513]], [0.346, [0.824, 0.609, 0.513]], [0.348, [0.858, 0.608, 0.531]], [0.350, [0.858, 0.608, 0.531]], [0.352, [0.892, 0.607, 0.550]], [0.354, [0.892, 0.607, 0.550]], [0.356, [0.926, 0.606, 0.568]], [0.358, [0.926, 0.606, 0.568]], [0.360, [0.960, 0.605, 0.587]], [0.362, [0.960, 0.605, 0.587]], [0.364, [0.983, 0.598, 0.594]], [0.366, [0.983, 0.598, 0.594]], [0.368, [0.979, 0.576, 0.573]], [0.370, [0.979, 0.576, 0.573]], [0.372, [0.975, 0.555, 0.552]], [0.374, [0.975, 0.555, 0.552]], [0.376, [0.971, 0.533, 0.531]], [0.378, [0.971, 0.533, 0.531]], [0.380, [0.967, 0.511, 0.510]], [0.382, [0.967, 0.511, 0.510]], [0.384, [0.963, 0.490, 0.489]], [0.386, [0.963, 0.490, 0.489]], [0.387, [0.959, 0.468, 0.467]], [0.389, [0.959, 0.468, 0.467]], [0.391, [0.955, 0.446, 0.446]], [0.393, [0.955, 0.446, 0.446]], [0.395, [0.951, 0.425, 0.425]], [0.397, [0.951, 0.425, 0.425]], [0.399, [0.947, 0.403, 0.404]], [0.401, [0.947, 0.403, 0.404]], [0.403, [0.943, 0.381, 0.383]], [0.405, [0.943, 0.381, 0.383]], [0.407, [0.939, 0.360, 0.362]], [0.409, [0.939, 0.360, 0.362]], [0.411, [0.934, 0.338, 0.340]], [0.413, [0.934, 0.338, 0.340]], [0.415, [0.930, 0.317, 0.319]], [0.417, [0.930, 0.317, 0.319]], [0.419, [0.926, 0.295, 0.298]], [0.421, [0.926, 0.295, 0.298]], [0.423, [0.922, 0.273, 0.277]], [0.425, [0.922, 0.273, 0.277]], [0.427, [0.918, 0.252, 0.256]], [0.429, [0.918, 0.252, 0.256]], [0.431, [0.914, 0.230, 0.235]], [0.432, [0.914, 0.230, 0.235]], [0.434, [0.910, 0.208, 0.214]], [0.436, [0.910, 0.208, 0.214]], [0.438, [0.906, 0.187, 0.192]], [0.440, [0.906, 0.187, 0.192]], [0.442, [0.902, 0.165, 0.171]], [0.444, [0.902, 0.165, 0.171]], [0.446, [0.898, 0.143, 0.150]], [0.448, [0.898, 0.143, 0.150]], [0.450, [0.894, 0.122, 0.129]], [0.452, [0.894, 0.122, 0.129]], [0.454, [0.891, 0.104, 0.111]], [0.456, [0.891, 0.104, 0.111]], [0.458, [0.895, 0.132, 0.125]], [0.460, [0.895, 0.132, 0.125]], [0.462, [0.899, 0.160, 0.139]], [0.464, [0.899, 0.160, 0.139]], [0.466, [0.904, 0.188, 0.153]], [0.468, [0.904, 0.188, 0.153]], [0.470, [0.908, 0.216, 0.167]], [0.472, [0.908, 0.216, 0.167]], [0.474, [0.913, 0.244, 0.181]], [0.476, [0.913, 0.244, 0.181]], [0.477, [0.917, 0.272, 0.195]], [0.479, [0.917, 0.272, 0.195]], [0.481, [0.921, 0.300, 0.209]], [0.483, [0.921, 0.300, 0.209]], [0.485, [0.926, 0.328, 0.223]], [0.487, [0.926, 0.328, 0.223]], [0.489, [0.930, 0.356, 0.237]], [0.491, [0.930, 0.356, 0.237]], [0.493, [0.935, 0.384, 0.251]], [0.495, [0.935, 0.384, 0.251]], [0.497, [0.939, 0.412, 0.266]], [0.499, [0.939, 0.412, 0.266]], [0.501, [0.943, 0.439, 0.280]], [0.503, [0.943, 0.439, 0.280]], [0.505, [0.948, 0.467, 0.294]], [0.507, [0.948, 0.467, 0.294]], [0.509, [0.952, 0.495, 0.308]], [0.511, [0.952, 0.495, 0.308]], [0.513, [0.957, 0.523, 0.322]], [0.515, [0.957, 0.523, 0.322]], [0.517, [0.961, 0.551, 0.336]], [0.519, [0.961, 0.551, 0.336]], [0.521, [0.965, 0.579, 0.350]], [0.523, [0.965, 0.579, 0.350]], [0.524, [0.970, 0.607, 0.364]], [0.526, [0.970, 0.607, 0.364]], [0.528, [0.974, 0.635, 0.378]], [0.530, [0.974, 0.635, 0.378]], [0.532, [0.979, 0.663, 0.392]], [0.534, [0.979, 0.663, 0.392]], [0.536, [0.983, 0.691, 0.406]], [0.538, [0.983, 0.691, 0.406]], [0.540, [0.987, 0.719, 0.420]], [0.542, [0.987, 0.719, 0.420]], [0.544, [0.992, 0.746, 0.434]], [0.546, [0.992, 0.746, 0.434]], [0.548, [0.992, 0.739, 0.418]], [0.550, [0.992, 0.739, 0.418]], [0.552, [0.993, 0.728, 0.399]], [0.554, [0.993, 0.728, 0.399]], [0.556, [0.993, 0.718, 0.381]], [0.558, [0.993, 0.718, 0.381]], [0.560, [0.993, 0.707, 0.362]], [0.562, [0.993, 0.707, 0.362]], [0.564, [0.994, 0.696, 0.343]], [0.566, [0.994, 0.696, 0.343]], [0.568, [0.994, 0.685, 0.324]], [0.569, [0.994, 0.685, 0.324]], [0.571, [0.994, 0.674, 0.306]], [0.573, [0.994, 0.674, 0.306]], [0.575, [0.995, 0.663, 0.287]], [0.577, [0.995, 0.663, 0.287]], [0.579, [0.995, 0.653, 0.268]], [0.581, [0.995, 0.653, 0.268]], [0.583, [0.996, 0.642, 0.249]], [0.585, [0.996, 0.642, 0.249]], [0.587, [0.996, 0.631, 0.230]], [0.589, [0.996, 0.631, 0.230]], [0.591, [0.996, 0.620, 0.212]], [0.593, [0.996, 0.620, 0.212]], [0.595, [0.997, 0.609, 0.193]], [0.597, [0.997, 0.609, 0.193]], [0.599, [0.997, 0.598, 0.174]], [0.601, [0.997, 0.598, 0.174]], [0.603, [0.997, 0.588, 0.155]], [0.605, [0.997, 0.588, 0.155]], [0.607, [0.998, 0.577, 0.137]], [0.609, [0.998, 0.577, 0.137]], [0.611, [0.998, 0.566, 0.118]], [0.613, [0.998, 0.566, 0.118]], [0.614, [0.998, 0.555, 0.099]], [0.616, [0.998, 0.555, 0.099]], [0.618, [0.999, 0.544, 0.080]], [0.620, [0.999, 0.544, 0.080]], [0.622, [0.999, 0.533, 0.061]], [0.624, [0.999, 0.533, 0.061]], [0.626, [0.999, 0.523, 0.043]], [0.628, [0.999, 0.523, 0.043]], [0.630, [1.000, 0.512, 0.024]], [0.632, [1.000, 0.512, 0.024]], [0.634, [1.000, 0.501, 0.005]], [0.636, [1.000, 0.501, 0.005]], [0.638, [0.993, 0.504, 0.026]], [0.640, [0.993, 0.504, 0.026]], [0.642, [0.985, 0.513, 0.063]], [0.644, [0.985, 0.513, 0.063]], [0.646, [0.976, 0.522, 0.099]], [0.648, [0.976, 0.522, 0.099]], [0.650, [0.967, 0.530, 0.135]], [0.652, [0.967, 0.530, 0.135]], [0.654, [0.958, 0.539, 0.171]], [0.656, [0.958, 0.539, 0.171]], [0.658, [0.949, 0.547, 0.207]], [0.659, [0.949, 0.547, 0.207]], [0.661, [0.940, 0.556, 0.244]], [0.663, [0.940, 0.556, 0.244]], [0.665, [0.931, 0.565, 0.280]], [0.667, [0.931, 0.565, 0.280]], [0.669, [0.922, 0.573, 0.316]], [0.671, [0.922, 0.573, 0.316]], [0.673, [0.913, 0.582, 0.352]], [0.675, [0.913, 0.582, 0.352]], [0.677, [0.904, 0.591, 0.388]], [0.679, [0.904, 0.591, 0.388]], [0.681, [0.895, 0.599, 0.425]], [0.683, [0.895, 0.599, 0.425]], [0.685, [0.886, 0.608, 0.461]], [0.687, [0.886, 0.608, 0.461]], [0.689, [0.877, 0.616, 0.497]], [0.691, [0.877, 0.616, 0.497]], [0.693, [0.868, 0.625, 0.533]], [0.695, [0.868, 0.625, 0.533]], [0.697, [0.859, 0.634, 0.569]], [0.699, [0.859, 0.634, 0.569]], [0.701, [0.850, 0.642, 0.606]], [0.703, [0.850, 0.642, 0.606]], [0.705, [0.841, 0.651, 0.642]], [0.706, [0.841, 0.651, 0.642]], [0.708, [0.832, 0.660, 0.678]], [0.710, [0.832, 0.660, 0.678]], [0.712, [0.823, 0.668, 0.714]], [0.714, [0.823, 0.668, 0.714]], [0.716, [0.814, 0.677, 0.750]], [0.718, [0.814, 0.677, 0.750]], [0.720, [0.805, 0.685, 0.787]], [0.722, [0.805, 0.685, 0.787]], [0.724, [0.796, 0.694, 0.823]], [0.726, [0.796, 0.694, 0.823]], [0.728, [0.783, 0.687, 0.834]], [0.730, [0.783, 0.687, 0.834]], [0.732, [0.767, 0.667, 0.824]], [0.734, [0.767, 0.667, 0.824]], [0.736, [0.751, 0.648, 0.813]], [0.738, [0.751, 0.648, 0.813]], [0.740, [0.735, 0.628, 0.803]], [0.742, [0.735, 0.628, 0.803]], [0.744, [0.718, 0.608, 0.793]], [0.746, [0.718, 0.608, 0.793]], [0.748, [0.702, 0.588, 0.783]], [0.750, [0.702, 0.588, 0.783]], [0.751, [0.686, 0.568, 0.773]], [0.753, [0.686, 0.568, 0.773]], [0.755, [0.670, 0.549, 0.763]], [0.757, [0.670, 0.549, 0.763]], [0.759, [0.653, 0.529, 0.752]], [0.761, [0.653, 0.529, 0.752]], [0.763, [0.637, 0.509, 0.742]], [0.765, [0.637, 0.509, 0.742]], [0.767, [0.621, 0.489, 0.732]], [0.769, [0.621, 0.489, 0.732]], [0.771, [0.605, 0.470, 0.722]], [0.773, [0.605, 0.470, 0.722]], [0.775, [0.588, 0.450, 0.712]], [0.777, [0.588, 0.450, 0.712]], [0.779, [0.572, 0.430, 0.702]], [0.781, [0.572, 0.430, 0.702]], [0.783, [0.556, 0.410, 0.692]], [0.785, [0.556, 0.410, 0.692]], [0.787, [0.540, 0.390, 0.681]], [0.789, [0.540, 0.390, 0.681]], [0.791, [0.523, 0.371, 0.671]], [0.793, [0.523, 0.371, 0.671]], [0.795, [0.507, 0.351, 0.661]], [0.796, [0.507, 0.351, 0.661]], [0.798, [0.491, 0.331, 0.651]], [0.800, [0.491, 0.331, 0.651]], [0.802, [0.475, 0.311, 0.641]], [0.804, [0.475, 0.311, 0.641]], [0.806, [0.459, 0.291, 0.631]], [0.808, [0.459, 0.291, 0.631]], [0.810, [0.442, 0.272, 0.621]], [0.812, [0.442, 0.272, 0.621]], [0.814, [0.426, 0.252, 0.610]], [0.816, [0.426, 0.252, 0.610]], [0.818, [0.425, 0.251, 0.604]], [0.820, [0.425, 0.251, 0.604]], [0.822, [0.450, 0.284, 0.604]], [0.824, [0.450, 0.284, 0.604]], [0.826, [0.475, 0.317, 0.604]], [0.828, [0.475, 0.317, 0.604]], [0.830, [0.500, 0.350, 0.603]], [0.832, [0.500, 0.350, 0.603]], [0.834, [0.526, 0.382, 0.603]], [0.836, [0.526, 0.382, 0.603]], [0.838, [0.551, 0.415, 0.603]], [0.840, [0.551, 0.415, 0.603]], [0.841, [0.576, 0.448, 0.603]], [0.843, [0.576, 0.448, 0.603]], [0.845, [0.601, 0.481, 0.603]], [0.847, [0.601, 0.481, 0.603]], [0.849, [0.626, 0.514, 0.603]], [0.851, [0.626, 0.514, 0.603]], [0.853, [0.652, 0.547, 0.602]], [0.855, [0.652, 0.547, 0.602]], [0.857, [0.677, 0.579, 0.602]], [0.859, [0.677, 0.579, 0.602]], [0.861, [0.702, 0.612, 0.602]], [0.863, [0.702, 0.612, 0.602]], [0.865, [0.727, 0.645, 0.602]], [0.867, [0.727, 0.645, 0.602]], [0.869, [0.753, 0.678, 0.602]], [0.871, [0.753, 0.678, 0.602]], [0.873, [0.778, 0.711, 0.601]], [0.875, [0.778, 0.711, 0.601]], [0.877, [0.803, 0.743, 0.601]], [0.879, [0.803, 0.743, 0.601]], [0.881, [0.828, 0.776, 0.601]], [0.883, [0.828, 0.776, 0.601]], [0.885, [0.853, 0.809, 0.601]], [0.886, [0.853, 0.809, 0.601]], [0.888, [0.879, 0.842, 0.601]], [0.890, [0.879, 0.842, 0.601]], [0.892, [0.904, 0.875, 0.601]], [0.894, [0.904, 0.875, 0.601]], [0.896, [0.929, 0.908, 0.600]], [0.898, [0.929, 0.908, 0.600]], [0.900, [0.954, 0.940, 0.600]], [0.902, [0.954, 0.940, 0.600]], [0.904, [0.979, 0.973, 0.600]], [0.906, [0.979, 0.973, 0.600]], [0.908, [0.998, 0.995, 0.597]], [0.910, [0.998, 0.995, 0.597]], [0.912, [0.984, 0.967, 0.577]], [0.914, [0.984, 0.967, 0.577]], [0.916, [0.971, 0.939, 0.558]], [0.918, [0.971, 0.939, 0.558]], [0.920, [0.958, 0.911, 0.539]], [0.922, [0.958, 0.911, 0.539]], [0.924, [0.945, 0.883, 0.520]], [0.926, [0.945, 0.883, 0.520]], [0.928, [0.932, 0.854, 0.501]], [0.930, [0.932, 0.854, 0.501]], [0.932, [0.918, 0.826, 0.482]], [0.933, [0.918, 0.826, 0.482]], [0.935, [0.905, 0.798, 0.463]], [0.937, [0.905, 0.798, 0.463]], [0.939, [0.892, 0.770, 0.444]], [0.941, [0.892, 0.770, 0.444]], [0.943, [0.879, 0.742, 0.424]], [0.945, [0.879, 0.742, 0.424]], [0.947, [0.866, 0.714, 0.405]], [0.949, [0.866, 0.714, 0.405]], [0.951, [0.852, 0.686, 0.386]], [0.953, [0.852, 0.686, 0.386]], [0.955, [0.839, 0.658, 0.367]], [0.957, [0.839, 0.658, 0.367]], [0.959, [0.826, 0.630, 0.348]], [0.961, [0.826, 0.630, 0.348]], [0.963, [0.813, 0.602, 0.329]], [0.965, [0.813, 0.602, 0.329]], [0.967, [0.800, 0.574, 0.310]], [0.969, [0.800, 0.574, 0.310]], [0.971, [0.786, 0.546, 0.291]], [0.973, [0.786, 0.546, 0.291]], [0.975, [0.773, 0.518, 0.272]], [0.977, [0.773, 0.518, 0.272]], [0.978, [0.760, 0.489, 0.252]], [0.980, [0.760, 0.489, 0.252]], [0.982, [0.747, 0.461, 0.233]], [0.984, [0.747, 0.461, 0.233]], [0.986, [0.734, 0.433, 0.214]], [0.988, [0.734, 0.433, 0.214]], [0.990, [0.721, 0.405, 0.195]], [0.992, [0.721, 0.405, 0.195]], [0.994, [0.707, 0.377, 0.176]], [0.996, [0.707, 0.377, 0.176]], [0.998, [0.694, 0.349, 0.157]], [1.000, [0.694, 0.349, 0.157]]];
H.colormap_par = [[0.000,[0.20142510,0.07730778,0.09342024]],[0.004,[0.20623196,0.07906208,0.09541606]],[0.008,[0.21104289,0.08079536,0.09737846]],[0.012,[0.21585808,0.08250806,0.09930725]],[0.016,[0.22067771,0.08420059,0.10120221]],[0.020,[0.22550196,0.08587332,0.10306306]],[0.024,[0.23033109,0.08752655,0.10488946]],[0.027,[0.23516512,0.08916077,0.10668116]],[0.031,[0.24000415,0.09077639,0.10843785]],[0.035,[0.24484825,0.09237382,0.11015919]],[0.039,[0.24969748,0.09395347,0.11184482]],[0.043,[0.25455187,0.09551577,0.11349435]],[0.047,[0.25941144,0.09706115,0.11510738]],[0.051,[0.26427617,0.09859005,0.11668349]],[0.055,[0.26914605,0.10010293,0.11822223]],[0.059,[0.27402103,0.10160025,0.11972314]],[0.063,[0.27890104,0.10308249,0.12118573]],[0.067,[0.28378598,0.10455017,0.12260952]],[0.071,[0.28867573,0.10600381,0.12399399]],[0.075,[0.29357056,0.10744356,0.12533822]],[0.078,[0.29847081,0.10886948,0.12664112]],[0.082,[0.30337547,0.11028298,0.12790292]],[0.086,[0.30828432,0.11168467,0.12912301]],[0.090,[0.31319710,0.11307521,0.13030082]],[0.094,[0.31811356,0.11445529,0.13143572]],[0.098,[0.32303376,0.11582525,0.13252668]],[0.102,[0.32795844,0.11718479,0.13357181]],[0.106,[0.33288584,0.11853607,0.13457197]],[0.110,[0.33781557,0.11987996,0.13552651]],[0.114,[0.34274718,0.12121736,0.13643477]],[0.118,[0.34768177,0.12254761,0.13729412]],[0.122,[0.35261792,0.12387261,0.13810492]],[0.125,[0.35755446,0.12519406,0.13886724]],[0.129,[0.36249085,0.12651300,0.13958034]],[0.133,[0.36742880,0.12782819,0.14024032]],[0.137,[0.37236522,0.12914333,0.14084966]],[0.141,[0.37729940,0.13045972,0.14140772]],[0.145,[0.38223282,0.13177638,0.14191047]],[0.149,[0.38716275,0.13309673,0.14235997]],[0.153,[0.39208806,0.13442254,0.14275598]],[0.157,[0.39701028,0.13575283,0.14309390]],[0.161,[0.40192579,0.13709203,0.14337733]],[0.165,[0.40683496,0.13844041,0.14360330]],[0.169,[0.41173657,0.13979990,0.14377140]],[0.173,[0.41662860,0.14117334,0.14388269]],[0.176,[0.42151155,0.14256088,0.14393348]],[0.180,[0.42638186,0.14396701,0.14392769]],[0.184,[0.43124082,0.14539110,0.14385986]],[0.188,[0.43608432,0.14683821,0.14373521]],[0.192,[0.44091334,0.14830805,0.14354849]],[0.196,[0.44572406,0.14980539,0.14330472]],[0.200,[0.45051699,0.15133045,0.14299936]],[0.204,[0.45528867,0.15288755,0.14263694]],[0.208,[0.46003871,0.15447786,0.14221489]],[0.212,[0.46476457,0.15610469,0.14173594]],[0.216,[0.46946477,0.15777026,0.14120030]],[0.220,[0.47413775,0.15947682,0.14060852]],[0.224,[0.47878116,0.16122735,0.13996360]],[0.227,[0.48339404,0.16302340,0.13926468]],[0.231,[0.48797401,0.16486782,0.13851553]],[0.235,[0.49251957,0.16676254,0.13771755]],[0.239,[0.49702929,0.16870932,0.13687220]],[0.243,[0.50150134,0.17071019,0.13598285]],[0.247,[0.50593446,0.17276654,0.13505133]],[0.251,[0.51032726,0.17487977,0.13408048]],[0.255,[0.51467850,0.17705099,0.13307310]],[0.259,[0.51898712,0.17928107,0.13203202]],[0.263,[0.52325216,0.18157061,0.13096024]],[0.267,[0.52747291,0.18391991,0.12986024]],[0.271,[0.53164858,0.18632919,0.12873602]],[0.275,[0.53577881,0.18879820,0.12758962]],[0.278,[0.53986330,0.19132655,0.12642369]],[0.282,[0.54390168,0.19391371,0.12524274]],[0.286,[0.54789413,0.19655879,0.12404724]],[0.290,[0.55184060,0.19926082,0.12284163]],[0.294,[0.55574136,0.20201864,0.12162768]],[0.298,[0.55959678,0.20483097,0.12040676]],[0.302,[0.56340718,0.20769632,0.11918392]],[0.306,[0.56717321,0.21061334,0.11795693]],[0.310,[0.57089535,0.21358017,0.11673318]],[0.314,[0.57457433,0.21659553,0.11550868]],[0.318,[0.57821088,0.21965735,0.11429034]],[0.322,[0.58180567,0.22276439,0.11307453]],[0.325,[0.58535963,0.22591444,0.11186793]],[0.329,[0.58887335,0.22910650,0.11066571]],[0.333,[0.59234801,0.23233801,0.10947623]],[0.337,[0.59578402,0.23560836,0.10829302]],[0.341,[0.59918265,0.23891505,0.10712340]],[0.345,[0.60254440,0.24225721,0.10596380]],[0.349,[0.60587015,0.24563324,0.10481580]],[0.353,[0.60916104,0.24904116,0.10368321]],[0.357,[0.61241730,0.25248057,0.10256140]],[0.361,[0.61564022,0.25594930,0.10145541]],[0.365,[0.61883047,0.25944629,0.10036479]],[0.369,[0.62198835,0.26297099,0.09928701]],[0.373,[0.62511509,0.26652152,0.09822607]],[0.376,[0.62821147,0.27009672,0.09718275]],[0.380,[0.63127759,0.27369633,0.09615407]],[0.384,[0.63431410,0.27731940,0.09514063]],[0.388,[0.63732259,0.28096373,0.09414821]],[0.392,[0.64030290,0.28462948,0.09317288]],[0.396,[0.64325545,0.28831605,0.09221436]],[0.400,[0.64618079,0.29202264,0.09127322]],[0.404,[0.64907986,0.29574805,0.09035191]],[0.408,[0.65195349,0.29949124,0.08945208]],[0.412,[0.65480148,0.30325240,0.08857116]],[0.416,[0.65762433,0.30703090,0.08770973]],[0.420,[0.66042248,0.31082618,0.08686839]],[0.424,[0.66319638,0.31463768,0.08604774]],[0.427,[0.66594650,0.31846486,0.08524854]],[0.431,[0.66867401,0.32230640,0.08447432]],[0.435,[0.67137847,0.32616277,0.08372242]],[0.439,[0.67406025,0.33003358,0.08299350]],[0.443,[0.67671970,0.33391841,0.08228821]],[0.447,[0.67935717,0.33781692,0.08160721]],[0.451,[0.68197297,0.34172875,0.08095120]],[0.455,[0.68456742,0.34565360,0.08032086]],[0.459,[0.68714081,0.34959116,0.07971690]],[0.463,[0.68969343,0.35354117,0.07914004]],[0.467,[0.69222553,0.35750336,0.07859099]],[0.471,[0.69473738,0.36147750,0.07807048]],[0.475,[0.69722923,0.36546336,0.07757926]],[0.478,[0.69970130,0.36946075,0.07711805]],[0.482,[0.70215381,0.37346948,0.07668761]],[0.486,[0.70458697,0.37748937,0.07628867]],[0.490,[0.70700099,0.38152026,0.07592197]],[0.494,[0.70939604,0.38556200,0.07558825]],[0.498,[0.71177231,0.38961447,0.07528823]],[0.502,[0.71412996,0.39367754,0.07502264]],[0.506,[0.71646916,0.39775109,0.07479218]],[0.510,[0.71879006,0.40183503,0.07459753]],[0.514,[0.72109279,0.40592925,0.07443938]],[0.518,[0.72337749,0.41003369,0.07431837]],[0.522,[0.72564429,0.41414826,0.07423513]],[0.525,[0.72789329,0.41827289,0.07419027]],[0.529,[0.73012462,0.42240753,0.07418436]],[0.533,[0.73233838,0.42655212,0.07421793]],[0.537,[0.73453539,0.43070603,0.07429320]],[0.541,[0.73671566,0.43486930,0.07441039]],[0.545,[0.73887875,0.43904233,0.07456863]],[0.549,[0.74102472,0.44322510,0.07476829]],[0.553,[0.74315365,0.44741758,0.07500970]],[0.557,[0.74526561,0.45161977,0.07529317]],[0.561,[0.74736066,0.45583163,0.07561893]],[0.565,[0.74943885,0.46005318,0.07598718]],[0.569,[0.75150145,0.46428349,0.07640057]],[0.573,[0.75354824,0.46852277,0.07685852]],[0.576,[0.75557843,0.47277168,0.07735934]],[0.580,[0.75759206,0.47703020,0.07790305]],[0.584,[0.75958916,0.48129836,0.07848957]],[0.588,[0.76156976,0.48557617,0.07911883]],[0.592,[0.76353516,0.48986274,0.07979299]],[0.596,[0.76548558,0.49415795,0.08051211]],[0.600,[0.76741969,0.49846282,0.08127340]],[0.604,[0.76933749,0.50277737,0.08207660]],[0.608,[0.77123899,0.50710162,0.08292137]],[0.612,[0.77312499,0.51143507,0.08380866]],[0.616,[0.77499716,0.51577662,0.08474070]],[0.620,[0.77685317,0.52012793,0.08571310]],[0.624,[0.77869299,0.52448904,0.08672541]],[0.627,[0.78051662,0.52885998,0.08777712]],[0.631,[0.78232613,0.53323943,0.08887079]],[0.635,[0.78412113,0.53762770,0.09000513]],[0.639,[0.78590001,0.54202590,0.09117718]],[0.643,[0.78766275,0.54643407,0.09238637]],[0.647,[0.78941038,0.55085158,0.09363351]],[0.651,[0.79114495,0.55527718,0.09492064]],[0.655,[0.79286342,0.55971286,0.09624296]],[0.659,[0.79456574,0.56415868,0.09759984]],[0.663,[0.79625293,0.56861405,0.09899190]],[0.667,[0.79792746,0.57307748,0.10042146]],[0.671,[0.79958585,0.57755118,0.10188351]],[0.675,[0.80122804,0.58203522,0.10337740]],[0.678,[0.80285607,0.58652840,0.10490482]],[0.682,[0.80447074,0.59103029,0.10646587]],[0.686,[0.80606916,0.59554268,0.10805666]],[0.690,[0.80765128,0.60006563,0.10967654]],[0.694,[0.80922129,0.60459671,0.11132925]],[0.698,[0.81077606,0.60913783,0.11301075]],[0.702,[0.81231442,0.61368970,0.11471930]],[0.706,[0.81383814,0.61825132,0.11645603]],[0.710,[0.81534926,0.62282161,0.11822217]],[0.714,[0.81684385,0.62740283,0.12001338]],[0.718,[0.81832183,0.63199507,0.12182907]],[0.722,[0.81978904,0.63659511,0.12367382]],[0.725,[0.82123975,0.64120619,0.12554190]],[0.729,[0.82267367,0.64582852,0.12743261]],[0.733,[0.82409542,0.65045959,0.12934922]],[0.737,[0.82550201,0.65510109,0.13128867]],[0.741,[0.82689162,0.65975407,0.13324900]],[0.745,[0.82826808,0.66441648,0.13523271]],[0.749,[0.82963023,0.66908900,0.13723832]],[0.753,[0.83097514,0.67377325,0.13926317]],[0.757,[0.83230641,0.67846735,0.14130944]],[0.761,[0.83362367,0.68317156,0.14337634]],[0.765,[0.83492340,0.68788775,0.14546096]],[0.769,[0.83620945,0.69261395,0.14756554]],[0.773,[0.83748125,0.69735055,0.14968918]],[0.776,[0.83873517,0.70209940,0.15182914]],[0.780,[0.83997589,0.70685819,0.15398802]],[0.784,[0.84120150,0.71162792,0.15616420]],[0.788,[0.84240886,0.71641021,0.15835539]],[0.792,[0.84360400,0.72120210,0.16056488]],[0.796,[0.84478260,0.72600578,0.16278970]],[0.800,[0.84594250,0.73082232,0.16502834]],[0.804,[0.84709169,0.73564789,0.16728499]],[0.808,[0.84822227,0.74048637,0.16955487]],[0.812,[0.84933549,0.74533717,0.17183845]],[0.816,[0.85043640,0.75019794,0.17413811]],[0.820,[0.85151780,0.75507211,0.17644978]],[0.824,[0.85258411,0.75995766,0.17877549]],[0.827,[0.85363511,0.76485473,0.18111487]],[0.831,[0.85466602,0.76976556,0.18346530]],[0.835,[0.85568466,0.77468659,0.18583039]],[0.839,[0.85668433,0.77962093,0.18820665]],[0.843,[0.85766547,0.78456840,0.19059412]],[0.847,[0.85863334,0.78952669,0.19299505]],[0.851,[0.85958005,0.79449933,0.19540561]],[0.855,[0.86051189,0.79948359,0.19782848]],[0.859,[0.86142577,0.80448085,0.20026210]],[0.863,[0.86231873,0.80949244,0.20270505]],[0.867,[0.86319909,0.81451477,0.20516075]],[0.871,[0.86405703,0.81955212,0.20762486]],[0.875,[0.86489859,0.82460193,0.21009982]],[0.878,[0.86572175,0.82966508,0.21258465]],[0.882,[0.86652274,0.83474320,0.21507772]],[0.886,[0.86731030,0.83983262,0.21758244]],[0.890,[0.86807398,0.84493777,0.22009455]],[0.894,[0.86882094,0.85005567,0.22261679]],[0.898,[0.86954753,0.85518787,0.22514765]],[0.902,[0.87025185,0.86033516,0.22768636]],[0.906,[0.87094035,0.86549493,0.23023528]],[0.910,[0.87160329,0.87067115,0.23279074]],[0.914,[0.87225041,0.87585991,0.23535627]],[0.918,[0.87287351,0.88106452,0.23792884]],[0.922,[0.87347555,0.88628382,0.24050952]],[0.925,[0.87405765,0.89151737,0.24309865]],[0.929,[0.87461345,0.89676767,0.24569404]],[0.933,[0.87515332,0.90203072,0.24829921]],[0.937,[0.87566489,0.90731129,0.25090998]],[0.941,[0.87615800,0.91260563,0.25352966]],[0.945,[0.87662518,0.91791659,0.25615577]],[0.949,[0.87706899,0.92324319,0.25878919]],[0.953,[0.87749036,0.92858511,0.26143025]],[0.957,[0.87788347,0.93394450,0.26407712]],[0.961,[0.87825750,0.93931797,0.26673276]],[0.965,[0.87859995,0.94471013,0.26939327]],[0.969,[0.87892352,0.95011633,0.27206270]],[0.973,[0.87921601,0.95554099,0.27473731]],[0.976,[0.87948513,0.96098132,0.27741955]],[0.980,[0.87972594,0.96643910,0.28010799]],[0.984,[0.87993889,0.97191415,0.28280287]],[0.988,[0.88012616,0.97740568,0.28550491]],[0.992,[0.88028113,0.98291600,0.28821226]],[0.996,[0.88041294,0.98844193,0.29092770]],[1.000,[0.88050801,0.99398812,0.29364740]]]
H.colormap_Pastel1 = [[0.000, [0.984, 0.706, 0.682]], [0.002, [0.984, 0.706, 0.682]], [0.004, [0.975, 0.709, 0.689]], [0.006, [0.975, 0.709, 0.689]], [0.008, [0.967, 0.712, 0.695]], [0.010, [0.967, 0.712, 0.695]], [0.012, [0.958, 0.715, 0.702]], [0.014, [0.958, 0.715, 0.702]], [0.016, [0.949, 0.718, 0.708]], [0.018, [0.949, 0.718, 0.708]], [0.020, [0.940, 0.721, 0.715]], [0.022, [0.940, 0.721, 0.715]], [0.023, [0.931, 0.724, 0.721]], [0.025, [0.931, 0.724, 0.721]], [0.027, [0.922, 0.727, 0.728]], [0.029, [0.922, 0.727, 0.728]], [0.031, [0.913, 0.730, 0.735]], [0.033, [0.913, 0.730, 0.735]], [0.035, [0.905, 0.734, 0.741]], [0.037, [0.905, 0.734, 0.741]], [0.039, [0.896, 0.737, 0.748]], [0.041, [0.896, 0.737, 0.748]], [0.043, [0.887, 0.740, 0.754]], [0.045, [0.887, 0.740, 0.754]], [0.047, [0.878, 0.743, 0.761]], [0.049, [0.878, 0.743, 0.761]], [0.051, [0.869, 0.746, 0.767]], [0.053, [0.869, 0.746, 0.767]], [0.055, [0.860, 0.749, 0.774]], [0.057, [0.860, 0.749, 0.774]], [0.059, [0.851, 0.752, 0.780]], [0.061, [0.851, 0.752, 0.780]], [0.063, [0.843, 0.755, 0.787]], [0.065, [0.843, 0.755, 0.787]], [0.067, [0.834, 0.758, 0.793]], [0.068, [0.834, 0.758, 0.793]], [0.070, [0.825, 0.761, 0.800]], [0.072, [0.825, 0.761, 0.800]], [0.074, [0.816, 0.764, 0.806]], [0.076, [0.816, 0.764, 0.806]], [0.078, [0.807, 0.767, 0.813]], [0.080, [0.807, 0.767, 0.813]], [0.082, [0.798, 0.770, 0.819]], [0.084, [0.798, 0.770, 0.819]], [0.086, [0.789, 0.774, 0.826]], [0.088, [0.789, 0.774, 0.826]], [0.090, [0.781, 0.777, 0.832]], [0.092, [0.781, 0.777, 0.832]], [0.094, [0.772, 0.780, 0.839]], [0.096, [0.772, 0.780, 0.839]], [0.098, [0.763, 0.783, 0.845]], [0.100, [0.763, 0.783, 0.845]], [0.102, [0.754, 0.786, 0.852]], [0.104, [0.754, 0.786, 0.852]], [0.106, [0.745, 0.789, 0.858]], [0.108, [0.745, 0.789, 0.858]], [0.110, [0.736, 0.792, 0.865]], [0.112, [0.736, 0.792, 0.865]], [0.114, [0.727, 0.795, 0.871]], [0.115, [0.727, 0.795, 0.871]], [0.117, [0.719, 0.798, 0.878]], [0.119, [0.719, 0.798, 0.878]], [0.121, [0.710, 0.801, 0.884]], [0.123, [0.710, 0.801, 0.884]], [0.125, [0.702, 0.804, 0.890]], [0.127, [0.702, 0.804, 0.890]], [0.129, [0.705, 0.808, 0.886]], [0.131, [0.705, 0.808, 0.886]], [0.133, [0.708, 0.812, 0.882]], [0.135, [0.708, 0.812, 0.882]], [0.137, [0.712, 0.815, 0.879]], [0.139, [0.712, 0.815, 0.879]], [0.141, [0.715, 0.819, 0.875]], [0.143, [0.715, 0.819, 0.875]], [0.145, [0.718, 0.823, 0.871]], [0.147, [0.718, 0.823, 0.871]], [0.149, [0.721, 0.827, 0.868]], [0.151, [0.721, 0.827, 0.868]], [0.153, [0.724, 0.830, 0.864]], [0.155, [0.724, 0.830, 0.864]], [0.157, [0.727, 0.834, 0.860]], [0.159, [0.727, 0.834, 0.860]], [0.160, [0.730, 0.838, 0.857]], [0.162, [0.730, 0.838, 0.857]], [0.164, [0.733, 0.841, 0.853]], [0.166, [0.733, 0.841, 0.853]], [0.168, [0.736, 0.845, 0.849]], [0.170, [0.736, 0.845, 0.849]], [0.172, [0.739, 0.849, 0.845]], [0.174, [0.739, 0.849, 0.845]], [0.176, [0.742, 0.852, 0.842]], [0.178, [0.742, 0.852, 0.842]], [0.180, [0.745, 0.856, 0.838]], [0.182, [0.745, 0.856, 0.838]], [0.184, [0.748, 0.860, 0.834]], [0.186, [0.748, 0.860, 0.834]], [0.188, [0.752, 0.863, 0.831]], [0.190, [0.752, 0.863, 0.831]], [0.192, [0.755, 0.867, 0.827]], [0.194, [0.755, 0.867, 0.827]], [0.196, [0.758, 0.871, 0.823]], [0.198, [0.758, 0.871, 0.823]], [0.200, [0.761, 0.875, 0.820]], [0.202, [0.761, 0.875, 0.820]], [0.204, [0.764, 0.878, 0.816]], [0.205, [0.764, 0.878, 0.816]], [0.207, [0.767, 0.882, 0.812]], [0.209, [0.767, 0.882, 0.812]], [0.211, [0.770, 0.886, 0.809]], [0.213, [0.770, 0.886, 0.809]], [0.215, [0.773, 0.889, 0.805]], [0.217, [0.773, 0.889, 0.805]], [0.219, [0.776, 0.893, 0.801]], [0.221, [0.776, 0.893, 0.801]], [0.223, [0.779, 0.897, 0.797]], [0.225, [0.779, 0.897, 0.797]], [0.227, [0.782, 0.900, 0.794]], [0.229, [0.782, 0.900, 0.794]], [0.231, [0.785, 0.904, 0.790]], [0.233, [0.785, 0.904, 0.790]], [0.235, [0.788, 0.908, 0.786]], [0.237, [0.788, 0.908, 0.786]], [0.239, [0.792, 0.911, 0.783]], [0.241, [0.792, 0.911, 0.783]], [0.243, [0.795, 0.915, 0.779]], [0.245, [0.795, 0.915, 0.779]], [0.247, [0.798, 0.919, 0.775]], [0.249, [0.798, 0.919, 0.775]], [0.250, [0.801, 0.921, 0.774]], [0.252, [0.801, 0.921, 0.774]], [0.254, [0.803, 0.917, 0.777]], [0.256, [0.803, 0.917, 0.777]], [0.258, [0.805, 0.913, 0.781]], [0.260, [0.805, 0.913, 0.781]], [0.262, [0.807, 0.909, 0.785]], [0.264, [0.807, 0.909, 0.785]], [0.266, [0.809, 0.905, 0.789]], [0.268, [0.809, 0.905, 0.789]], [0.270, [0.812, 0.901, 0.793]], [0.272, [0.812, 0.901, 0.793]], [0.274, [0.814, 0.897, 0.796]], [0.276, [0.814, 0.897, 0.796]], [0.278, [0.816, 0.893, 0.800]], [0.280, [0.816, 0.893, 0.800]], [0.282, [0.818, 0.889, 0.804]], [0.284, [0.818, 0.889, 0.804]], [0.286, [0.820, 0.885, 0.808]], [0.288, [0.820, 0.885, 0.808]], [0.290, [0.823, 0.881, 0.812]], [0.292, [0.823, 0.881, 0.812]], [0.294, [0.825, 0.877, 0.815]], [0.295, [0.825, 0.877, 0.815]], [0.297, [0.827, 0.873, 0.819]], [0.299, [0.827, 0.873, 0.819]], [0.301, [0.829, 0.869, 0.823]], [0.303, [0.829, 0.869, 0.823]], [0.305, [0.832, 0.865, 0.827]], [0.307, [0.832, 0.865, 0.827]], [0.309, [0.834, 0.862, 0.831]], [0.311, [0.834, 0.862, 0.831]], [0.313, [0.836, 0.858, 0.835]], [0.315, [0.836, 0.858, 0.835]], [0.317, [0.838, 0.854, 0.838]], [0.319, [0.838, 0.854, 0.838]], [0.321, [0.840, 0.850, 0.842]], [0.323, [0.840, 0.850, 0.842]], [0.325, [0.843, 0.846, 0.846]], [0.327, [0.843, 0.846, 0.846]], [0.329, [0.845, 0.842, 0.850]], [0.331, [0.845, 0.842, 0.850]], [0.333, [0.847, 0.838, 0.854]], [0.335, [0.847, 0.838, 0.854]], [0.337, [0.849, 0.834, 0.857]], [0.339, [0.849, 0.834, 0.857]], [0.341, [0.851, 0.830, 0.861]], [0.342, [0.851, 0.830, 0.861]], [0.344, [0.854, 0.826, 0.865]], [0.346, [0.854, 0.826, 0.865]], [0.348, [0.856, 0.822, 0.869]], [0.350, [0.856, 0.822, 0.869]], [0.352, [0.858, 0.818, 0.873]], [0.354, [0.858, 0.818, 0.873]], [0.356, [0.860, 0.814, 0.876]], [0.358, [0.860, 0.814, 0.876]], [0.360, [0.863, 0.810, 0.880]], [0.362, [0.863, 0.810, 0.880]], [0.364, [0.865, 0.806, 0.884]], [0.366, [0.865, 0.806, 0.884]], [0.368, [0.867, 0.802, 0.888]], [0.370, [0.867, 0.802, 0.888]], [0.372, [0.869, 0.799, 0.892]], [0.374, [0.869, 0.799, 0.892]], [0.376, [0.872, 0.797, 0.891]], [0.378, [0.872, 0.797, 0.891]], [0.380, [0.876, 0.798, 0.884]], [0.382, [0.876, 0.798, 0.884]], [0.384, [0.880, 0.800, 0.876]], [0.386, [0.880, 0.800, 0.876]], [0.387, [0.884, 0.802, 0.868]], [0.389, [0.884, 0.802, 0.868]], [0.391, [0.888, 0.804, 0.861]], [0.393, [0.888, 0.804, 0.861]], [0.395, [0.892, 0.805, 0.853]], [0.397, [0.892, 0.805, 0.853]], [0.399, [0.896, 0.807, 0.845]], [0.401, [0.896, 0.807, 0.845]], [0.403, [0.900, 0.809, 0.838]], [0.405, [0.900, 0.809, 0.838]], [0.407, [0.904, 0.811, 0.830]], [0.409, [0.904, 0.811, 0.830]], [0.411, [0.907, 0.812, 0.823]], [0.413, [0.907, 0.812, 0.823]], [0.415, [0.911, 0.814, 0.815]], [0.417, [0.911, 0.814, 0.815]], [0.419, [0.915, 0.816, 0.807]], [0.421, [0.915, 0.816, 0.807]], [0.423, [0.919, 0.817, 0.800]], [0.425, [0.919, 0.817, 0.800]], [0.427, [0.923, 0.819, 0.792]], [0.429, [0.923, 0.819, 0.792]], [0.431, [0.927, 0.821, 0.784]], [0.432, [0.927, 0.821, 0.784]], [0.434, [0.931, 0.823, 0.777]], [0.436, [0.931, 0.823, 0.777]], [0.438, [0.935, 0.824, 0.769]], [0.440, [0.935, 0.824, 0.769]], [0.442, [0.939, 0.826, 0.762]], [0.444, [0.939, 0.826, 0.762]], [0.446, [0.943, 0.828, 0.754]], [0.448, [0.943, 0.828, 0.754]], [0.450, [0.947, 0.829, 0.746]], [0.452, [0.947, 0.829, 0.746]], [0.454, [0.951, 0.831, 0.739]], [0.456, [0.951, 0.831, 0.739]], [0.458, [0.955, 0.833, 0.731]], [0.460, [0.955, 0.833, 0.731]], [0.462, [0.959, 0.835, 0.723]], [0.464, [0.959, 0.835, 0.723]], [0.466, [0.963, 0.836, 0.716]], [0.468, [0.963, 0.836, 0.716]], [0.470, [0.967, 0.838, 0.708]], [0.472, [0.967, 0.838, 0.708]], [0.474, [0.970, 0.840, 0.701]], [0.476, [0.970, 0.840, 0.701]], [0.477, [0.974, 0.842, 0.693]], [0.479, [0.974, 0.842, 0.693]], [0.481, [0.978, 0.843, 0.685]], [0.483, [0.978, 0.843, 0.685]], [0.485, [0.982, 0.845, 0.678]], [0.487, [0.982, 0.845, 0.678]], [0.489, [0.986, 0.847, 0.670]], [0.491, [0.986, 0.847, 0.670]], [0.493, [0.990, 0.848, 0.662]], [0.495, [0.990, 0.848, 0.662]], [0.497, [0.994, 0.850, 0.655]], [0.499, [0.994, 0.850, 0.655]], [0.501, [0.996, 0.853, 0.653]], [0.503, [0.996, 0.853, 0.653]], [0.505, [0.996, 0.858, 0.658]], [0.507, [0.996, 0.858, 0.658]], [0.509, [0.996, 0.863, 0.663]], [0.511, [0.996, 0.863, 0.663]], [0.513, [0.997, 0.867, 0.667]], [0.515, [0.997, 0.867, 0.667]], [0.517, [0.997, 0.872, 0.672]], [0.519, [0.997, 0.872, 0.672]], [0.521, [0.997, 0.877, 0.677]], [0.523, [0.997, 0.877, 0.677]], [0.524, [0.997, 0.881, 0.681]], [0.526, [0.997, 0.881, 0.681]], [0.528, [0.997, 0.886, 0.686]], [0.530, [0.997, 0.886, 0.686]], [0.532, [0.997, 0.891, 0.691]], [0.534, [0.997, 0.891, 0.691]], [0.536, [0.997, 0.895, 0.695]], [0.538, [0.997, 0.895, 0.695]], [0.540, [0.997, 0.900, 0.700]], [0.542, [0.997, 0.900, 0.700]], [0.544, [0.997, 0.905, 0.705]], [0.546, [0.997, 0.905, 0.705]], [0.548, [0.998, 0.909, 0.709]], [0.550, [0.998, 0.909, 0.709]], [0.552, [0.998, 0.914, 0.714]], [0.554, [0.998, 0.914, 0.714]], [0.556, [0.998, 0.919, 0.719]], [0.558, [0.998, 0.919, 0.719]], [0.560, [0.998, 0.923, 0.723]], [0.562, [0.998, 0.923, 0.723]], [0.564, [0.998, 0.928, 0.728]], [0.566, [0.998, 0.928, 0.728]], [0.568, [0.998, 0.933, 0.733]], [0.569, [0.998, 0.933, 0.733]], [0.571, [0.998, 0.937, 0.737]], [0.573, [0.998, 0.937, 0.737]], [0.575, [0.998, 0.942, 0.742]], [0.577, [0.998, 0.942, 0.742]], [0.579, [0.999, 0.947, 0.747]], [0.581, [0.999, 0.947, 0.747]], [0.583, [0.999, 0.951, 0.751]], [0.585, [0.999, 0.951, 0.751]], [0.587, [0.999, 0.956, 0.756]], [0.589, [0.999, 0.956, 0.756]], [0.591, [0.999, 0.961, 0.761]], [0.593, [0.999, 0.961, 0.761]], [0.595, [0.999, 0.966, 0.766]], [0.597, [0.999, 0.966, 0.766]], [0.599, [0.999, 0.970, 0.770]], [0.601, [0.999, 0.970, 0.770]], [0.603, [0.999, 0.975, 0.775]], [0.605, [0.999, 0.975, 0.775]], [0.607, [0.999, 0.980, 0.780]], [0.609, [0.999, 0.980, 0.780]], [0.611, [1.000, 0.984, 0.784]], [0.613, [1.000, 0.984, 0.784]], [0.614, [1.000, 0.989, 0.789]], [0.616, [1.000, 0.989, 0.789]], [0.618, [1.000, 0.994, 0.794]], [0.620, [1.000, 0.994, 0.794]], [0.622, [1.000, 0.998, 0.798]], [0.624, [1.000, 0.998, 0.798]], [0.626, [0.998, 0.997, 0.799]], [0.628, [0.998, 0.997, 0.799]], [0.630, [0.995, 0.992, 0.797]], [0.632, [0.995, 0.992, 0.797]], [0.634, [0.992, 0.987, 0.795]], [0.636, [0.992, 0.987, 0.795]], [0.638, [0.988, 0.983, 0.793]], [0.640, [0.988, 0.983, 0.793]], [0.642, [0.985, 0.978, 0.791]], [0.644, [0.985, 0.978, 0.791]], [0.646, [0.982, 0.973, 0.790]], [0.648, [0.982, 0.973, 0.790]], [0.650, [0.979, 0.968, 0.788]], [0.652, [0.979, 0.968, 0.788]], [0.654, [0.976, 0.963, 0.786]], [0.656, [0.976, 0.963, 0.786]], [0.658, [0.972, 0.959, 0.784]], [0.659, [0.972, 0.959, 0.784]], [0.661, [0.969, 0.954, 0.782]], [0.663, [0.969, 0.954, 0.782]], [0.665, [0.966, 0.949, 0.780]], [0.667, [0.966, 0.949, 0.780]], [0.669, [0.963, 0.944, 0.779]], [0.671, [0.963, 0.944, 0.779]], [0.673, [0.960, 0.939, 0.777]], [0.675, [0.960, 0.939, 0.777]], [0.677, [0.956, 0.935, 0.775]], [0.679, [0.956, 0.935, 0.775]], [0.681, [0.953, 0.930, 0.773]], [0.683, [0.953, 0.930, 0.773]], [0.685, [0.950, 0.925, 0.771]], [0.687, [0.950, 0.925, 0.771]], [0.689, [0.947, 0.920, 0.769]], [0.691, [0.947, 0.920, 0.769]], [0.693, [0.944, 0.915, 0.767]], [0.695, [0.944, 0.915, 0.767]], [0.697, [0.940, 0.911, 0.766]], [0.699, [0.940, 0.911, 0.766]], [0.701, [0.937, 0.906, 0.764]], [0.703, [0.937, 0.906, 0.764]], [0.705, [0.934, 0.901, 0.762]], [0.706, [0.934, 0.901, 0.762]], [0.708, [0.931, 0.896, 0.760]], [0.710, [0.931, 0.896, 0.760]], [0.712, [0.928, 0.891, 0.758]], [0.714, [0.928, 0.891, 0.758]], [0.716, [0.924, 0.887, 0.756]], [0.718, [0.924, 0.887, 0.756]], [0.720, [0.921, 0.882, 0.755]], [0.722, [0.921, 0.882, 0.755]], [0.724, [0.918, 0.877, 0.753]], [0.726, [0.918, 0.877, 0.753]], [0.728, [0.915, 0.872, 0.751]], [0.730, [0.915, 0.872, 0.751]], [0.732, [0.912, 0.867, 0.749]], [0.734, [0.912, 0.867, 0.749]], [0.736, [0.908, 0.863, 0.747]], [0.738, [0.908, 0.863, 0.747]], [0.740, [0.905, 0.858, 0.745]], [0.742, [0.905, 0.858, 0.745]], [0.744, [0.902, 0.853, 0.743]], [0.746, [0.902, 0.853, 0.743]], [0.748, [0.899, 0.848, 0.742]], [0.750, [0.899, 0.848, 0.742]], [0.751, [0.900, 0.847, 0.746]], [0.753, [0.900, 0.847, 0.746]], [0.755, [0.903, 0.847, 0.751]], [0.757, [0.903, 0.847, 0.751]], [0.759, [0.906, 0.848, 0.757]], [0.761, [0.906, 0.848, 0.757]], [0.763, [0.909, 0.848, 0.763]], [0.765, [0.909, 0.848, 0.763]], [0.767, [0.912, 0.848, 0.769]], [0.769, [0.912, 0.848, 0.769]], [0.771, [0.915, 0.848, 0.774]], [0.773, [0.915, 0.848, 0.774]], [0.775, [0.918, 0.849, 0.780]], [0.777, [0.918, 0.849, 0.780]], [0.779, [0.921, 0.849, 0.786]], [0.781, [0.921, 0.849, 0.786]], [0.783, [0.924, 0.849, 0.792]], [0.785, [0.924, 0.849, 0.792]], [0.787, [0.927, 0.849, 0.798]], [0.789, [0.927, 0.849, 0.798]], [0.791, [0.930, 0.850, 0.803]], [0.793, [0.930, 0.850, 0.803]], [0.795, [0.933, 0.850, 0.809]], [0.796, [0.933, 0.850, 0.809]], [0.798, [0.936, 0.850, 0.815]], [0.800, [0.936, 0.850, 0.815]], [0.802, [0.939, 0.850, 0.821]], [0.804, [0.939, 0.850, 0.821]], [0.806, [0.942, 0.851, 0.826]], [0.808, [0.942, 0.851, 0.826]], [0.810, [0.945, 0.851, 0.832]], [0.812, [0.945, 0.851, 0.832]], [0.814, [0.947, 0.851, 0.838]], [0.816, [0.947, 0.851, 0.838]], [0.818, [0.950, 0.851, 0.844]], [0.820, [0.950, 0.851, 0.844]], [0.822, [0.953, 0.852, 0.850]], [0.824, [0.953, 0.852, 0.850]], [0.826, [0.956, 0.852, 0.855]], [0.828, [0.956, 0.852, 0.855]], [0.830, [0.959, 0.852, 0.861]], [0.832, [0.959, 0.852, 0.861]], [0.834, [0.962, 0.852, 0.867]], [0.836, [0.962, 0.852, 0.867]], [0.838, [0.965, 0.853, 0.873]], [0.840, [0.965, 0.853, 0.873]], [0.841, [0.968, 0.853, 0.879]], [0.843, [0.968, 0.853, 0.879]], [0.845, [0.971, 0.853, 0.884]], [0.847, [0.971, 0.853, 0.884]], [0.849, [0.974, 0.853, 0.890]], [0.851, [0.974, 0.853, 0.890]], [0.853, [0.977, 0.854, 0.896]], [0.855, [0.977, 0.854, 0.896]], [0.857, [0.980, 0.854, 0.902]], [0.859, [0.980, 0.854, 0.902]], [0.861, [0.983, 0.854, 0.907]], [0.863, [0.983, 0.854, 0.907]], [0.865, [0.986, 0.854, 0.913]], [0.867, [0.986, 0.854, 0.913]], [0.869, [0.989, 0.855, 0.919]], [0.871, [0.989, 0.855, 0.919]], [0.873, [0.992, 0.855, 0.925]], [0.875, [0.992, 0.855, 0.925]], [0.877, [0.991, 0.857, 0.926]], [0.879, [0.991, 0.857, 0.926]], [0.881, [0.990, 0.860, 0.927]], [0.883, [0.990, 0.860, 0.927]], [0.885, [0.988, 0.863, 0.928]], [0.886, [0.988, 0.863, 0.928]], [0.888, [0.987, 0.866, 0.928]], [0.890, [0.987, 0.866, 0.928]], [0.892, [0.986, 0.869, 0.929]], [0.894, [0.986, 0.869, 0.929]], [0.896, [0.984, 0.872, 0.930]], [0.898, [0.984, 0.872, 0.930]], [0.900, [0.983, 0.875, 0.931]], [0.902, [0.983, 0.875, 0.931]], [0.904, [0.981, 0.878, 0.931]], [0.906, [0.981, 0.878, 0.931]], [0.908, [0.980, 0.881, 0.932]], [0.910, [0.980, 0.881, 0.932]], [0.912, [0.979, 0.884, 0.933]], [0.914, [0.979, 0.884, 0.933]], [0.916, [0.977, 0.887, 0.934]], [0.918, [0.977, 0.887, 0.934]], [0.920, [0.976, 0.890, 0.934]], [0.922, [0.976, 0.890, 0.934]], [0.924, [0.975, 0.893, 0.935]], [0.926, [0.975, 0.893, 0.935]], [0.928, [0.973, 0.896, 0.936]], [0.930, [0.973, 0.896, 0.936]], [0.932, [0.972, 0.899, 0.936]], [0.933, [0.972, 0.899, 0.936]], [0.935, [0.971, 0.902, 0.937]], [0.937, [0.971, 0.902, 0.937]], [0.939, [0.969, 0.905, 0.938]], [0.941, [0.969, 0.905, 0.938]], [0.943, [0.968, 0.908, 0.939]], [0.945, [0.968, 0.908, 0.939]], [0.947, [0.967, 0.911, 0.939]], [0.949, [0.967, 0.911, 0.939]], [0.951, [0.965, 0.914, 0.940]], [0.953, [0.965, 0.914, 0.940]], [0.955, [0.964, 0.917, 0.941]], [0.957, [0.964, 0.917, 0.941]], [0.959, [0.963, 0.919, 0.942]], [0.961, [0.963, 0.919, 0.942]], [0.963, [0.961, 0.922, 0.942]], [0.965, [0.961, 0.922, 0.942]], [0.967, [0.960, 0.925, 0.943]], [0.969, [0.960, 0.925, 0.943]], [0.971, [0.958, 0.928, 0.944]], [0.973, [0.958, 0.928, 0.944]], [0.975, [0.957, 0.931, 0.945]], [0.977, [0.957, 0.931, 0.945]], [0.978, [0.956, 0.934, 0.945]], [0.980, [0.956, 0.934, 0.945]], [0.982, [0.954, 0.937, 0.946]], [0.984, [0.954, 0.937, 0.946]], [0.986, [0.953, 0.940, 0.947]], [0.988, [0.953, 0.940, 0.947]], [0.990, [0.952, 0.943, 0.948]], [0.992, [0.952, 0.943, 0.948]], [0.994, [0.950, 0.946, 0.948]], [0.996, [0.950, 0.946, 0.948]], [0.998, [0.949, 0.949, 0.949]], [1.000, [0.949, 0.949, 0.949]]];
H.colormap_Pastel2 = [[0.000, [0.702, 0.886, 0.804]], [0.002, [0.702, 0.886, 0.804]], [0.004, [0.710, 0.884, 0.800]], [0.006, [0.710, 0.884, 0.800]], [0.008, [0.718, 0.882, 0.797]], [0.010, [0.718, 0.882, 0.797]], [0.012, [0.726, 0.879, 0.793]], [0.014, [0.726, 0.879, 0.793]], [0.016, [0.734, 0.877, 0.790]], [0.018, [0.734, 0.877, 0.790]], [0.020, [0.742, 0.875, 0.786]], [0.022, [0.742, 0.875, 0.786]], [0.023, [0.750, 0.873, 0.783]], [0.025, [0.750, 0.873, 0.783]], [0.027, [0.758, 0.870, 0.779]], [0.029, [0.758, 0.870, 0.779]], [0.031, [0.766, 0.868, 0.776]], [0.033, [0.766, 0.868, 0.776]], [0.035, [0.774, 0.866, 0.772]], [0.037, [0.774, 0.866, 0.772]], [0.039, [0.782, 0.864, 0.768]], [0.041, [0.782, 0.864, 0.768]], [0.043, [0.790, 0.861, 0.765]], [0.045, [0.790, 0.861, 0.765]], [0.047, [0.798, 0.859, 0.761]], [0.049, [0.798, 0.859, 0.761]], [0.051, [0.806, 0.857, 0.758]], [0.053, [0.806, 0.857, 0.758]], [0.055, [0.813, 0.855, 0.754]], [0.057, [0.813, 0.855, 0.754]], [0.059, [0.821, 0.852, 0.751]], [0.061, [0.821, 0.852, 0.751]], [0.063, [0.829, 0.850, 0.747]], [0.065, [0.829, 0.850, 0.747]], [0.067, [0.837, 0.848, 0.744]], [0.068, [0.837, 0.848, 0.744]], [0.070, [0.845, 0.846, 0.740]], [0.072, [0.845, 0.846, 0.740]], [0.074, [0.853, 0.843, 0.736]], [0.076, [0.853, 0.843, 0.736]], [0.078, [0.861, 0.841, 0.733]], [0.080, [0.861, 0.841, 0.733]], [0.082, [0.869, 0.839, 0.729]], [0.084, [0.869, 0.839, 0.729]], [0.086, [0.877, 0.837, 0.726]], [0.088, [0.877, 0.837, 0.726]], [0.090, [0.885, 0.834, 0.722]], [0.092, [0.885, 0.834, 0.722]], [0.094, [0.893, 0.832, 0.719]], [0.096, [0.893, 0.832, 0.719]], [0.098, [0.901, 0.830, 0.715]], [0.100, [0.901, 0.830, 0.715]], [0.102, [0.909, 0.827, 0.712]], [0.104, [0.909, 0.827, 0.712]], [0.106, [0.917, 0.825, 0.708]], [0.108, [0.917, 0.825, 0.708]], [0.110, [0.925, 0.823, 0.704]], [0.112, [0.925, 0.823, 0.704]], [0.114, [0.933, 0.821, 0.701]], [0.115, [0.933, 0.821, 0.701]], [0.117, [0.941, 0.818, 0.697]], [0.119, [0.941, 0.818, 0.697]], [0.121, [0.949, 0.816, 0.694]], [0.123, [0.949, 0.816, 0.694]], [0.125, [0.957, 0.814, 0.690]], [0.127, [0.957, 0.814, 0.690]], [0.129, [0.965, 0.812, 0.687]], [0.131, [0.965, 0.812, 0.687]], [0.133, [0.973, 0.809, 0.683]], [0.135, [0.973, 0.809, 0.683]], [0.137, [0.981, 0.807, 0.680]], [0.139, [0.981, 0.807, 0.680]], [0.141, [0.989, 0.805, 0.676]], [0.143, [0.989, 0.805, 0.676]], [0.145, [0.989, 0.804, 0.678]], [0.147, [0.989, 0.804, 0.678]], [0.149, [0.984, 0.805, 0.685]], [0.151, [0.984, 0.805, 0.685]], [0.153, [0.978, 0.806, 0.691]], [0.155, [0.978, 0.806, 0.691]], [0.157, [0.973, 0.807, 0.698]], [0.159, [0.973, 0.807, 0.698]], [0.160, [0.968, 0.808, 0.704]], [0.162, [0.968, 0.808, 0.704]], [0.164, [0.962, 0.809, 0.710]], [0.166, [0.962, 0.809, 0.710]], [0.168, [0.957, 0.810, 0.717]], [0.170, [0.957, 0.810, 0.717]], [0.172, [0.951, 0.810, 0.723]], [0.174, [0.951, 0.810, 0.723]], [0.176, [0.946, 0.811, 0.730]], [0.178, [0.946, 0.811, 0.730]], [0.180, [0.941, 0.812, 0.736]], [0.182, [0.941, 0.812, 0.736]], [0.184, [0.935, 0.813, 0.743]], [0.186, [0.935, 0.813, 0.743]], [0.188, [0.930, 0.814, 0.749]], [0.190, [0.930, 0.814, 0.749]], [0.192, [0.924, 0.815, 0.756]], [0.194, [0.924, 0.815, 0.756]], [0.196, [0.919, 0.816, 0.762]], [0.198, [0.919, 0.816, 0.762]], [0.200, [0.914, 0.816, 0.769]], [0.202, [0.914, 0.816, 0.769]], [0.204, [0.908, 0.817, 0.775]], [0.205, [0.908, 0.817, 0.775]], [0.207, [0.903, 0.818, 0.782]], [0.209, [0.903, 0.818, 0.782]], [0.211, [0.898, 0.819, 0.788]], [0.213, [0.898, 0.819, 0.788]], [0.215, [0.892, 0.820, 0.794]], [0.217, [0.892, 0.820, 0.794]], [0.219, [0.887, 0.821, 0.801]], [0.221, [0.887, 0.821, 0.801]], [0.223, [0.881, 0.822, 0.807]], [0.225, [0.881, 0.822, 0.807]], [0.227, [0.876, 0.822, 0.814]], [0.229, [0.876, 0.822, 0.814]], [0.231, [0.871, 0.823, 0.820]], [0.233, [0.871, 0.823, 0.820]], [0.235, [0.865, 0.824, 0.827]], [0.237, [0.865, 0.824, 0.827]], [0.239, [0.860, 0.825, 0.833]], [0.241, [0.860, 0.825, 0.833]], [0.243, [0.855, 0.826, 0.840]], [0.245, [0.855, 0.826, 0.840]], [0.247, [0.849, 0.827, 0.846]], [0.249, [0.849, 0.827, 0.846]], [0.250, [0.844, 0.828, 0.853]], [0.252, [0.844, 0.828, 0.853]], [0.254, [0.838, 0.829, 0.859]], [0.256, [0.838, 0.829, 0.859]], [0.258, [0.833, 0.829, 0.866]], [0.260, [0.833, 0.829, 0.866]], [0.262, [0.828, 0.830, 0.872]], [0.264, [0.828, 0.830, 0.872]], [0.266, [0.822, 0.831, 0.878]], [0.268, [0.822, 0.831, 0.878]], [0.270, [0.817, 0.832, 0.885]], [0.272, [0.817, 0.832, 0.885]], [0.274, [0.811, 0.833, 0.891]], [0.276, [0.811, 0.833, 0.891]], [0.278, [0.806, 0.834, 0.898]], [0.280, [0.806, 0.834, 0.898]], [0.282, [0.801, 0.835, 0.904]], [0.284, [0.801, 0.835, 0.904]], [0.286, [0.797, 0.835, 0.910]], [0.288, [0.797, 0.835, 0.910]], [0.290, [0.801, 0.834, 0.909]], [0.292, [0.801, 0.834, 0.909]], [0.294, [0.806, 0.833, 0.909]], [0.295, [0.806, 0.833, 0.909]], [0.297, [0.810, 0.832, 0.908]], [0.299, [0.810, 0.832, 0.908]], [0.301, [0.814, 0.830, 0.908]], [0.303, [0.814, 0.830, 0.908]], [0.305, [0.819, 0.829, 0.908]], [0.307, [0.819, 0.829, 0.908]], [0.309, [0.823, 0.828, 0.907]], [0.311, [0.823, 0.828, 0.907]], [0.313, [0.828, 0.827, 0.907]], [0.315, [0.828, 0.827, 0.907]], [0.317, [0.832, 0.826, 0.906]], [0.319, [0.832, 0.826, 0.906]], [0.321, [0.836, 0.824, 0.906]], [0.323, [0.836, 0.824, 0.906]], [0.325, [0.841, 0.823, 0.905]], [0.327, [0.841, 0.823, 0.905]], [0.329, [0.845, 0.822, 0.905]], [0.331, [0.845, 0.822, 0.905]], [0.333, [0.850, 0.821, 0.905]], [0.335, [0.850, 0.821, 0.905]], [0.337, [0.854, 0.820, 0.904]], [0.339, [0.854, 0.820, 0.904]], [0.341, [0.859, 0.819, 0.904]], [0.342, [0.859, 0.819, 0.904]], [0.344, [0.863, 0.817, 0.903]], [0.346, [0.863, 0.817, 0.903]], [0.348, [0.867, 0.816, 0.903]], [0.350, [0.867, 0.816, 0.903]], [0.352, [0.872, 0.815, 0.902]], [0.354, [0.872, 0.815, 0.902]], [0.356, [0.876, 0.814, 0.902]], [0.358, [0.876, 0.814, 0.902]], [0.360, [0.881, 0.813, 0.902]], [0.362, [0.881, 0.813, 0.902]], [0.364, [0.885, 0.811, 0.901]], [0.366, [0.885, 0.811, 0.901]], [0.368, [0.889, 0.810, 0.901]], [0.370, [0.889, 0.810, 0.901]], [0.372, [0.894, 0.809, 0.900]], [0.374, [0.894, 0.809, 0.900]], [0.376, [0.898, 0.808, 0.900]], [0.378, [0.898, 0.808, 0.900]], [0.380, [0.903, 0.807, 0.899]], [0.382, [0.903, 0.807, 0.899]], [0.384, [0.907, 0.806, 0.899]], [0.386, [0.907, 0.806, 0.899]], [0.387, [0.911, 0.804, 0.899]], [0.389, [0.911, 0.804, 0.899]], [0.391, [0.916, 0.803, 0.898]], [0.393, [0.916, 0.803, 0.898]], [0.395, [0.920, 0.802, 0.898]], [0.397, [0.920, 0.802, 0.898]], [0.399, [0.925, 0.801, 0.897]], [0.401, [0.925, 0.801, 0.897]], [0.403, [0.929, 0.800, 0.897]], [0.405, [0.929, 0.800, 0.897]], [0.407, [0.934, 0.798, 0.896]], [0.409, [0.934, 0.798, 0.896]], [0.411, [0.938, 0.797, 0.896]], [0.413, [0.938, 0.797, 0.896]], [0.415, [0.942, 0.796, 0.896]], [0.417, [0.942, 0.796, 0.896]], [0.419, [0.947, 0.795, 0.895]], [0.421, [0.947, 0.795, 0.895]], [0.423, [0.951, 0.794, 0.895]], [0.425, [0.951, 0.794, 0.895]], [0.427, [0.956, 0.792, 0.894]], [0.429, [0.956, 0.792, 0.894]], [0.431, [0.956, 0.795, 0.892]], [0.432, [0.956, 0.795, 0.892]], [0.434, [0.954, 0.800, 0.889]], [0.436, [0.954, 0.800, 0.889]], [0.438, [0.953, 0.805, 0.886]], [0.440, [0.953, 0.805, 0.886]], [0.442, [0.951, 0.809, 0.883]], [0.444, [0.951, 0.809, 0.883]], [0.446, [0.950, 0.814, 0.880]], [0.448, [0.950, 0.814, 0.880]], [0.450, [0.948, 0.819, 0.878]], [0.452, [0.948, 0.819, 0.878]], [0.454, [0.947, 0.823, 0.875]], [0.456, [0.947, 0.823, 0.875]], [0.458, [0.945, 0.828, 0.872]], [0.460, [0.945, 0.828, 0.872]], [0.462, [0.944, 0.832, 0.869]], [0.464, [0.944, 0.832, 0.869]], [0.466, [0.942, 0.837, 0.866]], [0.468, [0.942, 0.837, 0.866]], [0.470, [0.941, 0.842, 0.863]], [0.472, [0.941, 0.842, 0.863]], [0.474, [0.939, 0.846, 0.860]], [0.476, [0.939, 0.846, 0.860]], [0.477, [0.938, 0.851, 0.857]], [0.479, [0.938, 0.851, 0.857]], [0.481, [0.936, 0.856, 0.854]], [0.483, [0.936, 0.856, 0.854]], [0.485, [0.935, 0.860, 0.851]], [0.487, [0.935, 0.860, 0.851]], [0.489, [0.933, 0.865, 0.848]], [0.491, [0.933, 0.865, 0.848]], [0.493, [0.932, 0.870, 0.846]], [0.495, [0.932, 0.870, 0.846]], [0.497, [0.930, 0.874, 0.843]], [0.499, [0.930, 0.874, 0.843]], [0.501, [0.929, 0.879, 0.840]], [0.503, [0.929, 0.879, 0.840]], [0.505, [0.927, 0.883, 0.837]], [0.507, [0.927, 0.883, 0.837]], [0.509, [0.926, 0.888, 0.834]], [0.511, [0.926, 0.888, 0.834]], [0.513, [0.924, 0.893, 0.831]], [0.515, [0.924, 0.893, 0.831]], [0.517, [0.923, 0.897, 0.828]], [0.519, [0.923, 0.897, 0.828]], [0.521, [0.921, 0.902, 0.825]], [0.523, [0.921, 0.902, 0.825]], [0.524, [0.920, 0.907, 0.822]], [0.526, [0.920, 0.907, 0.822]], [0.528, [0.918, 0.911, 0.819]], [0.530, [0.918, 0.911, 0.819]], [0.532, [0.917, 0.916, 0.816]], [0.534, [0.917, 0.916, 0.816]], [0.536, [0.915, 0.920, 0.814]], [0.538, [0.915, 0.920, 0.814]], [0.540, [0.914, 0.925, 0.811]], [0.542, [0.914, 0.925, 0.811]], [0.544, [0.912, 0.930, 0.808]], [0.546, [0.912, 0.930, 0.808]], [0.548, [0.911, 0.934, 0.805]], [0.550, [0.911, 0.934, 0.805]], [0.552, [0.909, 0.939, 0.802]], [0.554, [0.909, 0.939, 0.802]], [0.556, [0.908, 0.944, 0.799]], [0.558, [0.908, 0.944, 0.799]], [0.560, [0.906, 0.948, 0.796]], [0.562, [0.906, 0.948, 0.796]], [0.564, [0.905, 0.953, 0.793]], [0.566, [0.905, 0.953, 0.793]], [0.568, [0.903, 0.957, 0.790]], [0.569, [0.903, 0.957, 0.790]], [0.571, [0.903, 0.961, 0.787]], [0.573, [0.903, 0.961, 0.787]], [0.575, [0.905, 0.960, 0.784]], [0.577, [0.905, 0.960, 0.784]], [0.579, [0.908, 0.960, 0.782]], [0.581, [0.908, 0.960, 0.782]], [0.583, [0.911, 0.960, 0.779]], [0.585, [0.911, 0.960, 0.779]], [0.587, [0.913, 0.959, 0.776]], [0.589, [0.913, 0.959, 0.776]], [0.591, [0.916, 0.959, 0.773]], [0.593, [0.916, 0.959, 0.773]], [0.595, [0.919, 0.959, 0.770]], [0.597, [0.919, 0.959, 0.770]], [0.599, [0.922, 0.958, 0.767]], [0.601, [0.922, 0.958, 0.767]], [0.603, [0.924, 0.958, 0.764]], [0.605, [0.924, 0.958, 0.764]], [0.607, [0.927, 0.958, 0.761]], [0.609, [0.927, 0.958, 0.761]], [0.611, [0.930, 0.957, 0.758]], [0.613, [0.930, 0.957, 0.758]], [0.614, [0.932, 0.957, 0.755]], [0.616, [0.932, 0.957, 0.755]], [0.618, [0.935, 0.957, 0.753]], [0.620, [0.935, 0.957, 0.753]], [0.622, [0.938, 0.956, 0.750]], [0.624, [0.938, 0.956, 0.750]], [0.626, [0.940, 0.956, 0.747]], [0.628, [0.940, 0.956, 0.747]], [0.630, [0.943, 0.956, 0.744]], [0.632, [0.943, 0.956, 0.744]], [0.634, [0.946, 0.956, 0.741]], [0.636, [0.946, 0.956, 0.741]], [0.638, [0.948, 0.955, 0.738]], [0.640, [0.948, 0.955, 0.738]], [0.642, [0.951, 0.955, 0.735]], [0.644, [0.951, 0.955, 0.735]], [0.646, [0.954, 0.955, 0.732]], [0.648, [0.954, 0.955, 0.732]], [0.650, [0.957, 0.954, 0.729]], [0.652, [0.957, 0.954, 0.729]], [0.654, [0.959, 0.954, 0.726]], [0.656, [0.959, 0.954, 0.726]], [0.658, [0.962, 0.954, 0.723]], [0.659, [0.962, 0.954, 0.723]], [0.661, [0.965, 0.953, 0.721]], [0.663, [0.965, 0.953, 0.721]], [0.665, [0.967, 0.953, 0.718]], [0.667, [0.967, 0.953, 0.718]], [0.669, [0.970, 0.953, 0.715]], [0.671, [0.970, 0.953, 0.715]], [0.673, [0.973, 0.952, 0.712]], [0.675, [0.973, 0.952, 0.712]], [0.677, [0.975, 0.952, 0.709]], [0.679, [0.975, 0.952, 0.709]], [0.681, [0.978, 0.952, 0.706]], [0.683, [0.978, 0.952, 0.706]], [0.685, [0.981, 0.951, 0.703]], [0.687, [0.981, 0.951, 0.703]], [0.689, [0.983, 0.951, 0.700]], [0.691, [0.983, 0.951, 0.700]], [0.693, [0.986, 0.951, 0.697]], [0.695, [0.986, 0.951, 0.697]], [0.697, [0.989, 0.950, 0.694]], [0.699, [0.989, 0.950, 0.694]], [0.701, [0.992, 0.950, 0.691]], [0.703, [0.992, 0.950, 0.691]], [0.705, [0.994, 0.950, 0.689]], [0.706, [0.994, 0.950, 0.689]], [0.708, [0.997, 0.949, 0.686]], [0.710, [0.997, 0.949, 0.686]], [0.712, [1.000, 0.949, 0.683]], [0.714, [1.000, 0.949, 0.683]], [0.716, [0.999, 0.948, 0.685]], [0.718, [0.999, 0.948, 0.685]], [0.720, [0.997, 0.946, 0.688]], [0.722, [0.997, 0.946, 0.688]], [0.724, [0.996, 0.944, 0.692]], [0.726, [0.996, 0.944, 0.692]], [0.728, [0.994, 0.942, 0.695]], [0.730, [0.994, 0.942, 0.695]], [0.732, [0.993, 0.941, 0.698]], [0.734, [0.993, 0.941, 0.698]], [0.736, [0.991, 0.939, 0.701]], [0.738, [0.991, 0.939, 0.701]], [0.740, [0.990, 0.937, 0.704]], [0.742, [0.990, 0.937, 0.704]], [0.744, [0.988, 0.935, 0.708]], [0.746, [0.988, 0.935, 0.708]], [0.748, [0.987, 0.934, 0.711]], [0.750, [0.987, 0.934, 0.711]], [0.751, [0.985, 0.932, 0.714]], [0.753, [0.985, 0.932, 0.714]], [0.755, [0.984, 0.930, 0.717]], [0.757, [0.984, 0.930, 0.717]], [0.759, [0.982, 0.929, 0.721]], [0.761, [0.982, 0.929, 0.721]], [0.763, [0.981, 0.927, 0.724]], [0.765, [0.981, 0.927, 0.724]], [0.767, [0.979, 0.925, 0.727]], [0.769, [0.979, 0.925, 0.727]], [0.771, [0.978, 0.923, 0.730]], [0.773, [0.978, 0.923, 0.730]], [0.775, [0.976, 0.922, 0.734]], [0.777, [0.976, 0.922, 0.734]], [0.779, [0.975, 0.920, 0.737]], [0.781, [0.975, 0.920, 0.737]], [0.783, [0.973, 0.918, 0.740]], [0.785, [0.973, 0.918, 0.740]], [0.787, [0.972, 0.917, 0.743]], [0.789, [0.972, 0.917, 0.743]], [0.791, [0.970, 0.915, 0.746]], [0.793, [0.970, 0.915, 0.746]], [0.795, [0.969, 0.913, 0.750]], [0.796, [0.969, 0.913, 0.750]], [0.798, [0.967, 0.911, 0.753]], [0.800, [0.967, 0.911, 0.753]], [0.802, [0.966, 0.910, 0.756]], [0.804, [0.966, 0.910, 0.756]], [0.806, [0.964, 0.908, 0.759]], [0.808, [0.964, 0.908, 0.759]], [0.810, [0.963, 0.906, 0.763]], [0.812, [0.963, 0.906, 0.763]], [0.814, [0.961, 0.904, 0.766]], [0.816, [0.961, 0.904, 0.766]], [0.818, [0.960, 0.903, 0.769]], [0.820, [0.960, 0.903, 0.769]], [0.822, [0.958, 0.901, 0.772]], [0.824, [0.958, 0.901, 0.772]], [0.826, [0.957, 0.899, 0.776]], [0.828, [0.957, 0.899, 0.776]], [0.830, [0.955, 0.898, 0.779]], [0.832, [0.955, 0.898, 0.779]], [0.834, [0.953, 0.896, 0.782]], [0.836, [0.953, 0.896, 0.782]], [0.838, [0.952, 0.894, 0.785]], [0.840, [0.952, 0.894, 0.785]], [0.841, [0.950, 0.892, 0.788]], [0.843, [0.950, 0.892, 0.788]], [0.845, [0.949, 0.891, 0.792]], [0.847, [0.949, 0.891, 0.792]], [0.849, [0.947, 0.889, 0.795]], [0.851, [0.947, 0.889, 0.795]], [0.853, [0.946, 0.887, 0.798]], [0.855, [0.946, 0.887, 0.798]], [0.857, [0.943, 0.885, 0.800]], [0.859, [0.943, 0.885, 0.800]], [0.861, [0.939, 0.883, 0.800]], [0.863, [0.939, 0.883, 0.800]], [0.865, [0.935, 0.881, 0.800]], [0.867, [0.935, 0.881, 0.800]], [0.869, [0.931, 0.878, 0.800]], [0.871, [0.931, 0.878, 0.800]], [0.873, [0.927, 0.876, 0.800]], [0.875, [0.927, 0.876, 0.800]], [0.877, [0.923, 0.873, 0.800]], [0.879, [0.923, 0.873, 0.800]], [0.881, [0.919, 0.871, 0.800]], [0.883, [0.919, 0.871, 0.800]], [0.885, [0.916, 0.869, 0.800]], [0.886, [0.916, 0.869, 0.800]], [0.888, [0.912, 0.866, 0.800]], [0.890, [0.912, 0.866, 0.800]], [0.892, [0.908, 0.864, 0.800]], [0.894, [0.908, 0.864, 0.800]], [0.896, [0.904, 0.862, 0.800]], [0.898, [0.904, 0.862, 0.800]], [0.900, [0.900, 0.859, 0.800]], [0.902, [0.900, 0.859, 0.800]], [0.904, [0.896, 0.857, 0.800]], [0.906, [0.896, 0.857, 0.800]], [0.908, [0.892, 0.854, 0.800]], [0.910, [0.892, 0.854, 0.800]], [0.912, [0.888, 0.852, 0.800]], [0.914, [0.888, 0.852, 0.800]], [0.916, [0.884, 0.850, 0.800]], [0.918, [0.884, 0.850, 0.800]], [0.920, [0.880, 0.847, 0.800]], [0.922, [0.880, 0.847, 0.800]], [0.924, [0.876, 0.845, 0.800]], [0.926, [0.876, 0.845, 0.800]], [0.928, [0.872, 0.843, 0.800]], [0.930, [0.872, 0.843, 0.800]], [0.932, [0.868, 0.840, 0.800]], [0.933, [0.868, 0.840, 0.800]], [0.935, [0.864, 0.838, 0.800]], [0.937, [0.864, 0.838, 0.800]], [0.939, [0.860, 0.836, 0.800]], [0.941, [0.860, 0.836, 0.800]], [0.943, [0.856, 0.833, 0.800]], [0.945, [0.856, 0.833, 0.800]], [0.947, [0.852, 0.831, 0.800]], [0.949, [0.852, 0.831, 0.800]], [0.951, [0.848, 0.828, 0.800]], [0.953, [0.848, 0.828, 0.800]], [0.955, [0.844, 0.826, 0.800]], [0.957, [0.844, 0.826, 0.800]], [0.959, [0.840, 0.824, 0.800]], [0.961, [0.840, 0.824, 0.800]], [0.963, [0.836, 0.821, 0.800]], [0.965, [0.836, 0.821, 0.800]], [0.967, [0.832, 0.819, 0.800]], [0.969, [0.832, 0.819, 0.800]], [0.971, [0.828, 0.817, 0.800]], [0.973, [0.828, 0.817, 0.800]], [0.975, [0.824, 0.814, 0.800]], [0.977, [0.824, 0.814, 0.800]], [0.978, [0.820, 0.812, 0.800]], [0.980, [0.820, 0.812, 0.800]], [0.982, [0.816, 0.809, 0.800]], [0.984, [0.816, 0.809, 0.800]], [0.986, [0.812, 0.807, 0.800]], [0.988, [0.812, 0.807, 0.800]], [0.990, [0.808, 0.805, 0.800]], [0.992, [0.808, 0.805, 0.800]], [0.994, [0.804, 0.802, 0.800]], [0.996, [0.804, 0.802, 0.800]], [0.998, [0.800, 0.800, 0.800]], [1.000, [0.800, 0.800, 0.800]]];
H.colormap_phase = [[0.000,[0.56724332,0.41001824,0.07083093]],[0.004,[0.57369533,0.40631385,0.06763640]],[0.008,[0.57994810,0.40262767,0.06473393]],[0.012,[0.58621727,0.39883307,0.06205459]],[0.016,[0.59231449,0.39504395,0.05971206]],[0.020,[0.59841114,0.39115403,0.05767412]],[0.024,[0.60434243,0.38726851,0.05602886]],[0.027,[0.61027304,0.38327951,0.05476297]],[0.031,[0.61602853,0.37930459,0.05394142]],[0.035,[0.62179468,0.37521528,0.05356325]],[0.039,[0.62739819,0.37113394,0.05366089]],[0.043,[0.63296349,0.36697069,0.05424569]],[0.047,[0.63841081,0.36278458,0.05531731]],[0.051,[0.64376271,0.35855932,0.05687403]],[0.055,[0.64904584,0.35427327,0.05891871]],[0.059,[0.65418902,0.34998499,0.06140802]],[0.063,[0.65927887,0.34562236,0.06436753]],[0.067,[0.66424610,0.34124422,0.06774175]],[0.071,[0.66908200,0.33686041,0.07149836]],[0.075,[0.67385549,0.33240821,0.07567487]],[0.078,[0.67849057,0.32795839,0.08019026]],[0.082,[0.68299052,0.32351058,0.08502570]],[0.086,[0.68739738,0.31902389,0.09021504]],[0.090,[0.69166679,0.31454412,0.09569861]],[0.094,[0.69579223,0.31008093,0.10145681]],[0.098,[0.69977763,0.30563295,0.10748756]],[0.102,[0.70363574,0.30118776,0.11380990]],[0.106,[0.70733660,0.29678243,0.12037554]],[0.110,[0.71087774,0.29242414,0.12717830]],[0.114,[0.71425607,0.28812113,0.13421258]],[0.118,[0.71747399,0.28387470,0.14148683]],[0.122,[0.72052428,0.27969884,0.14899031]],[0.125,[0.72339728,0.27561226,0.15670273]],[0.129,[0.72609023,0.27162524,0.16461824]],[0.133,[0.72860058,0.26774828,0.17273041]],[0.137,[0.73092616,0.26399183,0.18103219]],[0.141,[0.73306539,0.26036590,0.18951638]],[0.145,[0.73501868,0.25687739,0.19818207]],[0.149,[0.73678279,0.25354020,0.20700886]],[0.153,[0.73835819,0.25036227,0.21598766]],[0.157,[0.73974597,0.24735064,0.22510891]],[0.161,[0.74094777,0.24451140,0.23436265]],[0.165,[0.74196578,0.24184955,0.24373863]],[0.169,[0.74280272,0.23936901,0.25322643]],[0.173,[0.74346173,0.23707255,0.26281551]],[0.176,[0.74394637,0.23496186,0.27249532]],[0.180,[0.74426050,0.23303771,0.28225449]],[0.184,[0.74440831,0.23129966,0.29208237]],[0.188,[0.74439423,0.22974621,0.30196906]],[0.192,[0.74422282,0.22837499,0.31190490]],[0.196,[0.74389873,0.22718285,0.32188048]],[0.200,[0.74342664,0.22616596,0.33188669]],[0.204,[0.74281127,0.22531985,0.34191474]],[0.208,[0.74205730,0.22463956,0.35195616]],[0.212,[0.74116936,0.22411969,0.36200283]],[0.216,[0.74015240,0.22375458,0.37204357]],[0.220,[0.73901072,0.22353801,0.38207355]],[0.224,[0.73774860,0.22346375,0.39208656]],[0.227,[0.73637028,0.22352544,0.40207607]],[0.231,[0.73487988,0.22371668,0.41203587]],[0.235,[0.73328139,0.22403107,0.42196011]],[0.239,[0.73157865,0.22446223,0.43184326]],[0.243,[0.72977536,0.22500389,0.44168013]],[0.247,[0.72787579,0.22564963,0.45146241]],[0.251,[0.72588267,0.22639364,0.46118937]],[0.255,[0.72379920,0.22723013,0.47085716]],[0.259,[0.72162847,0.22815351,0.48046197]],[0.263,[0.71937343,0.22915837,0.49000029]],[0.267,[0.71703688,0.23023956,0.49946892]],[0.271,[0.71462148,0.23139217,0.50886493]],[0.275,[0.71213007,0.23261136,0.51818447]],[0.278,[0.70956452,0.23389296,0.52742703]],[0.282,[0.70692691,0.23523289,0.53659083]],[0.286,[0.70421925,0.23662728,0.54567406]],[0.290,[0.70144339,0.23807254,0.55467513]],[0.294,[0.69860103,0.23956532,0.56359267]],[0.298,[0.69569369,0.24110255,0.57242556]],[0.302,[0.69272221,0.24268169,0.58117426]],[0.306,[0.68968792,0.24430011,0.58983750]],[0.310,[0.68659180,0.24595554,0.59841463]],[0.314,[0.68343465,0.24764596,0.60690513]],[0.318,[0.68021707,0.24936960,0.61530861]],[0.322,[0.67693948,0.25112494,0.62362475]],[0.325,[0.67360205,0.25291077,0.63185346]],[0.329,[0.67020323,0.25472691,0.63999820]],[0.333,[0.66674402,0.25657195,0.64805568]],[0.337,[0.66322400,0.25844541,0.65602563]],[0.341,[0.65964254,0.26034702,0.66390773]],[0.345,[0.65599875,0.26227679,0.67170157]],[0.349,[0.65229153,0.26423496,0.67940663]],[0.353,[0.64851954,0.26622203,0.68702221]],[0.357,[0.64468060,0.26823904,0.69454851]],[0.361,[0.64077120,0.27028786,0.70198747]],[0.365,[0.63679115,0.27236872,0.70933383]],[0.369,[0.63273808,0.27448309,0.71658581]],[0.373,[0.62860936,0.27663269,0.72374126]],[0.376,[0.62440210,0.27881949,0.73079761]],[0.380,[0.62011309,0.28104566,0.73775186]],[0.384,[0.61573889,0.28331365,0.74460048]],[0.388,[0.61127572,0.28562609,0.75133940]],[0.392,[0.60671957,0.28798585,0.75796392]],[0.396,[0.60206609,0.29039601,0.76446868]],[0.400,[0.59731069,0.29285981,0.77084761]],[0.404,[0.59244787,0.29538100,0.77709461]],[0.408,[0.58747183,0.29796350,0.78320265]],[0.412,[0.58237864,0.30061025,0.78916126]],[0.416,[0.57716272,0.30332502,0.79496090]],[0.420,[0.57181826,0.30611163,0.80059103]],[0.424,[0.56633926,0.30897393,0.80604014]],[0.427,[0.56071959,0.31191571,0.81129563]],[0.431,[0.55495299,0.31494071,0.81634387]],[0.435,[0.54903314,0.31805247,0.82117010]],[0.439,[0.54295376,0.32125431,0.82575850]],[0.443,[0.53670817,0.32454950,0.83009251]],[0.447,[0.53028763,0.32794207,0.83415578]],[0.451,[0.52368879,0.33143287,0.83792761]],[0.455,[0.51690635,0.33502336,0.84138818]],[0.459,[0.50993559,0.33871427,0.84451696]],[0.463,[0.50277257,0.34250546,0.84729293]],[0.467,[0.49541426,0.34639582,0.84969480]],[0.471,[0.48785876,0.35038314,0.85170127]],[0.475,[0.48010551,0.35446399,0.85329141]],[0.478,[0.47215549,0.35863367,0.85444501]],[0.482,[0.46400447,0.36288976,0.85514340]],[0.486,[0.45566227,0.36722210,0.85536788]],[0.490,[0.44713833,0.37162047,0.85510290]],[0.494,[0.43844227,0.37607441,0.85433577]],[0.498,[0.42958621,0.38057218,0.85305689]],[0.502,[0.42058177,0.38510239,0.85125950]],[0.506,[0.41144690,0.38965075,0.84894112]],[0.510,[0.40220605,0.39420025,0.84610490]],[0.514,[0.39288171,0.39873559,0.84275762]],[0.518,[0.38349855,0.40324130,0.83891048]],[0.522,[0.37408360,0.40770177,0.83457920]],[0.525,[0.36466722,0.41210102,0.82978465]],[0.529,[0.35527868,0.41642482,0.82455055]],[0.533,[0.34594787,0.42066002,0.81890378]],[0.537,[0.33670810,0.42479323,0.81287608]],[0.541,[0.32759084,0.42881325,0.80650068]],[0.545,[0.31862215,0.43271248,0.79980883]],[0.549,[0.30982983,0.43648364,0.79283433]],[0.553,[0.30124029,0.44012100,0.78561114]],[0.557,[0.29288233,0.44361869,0.77817660]],[0.561,[0.28477939,0.44697375,0.77056484]],[0.565,[0.27694670,0.45018708,0.76280283]],[0.569,[0.26940193,0.45325876,0.75492020]],[0.573,[0.26216024,0.45619000,0.74694475]],[0.576,[0.25523415,0.45898297,0.73890234]],[0.580,[0.24863345,0.46164068,0.73081674]],[0.584,[0.24236623,0.46416643,0.72271109]],[0.588,[0.23643887,0.46656363,0.71460825]],[0.592,[0.23084854,0.46883873,0.70652028]],[0.596,[0.22559388,0.47099685,0.69846259]],[0.600,[0.22067083,0.47304334,0.69044868]],[0.604,[0.21607267,0.47498376,0.68249026]],[0.608,[0.21179018,0.47682377,0.67459735]],[0.612,[0.20781175,0.47856909,0.66677840]],[0.616,[0.20412355,0.48022546,0.65904036]],[0.620,[0.20070972,0.48179858,0.65138879]],[0.624,[0.19755260,0.48329407,0.64382798]],[0.627,[0.19463299,0.48471751,0.63636101]],[0.631,[0.19193036,0.48607431,0.62898985]],[0.635,[0.18942316,0.48736979,0.62171541]],[0.639,[0.18708905,0.48860912,0.61453762]],[0.643,[0.18490519,0.48979730,0.60745550]],[0.647,[0.18284850,0.49093918,0.60046718]],[0.651,[0.18089588,0.49203942,0.59356996]],[0.655,[0.17902444,0.49310250,0.58676036]],[0.659,[0.17721176,0.49413269,0.58003415]],[0.663,[0.17543603,0.49513408,0.57338636]],[0.667,[0.17367625,0.49611052,0.56681136]],[0.671,[0.17191243,0.49706564,0.56030287]],[0.675,[0.17012570,0.49800282,0.55385397]],[0.678,[0.16829867,0.49892510,0.54745788]],[0.682,[0.16641491,0.49983547,0.54110563]],[0.686,[0.16445972,0.50073657,0.53478849]],[0.690,[0.16242011,0.50163068,0.52849746]],[0.694,[0.16028489,0.50251981,0.52222315]],[0.698,[0.15804478,0.50340563,0.51595585]],[0.702,[0.15569256,0.50428951,0.50968556]],[0.706,[0.15322322,0.50517248,0.50340207]],[0.710,[0.15063412,0.50605524,0.49709504]],[0.714,[0.14792513,0.50693812,0.49075405]],[0.718,[0.14509892,0.50782117,0.48436869]],[0.722,[0.14216108,0.50870404,0.47792862]],[0.725,[0.13912049,0.50958610,0.47142361]],[0.729,[0.13598955,0.51046638,0.46484364]],[0.733,[0.13278459,0.51134360,0.45817896]],[0.737,[0.12952624,0.51221616,0.45142008]],[0.741,[0.12623991,0.51308221,0.44455788]],[0.745,[0.12295556,0.51393979,0.43758212]],[0.749,[0.11971036,0.51478631,0.43048588]],[0.753,[0.11654716,0.51561909,0.42326145]],[0.757,[0.11351549,0.51643524,0.41590148]],[0.761,[0.11067183,0.51723164,0.40839906]],[0.765,[0.10807962,0.51800494,0.40074776]],[0.769,[0.10580878,0.51875159,0.39294158]],[0.773,[0.10393472,0.51946783,0.38497499]],[0.776,[0.10253597,0.52014993,0.37683930]],[0.780,[0.10169355,0.52079357,0.36853055]],[0.784,[0.10148616,0.52139416,0.36004512]],[0.788,[0.10198647,0.52194694,0.35137897]],[0.792,[0.10325739,0.52244679,0.34252861]],[0.796,[0.10534865,0.52288829,0.33349121]],[0.800,[0.10829448,0.52326557,0.32426472]],[0.804,[0.11211265,0.52357234,0.31484804]],[0.808,[0.11680808,0.52380192,0.30523576]],[0.812,[0.12238518,0.52394702,0.29540477]],[0.816,[0.12881123,0.52399876,0.28538279]],[0.820,[0.13605621,0.52394820,0.27517603]],[0.824,[0.14410514,0.52378513,0.26476898]],[0.827,[0.15293375,0.52349780,0.25416480]],[0.831,[0.16247977,0.52307494,0.24341445]],[0.835,[0.17276282,0.52250055,0.23248374]],[0.839,[0.18369893,0.52176275,0.22146098]],[0.843,[0.19529772,0.52084321,0.21034680]],[0.847,[0.20746308,0.51973103,0.19925592]],[0.851,[0.22018049,0.51840885,0.18823609]],[0.855,[0.23332581,0.51687146,0.17744061]],[0.859,[0.24678810,0.51511657,0.16701119]],[0.863,[0.26043578,0.51314954,0.15710290]],[0.867,[0.27409793,0.51098848,0.14788694]],[0.871,[0.28761884,0.50865777,0.13950080]],[0.875,[0.30086975,0.50618505,0.13203710]],[0.878,[0.31370489,0.50360866,0.12556363]],[0.882,[0.32609538,0.50094907,0.12005608]],[0.886,[0.33799424,0.49823249,0.11547743]],[0.890,[0.34938489,0.49547991,0.11175786]],[0.894,[0.36029622,0.49270114,0.10880174]],[0.898,[0.37075574,0.48990462,0.10651189]],[0.902,[0.38076313,0.48710519,0.10479584]],[0.906,[0.39039628,0.48429421,0.10355136]],[0.910,[0.39968164,0.48147509,0.10269340]],[0.914,[0.40861182,0.47866075,0.10214468]],[0.918,[0.41725511,0.47583919,0.10183013]],[0.922,[0.42563941,0.47300913,0.10168644]],[0.925,[0.43378927,0.47016919,0.10165742]],[0.929,[0.44172797,0.46731733,0.10169329]],[0.933,[0.44947742,0.46445100,0.10174995]],[0.937,[0.45705812,0.46156726,0.10178816]],[0.941,[0.46448913,0.45866282,0.10177265]],[0.945,[0.47178813,0.45573417,0.10167122]],[0.949,[0.47897143,0.45277762,0.10145383]],[0.953,[0.48605409,0.44978932,0.10109169]],[0.957,[0.49304995,0.44676536,0.10055631]],[0.961,[0.49997171,0.44370173,0.09981844]],[0.965,[0.50683102,0.44059441,0.09884695]],[0.969,[0.51363860,0.43743936,0.09760740]],[0.973,[0.52040425,0.43423253,0.09606047]],[0.976,[0.52713698,0.43096991,0.09415980]],[0.980,[0.53384504,0.42764756,0.09184919]],[0.984,[0.54053593,0.42426164,0.08905888]],[0.988,[0.54721632,0.42080854,0.08570001]],[0.992,[0.55389186,0.41728505,0.08165660]],[0.996,[0.56056680,0.41368870,0.07677269]],[1.000,[0.56724332,0.41001824,0.07083093]]]
H.colormap_pink = [[0.000, [0.118, 0.000, 0.000]], [0.002, [0.118, 0.000, 0.000]], [0.004, [0.137, 0.025, 0.025]], [0.006, [0.137, 0.025, 0.025]], [0.008, [0.156, 0.051, 0.051]], [0.010, [0.156, 0.051, 0.051]], [0.012, [0.176, 0.076, 0.076]], [0.014, [0.176, 0.076, 0.076]], [0.016, [0.195, 0.102, 0.102]], [0.018, [0.195, 0.102, 0.102]], [0.020, [0.209, 0.113, 0.113]], [0.022, [0.209, 0.113, 0.113]], [0.023, [0.222, 0.123, 0.123]], [0.025, [0.222, 0.123, 0.123]], [0.027, [0.236, 0.134, 0.134]], [0.029, [0.236, 0.134, 0.134]], [0.031, [0.249, 0.144, 0.144]], [0.033, [0.249, 0.144, 0.144]], [0.035, [0.261, 0.153, 0.153]], [0.037, [0.261, 0.153, 0.153]], [0.039, [0.272, 0.161, 0.161]], [0.041, [0.272, 0.161, 0.161]], [0.043, [0.283, 0.169, 0.169]], [0.045, [0.283, 0.169, 0.169]], [0.047, [0.294, 0.177, 0.177]], [0.049, [0.294, 0.177, 0.177]], [0.051, [0.304, 0.184, 0.184]], [0.053, [0.304, 0.184, 0.184]], [0.055, [0.313, 0.191, 0.191]], [0.057, [0.313, 0.191, 0.191]], [0.059, [0.323, 0.198, 0.198]], [0.061, [0.323, 0.198, 0.198]], [0.063, [0.332, 0.204, 0.204]], [0.065, [0.332, 0.204, 0.204]], [0.067, [0.341, 0.211, 0.211]], [0.068, [0.341, 0.211, 0.211]], [0.070, [0.350, 0.217, 0.217]], [0.072, [0.350, 0.217, 0.217]], [0.074, [0.358, 0.223, 0.223]], [0.076, [0.358, 0.223, 0.223]], [0.078, [0.367, 0.229, 0.229]], [0.080, [0.367, 0.229, 0.229]], [0.082, [0.375, 0.234, 0.234]], [0.084, [0.375, 0.234, 0.234]], [0.086, [0.383, 0.240, 0.240]], [0.088, [0.383, 0.240, 0.240]], [0.090, [0.391, 0.245, 0.245]], [0.092, [0.391, 0.245, 0.245]], [0.094, [0.399, 0.250, 0.250]], [0.096, [0.399, 0.250, 0.250]], [0.098, [0.406, 0.256, 0.256]], [0.100, [0.406, 0.256, 0.256]], [0.102, [0.413, 0.261, 0.261]], [0.104, [0.413, 0.261, 0.261]], [0.106, [0.421, 0.266, 0.266]], [0.108, [0.421, 0.266, 0.266]], [0.110, [0.428, 0.271, 0.271]], [0.112, [0.428, 0.271, 0.271]], [0.114, [0.435, 0.275, 0.275]], [0.115, [0.435, 0.275, 0.275]], [0.117, [0.442, 0.280, 0.280]], [0.119, [0.442, 0.280, 0.280]], [0.121, [0.448, 0.285, 0.285]], [0.123, [0.448, 0.285, 0.285]], [0.125, [0.455, 0.289, 0.289]], [0.127, [0.455, 0.289, 0.289]], [0.129, [0.462, 0.294, 0.294]], [0.131, [0.462, 0.294, 0.294]], [0.133, [0.468, 0.298, 0.298]], [0.135, [0.468, 0.298, 0.298]], [0.137, [0.475, 0.302, 0.302]], [0.139, [0.475, 0.302, 0.302]], [0.141, [0.481, 0.307, 0.307]], [0.143, [0.481, 0.307, 0.307]], [0.145, [0.487, 0.311, 0.311]], [0.147, [0.487, 0.311, 0.311]], [0.149, [0.493, 0.315, 0.315]], [0.151, [0.493, 0.315, 0.315]], [0.153, [0.500, 0.319, 0.319]], [0.155, [0.500, 0.319, 0.319]], [0.157, [0.506, 0.323, 0.323]], [0.159, [0.506, 0.323, 0.323]], [0.160, [0.512, 0.327, 0.327]], [0.162, [0.512, 0.327, 0.327]], [0.164, [0.517, 0.331, 0.331]], [0.166, [0.517, 0.331, 0.331]], [0.168, [0.523, 0.335, 0.335]], [0.170, [0.523, 0.335, 0.335]], [0.172, [0.529, 0.339, 0.339]], [0.174, [0.529, 0.339, 0.339]], [0.176, [0.535, 0.343, 0.343]], [0.178, [0.535, 0.343, 0.343]], [0.180, [0.540, 0.347, 0.347]], [0.182, [0.540, 0.347, 0.347]], [0.184, [0.546, 0.350, 0.350]], [0.186, [0.546, 0.350, 0.350]], [0.188, [0.551, 0.354, 0.354]], [0.190, [0.551, 0.354, 0.354]], [0.192, [0.557, 0.358, 0.358]], [0.194, [0.557, 0.358, 0.358]], [0.196, [0.562, 0.361, 0.361]], [0.198, [0.562, 0.361, 0.361]], [0.200, [0.568, 0.365, 0.365]], [0.202, [0.568, 0.365, 0.365]], [0.204, [0.573, 0.369, 0.369]], [0.205, [0.573, 0.369, 0.369]], [0.207, [0.578, 0.372, 0.372]], [0.209, [0.578, 0.372, 0.372]], [0.211, [0.583, 0.376, 0.376]], [0.213, [0.583, 0.376, 0.376]], [0.215, [0.588, 0.379, 0.379]], [0.217, [0.588, 0.379, 0.379]], [0.219, [0.594, 0.383, 0.383]], [0.221, [0.594, 0.383, 0.383]], [0.223, [0.599, 0.386, 0.386]], [0.225, [0.599, 0.386, 0.386]], [0.227, [0.604, 0.389, 0.389]], [0.229, [0.604, 0.389, 0.389]], [0.231, [0.609, 0.393, 0.393]], [0.233, [0.609, 0.393, 0.393]], [0.235, [0.614, 0.396, 0.396]], [0.237, [0.614, 0.396, 0.396]], [0.239, [0.619, 0.399, 0.399]], [0.241, [0.619, 0.399, 0.399]], [0.243, [0.623, 0.403, 0.403]], [0.245, [0.623, 0.403, 0.403]], [0.247, [0.628, 0.406, 0.406]], [0.249, [0.628, 0.406, 0.406]], [0.250, [0.633, 0.409, 0.409]], [0.252, [0.633, 0.409, 0.409]], [0.254, [0.638, 0.412, 0.412]], [0.256, [0.638, 0.412, 0.412]], [0.258, [0.643, 0.415, 0.415]], [0.260, [0.643, 0.415, 0.415]], [0.262, [0.647, 0.418, 0.418]], [0.264, [0.647, 0.418, 0.418]], [0.266, [0.652, 0.422, 0.422]], [0.268, [0.652, 0.422, 0.422]], [0.270, [0.657, 0.425, 0.425]], [0.272, [0.657, 0.425, 0.425]], [0.274, [0.661, 0.428, 0.428]], [0.276, [0.661, 0.428, 0.428]], [0.278, [0.666, 0.431, 0.431]], [0.280, [0.666, 0.431, 0.431]], [0.282, [0.670, 0.434, 0.434]], [0.284, [0.670, 0.434, 0.434]], [0.286, [0.675, 0.437, 0.437]], [0.288, [0.675, 0.437, 0.437]], [0.290, [0.679, 0.440, 0.440]], [0.292, [0.679, 0.440, 0.440]], [0.294, [0.684, 0.443, 0.443]], [0.295, [0.684, 0.443, 0.443]], [0.297, [0.688, 0.446, 0.446]], [0.299, [0.688, 0.446, 0.446]], [0.301, [0.692, 0.449, 0.449]], [0.303, [0.692, 0.449, 0.449]], [0.305, [0.697, 0.452, 0.452]], [0.307, [0.697, 0.452, 0.452]], [0.309, [0.701, 0.454, 0.454]], [0.311, [0.701, 0.454, 0.454]], [0.313, [0.705, 0.457, 0.457]], [0.315, [0.705, 0.457, 0.457]], [0.317, [0.710, 0.460, 0.460]], [0.319, [0.710, 0.460, 0.460]], [0.321, [0.714, 0.463, 0.463]], [0.323, [0.714, 0.463, 0.463]], [0.325, [0.718, 0.466, 0.466]], [0.327, [0.718, 0.466, 0.466]], [0.329, [0.722, 0.469, 0.469]], [0.331, [0.722, 0.469, 0.469]], [0.333, [0.726, 0.471, 0.471]], [0.335, [0.726, 0.471, 0.471]], [0.337, [0.731, 0.474, 0.474]], [0.339, [0.731, 0.474, 0.474]], [0.341, [0.735, 0.477, 0.477]], [0.342, [0.735, 0.477, 0.477]], [0.344, [0.739, 0.480, 0.480]], [0.346, [0.739, 0.480, 0.480]], [0.348, [0.743, 0.482, 0.482]], [0.350, [0.743, 0.482, 0.482]], [0.352, [0.747, 0.485, 0.485]], [0.354, [0.747, 0.485, 0.485]], [0.356, [0.751, 0.488, 0.488]], [0.358, [0.751, 0.488, 0.488]], [0.360, [0.755, 0.490, 0.490]], [0.362, [0.755, 0.490, 0.490]], [0.364, [0.759, 0.493, 0.493]], [0.366, [0.759, 0.493, 0.493]], [0.368, [0.761, 0.499, 0.496]], [0.370, [0.761, 0.499, 0.496]], [0.372, [0.763, 0.505, 0.498]], [0.374, [0.763, 0.505, 0.498]], [0.376, [0.764, 0.511, 0.501]], [0.378, [0.764, 0.511, 0.501]], [0.380, [0.766, 0.517, 0.504]], [0.382, [0.766, 0.517, 0.504]], [0.384, [0.768, 0.522, 0.506]], [0.386, [0.768, 0.522, 0.506]], [0.387, [0.770, 0.528, 0.509]], [0.389, [0.770, 0.528, 0.509]], [0.391, [0.771, 0.534, 0.511]], [0.393, [0.771, 0.534, 0.511]], [0.395, [0.773, 0.540, 0.514]], [0.397, [0.773, 0.540, 0.514]], [0.399, [0.775, 0.545, 0.516]], [0.401, [0.775, 0.545, 0.516]], [0.403, [0.776, 0.551, 0.519]], [0.405, [0.776, 0.551, 0.519]], [0.407, [0.778, 0.556, 0.521]], [0.409, [0.778, 0.556, 0.521]], [0.411, [0.780, 0.562, 0.524]], [0.413, [0.780, 0.562, 0.524]], [0.415, [0.781, 0.567, 0.526]], [0.417, [0.781, 0.567, 0.526]], [0.419, [0.783, 0.572, 0.529]], [0.421, [0.783, 0.572, 0.529]], [0.423, [0.785, 0.577, 0.531]], [0.425, [0.785, 0.577, 0.531]], [0.427, [0.786, 0.583, 0.534]], [0.429, [0.786, 0.583, 0.534]], [0.431, [0.788, 0.588, 0.536]], [0.432, [0.788, 0.588, 0.536]], [0.434, [0.790, 0.593, 0.539]], [0.436, [0.790, 0.593, 0.539]], [0.438, [0.791, 0.598, 0.541]], [0.440, [0.791, 0.598, 0.541]], [0.442, [0.793, 0.603, 0.544]], [0.444, [0.793, 0.603, 0.544]], [0.446, [0.795, 0.608, 0.546]], [0.448, [0.795, 0.608, 0.546]], [0.450, [0.796, 0.613, 0.548]], [0.452, [0.796, 0.613, 0.548]], [0.454, [0.798, 0.618, 0.551]], [0.456, [0.798, 0.618, 0.551]], [0.458, [0.800, 0.623, 0.553]], [0.460, [0.800, 0.623, 0.553]], [0.462, [0.801, 0.628, 0.555]], [0.464, [0.801, 0.628, 0.555]], [0.466, [0.803, 0.632, 0.558]], [0.468, [0.803, 0.632, 0.558]], [0.470, [0.804, 0.637, 0.560]], [0.472, [0.804, 0.637, 0.560]], [0.474, [0.806, 0.642, 0.562]], [0.476, [0.806, 0.642, 0.562]], [0.477, [0.808, 0.647, 0.565]], [0.479, [0.808, 0.647, 0.565]], [0.481, [0.809, 0.651, 0.567]], [0.483, [0.809, 0.651, 0.567]], [0.485, [0.811, 0.656, 0.569]], [0.487, [0.811, 0.656, 0.569]], [0.489, [0.812, 0.660, 0.572]], [0.491, [0.812, 0.660, 0.572]], [0.493, [0.814, 0.665, 0.574]], [0.495, [0.814, 0.665, 0.574]], [0.497, [0.816, 0.670, 0.576]], [0.499, [0.816, 0.670, 0.576]], [0.501, [0.817, 0.674, 0.578]], [0.503, [0.817, 0.674, 0.578]], [0.505, [0.819, 0.679, 0.581]], [0.507, [0.819, 0.679, 0.581]], [0.509, [0.820, 0.683, 0.583]], [0.511, [0.820, 0.683, 0.583]], [0.513, [0.822, 0.687, 0.585]], [0.515, [0.822, 0.687, 0.585]], [0.517, [0.824, 0.692, 0.587]], [0.519, [0.824, 0.692, 0.587]], [0.521, [0.825, 0.696, 0.590]], [0.523, [0.825, 0.696, 0.590]], [0.524, [0.827, 0.700, 0.592]], [0.526, [0.827, 0.700, 0.592]], [0.528, [0.828, 0.705, 0.594]], [0.530, [0.828, 0.705, 0.594]], [0.532, [0.830, 0.709, 0.596]], [0.534, [0.830, 0.709, 0.596]], [0.536, [0.832, 0.713, 0.598]], [0.538, [0.832, 0.713, 0.598]], [0.540, [0.833, 0.718, 0.601]], [0.542, [0.833, 0.718, 0.601]], [0.544, [0.835, 0.722, 0.603]], [0.546, [0.835, 0.722, 0.603]], [0.548, [0.836, 0.726, 0.605]], [0.550, [0.836, 0.726, 0.605]], [0.552, [0.838, 0.730, 0.607]], [0.554, [0.838, 0.730, 0.607]], [0.556, [0.839, 0.734, 0.609]], [0.558, [0.839, 0.734, 0.609]], [0.560, [0.841, 0.738, 0.611]], [0.562, [0.841, 0.738, 0.611]], [0.564, [0.842, 0.742, 0.614]], [0.566, [0.842, 0.742, 0.614]], [0.568, [0.844, 0.746, 0.616]], [0.569, [0.844, 0.746, 0.616]], [0.571, [0.846, 0.750, 0.618]], [0.573, [0.846, 0.750, 0.618]], [0.575, [0.847, 0.754, 0.620]], [0.577, [0.847, 0.754, 0.620]], [0.579, [0.849, 0.758, 0.622]], [0.581, [0.849, 0.758, 0.622]], [0.583, [0.850, 0.762, 0.624]], [0.585, [0.850, 0.762, 0.624]], [0.587, [0.852, 0.766, 0.626]], [0.589, [0.852, 0.766, 0.626]], [0.591, [0.853, 0.770, 0.628]], [0.593, [0.853, 0.770, 0.628]], [0.595, [0.855, 0.774, 0.630]], [0.597, [0.855, 0.774, 0.630]], [0.599, [0.856, 0.778, 0.632]], [0.601, [0.856, 0.778, 0.632]], [0.603, [0.858, 0.782, 0.635]], [0.605, [0.858, 0.782, 0.635]], [0.607, [0.859, 0.786, 0.637]], [0.609, [0.859, 0.786, 0.637]], [0.611, [0.861, 0.790, 0.639]], [0.613, [0.861, 0.790, 0.639]], [0.614, [0.862, 0.794, 0.641]], [0.616, [0.862, 0.794, 0.641]], [0.618, [0.864, 0.797, 0.643]], [0.620, [0.864, 0.797, 0.643]], [0.622, [0.865, 0.801, 0.645]], [0.624, [0.865, 0.801, 0.645]], [0.626, [0.867, 0.805, 0.647]], [0.628, [0.867, 0.805, 0.647]], [0.630, [0.868, 0.809, 0.649]], [0.632, [0.868, 0.809, 0.649]], [0.634, [0.870, 0.812, 0.651]], [0.636, [0.870, 0.812, 0.651]], [0.638, [0.871, 0.816, 0.653]], [0.640, [0.871, 0.816, 0.653]], [0.642, [0.873, 0.820, 0.655]], [0.644, [0.873, 0.820, 0.655]], [0.646, [0.874, 0.823, 0.657]], [0.648, [0.874, 0.823, 0.657]], [0.650, [0.876, 0.827, 0.659]], [0.652, [0.876, 0.827, 0.659]], [0.654, [0.877, 0.831, 0.661]], [0.656, [0.877, 0.831, 0.661]], [0.658, [0.879, 0.834, 0.663]], [0.659, [0.879, 0.834, 0.663]], [0.661, [0.880, 0.838, 0.665]], [0.663, [0.880, 0.838, 0.665]], [0.665, [0.882, 0.842, 0.667]], [0.667, [0.882, 0.842, 0.667]], [0.669, [0.883, 0.845, 0.669]], [0.671, [0.883, 0.845, 0.669]], [0.673, [0.885, 0.849, 0.671]], [0.675, [0.885, 0.849, 0.671]], [0.677, [0.886, 0.852, 0.673]], [0.679, [0.886, 0.852, 0.673]], [0.681, [0.888, 0.856, 0.674]], [0.683, [0.888, 0.856, 0.674]], [0.685, [0.889, 0.859, 0.676]], [0.687, [0.889, 0.859, 0.676]], [0.689, [0.891, 0.863, 0.678]], [0.691, [0.891, 0.863, 0.678]], [0.693, [0.892, 0.866, 0.680]], [0.695, [0.892, 0.866, 0.680]], [0.697, [0.894, 0.870, 0.682]], [0.699, [0.894, 0.870, 0.682]], [0.701, [0.895, 0.873, 0.684]], [0.703, [0.895, 0.873, 0.684]], [0.705, [0.897, 0.877, 0.686]], [0.706, [0.897, 0.877, 0.686]], [0.708, [0.898, 0.880, 0.688]], [0.710, [0.898, 0.880, 0.688]], [0.712, [0.900, 0.884, 0.690]], [0.714, [0.900, 0.884, 0.690]], [0.716, [0.901, 0.887, 0.692]], [0.718, [0.901, 0.887, 0.692]], [0.720, [0.902, 0.890, 0.694]], [0.722, [0.902, 0.890, 0.694]], [0.724, [0.904, 0.894, 0.695]], [0.726, [0.904, 0.894, 0.695]], [0.728, [0.905, 0.897, 0.697]], [0.730, [0.905, 0.897, 0.697]], [0.732, [0.907, 0.901, 0.699]], [0.734, [0.907, 0.901, 0.699]], [0.736, [0.908, 0.904, 0.701]], [0.738, [0.908, 0.904, 0.701]], [0.740, [0.910, 0.907, 0.703]], [0.742, [0.910, 0.907, 0.703]], [0.744, [0.911, 0.911, 0.705]], [0.746, [0.911, 0.911, 0.705]], [0.748, [0.913, 0.913, 0.709]], [0.750, [0.913, 0.913, 0.709]], [0.751, [0.914, 0.914, 0.715]], [0.753, [0.914, 0.914, 0.715]], [0.755, [0.915, 0.915, 0.720]], [0.757, [0.915, 0.915, 0.720]], [0.759, [0.917, 0.917, 0.726]], [0.761, [0.917, 0.917, 0.726]], [0.763, [0.918, 0.918, 0.731]], [0.765, [0.918, 0.918, 0.731]], [0.767, [0.920, 0.920, 0.736]], [0.769, [0.920, 0.920, 0.736]], [0.771, [0.921, 0.921, 0.741]], [0.773, [0.921, 0.921, 0.741]], [0.775, [0.922, 0.922, 0.747]], [0.777, [0.922, 0.922, 0.747]], [0.779, [0.924, 0.924, 0.752]], [0.781, [0.924, 0.924, 0.752]], [0.783, [0.925, 0.925, 0.757]], [0.785, [0.925, 0.925, 0.757]], [0.787, [0.927, 0.927, 0.762]], [0.789, [0.927, 0.927, 0.762]], [0.791, [0.928, 0.928, 0.767]], [0.793, [0.928, 0.928, 0.767]], [0.795, [0.930, 0.930, 0.772]], [0.796, [0.930, 0.930, 0.772]], [0.798, [0.931, 0.931, 0.777]], [0.800, [0.931, 0.931, 0.777]], [0.802, [0.932, 0.932, 0.782]], [0.804, [0.932, 0.932, 0.782]], [0.806, [0.934, 0.934, 0.787]], [0.808, [0.934, 0.934, 0.787]], [0.810, [0.935, 0.935, 0.792]], [0.812, [0.935, 0.935, 0.792]], [0.814, [0.937, 0.937, 0.797]], [0.816, [0.937, 0.937, 0.797]], [0.818, [0.938, 0.938, 0.802]], [0.820, [0.938, 0.938, 0.802]], [0.822, [0.939, 0.939, 0.807]], [0.824, [0.939, 0.939, 0.807]], [0.826, [0.941, 0.941, 0.811]], [0.828, [0.941, 0.941, 0.811]], [0.830, [0.942, 0.942, 0.816]], [0.832, [0.942, 0.942, 0.816]], [0.834, [0.943, 0.943, 0.821]], [0.836, [0.943, 0.943, 0.821]], [0.838, [0.945, 0.945, 0.826]], [0.840, [0.945, 0.945, 0.826]], [0.841, [0.946, 0.946, 0.830]], [0.843, [0.946, 0.946, 0.830]], [0.845, [0.948, 0.948, 0.835]], [0.847, [0.948, 0.948, 0.835]], [0.849, [0.949, 0.949, 0.840]], [0.851, [0.949, 0.949, 0.840]], [0.853, [0.950, 0.950, 0.844]], [0.855, [0.950, 0.950, 0.844]], [0.857, [0.952, 0.952, 0.849]], [0.859, [0.952, 0.952, 0.849]], [0.861, [0.953, 0.953, 0.853]], [0.863, [0.953, 0.953, 0.853]], [0.865, [0.955, 0.955, 0.858]], [0.867, [0.955, 0.955, 0.858]], [0.869, [0.956, 0.956, 0.862]], [0.871, [0.956, 0.956, 0.862]], [0.873, [0.957, 0.957, 0.867]], [0.875, [0.957, 0.957, 0.867]], [0.877, [0.959, 0.959, 0.871]], [0.879, [0.959, 0.959, 0.871]], [0.881, [0.960, 0.960, 0.876]], [0.883, [0.960, 0.960, 0.876]], [0.885, [0.961, 0.961, 0.880]], [0.886, [0.961, 0.961, 0.880]], [0.888, [0.963, 0.963, 0.885]], [0.890, [0.963, 0.963, 0.885]], [0.892, [0.964, 0.964, 0.889]], [0.894, [0.964, 0.964, 0.889]], [0.896, [0.965, 0.965, 0.893]], [0.898, [0.965, 0.965, 0.893]], [0.900, [0.967, 0.967, 0.898]], [0.902, [0.967, 0.967, 0.898]], [0.904, [0.968, 0.968, 0.902]], [0.906, [0.968, 0.968, 0.902]], [0.908, [0.969, 0.969, 0.906]], [0.910, [0.969, 0.969, 0.906]], [0.912, [0.971, 0.971, 0.911]], [0.914, [0.971, 0.971, 0.911]], [0.916, [0.972, 0.972, 0.915]], [0.918, [0.972, 0.972, 0.915]], [0.920, [0.974, 0.974, 0.919]], [0.922, [0.974, 0.974, 0.919]], [0.924, [0.975, 0.975, 0.923]], [0.926, [0.975, 0.975, 0.923]], [0.928, [0.976, 0.976, 0.927]], [0.930, [0.976, 0.976, 0.927]], [0.932, [0.978, 0.978, 0.932]], [0.933, [0.978, 0.978, 0.932]], [0.935, [0.979, 0.979, 0.936]], [0.937, [0.979, 0.979, 0.936]], [0.939, [0.980, 0.980, 0.940]], [0.941, [0.980, 0.980, 0.940]], [0.943, [0.982, 0.982, 0.944]], [0.945, [0.982, 0.982, 0.944]], [0.947, [0.983, 0.983, 0.948]], [0.949, [0.983, 0.983, 0.948]], [0.951, [0.984, 0.984, 0.952]], [0.953, [0.984, 0.984, 0.952]], [0.955, [0.986, 0.986, 0.956]], [0.957, [0.986, 0.986, 0.956]], [0.959, [0.987, 0.987, 0.960]], [0.961, [0.987, 0.987, 0.960]], [0.963, [0.988, 0.988, 0.964]], [0.965, [0.988, 0.988, 0.964]], [0.967, [0.989, 0.989, 0.968]], [0.969, [0.989, 0.989, 0.968]], [0.971, [0.991, 0.991, 0.972]], [0.973, [0.991, 0.991, 0.972]], [0.975, [0.992, 0.992, 0.976]], [0.977, [0.992, 0.992, 0.976]], [0.978, [0.993, 0.993, 0.980]], [0.980, [0.993, 0.993, 0.980]], [0.982, [0.995, 0.995, 0.984]], [0.984, [0.995, 0.995, 0.984]], [0.986, [0.996, 0.996, 0.988]], [0.988, [0.996, 0.996, 0.988]], [0.990, [0.997, 0.997, 0.992]], [0.992, [0.997, 0.997, 0.992]], [0.994, [0.999, 0.999, 0.996]], [0.996, [0.999, 0.999, 0.996]], [0.998, [1.000, 1.000, 1.000]], [1.000, [1.000, 1.000, 1.000]]];
H.colormap_PiYG = [[0.000, [0.557, 0.004, 0.322]], [0.002, [0.557, 0.004, 0.322]], [0.004, [0.565, 0.008, 0.328]], [0.006, [0.565, 0.008, 0.328]], [0.008, [0.574, 0.012, 0.335]], [0.010, [0.574, 0.012, 0.335]], [0.012, [0.582, 0.016, 0.341]], [0.014, [0.582, 0.016, 0.341]], [0.016, [0.591, 0.020, 0.348]], [0.018, [0.591, 0.020, 0.348]], [0.020, [0.599, 0.024, 0.355]], [0.022, [0.599, 0.024, 0.355]], [0.023, [0.608, 0.028, 0.361]], [0.025, [0.608, 0.028, 0.361]], [0.027, [0.616, 0.032, 0.368]], [0.029, [0.616, 0.032, 0.368]], [0.031, [0.625, 0.036, 0.374]], [0.033, [0.625, 0.036, 0.374]], [0.035, [0.633, 0.040, 0.381]], [0.037, [0.633, 0.040, 0.381]], [0.039, [0.641, 0.044, 0.388]], [0.041, [0.641, 0.044, 0.388]], [0.043, [0.650, 0.048, 0.394]], [0.045, [0.650, 0.048, 0.394]], [0.047, [0.658, 0.052, 0.401]], [0.049, [0.658, 0.052, 0.401]], [0.051, [0.667, 0.056, 0.408]], [0.053, [0.667, 0.056, 0.408]], [0.055, [0.675, 0.060, 0.414]], [0.057, [0.675, 0.060, 0.414]], [0.059, [0.684, 0.064, 0.421]], [0.061, [0.684, 0.064, 0.421]], [0.063, [0.692, 0.068, 0.427]], [0.065, [0.692, 0.068, 0.427]], [0.067, [0.701, 0.072, 0.434]], [0.068, [0.701, 0.072, 0.434]], [0.070, [0.709, 0.076, 0.441]], [0.072, [0.709, 0.076, 0.441]], [0.074, [0.718, 0.080, 0.447]], [0.076, [0.718, 0.080, 0.447]], [0.078, [0.726, 0.084, 0.454]], [0.080, [0.726, 0.084, 0.454]], [0.082, [0.734, 0.088, 0.460]], [0.084, [0.734, 0.088, 0.460]], [0.086, [0.743, 0.092, 0.467]], [0.088, [0.743, 0.092, 0.467]], [0.090, [0.751, 0.096, 0.474]], [0.092, [0.751, 0.096, 0.474]], [0.094, [0.760, 0.100, 0.480]], [0.096, [0.760, 0.100, 0.480]], [0.098, [0.768, 0.104, 0.487]], [0.100, [0.768, 0.104, 0.487]], [0.102, [0.774, 0.113, 0.494]], [0.104, [0.774, 0.113, 0.494]], [0.106, [0.778, 0.127, 0.501]], [0.108, [0.778, 0.127, 0.501]], [0.110, [0.782, 0.141, 0.509]], [0.112, [0.782, 0.141, 0.509]], [0.114, [0.786, 0.155, 0.517]], [0.115, [0.786, 0.155, 0.517]], [0.117, [0.790, 0.170, 0.524]], [0.119, [0.790, 0.170, 0.524]], [0.121, [0.794, 0.184, 0.532]], [0.123, [0.794, 0.184, 0.532]], [0.125, [0.798, 0.198, 0.539]], [0.127, [0.798, 0.198, 0.539]], [0.129, [0.801, 0.212, 0.547]], [0.131, [0.801, 0.212, 0.547]], [0.133, [0.805, 0.226, 0.554]], [0.135, [0.805, 0.226, 0.554]], [0.137, [0.809, 0.240, 0.562]], [0.139, [0.809, 0.240, 0.562]], [0.141, [0.813, 0.254, 0.569]], [0.143, [0.813, 0.254, 0.569]], [0.145, [0.817, 0.269, 0.577]], [0.147, [0.817, 0.269, 0.577]], [0.149, [0.821, 0.283, 0.584]], [0.151, [0.821, 0.283, 0.584]], [0.153, [0.824, 0.297, 0.592]], [0.155, [0.824, 0.297, 0.592]], [0.157, [0.828, 0.311, 0.599]], [0.159, [0.828, 0.311, 0.599]], [0.160, [0.832, 0.325, 0.607]], [0.162, [0.832, 0.325, 0.607]], [0.164, [0.836, 0.339, 0.615]], [0.166, [0.836, 0.339, 0.615]], [0.168, [0.840, 0.353, 0.622]], [0.170, [0.840, 0.353, 0.622]], [0.172, [0.844, 0.368, 0.630]], [0.174, [0.844, 0.368, 0.630]], [0.176, [0.848, 0.382, 0.637]], [0.178, [0.848, 0.382, 0.637]], [0.180, [0.851, 0.396, 0.645]], [0.182, [0.851, 0.396, 0.645]], [0.184, [0.855, 0.410, 0.652]], [0.186, [0.855, 0.410, 0.652]], [0.188, [0.859, 0.424, 0.660]], [0.190, [0.859, 0.424, 0.660]], [0.192, [0.863, 0.438, 0.667]], [0.194, [0.863, 0.438, 0.667]], [0.196, [0.867, 0.453, 0.675]], [0.198, [0.867, 0.453, 0.675]], [0.200, [0.871, 0.467, 0.682]], [0.202, [0.871, 0.467, 0.682]], [0.204, [0.874, 0.476, 0.689]], [0.205, [0.874, 0.476, 0.689]], [0.207, [0.876, 0.486, 0.696]], [0.209, [0.876, 0.486, 0.696]], [0.211, [0.879, 0.496, 0.703]], [0.213, [0.879, 0.496, 0.703]], [0.215, [0.882, 0.505, 0.709]], [0.217, [0.882, 0.505, 0.709]], [0.219, [0.885, 0.515, 0.716]], [0.221, [0.885, 0.515, 0.716]], [0.223, [0.888, 0.525, 0.723]], [0.225, [0.888, 0.525, 0.723]], [0.227, [0.891, 0.534, 0.730]], [0.229, [0.891, 0.534, 0.730]], [0.231, [0.894, 0.544, 0.736]], [0.233, [0.894, 0.544, 0.736]], [0.235, [0.897, 0.554, 0.743]], [0.237, [0.897, 0.554, 0.743]], [0.239, [0.900, 0.564, 0.750]], [0.241, [0.900, 0.564, 0.750]], [0.243, [0.903, 0.573, 0.757]], [0.245, [0.903, 0.573, 0.757]], [0.247, [0.906, 0.583, 0.764]], [0.249, [0.906, 0.583, 0.764]], [0.250, [0.909, 0.593, 0.770]], [0.252, [0.909, 0.593, 0.770]], [0.254, [0.911, 0.602, 0.777]], [0.256, [0.911, 0.602, 0.777]], [0.258, [0.914, 0.612, 0.784]], [0.260, [0.914, 0.612, 0.784]], [0.262, [0.917, 0.622, 0.791]], [0.264, [0.917, 0.622, 0.791]], [0.266, [0.920, 0.631, 0.797]], [0.268, [0.920, 0.631, 0.797]], [0.270, [0.923, 0.641, 0.804]], [0.272, [0.923, 0.641, 0.804]], [0.274, [0.926, 0.651, 0.811]], [0.276, [0.926, 0.651, 0.811]], [0.278, [0.929, 0.660, 0.818]], [0.280, [0.929, 0.660, 0.818]], [0.282, [0.932, 0.670, 0.824]], [0.284, [0.932, 0.670, 0.824]], [0.286, [0.935, 0.680, 0.831]], [0.288, [0.935, 0.680, 0.831]], [0.290, [0.938, 0.690, 0.838]], [0.292, [0.938, 0.690, 0.838]], [0.294, [0.941, 0.699, 0.845]], [0.295, [0.941, 0.699, 0.845]], [0.297, [0.944, 0.709, 0.852]], [0.299, [0.944, 0.709, 0.852]], [0.301, [0.946, 0.717, 0.857]], [0.303, [0.946, 0.717, 0.857]], [0.305, [0.948, 0.723, 0.860]], [0.307, [0.948, 0.723, 0.860]], [0.309, [0.950, 0.730, 0.863]], [0.311, [0.950, 0.730, 0.863]], [0.313, [0.952, 0.736, 0.866]], [0.315, [0.952, 0.736, 0.866]], [0.317, [0.953, 0.743, 0.869]], [0.319, [0.953, 0.743, 0.869]], [0.321, [0.955, 0.749, 0.873]], [0.323, [0.955, 0.749, 0.873]], [0.325, [0.957, 0.756, 0.876]], [0.327, [0.957, 0.756, 0.876]], [0.329, [0.959, 0.762, 0.879]], [0.331, [0.959, 0.762, 0.879]], [0.333, [0.961, 0.769, 0.882]], [0.335, [0.961, 0.769, 0.882]], [0.337, [0.963, 0.775, 0.886]], [0.339, [0.963, 0.775, 0.886]], [0.341, [0.964, 0.782, 0.889]], [0.342, [0.964, 0.782, 0.889]], [0.344, [0.966, 0.788, 0.892]], [0.346, [0.966, 0.788, 0.892]], [0.348, [0.968, 0.794, 0.895]], [0.350, [0.968, 0.794, 0.895]], [0.352, [0.970, 0.801, 0.899]], [0.354, [0.970, 0.801, 0.899]], [0.356, [0.972, 0.807, 0.902]], [0.358, [0.972, 0.807, 0.902]], [0.360, [0.974, 0.814, 0.905]], [0.362, [0.974, 0.814, 0.905]], [0.364, [0.976, 0.820, 0.908]], [0.366, [0.976, 0.820, 0.908]], [0.368, [0.977, 0.827, 0.911]], [0.370, [0.977, 0.827, 0.911]], [0.372, [0.979, 0.833, 0.915]], [0.374, [0.979, 0.833, 0.915]], [0.376, [0.981, 0.840, 0.918]], [0.378, [0.981, 0.840, 0.918]], [0.380, [0.983, 0.846, 0.921]], [0.382, [0.983, 0.846, 0.921]], [0.384, [0.985, 0.853, 0.924]], [0.386, [0.985, 0.853, 0.924]], [0.387, [0.987, 0.859, 0.928]], [0.389, [0.987, 0.859, 0.928]], [0.391, [0.988, 0.866, 0.931]], [0.393, [0.988, 0.866, 0.931]], [0.395, [0.990, 0.872, 0.934]], [0.397, [0.990, 0.872, 0.934]], [0.399, [0.992, 0.878, 0.937]], [0.401, [0.992, 0.878, 0.937]], [0.403, [0.991, 0.882, 0.938]], [0.405, [0.991, 0.882, 0.938]], [0.407, [0.990, 0.886, 0.940]], [0.409, [0.990, 0.886, 0.940]], [0.411, [0.989, 0.889, 0.941]], [0.413, [0.989, 0.889, 0.941]], [0.415, [0.988, 0.893, 0.942]], [0.417, [0.988, 0.893, 0.942]], [0.419, [0.988, 0.896, 0.943]], [0.421, [0.988, 0.896, 0.943]], [0.423, [0.987, 0.900, 0.945]], [0.425, [0.987, 0.900, 0.945]], [0.427, [0.986, 0.903, 0.946]], [0.429, [0.986, 0.903, 0.946]], [0.431, [0.985, 0.907, 0.947]], [0.432, [0.985, 0.907, 0.947]], [0.434, [0.984, 0.910, 0.948]], [0.436, [0.984, 0.910, 0.948]], [0.438, [0.983, 0.914, 0.950]], [0.440, [0.983, 0.914, 0.950]], [0.442, [0.982, 0.917, 0.951]], [0.444, [0.982, 0.917, 0.951]], [0.446, [0.981, 0.921, 0.952]], [0.448, [0.981, 0.921, 0.952]], [0.450, [0.980, 0.924, 0.953]], [0.452, [0.980, 0.924, 0.953]], [0.454, [0.979, 0.928, 0.954]], [0.456, [0.979, 0.928, 0.954]], [0.458, [0.978, 0.931, 0.956]], [0.460, [0.978, 0.931, 0.956]], [0.462, [0.977, 0.935, 0.957]], [0.464, [0.977, 0.935, 0.957]], [0.466, [0.976, 0.939, 0.958]], [0.468, [0.976, 0.939, 0.958]], [0.470, [0.976, 0.942, 0.959]], [0.472, [0.976, 0.942, 0.959]], [0.474, [0.975, 0.946, 0.961]], [0.476, [0.975, 0.946, 0.961]], [0.477, [0.974, 0.949, 0.962]], [0.479, [0.974, 0.949, 0.962]], [0.481, [0.973, 0.953, 0.963]], [0.483, [0.973, 0.953, 0.963]], [0.485, [0.972, 0.956, 0.964]], [0.487, [0.972, 0.956, 0.964]], [0.489, [0.971, 0.960, 0.966]], [0.491, [0.971, 0.960, 0.966]], [0.493, [0.970, 0.963, 0.967]], [0.495, [0.970, 0.963, 0.967]], [0.497, [0.969, 0.967, 0.968]], [0.499, [0.969, 0.967, 0.968]], [0.501, [0.967, 0.968, 0.966]], [0.503, [0.967, 0.968, 0.966]], [0.505, [0.965, 0.968, 0.960]], [0.507, [0.965, 0.968, 0.960]], [0.509, [0.962, 0.968, 0.954]], [0.511, [0.962, 0.968, 0.954]], [0.513, [0.959, 0.968, 0.948]], [0.515, [0.959, 0.968, 0.948]], [0.517, [0.957, 0.967, 0.942]], [0.519, [0.957, 0.967, 0.942]], [0.521, [0.954, 0.967, 0.936]], [0.523, [0.954, 0.967, 0.936]], [0.524, [0.952, 0.967, 0.930]], [0.526, [0.952, 0.967, 0.930]], [0.528, [0.949, 0.966, 0.924]], [0.530, [0.949, 0.966, 0.924]], [0.532, [0.946, 0.966, 0.918]], [0.534, [0.946, 0.966, 0.918]], [0.536, [0.944, 0.966, 0.912]], [0.538, [0.944, 0.966, 0.912]], [0.540, [0.941, 0.965, 0.906]], [0.542, [0.941, 0.965, 0.906]], [0.544, [0.939, 0.965, 0.900]], [0.546, [0.939, 0.965, 0.900]], [0.548, [0.936, 0.965, 0.894]], [0.550, [0.936, 0.965, 0.894]], [0.552, [0.933, 0.964, 0.888]], [0.554, [0.933, 0.964, 0.888]], [0.556, [0.931, 0.964, 0.882]], [0.558, [0.931, 0.964, 0.882]], [0.560, [0.928, 0.964, 0.876]], [0.562, [0.928, 0.964, 0.876]], [0.564, [0.925, 0.964, 0.870]], [0.566, [0.925, 0.964, 0.870]], [0.568, [0.923, 0.963, 0.864]], [0.569, [0.923, 0.963, 0.864]], [0.571, [0.920, 0.963, 0.858]], [0.573, [0.920, 0.963, 0.858]], [0.575, [0.918, 0.963, 0.852]], [0.577, [0.918, 0.963, 0.852]], [0.579, [0.915, 0.962, 0.846]], [0.581, [0.915, 0.962, 0.846]], [0.583, [0.912, 0.962, 0.840]], [0.585, [0.912, 0.962, 0.840]], [0.587, [0.910, 0.962, 0.834]], [0.589, [0.910, 0.962, 0.834]], [0.591, [0.907, 0.961, 0.828]], [0.593, [0.907, 0.961, 0.828]], [0.595, [0.905, 0.961, 0.822]], [0.597, [0.905, 0.961, 0.822]], [0.599, [0.902, 0.961, 0.816]], [0.601, [0.902, 0.961, 0.816]], [0.603, [0.895, 0.958, 0.804]], [0.605, [0.895, 0.958, 0.804]], [0.607, [0.888, 0.955, 0.793]], [0.609, [0.888, 0.955, 0.793]], [0.611, [0.881, 0.952, 0.782]], [0.613, [0.881, 0.952, 0.782]], [0.614, [0.874, 0.948, 0.770]], [0.616, [0.874, 0.948, 0.770]], [0.618, [0.867, 0.945, 0.759]], [0.620, [0.867, 0.945, 0.759]], [0.622, [0.860, 0.942, 0.747]], [0.624, [0.860, 0.942, 0.747]], [0.626, [0.852, 0.939, 0.736]], [0.628, [0.852, 0.939, 0.736]], [0.630, [0.845, 0.936, 0.725]], [0.632, [0.845, 0.936, 0.725]], [0.634, [0.838, 0.933, 0.713]], [0.636, [0.838, 0.933, 0.713]], [0.638, [0.831, 0.930, 0.702]], [0.640, [0.831, 0.930, 0.702]], [0.642, [0.824, 0.927, 0.691]], [0.644, [0.824, 0.927, 0.691]], [0.646, [0.817, 0.924, 0.679]], [0.648, [0.817, 0.924, 0.679]], [0.650, [0.810, 0.921, 0.668]], [0.652, [0.810, 0.921, 0.668]], [0.654, [0.803, 0.918, 0.656]], [0.656, [0.803, 0.918, 0.656]], [0.658, [0.796, 0.915, 0.645]], [0.659, [0.796, 0.915, 0.645]], [0.661, [0.789, 0.912, 0.634]], [0.663, [0.789, 0.912, 0.634]], [0.665, [0.782, 0.908, 0.622]], [0.667, [0.782, 0.908, 0.622]], [0.669, [0.775, 0.905, 0.611]], [0.671, [0.775, 0.905, 0.611]], [0.673, [0.768, 0.902, 0.599]], [0.675, [0.768, 0.902, 0.599]], [0.677, [0.760, 0.899, 0.588]], [0.679, [0.760, 0.899, 0.588]], [0.681, [0.753, 0.896, 0.577]], [0.683, [0.753, 0.896, 0.577]], [0.685, [0.746, 0.893, 0.565]], [0.687, [0.746, 0.893, 0.565]], [0.689, [0.739, 0.890, 0.554]], [0.691, [0.739, 0.890, 0.554]], [0.693, [0.732, 0.887, 0.543]], [0.695, [0.732, 0.887, 0.543]], [0.697, [0.725, 0.884, 0.531]], [0.699, [0.725, 0.884, 0.531]], [0.701, [0.717, 0.880, 0.520]], [0.703, [0.717, 0.880, 0.520]], [0.705, [0.708, 0.874, 0.510]], [0.706, [0.708, 0.874, 0.510]], [0.708, [0.700, 0.868, 0.499]], [0.710, [0.700, 0.868, 0.499]], [0.712, [0.691, 0.862, 0.488]], [0.714, [0.691, 0.862, 0.488]], [0.716, [0.682, 0.857, 0.478]], [0.718, [0.682, 0.857, 0.478]], [0.720, [0.673, 0.851, 0.467]], [0.722, [0.673, 0.851, 0.467]], [0.724, [0.665, 0.845, 0.457]], [0.726, [0.665, 0.845, 0.457]], [0.728, [0.656, 0.840, 0.446]], [0.730, [0.656, 0.840, 0.446]], [0.732, [0.647, 0.834, 0.435]], [0.734, [0.647, 0.834, 0.435]], [0.736, [0.638, 0.828, 0.425]], [0.738, [0.638, 0.828, 0.425]], [0.740, [0.630, 0.823, 0.414]], [0.742, [0.630, 0.823, 0.414]], [0.744, [0.621, 0.817, 0.403]], [0.746, [0.621, 0.817, 0.403]], [0.748, [0.612, 0.811, 0.393]], [0.750, [0.612, 0.811, 0.393]], [0.751, [0.603, 0.806, 0.382]], [0.753, [0.603, 0.806, 0.382]], [0.755, [0.594, 0.800, 0.372]], [0.757, [0.594, 0.800, 0.372]], [0.759, [0.586, 0.794, 0.361]], [0.761, [0.586, 0.794, 0.361]], [0.763, [0.577, 0.788, 0.350]], [0.765, [0.577, 0.788, 0.350]], [0.767, [0.568, 0.783, 0.340]], [0.769, [0.568, 0.783, 0.340]], [0.771, [0.559, 0.777, 0.329]], [0.773, [0.559, 0.777, 0.329]], [0.775, [0.551, 0.771, 0.319]], [0.777, [0.551, 0.771, 0.319]], [0.779, [0.542, 0.766, 0.308]], [0.781, [0.542, 0.766, 0.308]], [0.783, [0.533, 0.760, 0.297]], [0.785, [0.533, 0.760, 0.297]], [0.787, [0.524, 0.754, 0.287]], [0.789, [0.524, 0.754, 0.287]], [0.791, [0.516, 0.749, 0.276]], [0.793, [0.516, 0.749, 0.276]], [0.795, [0.507, 0.743, 0.266]], [0.796, [0.507, 0.743, 0.266]], [0.798, [0.498, 0.737, 0.255]], [0.800, [0.498, 0.737, 0.255]], [0.802, [0.490, 0.731, 0.250]], [0.804, [0.490, 0.731, 0.250]], [0.806, [0.483, 0.724, 0.245]], [0.808, [0.483, 0.724, 0.245]], [0.810, [0.475, 0.718, 0.240]], [0.812, [0.475, 0.718, 0.240]], [0.814, [0.467, 0.711, 0.235]], [0.816, [0.467, 0.711, 0.235]], [0.818, [0.460, 0.705, 0.230]], [0.820, [0.460, 0.705, 0.230]], [0.822, [0.452, 0.699, 0.225]], [0.824, [0.452, 0.699, 0.225]], [0.826, [0.444, 0.692, 0.220]], [0.828, [0.444, 0.692, 0.220]], [0.830, [0.437, 0.686, 0.216]], [0.832, [0.437, 0.686, 0.216]], [0.834, [0.429, 0.679, 0.211]], [0.836, [0.429, 0.679, 0.211]], [0.838, [0.421, 0.673, 0.206]], [0.840, [0.421, 0.673, 0.206]], [0.841, [0.413, 0.666, 0.201]], [0.843, [0.413, 0.666, 0.201]], [0.845, [0.406, 0.660, 0.196]], [0.847, [0.406, 0.660, 0.196]], [0.849, [0.398, 0.653, 0.191]], [0.851, [0.398, 0.653, 0.191]], [0.853, [0.390, 0.647, 0.186]], [0.855, [0.390, 0.647, 0.186]], [0.857, [0.383, 0.640, 0.181]], [0.859, [0.383, 0.640, 0.181]], [0.861, [0.375, 0.634, 0.176]], [0.863, [0.375, 0.634, 0.176]], [0.865, [0.367, 0.627, 0.171]], [0.867, [0.367, 0.627, 0.171]], [0.869, [0.360, 0.621, 0.166]], [0.871, [0.360, 0.621, 0.166]], [0.873, [0.352, 0.615, 0.161]], [0.875, [0.352, 0.615, 0.161]], [0.877, [0.344, 0.608, 0.156]], [0.879, [0.344, 0.608, 0.156]], [0.881, [0.337, 0.602, 0.152]], [0.883, [0.337, 0.602, 0.152]], [0.885, [0.329, 0.595, 0.147]], [0.886, [0.329, 0.595, 0.147]], [0.888, [0.321, 0.589, 0.142]], [0.890, [0.321, 0.589, 0.142]], [0.892, [0.313, 0.582, 0.137]], [0.894, [0.313, 0.582, 0.137]], [0.896, [0.306, 0.576, 0.132]], [0.898, [0.306, 0.576, 0.132]], [0.900, [0.299, 0.569, 0.129]], [0.902, [0.299, 0.569, 0.129]], [0.904, [0.293, 0.562, 0.128]], [0.906, [0.293, 0.562, 0.128]], [0.908, [0.287, 0.555, 0.126]], [0.910, [0.287, 0.555, 0.126]], [0.912, [0.282, 0.548, 0.125]], [0.914, [0.282, 0.548, 0.125]], [0.916, [0.276, 0.541, 0.124]], [0.918, [0.276, 0.541, 0.124]], [0.920, [0.270, 0.534, 0.123]], [0.922, [0.270, 0.534, 0.123]], [0.924, [0.264, 0.527, 0.121]], [0.926, [0.264, 0.527, 0.121]], [0.928, [0.258, 0.519, 0.120]], [0.930, [0.258, 0.519, 0.120]], [0.932, [0.252, 0.512, 0.119]], [0.933, [0.252, 0.512, 0.119]], [0.935, [0.246, 0.505, 0.118]], [0.937, [0.246, 0.505, 0.118]], [0.939, [0.241, 0.498, 0.116]], [0.941, [0.241, 0.498, 0.116]], [0.943, [0.235, 0.491, 0.115]], [0.945, [0.235, 0.491, 0.115]], [0.947, [0.229, 0.484, 0.114]], [0.949, [0.229, 0.484, 0.114]], [0.951, [0.223, 0.477, 0.113]], [0.953, [0.223, 0.477, 0.113]], [0.955, [0.217, 0.470, 0.112]], [0.957, [0.217, 0.470, 0.112]], [0.959, [0.211, 0.463, 0.110]], [0.961, [0.211, 0.463, 0.110]], [0.963, [0.206, 0.456, 0.109]], [0.965, [0.206, 0.456, 0.109]], [0.967, [0.200, 0.449, 0.108]], [0.969, [0.200, 0.449, 0.108]], [0.971, [0.194, 0.442, 0.107]], [0.973, [0.194, 0.442, 0.107]], [0.975, [0.188, 0.435, 0.105]], [0.977, [0.188, 0.435, 0.105]], [0.978, [0.182, 0.428, 0.104]], [0.980, [0.182, 0.428, 0.104]], [0.982, [0.176, 0.420, 0.103]], [0.984, [0.176, 0.420, 0.103]], [0.986, [0.170, 0.413, 0.102]], [0.988, [0.170, 0.413, 0.102]], [0.990, [0.165, 0.406, 0.100]], [0.992, [0.165, 0.406, 0.100]], [0.994, [0.159, 0.399, 0.099]], [0.996, [0.159, 0.399, 0.099]], [0.998, [0.153, 0.392, 0.098]], [1.000, [0.153, 0.392, 0.098]]];
H.colormap_plasma = function() {
  const colors = H.color_utils.color_cut;
  const ramp = H.color_utils.ramp;
  let result = ramp(colors("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));
  return result;
}
H.colormap_plasma2 = [[0.000,[0.05038300,0.02980300,0.52797500]],[0.004,[0.06353600,0.02842600,0.53312400]],[0.008,[0.07535300,0.02720600,0.53800700]],[0.012,[0.08622200,0.02612500,0.54265800]],[0.016,[0.09637900,0.02516500,0.54710300]],[0.020,[0.10598000,0.02430900,0.55136800]],[0.024,[0.11512400,0.02355600,0.55546800]],[0.027,[0.12390300,0.02287800,0.55942300]],[0.031,[0.13238100,0.02225800,0.56325000]],[0.035,[0.14060300,0.02168700,0.56695900]],[0.039,[0.14860700,0.02115400,0.57056200]],[0.043,[0.15642100,0.02065100,0.57406500]],[0.047,[0.16407000,0.02017100,0.57747800]],[0.051,[0.17157400,0.01970600,0.58080600]],[0.055,[0.17895000,0.01925200,0.58405400]],[0.059,[0.18621300,0.01880300,0.58722800]],[0.063,[0.19337400,0.01835400,0.59033000]],[0.067,[0.20044500,0.01790200,0.59336400]],[0.071,[0.20743500,0.01744200,0.59633300]],[0.075,[0.21435000,0.01697300,0.59923900]],[0.078,[0.22119700,0.01649700,0.60208300]],[0.082,[0.22798300,0.01600700,0.60486700]],[0.086,[0.23471500,0.01550200,0.60759200]],[0.090,[0.24139600,0.01497900,0.61025900]],[0.094,[0.24803200,0.01443900,0.61286800]],[0.098,[0.25462700,0.01388200,0.61541900]],[0.102,[0.26118300,0.01330800,0.61791100]],[0.106,[0.26770300,0.01271600,0.62034600]],[0.110,[0.27419100,0.01210900,0.62272200]],[0.114,[0.28064800,0.01148800,0.62503800]],[0.118,[0.28707600,0.01085500,0.62729500]],[0.122,[0.29347800,0.01021300,0.62949000]],[0.125,[0.29985500,0.00956100,0.63162400]],[0.129,[0.30621000,0.00890200,0.63369400]],[0.133,[0.31254300,0.00823900,0.63570000]],[0.137,[0.31885600,0.00757600,0.63764000]],[0.141,[0.32515000,0.00691500,0.63951200]],[0.145,[0.33142600,0.00626100,0.64131600]],[0.149,[0.33768300,0.00561800,0.64304900]],[0.153,[0.34392500,0.00499100,0.64471000]],[0.157,[0.35015000,0.00438200,0.64629800]],[0.161,[0.35635900,0.00379800,0.64781000]],[0.165,[0.36255300,0.00324300,0.64924500]],[0.169,[0.36873300,0.00272400,0.65060100]],[0.173,[0.37489700,0.00224500,0.65187600]],[0.176,[0.38104700,0.00181400,0.65306800]],[0.180,[0.38718300,0.00143400,0.65417700]],[0.184,[0.39330400,0.00111400,0.65519900]],[0.188,[0.39941100,0.00085900,0.65613300]],[0.192,[0.40550300,0.00067800,0.65697700]],[0.196,[0.41158000,0.00057700,0.65773000]],[0.200,[0.41764200,0.00056400,0.65839000]],[0.204,[0.42368900,0.00064600,0.65895600]],[0.208,[0.42971900,0.00083100,0.65942500]],[0.212,[0.43573400,0.00112700,0.65979700]],[0.216,[0.44173200,0.00154000,0.66006900]],[0.220,[0.44771400,0.00208000,0.66024000]],[0.224,[0.45367700,0.00275500,0.66031000]],[0.227,[0.45962300,0.00357400,0.66027700]],[0.231,[0.46555000,0.00454500,0.66013900]],[0.235,[0.47145700,0.00567800,0.65989700]],[0.239,[0.47734400,0.00698000,0.65954900]],[0.243,[0.48321000,0.00846000,0.65909500]],[0.247,[0.48905500,0.01012700,0.65853400]],[0.251,[0.49487700,0.01199000,0.65786500]],[0.255,[0.50067800,0.01405500,0.65708800]],[0.259,[0.50645400,0.01633300,0.65620200]],[0.263,[0.51220600,0.01883300,0.65520900]],[0.267,[0.51793300,0.02156300,0.65410900]],[0.271,[0.52363300,0.02453200,0.65290100]],[0.275,[0.52930600,0.02774700,0.65158600]],[0.278,[0.53495200,0.03121700,0.65016500]],[0.282,[0.54057000,0.03495000,0.64864000]],[0.286,[0.54615700,0.03895400,0.64701000]],[0.290,[0.55171500,0.04313600,0.64527700]],[0.294,[0.55724300,0.04733100,0.64344300]],[0.298,[0.56273800,0.05154500,0.64150900]],[0.302,[0.56820100,0.05577800,0.63947700]],[0.306,[0.57363200,0.06002800,0.63734900]],[0.310,[0.57902900,0.06429600,0.63512600]],[0.314,[0.58439100,0.06857900,0.63281200]],[0.318,[0.58971900,0.07287800,0.63040800]],[0.322,[0.59501100,0.07719000,0.62791700]],[0.325,[0.60026600,0.08151600,0.62534200]],[0.329,[0.60548500,0.08585400,0.62268600]],[0.333,[0.61066700,0.09020400,0.61995100]],[0.337,[0.61581200,0.09456400,0.61714000]],[0.341,[0.62091900,0.09893400,0.61425700]],[0.345,[0.62598700,0.10331200,0.61130500]],[0.349,[0.63101700,0.10769900,0.60828700]],[0.353,[0.63600800,0.11209200,0.60520500]],[0.357,[0.64095900,0.11649200,0.60206500]],[0.361,[0.64587200,0.12089800,0.59886700]],[0.365,[0.65074600,0.12530900,0.59561700]],[0.369,[0.65558000,0.12972500,0.59231700]],[0.373,[0.66037400,0.13414400,0.58897100]],[0.376,[0.66512900,0.13856600,0.58558200]],[0.380,[0.66984500,0.14299200,0.58215400]],[0.384,[0.67452200,0.14741900,0.57868800]],[0.388,[0.67916000,0.15184800,0.57518900]],[0.392,[0.68375800,0.15627800,0.57166000]],[0.396,[0.68831800,0.16070900,0.56810300]],[0.400,[0.69284000,0.16514100,0.56452200]],[0.404,[0.69732400,0.16957300,0.56091900]],[0.408,[0.70176900,0.17400500,0.55729600]],[0.412,[0.70617800,0.17843700,0.55365700]],[0.416,[0.71054900,0.18286800,0.55000400]],[0.420,[0.71488300,0.18729900,0.54633800]],[0.424,[0.71918100,0.19172900,0.54266300]],[0.427,[0.72344400,0.19615800,0.53898100]],[0.431,[0.72767000,0.20058600,0.53529300]],[0.435,[0.73186200,0.20501300,0.53160100]],[0.439,[0.73601900,0.20943900,0.52790800]],[0.443,[0.74014300,0.21386400,0.52421600]],[0.447,[0.74423200,0.21828800,0.52052400]],[0.451,[0.74828900,0.22271100,0.51683400]],[0.455,[0.75231200,0.22713300,0.51314900]],[0.459,[0.75630400,0.23155500,0.50946800]],[0.463,[0.76026400,0.23597600,0.50579400]],[0.467,[0.76419300,0.24039600,0.50212600]],[0.471,[0.76809000,0.24481700,0.49846500]],[0.475,[0.77195800,0.24923700,0.49481300]],[0.478,[0.77579600,0.25365800,0.49117100]],[0.482,[0.77960400,0.25807800,0.48753900]],[0.486,[0.78338300,0.26250000,0.48391800]],[0.490,[0.78713300,0.26692200,0.48030700]],[0.494,[0.79085500,0.27134500,0.47670600]],[0.498,[0.79454900,0.27577000,0.47311700]],[0.502,[0.79821600,0.28019700,0.46953800]],[0.506,[0.80185500,0.28462600,0.46597100]],[0.510,[0.80546700,0.28905700,0.46241500]],[0.514,[0.80905200,0.29349100,0.45887000]],[0.518,[0.81261200,0.29792800,0.45533800]],[0.522,[0.81614400,0.30236800,0.45181600]],[0.525,[0.81965100,0.30681200,0.44830600]],[0.529,[0.82313200,0.31126100,0.44480600]],[0.533,[0.82658800,0.31571400,0.44131600]],[0.537,[0.83001800,0.32017200,0.43783600]],[0.541,[0.83342200,0.32463500,0.43436600]],[0.545,[0.83680100,0.32910500,0.43090500]],[0.549,[0.84015500,0.33358000,0.42745500]],[0.553,[0.84348400,0.33806200,0.42401300]],[0.557,[0.84678800,0.34255100,0.42057900]],[0.561,[0.85006600,0.34704800,0.41715300]],[0.565,[0.85331900,0.35155300,0.41373400]],[0.569,[0.85654700,0.35606600,0.41032200]],[0.573,[0.85975000,0.36058800,0.40691700]],[0.576,[0.86292700,0.36511900,0.40351900]],[0.580,[0.86607800,0.36966000,0.40012600]],[0.584,[0.86920300,0.37421200,0.39673800]],[0.588,[0.87230300,0.37877400,0.39335500]],[0.592,[0.87537600,0.38334700,0.38997600]],[0.596,[0.87842300,0.38793200,0.38660000]],[0.600,[0.88144300,0.39252900,0.38322900]],[0.604,[0.88443600,0.39713900,0.37986000]],[0.608,[0.88740200,0.40176200,0.37649400]],[0.612,[0.89034000,0.40639800,0.37313000]],[0.616,[0.89325000,0.41104800,0.36976800]],[0.620,[0.89613100,0.41571200,0.36640700]],[0.624,[0.89898400,0.42039200,0.36304700]],[0.627,[0.90180700,0.42508700,0.35968800]],[0.631,[0.90460100,0.42979700,0.35632900]],[0.635,[0.90736500,0.43452400,0.35297000]],[0.639,[0.91009800,0.43926800,0.34961000]],[0.643,[0.91280000,0.44402900,0.34625100]],[0.647,[0.91547100,0.44880700,0.34289000]],[0.651,[0.91810900,0.45360300,0.33952900]],[0.655,[0.92071400,0.45841700,0.33616600]],[0.659,[0.92328700,0.46325100,0.33280100]],[0.663,[0.92582500,0.46810300,0.32943500]],[0.667,[0.92832900,0.47297500,0.32606700]],[0.671,[0.93079800,0.47786700,0.32269700]],[0.675,[0.93323200,0.48278000,0.31932500]],[0.678,[0.93563000,0.48771200,0.31595200]],[0.682,[0.93799000,0.49266700,0.31257500]],[0.686,[0.94031300,0.49764200,0.30919700]],[0.690,[0.94259800,0.50263900,0.30581600]],[0.694,[0.94484400,0.50765800,0.30243300]],[0.698,[0.94705100,0.51269900,0.29904900]],[0.702,[0.94921700,0.51776300,0.29566200]],[0.706,[0.95134400,0.52285000,0.29227500]],[0.710,[0.95342800,0.52796000,0.28888300]],[0.714,[0.95547000,0.53309300,0.28549000]],[0.718,[0.95746900,0.53825000,0.28209600]],[0.722,[0.95942400,0.54343100,0.27870100]],[0.725,[0.96133600,0.54863600,0.27530500]],[0.729,[0.96320300,0.55386500,0.27190900]],[0.733,[0.96502400,0.55911800,0.26851300]],[0.737,[0.96679800,0.56439600,0.26511800]],[0.741,[0.96852600,0.56970000,0.26172100]],[0.745,[0.97020500,0.57502800,0.25832500]],[0.749,[0.97183500,0.58038200,0.25493100]],[0.753,[0.97341600,0.58576100,0.25154000]],[0.757,[0.97494700,0.59116500,0.24815100]],[0.761,[0.97642800,0.59659500,0.24476700]],[0.765,[0.97785600,0.60205100,0.24138700]],[0.769,[0.97923300,0.60753200,0.23801300]],[0.773,[0.98055600,0.61303900,0.23464600]],[0.776,[0.98182600,0.61857200,0.23128700]],[0.780,[0.98304100,0.62413100,0.22793700]],[0.784,[0.98419900,0.62971800,0.22459500]],[0.788,[0.98530100,0.63533000,0.22126500]],[0.792,[0.98634500,0.64096900,0.21794800]],[0.796,[0.98733200,0.64663300,0.21464800]],[0.800,[0.98826000,0.65232500,0.21136400]],[0.804,[0.98912800,0.65804300,0.20810000]],[0.808,[0.98993500,0.66378700,0.20485900]],[0.812,[0.99068100,0.66955800,0.20164200]],[0.816,[0.99136500,0.67535500,0.19845300]],[0.820,[0.99198500,0.68117900,0.19529500]],[0.824,[0.99254100,0.68703000,0.19217000]],[0.827,[0.99303200,0.69290700,0.18908400]],[0.831,[0.99345600,0.69881000,0.18604100]],[0.835,[0.99381400,0.70474100,0.18304300]],[0.839,[0.99410300,0.71069800,0.18009700]],[0.843,[0.99432400,0.71668100,0.17720800]],[0.847,[0.99447400,0.72269100,0.17438100]],[0.851,[0.99455300,0.72872800,0.17162200]],[0.855,[0.99456100,0.73479100,0.16893800]],[0.859,[0.99449500,0.74088000,0.16633500]],[0.863,[0.99435500,0.74699500,0.16382100]],[0.867,[0.99414100,0.75313700,0.16140400]],[0.871,[0.99385100,0.75930400,0.15909200]],[0.875,[0.99348200,0.76549900,0.15689100]],[0.878,[0.99303300,0.77172000,0.15480800]],[0.882,[0.99250500,0.77796700,0.15285500]],[0.886,[0.99189700,0.78423900,0.15104200]],[0.890,[0.99120900,0.79053700,0.14937700]],[0.894,[0.99043900,0.79685900,0.14787000]],[0.898,[0.98958700,0.80320500,0.14652900]],[0.902,[0.98864800,0.80957900,0.14535700]],[0.906,[0.98762100,0.81597800,0.14436300]],[0.910,[0.98650900,0.82240100,0.14355700]],[0.914,[0.98531400,0.82884600,0.14294500]],[0.918,[0.98403100,0.83531500,0.14252800]],[0.922,[0.98265300,0.84181200,0.14230300]],[0.925,[0.98119000,0.84832900,0.14227900]],[0.929,[0.97964400,0.85486600,0.14245300]],[0.933,[0.97799500,0.86143200,0.14280800]],[0.937,[0.97626500,0.86801600,0.14335100]],[0.941,[0.97444300,0.87462200,0.14406100]],[0.945,[0.97253000,0.88125000,0.14492300]],[0.949,[0.97053300,0.88789600,0.14591900]],[0.953,[0.96844300,0.89456400,0.14701400]],[0.957,[0.96627100,0.90124900,0.14818000]],[0.961,[0.96402100,0.90795000,0.14937000]],[0.965,[0.96168100,0.91467200,0.15052000]],[0.969,[0.95927600,0.92140700,0.15156600]],[0.973,[0.95680800,0.92815200,0.15240900]],[0.976,[0.95428700,0.93490800,0.15292100]],[0.980,[0.95172600,0.94167100,0.15292500]],[0.984,[0.94915100,0.94843500,0.15217800]],[0.988,[0.94660200,0.95519000,0.15032800]],[0.992,[0.94415200,0.96191600,0.14686100]],[0.996,[0.94189600,0.96859000,0.14095600]],[1.000,[0.94001500,0.97515800,0.13132600]]]
H.colormap_PRGn = [[0.000, [0.251, 0.000, 0.294]], [0.002, [0.251, 0.000, 0.294]], [0.004, [0.259, 0.006, 0.303]], [0.006, [0.259, 0.006, 0.303]], [0.008, [0.268, 0.013, 0.311]], [0.010, [0.268, 0.013, 0.311]], [0.012, [0.276, 0.019, 0.320]], [0.014, [0.276, 0.019, 0.320]], [0.016, [0.284, 0.026, 0.329]], [0.018, [0.284, 0.026, 0.329]], [0.020, [0.293, 0.032, 0.337]], [0.022, [0.293, 0.032, 0.337]], [0.023, [0.301, 0.039, 0.346]], [0.025, [0.301, 0.039, 0.346]], [0.027, [0.309, 0.045, 0.354]], [0.029, [0.309, 0.045, 0.354]], [0.031, [0.317, 0.052, 0.363]], [0.033, [0.317, 0.052, 0.363]], [0.035, [0.326, 0.058, 0.372]], [0.037, [0.326, 0.058, 0.372]], [0.039, [0.334, 0.065, 0.380]], [0.041, [0.334, 0.065, 0.380]], [0.043, [0.342, 0.071, 0.389]], [0.045, [0.342, 0.071, 0.389]], [0.047, [0.351, 0.078, 0.397]], [0.049, [0.351, 0.078, 0.397]], [0.051, [0.359, 0.084, 0.406]], [0.053, [0.359, 0.084, 0.406]], [0.055, [0.367, 0.090, 0.415]], [0.057, [0.367, 0.090, 0.415]], [0.059, [0.376, 0.097, 0.423]], [0.061, [0.376, 0.097, 0.423]], [0.063, [0.384, 0.103, 0.432]], [0.065, [0.384, 0.103, 0.432]], [0.067, [0.392, 0.110, 0.441]], [0.068, [0.392, 0.110, 0.441]], [0.070, [0.400, 0.116, 0.449]], [0.072, [0.400, 0.116, 0.449]], [0.074, [0.409, 0.123, 0.458]], [0.076, [0.409, 0.123, 0.458]], [0.078, [0.417, 0.129, 0.466]], [0.080, [0.417, 0.129, 0.466]], [0.082, [0.425, 0.136, 0.475]], [0.084, [0.425, 0.136, 0.475]], [0.086, [0.434, 0.142, 0.484]], [0.088, [0.434, 0.142, 0.484]], [0.090, [0.442, 0.149, 0.492]], [0.092, [0.442, 0.149, 0.492]], [0.094, [0.450, 0.155, 0.501]], [0.096, [0.450, 0.155, 0.501]], [0.098, [0.459, 0.161, 0.509]], [0.100, [0.459, 0.161, 0.509]], [0.102, [0.465, 0.170, 0.517]], [0.104, [0.465, 0.170, 0.517]], [0.106, [0.471, 0.181, 0.523]], [0.108, [0.471, 0.181, 0.523]], [0.110, [0.476, 0.192, 0.529]], [0.112, [0.476, 0.192, 0.529]], [0.114, [0.482, 0.202, 0.535]], [0.115, [0.482, 0.202, 0.535]], [0.117, [0.487, 0.213, 0.541]], [0.119, [0.487, 0.213, 0.541]], [0.121, [0.492, 0.224, 0.548]], [0.123, [0.492, 0.224, 0.548]], [0.125, [0.498, 0.235, 0.554]], [0.127, [0.498, 0.235, 0.554]], [0.129, [0.503, 0.245, 0.560]], [0.131, [0.503, 0.245, 0.560]], [0.133, [0.508, 0.256, 0.566]], [0.135, [0.508, 0.256, 0.566]], [0.137, [0.514, 0.267, 0.572]], [0.139, [0.514, 0.267, 0.572]], [0.141, [0.519, 0.278, 0.578]], [0.143, [0.519, 0.278, 0.578]], [0.145, [0.525, 0.289, 0.584]], [0.147, [0.525, 0.289, 0.584]], [0.149, [0.530, 0.299, 0.591]], [0.151, [0.530, 0.299, 0.591]], [0.153, [0.535, 0.310, 0.597]], [0.155, [0.535, 0.310, 0.597]], [0.157, [0.541, 0.321, 0.603]], [0.159, [0.541, 0.321, 0.603]], [0.160, [0.546, 0.332, 0.609]], [0.162, [0.546, 0.332, 0.609]], [0.164, [0.552, 0.342, 0.615]], [0.166, [0.552, 0.342, 0.615]], [0.168, [0.557, 0.353, 0.621]], [0.170, [0.557, 0.353, 0.621]], [0.172, [0.562, 0.364, 0.628]], [0.174, [0.562, 0.364, 0.628]], [0.176, [0.568, 0.375, 0.634]], [0.178, [0.568, 0.375, 0.634]], [0.180, [0.573, 0.385, 0.640]], [0.182, [0.573, 0.385, 0.640]], [0.184, [0.578, 0.396, 0.646]], [0.186, [0.578, 0.396, 0.646]], [0.188, [0.584, 0.407, 0.652]], [0.190, [0.584, 0.407, 0.652]], [0.192, [0.589, 0.418, 0.658]], [0.194, [0.589, 0.418, 0.658]], [0.196, [0.595, 0.428, 0.664]], [0.198, [0.595, 0.428, 0.664]], [0.200, [0.600, 0.439, 0.671]], [0.202, [0.600, 0.439, 0.671]], [0.204, [0.606, 0.447, 0.676]], [0.205, [0.606, 0.447, 0.676]], [0.207, [0.613, 0.456, 0.682]], [0.209, [0.613, 0.456, 0.682]], [0.211, [0.619, 0.464, 0.687]], [0.213, [0.619, 0.464, 0.687]], [0.215, [0.625, 0.472, 0.693]], [0.217, [0.625, 0.472, 0.693]], [0.219, [0.632, 0.480, 0.698]], [0.221, [0.632, 0.480, 0.698]], [0.223, [0.638, 0.488, 0.704]], [0.225, [0.638, 0.488, 0.704]], [0.227, [0.644, 0.496, 0.709]], [0.229, [0.644, 0.496, 0.709]], [0.231, [0.650, 0.504, 0.715]], [0.233, [0.650, 0.504, 0.715]], [0.235, [0.657, 0.513, 0.720]], [0.237, [0.657, 0.513, 0.720]], [0.239, [0.663, 0.521, 0.726]], [0.241, [0.663, 0.521, 0.726]], [0.243, [0.669, 0.529, 0.731]], [0.245, [0.669, 0.529, 0.731]], [0.247, [0.676, 0.537, 0.737]], [0.249, [0.676, 0.537, 0.737]], [0.250, [0.682, 0.545, 0.743]], [0.252, [0.682, 0.545, 0.743]], [0.254, [0.688, 0.553, 0.748]], [0.256, [0.688, 0.553, 0.748]], [0.258, [0.695, 0.561, 0.754]], [0.260, [0.695, 0.561, 0.754]], [0.262, [0.701, 0.570, 0.759]], [0.264, [0.701, 0.570, 0.759]], [0.266, [0.707, 0.578, 0.765]], [0.268, [0.707, 0.578, 0.765]], [0.270, [0.713, 0.586, 0.770]], [0.272, [0.713, 0.586, 0.770]], [0.274, [0.720, 0.594, 0.776]], [0.276, [0.720, 0.594, 0.776]], [0.278, [0.726, 0.602, 0.781]], [0.280, [0.726, 0.602, 0.781]], [0.282, [0.732, 0.610, 0.787]], [0.284, [0.732, 0.610, 0.787]], [0.286, [0.739, 0.619, 0.792]], [0.288, [0.739, 0.619, 0.792]], [0.290, [0.745, 0.627, 0.798]], [0.292, [0.745, 0.627, 0.798]], [0.294, [0.751, 0.635, 0.803]], [0.295, [0.751, 0.635, 0.803]], [0.297, [0.758, 0.643, 0.809]], [0.299, [0.758, 0.643, 0.809]], [0.301, [0.764, 0.651, 0.814]], [0.303, [0.764, 0.651, 0.814]], [0.305, [0.769, 0.658, 0.818]], [0.307, [0.769, 0.658, 0.818]], [0.309, [0.775, 0.665, 0.821]], [0.311, [0.775, 0.665, 0.821]], [0.313, [0.781, 0.672, 0.825]], [0.315, [0.781, 0.672, 0.825]], [0.317, [0.786, 0.680, 0.829]], [0.319, [0.786, 0.680, 0.829]], [0.321, [0.792, 0.687, 0.833]], [0.323, [0.792, 0.687, 0.833]], [0.325, [0.798, 0.694, 0.837]], [0.327, [0.798, 0.694, 0.837]], [0.329, [0.803, 0.701, 0.841]], [0.331, [0.803, 0.701, 0.841]], [0.333, [0.809, 0.708, 0.844]], [0.335, [0.809, 0.708, 0.844]], [0.337, [0.815, 0.716, 0.848]], [0.339, [0.815, 0.716, 0.848]], [0.341, [0.821, 0.723, 0.852]], [0.342, [0.821, 0.723, 0.852]], [0.344, [0.826, 0.730, 0.856]], [0.346, [0.826, 0.730, 0.856]], [0.348, [0.832, 0.737, 0.860]], [0.350, [0.832, 0.737, 0.860]], [0.352, [0.838, 0.745, 0.864]], [0.354, [0.838, 0.745, 0.864]], [0.356, [0.843, 0.752, 0.868]], [0.358, [0.843, 0.752, 0.868]], [0.360, [0.849, 0.759, 0.871]], [0.362, [0.849, 0.759, 0.871]], [0.364, [0.855, 0.766, 0.875]], [0.366, [0.855, 0.766, 0.875]], [0.368, [0.860, 0.774, 0.879]], [0.370, [0.860, 0.774, 0.879]], [0.372, [0.866, 0.781, 0.883]], [0.374, [0.866, 0.781, 0.883]], [0.376, [0.872, 0.788, 0.887]], [0.378, [0.872, 0.788, 0.887]], [0.380, [0.877, 0.795, 0.891]], [0.382, [0.877, 0.795, 0.891]], [0.384, [0.883, 0.802, 0.894]], [0.386, [0.883, 0.802, 0.894]], [0.387, [0.889, 0.810, 0.898]], [0.389, [0.889, 0.810, 0.898]], [0.391, [0.895, 0.817, 0.902]], [0.393, [0.895, 0.817, 0.902]], [0.395, [0.900, 0.824, 0.906]], [0.397, [0.900, 0.824, 0.906]], [0.399, [0.906, 0.831, 0.910]], [0.401, [0.906, 0.831, 0.910]], [0.403, [0.908, 0.837, 0.912]], [0.405, [0.908, 0.837, 0.912]], [0.407, [0.911, 0.842, 0.914]], [0.409, [0.911, 0.842, 0.914]], [0.411, [0.913, 0.848, 0.917]], [0.413, [0.913, 0.848, 0.917]], [0.415, [0.916, 0.853, 0.919]], [0.417, [0.916, 0.853, 0.919]], [0.419, [0.918, 0.858, 0.921]], [0.421, [0.918, 0.858, 0.921]], [0.423, [0.921, 0.864, 0.924]], [0.425, [0.921, 0.864, 0.924]], [0.427, [0.923, 0.869, 0.926]], [0.429, [0.923, 0.869, 0.926]], [0.431, [0.926, 0.874, 0.928]], [0.432, [0.926, 0.874, 0.928]], [0.434, [0.928, 0.880, 0.931]], [0.436, [0.928, 0.880, 0.931]], [0.438, [0.930, 0.885, 0.933]], [0.440, [0.930, 0.885, 0.933]], [0.442, [0.933, 0.891, 0.935]], [0.444, [0.933, 0.891, 0.935]], [0.446, [0.935, 0.896, 0.937]], [0.448, [0.935, 0.896, 0.937]], [0.450, [0.938, 0.901, 0.940]], [0.452, [0.938, 0.901, 0.940]], [0.454, [0.940, 0.907, 0.942]], [0.456, [0.940, 0.907, 0.942]], [0.458, [0.943, 0.912, 0.944]], [0.460, [0.943, 0.912, 0.944]], [0.462, [0.945, 0.917, 0.947]], [0.464, [0.945, 0.917, 0.947]], [0.466, [0.948, 0.923, 0.949]], [0.468, [0.948, 0.923, 0.949]], [0.470, [0.950, 0.928, 0.951]], [0.472, [0.950, 0.928, 0.951]], [0.474, [0.953, 0.934, 0.954]], [0.476, [0.953, 0.934, 0.954]], [0.477, [0.955, 0.939, 0.956]], [0.479, [0.955, 0.939, 0.956]], [0.481, [0.958, 0.944, 0.958]], [0.483, [0.958, 0.944, 0.958]], [0.485, [0.960, 0.950, 0.961]], [0.487, [0.960, 0.950, 0.961]], [0.489, [0.962, 0.955, 0.963]], [0.491, [0.962, 0.955, 0.963]], [0.493, [0.965, 0.961, 0.965]], [0.495, [0.965, 0.961, 0.965]], [0.497, [0.967, 0.966, 0.967]], [0.499, [0.967, 0.966, 0.967]], [0.501, [0.966, 0.968, 0.966]], [0.503, [0.966, 0.968, 0.966]], [0.505, [0.962, 0.967, 0.960]], [0.507, [0.962, 0.967, 0.960]], [0.509, [0.957, 0.966, 0.955]], [0.511, [0.957, 0.966, 0.955]], [0.513, [0.952, 0.965, 0.949]], [0.515, [0.952, 0.965, 0.949]], [0.517, [0.948, 0.964, 0.944]], [0.519, [0.948, 0.964, 0.944]], [0.521, [0.943, 0.963, 0.938]], [0.523, [0.943, 0.963, 0.938]], [0.524, [0.939, 0.962, 0.933]], [0.526, [0.939, 0.962, 0.933]], [0.528, [0.934, 0.961, 0.927]], [0.530, [0.934, 0.961, 0.927]], [0.532, [0.929, 0.959, 0.922]], [0.534, [0.929, 0.959, 0.922]], [0.536, [0.925, 0.958, 0.916]], [0.538, [0.925, 0.958, 0.916]], [0.540, [0.920, 0.957, 0.910]], [0.542, [0.920, 0.957, 0.910]], [0.544, [0.916, 0.956, 0.905]], [0.546, [0.916, 0.956, 0.905]], [0.548, [0.911, 0.955, 0.899]], [0.550, [0.911, 0.955, 0.899]], [0.552, [0.906, 0.954, 0.894]], [0.554, [0.906, 0.954, 0.894]], [0.556, [0.902, 0.953, 0.888]], [0.558, [0.902, 0.953, 0.888]], [0.560, [0.897, 0.952, 0.883]], [0.562, [0.897, 0.952, 0.883]], [0.564, [0.893, 0.951, 0.877]], [0.566, [0.893, 0.951, 0.877]], [0.568, [0.888, 0.950, 0.872]], [0.569, [0.888, 0.950, 0.872]], [0.571, [0.883, 0.949, 0.866]], [0.573, [0.883, 0.949, 0.866]], [0.575, [0.879, 0.948, 0.861]], [0.577, [0.879, 0.948, 0.861]], [0.579, [0.874, 0.947, 0.855]], [0.581, [0.874, 0.947, 0.855]], [0.583, [0.869, 0.945, 0.850]], [0.585, [0.869, 0.945, 0.850]], [0.587, [0.865, 0.944, 0.844]], [0.589, [0.865, 0.944, 0.844]], [0.591, [0.860, 0.943, 0.839]], [0.593, [0.860, 0.943, 0.839]], [0.595, [0.856, 0.942, 0.833]], [0.597, [0.856, 0.942, 0.833]], [0.599, [0.851, 0.941, 0.827]], [0.601, [0.851, 0.941, 0.827]], [0.603, [0.843, 0.938, 0.820]], [0.605, [0.843, 0.938, 0.820]], [0.607, [0.835, 0.935, 0.812]], [0.609, [0.835, 0.935, 0.812]], [0.611, [0.827, 0.931, 0.804]], [0.613, [0.827, 0.931, 0.804]], [0.614, [0.820, 0.928, 0.796]], [0.616, [0.820, 0.928, 0.796]], [0.618, [0.812, 0.925, 0.788]], [0.620, [0.812, 0.925, 0.788]], [0.622, [0.804, 0.922, 0.780]], [0.624, [0.804, 0.922, 0.780]], [0.626, [0.796, 0.919, 0.773]], [0.628, [0.796, 0.919, 0.773]], [0.630, [0.788, 0.915, 0.765]], [0.632, [0.788, 0.915, 0.765]], [0.634, [0.780, 0.912, 0.757]], [0.636, [0.780, 0.912, 0.757]], [0.638, [0.773, 0.909, 0.749]], [0.640, [0.773, 0.909, 0.749]], [0.642, [0.765, 0.906, 0.741]], [0.644, [0.765, 0.906, 0.741]], [0.646, [0.757, 0.902, 0.733]], [0.648, [0.757, 0.902, 0.733]], [0.650, [0.749, 0.899, 0.725]], [0.652, [0.749, 0.899, 0.725]], [0.654, [0.741, 0.896, 0.718]], [0.656, [0.741, 0.896, 0.718]], [0.658, [0.733, 0.893, 0.710]], [0.659, [0.733, 0.893, 0.710]], [0.661, [0.725, 0.890, 0.702]], [0.663, [0.725, 0.890, 0.702]], [0.665, [0.718, 0.886, 0.694]], [0.667, [0.718, 0.886, 0.694]], [0.669, [0.710, 0.883, 0.686]], [0.671, [0.710, 0.883, 0.686]], [0.673, [0.702, 0.880, 0.678]], [0.675, [0.702, 0.880, 0.678]], [0.677, [0.694, 0.877, 0.671]], [0.679, [0.694, 0.877, 0.671]], [0.681, [0.686, 0.873, 0.663]], [0.683, [0.686, 0.873, 0.663]], [0.685, [0.678, 0.870, 0.655]], [0.687, [0.678, 0.870, 0.655]], [0.689, [0.671, 0.867, 0.647]], [0.691, [0.671, 0.867, 0.647]], [0.693, [0.663, 0.864, 0.639]], [0.695, [0.663, 0.864, 0.639]], [0.697, [0.655, 0.860, 0.631]], [0.699, [0.655, 0.860, 0.631]], [0.701, [0.645, 0.855, 0.623]], [0.703, [0.645, 0.855, 0.623]], [0.705, [0.633, 0.848, 0.613]], [0.706, [0.633, 0.848, 0.613]], [0.708, [0.622, 0.842, 0.603]], [0.710, [0.622, 0.842, 0.603]], [0.712, [0.610, 0.835, 0.594]], [0.714, [0.610, 0.835, 0.594]], [0.716, [0.598, 0.828, 0.584]], [0.718, [0.598, 0.828, 0.584]], [0.720, [0.587, 0.821, 0.574]], [0.722, [0.587, 0.821, 0.574]], [0.724, [0.575, 0.814, 0.564]], [0.726, [0.575, 0.814, 0.564]], [0.728, [0.563, 0.807, 0.555]], [0.730, [0.563, 0.807, 0.555]], [0.732, [0.552, 0.800, 0.545]], [0.734, [0.552, 0.800, 0.545]], [0.736, [0.540, 0.793, 0.535]], [0.738, [0.540, 0.793, 0.535]], [0.740, [0.528, 0.786, 0.526]], [0.742, [0.528, 0.786, 0.526]], [0.744, [0.517, 0.779, 0.516]], [0.746, [0.517, 0.779, 0.516]], [0.748, [0.505, 0.772, 0.506]], [0.750, [0.505, 0.772, 0.506]], [0.751, [0.493, 0.765, 0.497]], [0.753, [0.493, 0.765, 0.497]], [0.755, [0.482, 0.758, 0.487]], [0.757, [0.482, 0.758, 0.487]], [0.759, [0.470, 0.752, 0.477]], [0.761, [0.470, 0.752, 0.477]], [0.763, [0.458, 0.745, 0.468]], [0.765, [0.458, 0.745, 0.468]], [0.767, [0.446, 0.738, 0.458]], [0.769, [0.446, 0.738, 0.458]], [0.771, [0.435, 0.731, 0.448]], [0.773, [0.435, 0.731, 0.448]], [0.775, [0.423, 0.724, 0.439]], [0.777, [0.423, 0.724, 0.439]], [0.779, [0.411, 0.717, 0.429]], [0.781, [0.411, 0.717, 0.429]], [0.783, [0.400, 0.710, 0.419]], [0.785, [0.400, 0.710, 0.419]], [0.787, [0.388, 0.703, 0.409]], [0.789, [0.388, 0.703, 0.409]], [0.791, [0.376, 0.696, 0.400]], [0.793, [0.376, 0.696, 0.400]], [0.795, [0.365, 0.689, 0.390]], [0.796, [0.365, 0.689, 0.390]], [0.798, [0.353, 0.682, 0.380]], [0.800, [0.353, 0.682, 0.380]], [0.802, [0.343, 0.674, 0.374]], [0.804, [0.343, 0.674, 0.374]], [0.806, [0.334, 0.666, 0.367]], [0.808, [0.334, 0.666, 0.367]], [0.810, [0.324, 0.657, 0.361]], [0.812, [0.324, 0.657, 0.361]], [0.814, [0.314, 0.649, 0.355]], [0.816, [0.314, 0.649, 0.355]], [0.818, [0.304, 0.641, 0.348]], [0.820, [0.304, 0.641, 0.348]], [0.822, [0.295, 0.633, 0.342]], [0.824, [0.295, 0.633, 0.342]], [0.826, [0.285, 0.624, 0.335]], [0.828, [0.285, 0.624, 0.335]], [0.830, [0.275, 0.616, 0.329]], [0.832, [0.275, 0.616, 0.329]], [0.834, [0.266, 0.608, 0.322]], [0.836, [0.266, 0.608, 0.322]], [0.838, [0.256, 0.599, 0.316]], [0.840, [0.256, 0.599, 0.316]], [0.841, [0.246, 0.591, 0.309]], [0.843, [0.246, 0.591, 0.309]], [0.845, [0.237, 0.583, 0.303]], [0.847, [0.237, 0.583, 0.303]], [0.849, [0.227, 0.574, 0.296]], [0.851, [0.227, 0.574, 0.296]], [0.853, [0.217, 0.566, 0.290]], [0.855, [0.217, 0.566, 0.290]], [0.857, [0.208, 0.558, 0.284]], [0.859, [0.208, 0.558, 0.284]], [0.861, [0.198, 0.549, 0.277]], [0.863, [0.198, 0.549, 0.277]], [0.865, [0.188, 0.541, 0.271]], [0.867, [0.188, 0.541, 0.271]], [0.869, [0.179, 0.533, 0.264]], [0.871, [0.179, 0.533, 0.264]], [0.873, [0.169, 0.525, 0.258]], [0.875, [0.169, 0.525, 0.258]], [0.877, [0.159, 0.516, 0.251]], [0.879, [0.159, 0.516, 0.251]], [0.881, [0.149, 0.508, 0.245]], [0.883, [0.149, 0.508, 0.245]], [0.885, [0.140, 0.500, 0.238]], [0.886, [0.140, 0.500, 0.238]], [0.888, [0.130, 0.491, 0.232]], [0.890, [0.130, 0.491, 0.232]], [0.892, [0.120, 0.483, 0.225]], [0.894, [0.120, 0.483, 0.225]], [0.896, [0.111, 0.475, 0.219]], [0.898, [0.111, 0.475, 0.219]], [0.900, [0.104, 0.467, 0.214]], [0.902, [0.104, 0.467, 0.214]], [0.904, [0.100, 0.459, 0.209]], [0.906, [0.100, 0.459, 0.209]], [0.908, [0.096, 0.451, 0.205]], [0.910, [0.096, 0.451, 0.205]], [0.912, [0.091, 0.443, 0.201]], [0.914, [0.091, 0.443, 0.201]], [0.916, [0.087, 0.435, 0.196]], [0.918, [0.087, 0.435, 0.196]], [0.920, [0.083, 0.427, 0.192]], [0.922, [0.083, 0.427, 0.192]], [0.924, [0.079, 0.419, 0.188]], [0.926, [0.079, 0.419, 0.188]], [0.928, [0.075, 0.411, 0.183]], [0.930, [0.075, 0.411, 0.183]], [0.932, [0.071, 0.403, 0.179]], [0.933, [0.071, 0.403, 0.179]], [0.935, [0.066, 0.395, 0.175]], [0.937, [0.066, 0.395, 0.175]], [0.939, [0.062, 0.387, 0.170]], [0.941, [0.062, 0.387, 0.170]], [0.943, [0.058, 0.379, 0.166]], [0.945, [0.058, 0.379, 0.166]], [0.947, [0.054, 0.371, 0.162]], [0.949, [0.054, 0.371, 0.162]], [0.951, [0.050, 0.363, 0.158]], [0.953, [0.050, 0.363, 0.158]], [0.955, [0.046, 0.355, 0.153]], [0.957, [0.046, 0.355, 0.153]], [0.959, [0.042, 0.347, 0.149]], [0.961, [0.042, 0.347, 0.149]], [0.963, [0.037, 0.339, 0.145]], [0.965, [0.037, 0.339, 0.145]], [0.967, [0.033, 0.331, 0.140]], [0.969, [0.033, 0.331, 0.140]], [0.971, [0.029, 0.323, 0.136]], [0.973, [0.029, 0.323, 0.136]], [0.975, [0.025, 0.315, 0.132]], [0.977, [0.025, 0.315, 0.132]], [0.978, [0.021, 0.307, 0.127]], [0.980, [0.021, 0.307, 0.127]], [0.982, [0.017, 0.299, 0.123]], [0.984, [0.017, 0.299, 0.123]], [0.986, [0.012, 0.291, 0.119]], [0.988, [0.012, 0.291, 0.119]], [0.990, [0.008, 0.283, 0.114]], [0.992, [0.008, 0.283, 0.114]], [0.994, [0.004, 0.275, 0.110]], [0.996, [0.004, 0.275, 0.110]], [0.998, [0.000, 0.267, 0.106]], [1.000, [0.000, 0.267, 0.106]]];
H.colormap_prism = [[0.000, [1.000, 0.000, -0.000]], [0.002, [1.000, 0.000, -0.000]], [0.004, [1.000, 0.000, 0.000]], [0.006, [1.000, 0.000, 0.000]], [0.008, [1.000, 0.130, 0.000]], [0.010, [1.000, 0.130, 0.000]], [0.012, [1.000, 0.320, 0.000]], [0.014, [1.000, 0.320, 0.000]], [0.016, [1.000, 0.512, 0.000]], [0.018, [1.000, 0.512, 0.000]], [0.020, [1.000, 0.691, 0.000]], [0.022, [1.000, 0.691, 0.000]], [0.023, [1.000, 0.846, 0.000]], [0.025, [1.000, 0.846, 0.000]], [0.027, [1.000, 0.968, 0.000]], [0.029, [1.000, 0.968, 0.000]], [0.031, [0.889, 1.000, 0.000]], [0.033, [0.889, 1.000, 0.000]], [0.035, [0.699, 1.000, 0.000]], [0.037, [0.699, 1.000, 0.000]], [0.039, [0.507, 1.000, 0.000]], [0.041, [0.507, 1.000, 0.000]], [0.043, [0.326, 0.997, 0.000]], [0.045, [0.326, 0.997, 0.000]], [0.047, [0.168, 0.887, 0.000]], [0.049, [0.168, 0.887, 0.000]], [0.051, [0.043, 0.741, 0.225]], [0.053, [0.043, 0.741, 0.225]], [0.055, [0.000, 0.567, 0.492]], [0.057, [0.000, 0.567, 0.492]], [0.059, [0.000, 0.378, 0.726]], [0.061, [0.000, 0.378, 0.726]], [0.063, [0.000, 0.186, 0.912]], [0.065, [0.000, 0.186, 0.912]], [0.067, [0.000, 0.004, 1.000]], [0.068, [0.000, 0.004, 1.000]], [0.070, [0.100, 0.000, 1.000]], [0.072, [0.100, 0.000, 1.000]], [0.074, [0.243, 0.000, 1.000]], [0.076, [0.243, 0.000, 1.000]], [0.078, [0.414, 0.000, 0.996]], [0.080, [0.414, 0.000, 0.996]], [0.082, [0.602, 0.000, 0.845]], [0.084, [0.602, 0.000, 0.845]], [0.086, [0.795, 0.000, 0.638]], [0.088, [0.795, 0.000, 0.638]], [0.090, [0.979, 0.000, 0.389]], [0.092, [0.979, 0.000, 0.389]], [0.094, [1.000, 0.000, 0.114]], [0.096, [1.000, 0.000, 0.114]], [0.098, [1.000, 0.000, 0.000]], [0.100, [1.000, 0.000, 0.000]], [0.102, [1.000, 0.056, 0.000]], [0.104, [1.000, 0.056, 0.000]], [0.106, [1.000, 0.243, 0.000]], [0.108, [1.000, 0.243, 0.000]], [0.110, [1.000, 0.435, 0.000]], [0.112, [1.000, 0.435, 0.000]], [0.114, [1.000, 0.621, 0.000]], [0.115, [1.000, 0.621, 0.000]], [0.117, [1.000, 0.787, 0.000]], [0.119, [1.000, 0.787, 0.000]], [0.121, [1.000, 0.924, 0.000]], [0.123, [1.000, 0.924, 0.000]], [0.125, [0.962, 1.000, 0.000]], [0.127, [0.962, 1.000, 0.000]], [0.129, [0.776, 1.000, 0.000]], [0.131, [0.776, 1.000, 0.000]], [0.133, [0.584, 1.000, 0.000]], [0.135, [0.584, 1.000, 0.000]], [0.137, [0.397, 1.000, 0.000]], [0.139, [0.397, 1.000, 0.000]], [0.141, [0.228, 0.936, 0.000]], [0.143, [0.228, 0.936, 0.000]], [0.145, [0.088, 0.803, 0.112]], [0.147, [0.088, 0.803, 0.112]], [0.149, [0.000, 0.640, 0.387]], [0.151, [0.000, 0.640, 0.387]], [0.153, [0.000, 0.456, 0.637]], [0.155, [0.000, 0.456, 0.637]], [0.157, [0.000, 0.263, 0.844]], [0.159, [0.000, 0.263, 0.844]], [0.160, [0.000, 0.075, 0.996]], [0.162, [0.000, 0.075, 0.996]], [0.164, [0.053, 0.000, 1.000]], [0.166, [0.053, 0.000, 1.000]], [0.168, [0.182, 0.000, 1.000]], [0.170, [0.182, 0.000, 1.000]], [0.172, [0.343, 0.000, 1.000]], [0.174, [0.343, 0.000, 1.000]], [0.176, [0.525, 0.000, 0.913]], [0.178, [0.525, 0.000, 0.913]], [0.180, [0.718, 0.000, 0.727]], [0.182, [0.718, 0.000, 0.727]], [0.184, [0.907, 0.000, 0.493]], [0.186, [0.907, 0.000, 0.493]], [0.188, [1.000, 0.000, 0.226]], [0.190, [1.000, 0.000, 0.226]], [0.192, [1.000, 0.000, 0.000]], [0.194, [1.000, 0.000, 0.000]], [0.196, [1.000, 0.000, 0.000]], [0.198, [1.000, 0.000, 0.000]], [0.200, [1.000, 0.166, 0.000]], [0.202, [1.000, 0.166, 0.000]], [0.204, [1.000, 0.358, 0.000]], [0.205, [1.000, 0.358, 0.000]], [0.207, [1.000, 0.548, 0.000]], [0.209, [1.000, 0.548, 0.000]], [0.211, [1.000, 0.724, 0.000]], [0.213, [1.000, 0.724, 0.000]], [0.215, [1.000, 0.873, 0.000]], [0.217, [1.000, 0.873, 0.000]], [0.219, [1.000, 0.987, 0.000]], [0.221, [1.000, 0.987, 0.000]], [0.223, [0.852, 1.000, 0.000]], [0.225, [0.852, 1.000, 0.000]], [0.227, [0.661, 1.000, 0.000]], [0.229, [0.661, 1.000, 0.000]], [0.231, [0.471, 1.000, 0.000]], [0.233, [0.471, 1.000, 0.000]], [0.235, [0.293, 0.978, 0.000]], [0.237, [0.293, 0.978, 0.000]], [0.239, [0.140, 0.861, 0.000]], [0.241, [0.140, 0.861, 0.000]], [0.243, [0.023, 0.709, 0.279]], [0.245, [0.023, 0.709, 0.279]], [0.247, [0.000, 0.531, 0.541]], [0.249, [0.000, 0.531, 0.541]], [0.250, [0.000, 0.341, 0.767]], [0.252, [0.000, 0.341, 0.767]], [0.254, [0.000, 0.149, 0.942]], [0.256, [0.000, 0.149, 0.942]], [0.258, [0.012, 0.000, 1.000]], [0.260, [0.012, 0.000, 1.000]], [0.262, [0.125, 0.000, 1.000]], [0.264, [0.125, 0.000, 1.000]], [0.266, [0.275, 0.000, 1.000]], [0.268, [0.275, 0.000, 1.000]], [0.270, [0.450, 0.000, 0.972]], [0.272, [0.450, 0.000, 0.972]], [0.274, [0.640, 0.000, 0.808]], [0.276, [0.640, 0.000, 0.808]], [0.278, [0.832, 0.000, 0.592]], [0.280, [0.832, 0.000, 0.592]], [0.282, [1.000, 0.000, 0.336]], [0.284, [1.000, 0.000, 0.336]], [0.286, [1.000, 0.000, 0.058]], [0.288, [1.000, 0.000, 0.058]], [0.290, [1.000, 0.000, 0.000]], [0.292, [1.000, 0.000, 0.000]], [0.294, [1.000, 0.092, 0.000]], [0.295, [1.000, 0.092, 0.000]], [0.297, [1.000, 0.281, 0.000]], [0.299, [1.000, 0.281, 0.000]], [0.301, [1.000, 0.473, 0.000]], [0.303, [1.000, 0.473, 0.000]], [0.305, [1.000, 0.656, 0.000]], [0.307, [1.000, 0.656, 0.000]], [0.309, [1.000, 0.817, 0.000]], [0.311, [1.000, 0.817, 0.000]], [0.313, [1.000, 0.946, 0.000]], [0.315, [1.000, 0.946, 0.000]], [0.317, [0.927, 1.000, 0.000]], [0.319, [0.927, 1.000, 0.000]], [0.321, [0.739, 1.000, 0.000]], [0.323, [0.739, 1.000, 0.000]], [0.325, [0.546, 1.000, 0.000]], [0.327, [0.546, 1.000, 0.000]], [0.329, [0.362, 1.000, 0.000]], [0.331, [0.362, 1.000, 0.000]], [0.333, [0.198, 0.913, 0.000]], [0.335, [0.198, 0.913, 0.000]], [0.337, [0.065, 0.773, 0.167]], [0.339, [0.065, 0.773, 0.167]], [0.341, [0.000, 0.605, 0.439]], [0.342, [0.000, 0.605, 0.439]], [0.344, [0.000, 0.418, 0.681]], [0.346, [0.000, 0.418, 0.681]], [0.348, [0.000, 0.225, 0.879]], [0.350, [0.000, 0.225, 0.879]], [0.352, [0.000, 0.040, 1.000]], [0.354, [0.000, 0.040, 1.000]], [0.356, [0.075, 0.000, 1.000]], [0.358, [0.075, 0.000, 1.000]], [0.360, [0.211, 0.000, 1.000]], [0.362, [0.211, 0.000, 1.000]], [0.364, [0.377, 0.000, 1.000]], [0.366, [0.377, 0.000, 1.000]], [0.368, [0.563, 0.000, 0.881]], [0.370, [0.563, 0.000, 0.881]], [0.372, [0.755, 0.000, 0.684]], [0.374, [0.755, 0.000, 0.684]], [0.376, [0.942, 0.000, 0.442]], [0.378, [0.942, 0.000, 0.442]], [0.380, [1.000, 0.000, 0.171]], [0.382, [1.000, 0.000, 0.171]], [0.384, [1.000, 0.000, 0.000]], [0.386, [1.000, 0.000, 0.000]], [0.387, [1.000, 0.019, 0.000]], [0.389, [1.000, 0.019, 0.000]], [0.391, [1.000, 0.204, 0.000]], [0.393, [1.000, 0.204, 0.000]], [0.395, [1.000, 0.396, 0.000]], [0.397, [1.000, 0.396, 0.000]], [0.399, [1.000, 0.584, 0.000]], [0.401, [1.000, 0.584, 0.000]], [0.403, [1.000, 0.755, 0.000]], [0.405, [1.000, 0.755, 0.000]], [0.407, [1.000, 0.899, 0.000]], [0.409, [1.000, 0.899, 0.000]], [0.411, [0.998, 1.000, 0.000]], [0.413, [0.998, 1.000, 0.000]], [0.415, [0.816, 1.000, 0.000]], [0.417, [0.816, 1.000, 0.000]], [0.419, [0.623, 1.000, 0.000]], [0.421, [0.623, 1.000, 0.000]], [0.423, [0.434, 1.000, 0.000]], [0.425, [0.434, 1.000, 0.000]], [0.427, [0.261, 0.958, 0.000]], [0.429, [0.261, 0.958, 0.000]], [0.431, [0.114, 0.834, 0.054]], [0.432, [0.114, 0.834, 0.054]], [0.434, [0.004, 0.675, 0.332]], [0.436, [0.004, 0.675, 0.332]], [0.438, [0.000, 0.495, 0.588]], [0.440, [0.000, 0.495, 0.588]], [0.442, [0.000, 0.303, 0.806]], [0.444, [0.000, 0.303, 0.806]], [0.446, [0.000, 0.113, 0.970]], [0.448, [0.000, 0.113, 0.970]], [0.450, [0.031, 0.000, 1.000]], [0.452, [0.031, 0.000, 1.000]], [0.454, [0.152, 0.000, 1.000]], [0.456, [0.152, 0.000, 1.000]], [0.458, [0.307, 0.000, 1.000]], [0.460, [0.307, 0.000, 1.000]], [0.462, [0.487, 0.000, 0.944]], [0.464, [0.487, 0.000, 0.944]], [0.466, [0.678, 0.000, 0.770]], [0.468, [0.678, 0.000, 0.770]], [0.470, [0.869, 0.000, 0.544]], [0.472, [0.869, 0.000, 0.544]], [0.474, [1.000, 0.000, 0.283]], [0.476, [1.000, 0.000, 0.283]], [0.477, [1.000, 0.000, 0.003]], [0.479, [1.000, 0.000, 0.003]], [0.481, [1.000, 0.000, 0.000]], [0.483, [1.000, 0.000, 0.000]], [0.485, [1.000, 0.128, 0.000]], [0.487, [1.000, 0.128, 0.000]], [0.489, [1.000, 0.318, 0.000]], [0.491, [1.000, 0.318, 0.000]], [0.493, [1.000, 0.510, 0.000]], [0.495, [1.000, 0.510, 0.000]], [0.497, [1.000, 0.689, 0.000]], [0.499, [1.000, 0.689, 0.000]], [0.501, [1.000, 0.845, 0.000]], [0.503, [1.000, 0.845, 0.000]], [0.505, [1.000, 0.967, 0.000]], [0.507, [1.000, 0.967, 0.000]], [0.509, [0.891, 1.000, 0.000]], [0.511, [0.891, 1.000, 0.000]], [0.513, [0.701, 1.000, 0.000]], [0.515, [0.701, 1.000, 0.000]], [0.517, [0.509, 1.000, 0.000]], [0.519, [0.509, 1.000, 0.000]], [0.521, [0.328, 0.997, 0.000]], [0.523, [0.328, 0.997, 0.000]], [0.524, [0.169, 0.888, 0.000]], [0.526, [0.169, 0.888, 0.000]], [0.528, [0.044, 0.742, 0.222]], [0.530, [0.044, 0.742, 0.222]], [0.532, [0.000, 0.569, 0.489]], [0.534, [0.000, 0.569, 0.489]], [0.536, [0.000, 0.380, 0.724]], [0.538, [0.000, 0.380, 0.724]], [0.540, [0.000, 0.188, 0.911]], [0.542, [0.000, 0.188, 0.911]], [0.544, [0.000, 0.005, 1.000]], [0.546, [0.000, 0.005, 1.000]], [0.548, [0.099, 0.000, 1.000]], [0.550, [0.099, 0.000, 1.000]], [0.552, [0.242, 0.000, 1.000]], [0.554, [0.242, 0.000, 1.000]], [0.556, [0.412, 0.000, 0.998]], [0.558, [0.412, 0.000, 0.998]], [0.560, [0.600, 0.000, 0.847]], [0.562, [0.600, 0.000, 0.847]], [0.564, [0.793, 0.000, 0.640]], [0.566, [0.793, 0.000, 0.640]], [0.568, [0.977, 0.000, 0.391]], [0.569, [0.977, 0.000, 0.391]], [0.571, [1.000, 0.000, 0.116]], [0.573, [1.000, 0.000, 0.116]], [0.575, [1.000, 0.000, 0.000]], [0.577, [1.000, 0.000, 0.000]], [0.579, [1.000, 0.054, 0.000]], [0.581, [1.000, 0.054, 0.000]], [0.583, [1.000, 0.241, 0.000]], [0.585, [1.000, 0.241, 0.000]], [0.587, [1.000, 0.434, 0.000]], [0.589, [1.000, 0.434, 0.000]], [0.591, [1.000, 0.619, 0.000]], [0.593, [1.000, 0.619, 0.000]], [0.595, [1.000, 0.786, 0.000]], [0.597, [1.000, 0.786, 0.000]], [0.599, [1.000, 0.923, 0.000]], [0.601, [1.000, 0.923, 0.000]], [0.603, [0.964, 1.000, 0.000]], [0.605, [0.964, 1.000, 0.000]], [0.607, [0.778, 1.000, 0.000]], [0.609, [0.778, 1.000, 0.000]], [0.611, [0.586, 1.000, 0.000]], [0.613, [0.586, 1.000, 0.000]], [0.614, [0.399, 1.000, 0.000]], [0.616, [0.399, 1.000, 0.000]], [0.618, [0.230, 0.937, 0.000]], [0.620, [0.230, 0.937, 0.000]], [0.622, [0.089, 0.805, 0.110]], [0.624, [0.089, 0.805, 0.110]], [0.626, [0.000, 0.641, 0.385]], [0.628, [0.000, 0.641, 0.385]], [0.630, [0.000, 0.457, 0.634]], [0.632, [0.000, 0.457, 0.634]], [0.634, [0.000, 0.265, 0.842]], [0.636, [0.000, 0.265, 0.842]], [0.638, [0.000, 0.077, 0.995]], [0.640, [0.000, 0.077, 0.995]], [0.642, [0.052, 0.000, 1.000]], [0.644, [0.052, 0.000, 1.000]], [0.646, [0.180, 0.000, 1.000]], [0.648, [0.180, 0.000, 1.000]], [0.650, [0.341, 0.000, 1.000]], [0.652, [0.341, 0.000, 1.000]], [0.654, [0.524, 0.000, 0.915]], [0.656, [0.524, 0.000, 0.915]], [0.658, [0.716, 0.000, 0.729]], [0.659, [0.716, 0.000, 0.729]], [0.661, [0.905, 0.000, 0.495]], [0.663, [0.905, 0.000, 0.495]], [0.665, [1.000, 0.000, 0.229]], [0.667, [1.000, 0.000, 0.229]], [0.669, [1.000, 0.000, 0.000]], [0.671, [1.000, 0.000, 0.000]], [0.673, [1.000, 0.000, 0.000]], [0.675, [1.000, 0.000, 0.000]], [0.677, [1.000, 0.165, 0.000]], [0.679, [1.000, 0.165, 0.000]], [0.681, [1.000, 0.356, 0.000]], [0.683, [1.000, 0.356, 0.000]], [0.685, [1.000, 0.546, 0.000]], [0.687, [1.000, 0.546, 0.000]], [0.689, [1.000, 0.722, 0.000]], [0.691, [1.000, 0.722, 0.000]], [0.693, [1.000, 0.872, 0.000]], [0.695, [1.000, 0.872, 0.000]], [0.697, [1.000, 0.986, 0.000]], [0.699, [1.000, 0.986, 0.000]], [0.701, [0.854, 1.000, 0.000]], [0.703, [0.854, 1.000, 0.000]], [0.705, [0.663, 1.000, 0.000]], [0.706, [0.663, 1.000, 0.000]], [0.708, [0.472, 1.000, 0.000]], [0.710, [0.472, 1.000, 0.000]], [0.712, [0.295, 0.979, 0.000]], [0.714, [0.295, 0.979, 0.000]], [0.716, [0.142, 0.862, 0.000]], [0.718, [0.142, 0.862, 0.000]], [0.720, [0.024, 0.710, 0.276]], [0.722, [0.024, 0.710, 0.276]], [0.724, [0.000, 0.533, 0.538]], [0.726, [0.000, 0.533, 0.538]], [0.728, [0.000, 0.342, 0.765]], [0.730, [0.000, 0.342, 0.765]], [0.732, [0.000, 0.151, 0.941]], [0.734, [0.000, 0.151, 0.941]], [0.736, [0.011, 0.000, 1.000]], [0.738, [0.011, 0.000, 1.000]], [0.740, [0.124, 0.000, 1.000]], [0.742, [0.124, 0.000, 1.000]], [0.744, [0.273, 0.000, 1.000]], [0.746, [0.273, 0.000, 1.000]], [0.748, [0.448, 0.000, 0.973]], [0.750, [0.448, 0.000, 0.973]], [0.751, [0.638, 0.000, 0.810]], [0.753, [0.638, 0.000, 0.810]], [0.755, [0.830, 0.000, 0.594]], [0.757, [0.830, 0.000, 0.594]], [0.759, [1.000, 0.000, 0.339]], [0.761, [1.000, 0.000, 0.339]], [0.763, [1.000, 0.000, 0.061]], [0.765, [1.000, 0.000, 0.061]], [0.767, [1.000, 0.000, 0.000]], [0.769, [1.000, 0.000, 0.000]], [0.771, [1.000, 0.090, 0.000]], [0.773, [1.000, 0.090, 0.000]], [0.775, [1.000, 0.279, 0.000]], [0.777, [1.000, 0.279, 0.000]], [0.779, [1.000, 0.471, 0.000]], [0.781, [1.000, 0.471, 0.000]], [0.783, [1.000, 0.654, 0.000]], [0.785, [1.000, 0.654, 0.000]], [0.787, [1.000, 0.816, 0.000]], [0.789, [1.000, 0.816, 0.000]], [0.791, [1.000, 0.945, 0.000]], [0.793, [1.000, 0.945, 0.000]], [0.795, [0.928, 1.000, 0.000]], [0.796, [0.928, 1.000, 0.000]], [0.798, [0.741, 1.000, 0.000]], [0.800, [0.741, 1.000, 0.000]], [0.802, [0.548, 1.000, 0.000]], [0.804, [0.548, 1.000, 0.000]], [0.806, [0.364, 1.000, 0.000]], [0.808, [0.364, 1.000, 0.000]], [0.810, [0.199, 0.914, 0.000]], [0.812, [0.199, 0.914, 0.000]], [0.814, [0.066, 0.775, 0.165]], [0.816, [0.066, 0.775, 0.165]], [0.818, [0.000, 0.607, 0.436]], [0.820, [0.000, 0.607, 0.436]], [0.822, [0.000, 0.420, 0.679]], [0.824, [0.000, 0.420, 0.679]], [0.826, [0.000, 0.227, 0.877]], [0.828, [0.000, 0.227, 0.877]], [0.830, [0.000, 0.041, 1.000]], [0.832, [0.000, 0.041, 1.000]], [0.834, [0.074, 0.000, 1.000]], [0.836, [0.074, 0.000, 1.000]], [0.838, [0.210, 0.000, 1.000]], [0.840, [0.210, 0.000, 1.000]], [0.841, [0.376, 0.000, 1.000]], [0.843, [0.376, 0.000, 1.000]], [0.845, [0.561, 0.000, 0.883]], [0.847, [0.561, 0.000, 0.883]], [0.849, [0.753, 0.000, 0.686]], [0.851, [0.753, 0.000, 0.686]], [0.853, [0.941, 0.000, 0.445]], [0.855, [0.941, 0.000, 0.445]], [0.857, [1.000, 0.000, 0.174]], [0.859, [1.000, 0.000, 0.174]], [0.861, [1.000, 0.000, 0.000]], [0.863, [1.000, 0.000, 0.000]], [0.865, [1.000, 0.018, 0.000]], [0.867, [1.000, 0.018, 0.000]], [0.869, [1.000, 0.202, 0.000]], [0.871, [1.000, 0.202, 0.000]], [0.873, [1.000, 0.394, 0.000]], [0.875, [1.000, 0.394, 0.000]], [0.877, [1.000, 0.582, 0.000]], [0.879, [1.000, 0.582, 0.000]], [0.881, [1.000, 0.754, 0.000]], [0.883, [1.000, 0.754, 0.000]], [0.885, [1.000, 0.897, 0.000]], [0.886, [1.000, 0.897, 0.000]], [0.888, [1.000, 1.000, 0.000]], [0.890, [1.000, 1.000, 0.000]], [0.892, [0.817, 1.000, 0.000]], [0.894, [0.817, 1.000, 0.000]], [0.896, [0.625, 1.000, 0.000]], [0.898, [0.625, 1.000, 0.000]], [0.900, [0.436, 1.000, 0.000]], [0.902, [0.436, 1.000, 0.000]], [0.904, [0.262, 0.960, 0.000]], [0.906, [0.262, 0.960, 0.000]], [0.908, [0.115, 0.835, 0.051]], [0.910, [0.115, 0.835, 0.051]], [0.912, [0.005, 0.677, 0.330]], [0.914, [0.005, 0.677, 0.330]], [0.916, [0.000, 0.496, 0.586]], [0.918, [0.000, 0.496, 0.586]], [0.920, [0.000, 0.305, 0.804]], [0.922, [0.000, 0.305, 0.804]], [0.924, [0.000, 0.115, 0.968]], [0.926, [0.000, 0.115, 0.968]], [0.928, [0.030, 0.000, 1.000]], [0.930, [0.030, 0.000, 1.000]], [0.932, [0.151, 0.000, 1.000]], [0.933, [0.151, 0.000, 1.000]], [0.935, [0.306, 0.000, 1.000]], [0.937, [0.306, 0.000, 1.000]], [0.939, [0.485, 0.000, 0.946]], [0.941, [0.485, 0.000, 0.946]], [0.943, [0.676, 0.000, 0.772]], [0.945, [0.676, 0.000, 0.772]], [0.947, [0.867, 0.000, 0.546]], [0.949, [0.867, 0.000, 0.546]], [0.951, [1.000, 0.000, 0.285]], [0.953, [1.000, 0.000, 0.285]], [0.955, [1.000, 0.000, 0.005]], [0.957, [1.000, 0.000, 0.005]], [0.959, [1.000, 0.000, 0.000]], [0.961, [1.000, 0.000, 0.000]], [0.963, [1.000, 0.126, 0.000]], [0.965, [1.000, 0.126, 0.000]], [0.967, [1.000, 0.317, 0.000]], [0.969, [1.000, 0.317, 0.000]], [0.971, [1.000, 0.508, 0.000]], [0.973, [1.000, 0.508, 0.000]], [0.975, [1.000, 0.688, 0.000]], [0.977, [1.000, 0.688, 0.000]], [0.978, [1.000, 0.844, 0.000]], [0.980, [1.000, 0.844, 0.000]], [0.982, [1.000, 0.966, 0.000]], [0.984, [1.000, 0.966, 0.000]], [0.986, [0.893, 1.000, 0.000]], [0.988, [0.893, 1.000, 0.000]], [0.990, [0.703, 1.000, 0.000]], [0.992, [0.703, 1.000, 0.000]], [0.994, [0.511, 1.000, 0.000]], [0.996, [0.511, 1.000, 0.000]], [0.998, [0.330, 0.998, 0.000]], [1.000, [0.330, 0.998, 0.000]]];
H.colormap_PuBu = [[0.000, [1.000, 0.969, 0.984]], [0.002, [1.000, 0.969, 0.984]], [0.004, [0.998, 0.967, 0.983]], [0.006, [0.998, 0.967, 0.983]], [0.008, [0.995, 0.965, 0.982]], [0.010, [0.995, 0.965, 0.982]], [0.012, [0.993, 0.963, 0.981]], [0.014, [0.993, 0.963, 0.981]], [0.016, [0.991, 0.961, 0.980]], [0.018, [0.991, 0.961, 0.980]], [0.020, [0.988, 0.959, 0.979]], [0.022, [0.988, 0.959, 0.979]], [0.023, [0.986, 0.957, 0.978]], [0.025, [0.986, 0.957, 0.978]], [0.027, [0.984, 0.955, 0.977]], [0.029, [0.984, 0.955, 0.977]], [0.031, [0.981, 0.953, 0.975]], [0.033, [0.981, 0.953, 0.975]], [0.035, [0.979, 0.951, 0.974]], [0.037, [0.979, 0.951, 0.974]], [0.039, [0.977, 0.949, 0.973]], [0.041, [0.977, 0.949, 0.973]], [0.043, [0.974, 0.947, 0.972]], [0.045, [0.974, 0.947, 0.972]], [0.047, [0.972, 0.945, 0.971]], [0.049, [0.972, 0.945, 0.971]], [0.051, [0.970, 0.943, 0.970]], [0.053, [0.970, 0.943, 0.970]], [0.055, [0.967, 0.941, 0.969]], [0.057, [0.967, 0.941, 0.969]], [0.059, [0.965, 0.939, 0.968]], [0.061, [0.965, 0.939, 0.968]], [0.063, [0.963, 0.937, 0.967]], [0.065, [0.963, 0.937, 0.967]], [0.067, [0.960, 0.935, 0.965]], [0.068, [0.960, 0.935, 0.965]], [0.070, [0.958, 0.933, 0.964]], [0.072, [0.958, 0.933, 0.964]], [0.074, [0.956, 0.931, 0.963]], [0.076, [0.956, 0.931, 0.963]], [0.078, [0.953, 0.929, 0.962]], [0.080, [0.953, 0.929, 0.962]], [0.082, [0.951, 0.927, 0.961]], [0.084, [0.951, 0.927, 0.961]], [0.086, [0.949, 0.925, 0.960]], [0.088, [0.949, 0.925, 0.960]], [0.090, [0.946, 0.923, 0.959]], [0.092, [0.946, 0.923, 0.959]], [0.094, [0.944, 0.921, 0.958]], [0.096, [0.944, 0.921, 0.958]], [0.098, [0.942, 0.919, 0.957]], [0.100, [0.942, 0.919, 0.957]], [0.102, [0.939, 0.917, 0.956]], [0.104, [0.939, 0.917, 0.956]], [0.106, [0.937, 0.915, 0.954]], [0.108, [0.937, 0.915, 0.954]], [0.110, [0.935, 0.914, 0.953]], [0.112, [0.935, 0.914, 0.953]], [0.114, [0.932, 0.912, 0.952]], [0.115, [0.932, 0.912, 0.952]], [0.117, [0.930, 0.910, 0.951]], [0.119, [0.930, 0.910, 0.951]], [0.121, [0.928, 0.908, 0.950]], [0.123, [0.928, 0.908, 0.950]], [0.125, [0.925, 0.906, 0.949]], [0.127, [0.925, 0.906, 0.949]], [0.129, [0.922, 0.903, 0.947]], [0.131, [0.922, 0.903, 0.947]], [0.133, [0.918, 0.900, 0.946]], [0.135, [0.918, 0.900, 0.946]], [0.137, [0.915, 0.897, 0.944]], [0.139, [0.915, 0.897, 0.944]], [0.141, [0.911, 0.895, 0.943]], [0.143, [0.911, 0.895, 0.943]], [0.145, [0.908, 0.892, 0.941]], [0.147, [0.908, 0.892, 0.941]], [0.149, [0.904, 0.889, 0.940]], [0.151, [0.904, 0.889, 0.940]], [0.153, [0.901, 0.887, 0.939]], [0.155, [0.901, 0.887, 0.939]], [0.157, [0.898, 0.884, 0.937]], [0.159, [0.898, 0.884, 0.937]], [0.160, [0.894, 0.881, 0.936]], [0.162, [0.894, 0.881, 0.936]], [0.164, [0.891, 0.878, 0.934]], [0.166, [0.891, 0.878, 0.934]], [0.168, [0.887, 0.876, 0.933]], [0.170, [0.887, 0.876, 0.933]], [0.172, [0.884, 0.873, 0.931]], [0.174, [0.884, 0.873, 0.931]], [0.176, [0.880, 0.870, 0.930]], [0.178, [0.880, 0.870, 0.930]], [0.180, [0.877, 0.868, 0.928]], [0.182, [0.877, 0.868, 0.928]], [0.184, [0.873, 0.865, 0.927]], [0.186, [0.873, 0.865, 0.927]], [0.188, [0.870, 0.862, 0.925]], [0.190, [0.870, 0.862, 0.925]], [0.192, [0.866, 0.860, 0.924]], [0.194, [0.866, 0.860, 0.924]], [0.196, [0.863, 0.857, 0.922]], [0.198, [0.863, 0.857, 0.922]], [0.200, [0.860, 0.854, 0.921]], [0.202, [0.860, 0.854, 0.921]], [0.204, [0.856, 0.851, 0.919]], [0.205, [0.856, 0.851, 0.919]], [0.207, [0.853, 0.849, 0.918]], [0.209, [0.853, 0.849, 0.918]], [0.211, [0.849, 0.846, 0.916]], [0.213, [0.849, 0.846, 0.916]], [0.215, [0.846, 0.843, 0.915]], [0.217, [0.846, 0.843, 0.915]], [0.219, [0.842, 0.841, 0.913]], [0.221, [0.842, 0.841, 0.913]], [0.223, [0.839, 0.838, 0.912]], [0.225, [0.839, 0.838, 0.912]], [0.227, [0.835, 0.835, 0.910]], [0.229, [0.835, 0.835, 0.910]], [0.231, [0.832, 0.832, 0.909]], [0.233, [0.832, 0.832, 0.909]], [0.235, [0.829, 0.830, 0.907]], [0.237, [0.829, 0.830, 0.907]], [0.239, [0.825, 0.827, 0.906]], [0.241, [0.825, 0.827, 0.906]], [0.243, [0.822, 0.824, 0.905]], [0.245, [0.822, 0.824, 0.905]], [0.247, [0.818, 0.822, 0.903]], [0.249, [0.818, 0.822, 0.903]], [0.250, [0.814, 0.819, 0.902]], [0.252, [0.814, 0.819, 0.902]], [0.254, [0.809, 0.817, 0.900]], [0.256, [0.809, 0.817, 0.900]], [0.258, [0.804, 0.814, 0.899]], [0.260, [0.804, 0.814, 0.899]], [0.262, [0.799, 0.812, 0.898]], [0.264, [0.799, 0.812, 0.898]], [0.266, [0.794, 0.809, 0.896]], [0.268, [0.794, 0.809, 0.896]], [0.270, [0.789, 0.807, 0.895]], [0.272, [0.789, 0.807, 0.895]], [0.274, [0.783, 0.804, 0.894]], [0.276, [0.783, 0.804, 0.894]], [0.278, [0.778, 0.802, 0.892]], [0.280, [0.778, 0.802, 0.892]], [0.282, [0.773, 0.799, 0.891]], [0.284, [0.773, 0.799, 0.891]], [0.286, [0.768, 0.797, 0.889]], [0.288, [0.768, 0.797, 0.889]], [0.290, [0.763, 0.794, 0.888]], [0.292, [0.763, 0.794, 0.888]], [0.294, [0.758, 0.792, 0.887]], [0.295, [0.758, 0.792, 0.887]], [0.297, [0.752, 0.789, 0.885]], [0.299, [0.752, 0.789, 0.885]], [0.301, [0.747, 0.787, 0.884]], [0.303, [0.747, 0.787, 0.884]], [0.305, [0.742, 0.785, 0.883]], [0.307, [0.742, 0.785, 0.883]], [0.309, [0.737, 0.782, 0.881]], [0.311, [0.737, 0.782, 0.881]], [0.313, [0.732, 0.780, 0.880]], [0.315, [0.732, 0.780, 0.880]], [0.317, [0.727, 0.777, 0.879]], [0.319, [0.727, 0.777, 0.879]], [0.321, [0.721, 0.775, 0.877]], [0.323, [0.721, 0.775, 0.877]], [0.325, [0.716, 0.772, 0.876]], [0.327, [0.716, 0.772, 0.876]], [0.329, [0.711, 0.770, 0.875]], [0.331, [0.711, 0.770, 0.875]], [0.333, [0.706, 0.767, 0.873]], [0.335, [0.706, 0.767, 0.873]], [0.337, [0.701, 0.765, 0.872]], [0.339, [0.701, 0.765, 0.872]], [0.341, [0.696, 0.762, 0.870]], [0.342, [0.696, 0.762, 0.870]], [0.344, [0.690, 0.760, 0.869]], [0.346, [0.690, 0.760, 0.869]], [0.348, [0.685, 0.757, 0.868]], [0.350, [0.685, 0.757, 0.868]], [0.352, [0.680, 0.755, 0.866]], [0.354, [0.680, 0.755, 0.866]], [0.356, [0.675, 0.753, 0.865]], [0.358, [0.675, 0.753, 0.865]], [0.360, [0.670, 0.750, 0.864]], [0.362, [0.670, 0.750, 0.864]], [0.364, [0.665, 0.748, 0.862]], [0.366, [0.665, 0.748, 0.862]], [0.368, [0.659, 0.745, 0.861]], [0.370, [0.659, 0.745, 0.861]], [0.372, [0.654, 0.743, 0.860]], [0.374, [0.654, 0.743, 0.860]], [0.376, [0.649, 0.740, 0.858]], [0.378, [0.649, 0.740, 0.858]], [0.380, [0.643, 0.738, 0.857]], [0.382, [0.643, 0.738, 0.857]], [0.384, [0.636, 0.735, 0.855]], [0.386, [0.636, 0.735, 0.855]], [0.387, [0.630, 0.733, 0.854]], [0.389, [0.630, 0.733, 0.854]], [0.391, [0.624, 0.730, 0.852]], [0.393, [0.624, 0.730, 0.852]], [0.395, [0.618, 0.728, 0.851]], [0.397, [0.618, 0.728, 0.851]], [0.399, [0.612, 0.725, 0.849]], [0.401, [0.612, 0.725, 0.849]], [0.403, [0.606, 0.723, 0.848]], [0.405, [0.606, 0.723, 0.848]], [0.407, [0.599, 0.721, 0.846]], [0.409, [0.599, 0.721, 0.846]], [0.411, [0.593, 0.718, 0.845]], [0.413, [0.593, 0.718, 0.845]], [0.415, [0.587, 0.716, 0.844]], [0.417, [0.587, 0.716, 0.844]], [0.419, [0.581, 0.713, 0.842]], [0.421, [0.581, 0.713, 0.842]], [0.423, [0.575, 0.711, 0.841]], [0.425, [0.575, 0.711, 0.841]], [0.427, [0.569, 0.708, 0.839]], [0.429, [0.569, 0.708, 0.839]], [0.431, [0.563, 0.706, 0.838]], [0.432, [0.563, 0.706, 0.838]], [0.434, [0.556, 0.703, 0.836]], [0.436, [0.556, 0.703, 0.836]], [0.438, [0.550, 0.701, 0.835]], [0.440, [0.550, 0.701, 0.835]], [0.442, [0.544, 0.698, 0.833]], [0.444, [0.544, 0.698, 0.833]], [0.446, [0.538, 0.696, 0.832]], [0.448, [0.538, 0.696, 0.832]], [0.450, [0.532, 0.694, 0.830]], [0.452, [0.532, 0.694, 0.830]], [0.454, [0.526, 0.691, 0.829]], [0.456, [0.526, 0.691, 0.829]], [0.458, [0.519, 0.689, 0.827]], [0.460, [0.519, 0.689, 0.827]], [0.462, [0.513, 0.686, 0.826]], [0.464, [0.513, 0.686, 0.826]], [0.466, [0.507, 0.684, 0.824]], [0.468, [0.507, 0.684, 0.824]], [0.470, [0.501, 0.681, 0.823]], [0.472, [0.501, 0.681, 0.823]], [0.474, [0.495, 0.679, 0.821]], [0.476, [0.495, 0.679, 0.821]], [0.477, [0.489, 0.676, 0.820]], [0.479, [0.489, 0.676, 0.820]], [0.481, [0.483, 0.674, 0.818]], [0.483, [0.483, 0.674, 0.818]], [0.485, [0.476, 0.671, 0.817]], [0.487, [0.476, 0.671, 0.817]], [0.489, [0.470, 0.669, 0.815]], [0.491, [0.470, 0.669, 0.815]], [0.493, [0.464, 0.666, 0.814]], [0.495, [0.464, 0.666, 0.814]], [0.497, [0.458, 0.664, 0.813]], [0.499, [0.458, 0.664, 0.813]], [0.501, [0.451, 0.661, 0.811]], [0.503, [0.451, 0.661, 0.811]], [0.505, [0.443, 0.658, 0.809]], [0.507, [0.443, 0.658, 0.809]], [0.509, [0.436, 0.655, 0.807]], [0.511, [0.436, 0.655, 0.807]], [0.513, [0.428, 0.652, 0.805]], [0.515, [0.428, 0.652, 0.805]], [0.517, [0.421, 0.649, 0.803]], [0.519, [0.421, 0.649, 0.803]], [0.521, [0.413, 0.646, 0.802]], [0.523, [0.413, 0.646, 0.802]], [0.524, [0.405, 0.643, 0.800]], [0.526, [0.405, 0.643, 0.800]], [0.528, [0.398, 0.640, 0.798]], [0.530, [0.398, 0.640, 0.798]], [0.532, [0.390, 0.637, 0.796]], [0.534, [0.390, 0.637, 0.796]], [0.536, [0.382, 0.634, 0.794]], [0.538, [0.382, 0.634, 0.794]], [0.540, [0.375, 0.630, 0.792]], [0.542, [0.375, 0.630, 0.792]], [0.544, [0.367, 0.627, 0.791]], [0.546, [0.367, 0.627, 0.791]], [0.548, [0.360, 0.624, 0.789]], [0.550, [0.360, 0.624, 0.789]], [0.552, [0.352, 0.621, 0.787]], [0.554, [0.352, 0.621, 0.787]], [0.556, [0.344, 0.618, 0.785]], [0.558, [0.344, 0.618, 0.785]], [0.560, [0.337, 0.615, 0.783]], [0.562, [0.337, 0.615, 0.783]], [0.564, [0.329, 0.612, 0.781]], [0.566, [0.329, 0.612, 0.781]], [0.568, [0.321, 0.609, 0.779]], [0.569, [0.321, 0.609, 0.779]], [0.571, [0.314, 0.606, 0.778]], [0.573, [0.314, 0.606, 0.778]], [0.575, [0.306, 0.603, 0.776]], [0.577, [0.306, 0.603, 0.776]], [0.579, [0.299, 0.600, 0.774]], [0.581, [0.299, 0.600, 0.774]], [0.583, [0.291, 0.597, 0.772]], [0.585, [0.291, 0.597, 0.772]], [0.587, [0.283, 0.594, 0.770]], [0.589, [0.283, 0.594, 0.770]], [0.591, [0.276, 0.590, 0.768]], [0.593, [0.276, 0.590, 0.768]], [0.595, [0.268, 0.587, 0.767]], [0.597, [0.268, 0.587, 0.767]], [0.599, [0.260, 0.584, 0.765]], [0.601, [0.260, 0.584, 0.765]], [0.603, [0.253, 0.581, 0.763]], [0.605, [0.253, 0.581, 0.763]], [0.607, [0.245, 0.578, 0.761]], [0.609, [0.245, 0.578, 0.761]], [0.611, [0.238, 0.575, 0.759]], [0.613, [0.238, 0.575, 0.759]], [0.614, [0.230, 0.572, 0.757]], [0.616, [0.230, 0.572, 0.757]], [0.618, [0.222, 0.569, 0.755]], [0.620, [0.222, 0.569, 0.755]], [0.622, [0.215, 0.566, 0.754]], [0.624, [0.215, 0.566, 0.754]], [0.626, [0.208, 0.562, 0.752]], [0.628, [0.208, 0.562, 0.752]], [0.630, [0.202, 0.558, 0.750]], [0.632, [0.202, 0.558, 0.750]], [0.634, [0.196, 0.554, 0.748]], [0.636, [0.196, 0.554, 0.748]], [0.638, [0.190, 0.550, 0.746]], [0.640, [0.190, 0.550, 0.746]], [0.642, [0.184, 0.546, 0.744]], [0.644, [0.184, 0.546, 0.744]], [0.646, [0.178, 0.543, 0.742]], [0.648, [0.178, 0.543, 0.742]], [0.650, [0.172, 0.539, 0.740]], [0.652, [0.172, 0.539, 0.740]], [0.654, [0.166, 0.535, 0.738]], [0.656, [0.166, 0.535, 0.738]], [0.658, [0.160, 0.531, 0.736]], [0.659, [0.160, 0.531, 0.736]], [0.661, [0.154, 0.527, 0.734]], [0.663, [0.154, 0.527, 0.734]], [0.665, [0.148, 0.523, 0.732]], [0.667, [0.148, 0.523, 0.732]], [0.669, [0.142, 0.519, 0.730]], [0.671, [0.142, 0.519, 0.730]], [0.673, [0.136, 0.515, 0.728]], [0.675, [0.136, 0.515, 0.728]], [0.677, [0.130, 0.511, 0.726]], [0.679, [0.130, 0.511, 0.726]], [0.681, [0.124, 0.507, 0.724]], [0.683, [0.124, 0.507, 0.724]], [0.685, [0.118, 0.503, 0.722]], [0.687, [0.118, 0.503, 0.722]], [0.689, [0.112, 0.499, 0.720]], [0.691, [0.112, 0.499, 0.720]], [0.693, [0.106, 0.495, 0.718]], [0.695, [0.106, 0.495, 0.718]], [0.697, [0.099, 0.491, 0.716]], [0.699, [0.099, 0.491, 0.716]], [0.701, [0.093, 0.487, 0.714]], [0.703, [0.093, 0.487, 0.714]], [0.705, [0.087, 0.484, 0.712]], [0.706, [0.087, 0.484, 0.712]], [0.708, [0.081, 0.480, 0.710]], [0.710, [0.081, 0.480, 0.710]], [0.712, [0.075, 0.476, 0.708]], [0.714, [0.075, 0.476, 0.708]], [0.716, [0.069, 0.472, 0.706]], [0.718, [0.069, 0.472, 0.706]], [0.720, [0.063, 0.468, 0.704]], [0.722, [0.063, 0.468, 0.704]], [0.724, [0.057, 0.464, 0.702]], [0.726, [0.057, 0.464, 0.702]], [0.728, [0.051, 0.460, 0.701]], [0.730, [0.051, 0.460, 0.701]], [0.732, [0.045, 0.456, 0.699]], [0.734, [0.045, 0.456, 0.699]], [0.736, [0.039, 0.452, 0.697]], [0.738, [0.039, 0.452, 0.697]], [0.740, [0.033, 0.448, 0.695]], [0.742, [0.033, 0.448, 0.695]], [0.744, [0.027, 0.444, 0.693]], [0.746, [0.027, 0.444, 0.693]], [0.748, [0.021, 0.440, 0.691]], [0.750, [0.021, 0.440, 0.691]], [0.751, [0.020, 0.437, 0.687]], [0.753, [0.020, 0.437, 0.687]], [0.755, [0.019, 0.434, 0.683]], [0.757, [0.019, 0.434, 0.683]], [0.759, [0.019, 0.432, 0.678]], [0.761, [0.019, 0.432, 0.678]], [0.763, [0.019, 0.429, 0.674]], [0.765, [0.019, 0.429, 0.674]], [0.767, [0.019, 0.426, 0.670]], [0.769, [0.019, 0.426, 0.670]], [0.771, [0.019, 0.424, 0.665]], [0.773, [0.019, 0.424, 0.665]], [0.775, [0.019, 0.421, 0.661]], [0.777, [0.019, 0.421, 0.661]], [0.779, [0.019, 0.418, 0.657]], [0.781, [0.019, 0.418, 0.657]], [0.783, [0.019, 0.416, 0.653]], [0.785, [0.019, 0.416, 0.653]], [0.787, [0.018, 0.413, 0.648]], [0.789, [0.018, 0.413, 0.648]], [0.791, [0.018, 0.410, 0.644]], [0.793, [0.018, 0.410, 0.644]], [0.795, [0.018, 0.407, 0.640]], [0.796, [0.018, 0.407, 0.640]], [0.798, [0.018, 0.405, 0.635]], [0.800, [0.018, 0.405, 0.635]], [0.802, [0.018, 0.402, 0.631]], [0.804, [0.018, 0.402, 0.631]], [0.806, [0.018, 0.399, 0.627]], [0.808, [0.018, 0.399, 0.627]], [0.810, [0.018, 0.397, 0.622]], [0.812, [0.018, 0.397, 0.622]], [0.814, [0.018, 0.394, 0.618]], [0.816, [0.018, 0.394, 0.618]], [0.818, [0.017, 0.391, 0.614]], [0.820, [0.017, 0.391, 0.614]], [0.822, [0.017, 0.388, 0.609]], [0.824, [0.017, 0.388, 0.609]], [0.826, [0.017, 0.386, 0.605]], [0.828, [0.017, 0.386, 0.605]], [0.830, [0.017, 0.383, 0.601]], [0.832, [0.017, 0.383, 0.601]], [0.834, [0.017, 0.380, 0.597]], [0.836, [0.017, 0.380, 0.597]], [0.838, [0.017, 0.378, 0.592]], [0.840, [0.017, 0.378, 0.592]], [0.841, [0.017, 0.375, 0.588]], [0.843, [0.017, 0.375, 0.588]], [0.845, [0.017, 0.372, 0.584]], [0.847, [0.017, 0.372, 0.584]], [0.849, [0.016, 0.370, 0.579]], [0.851, [0.016, 0.370, 0.579]], [0.853, [0.016, 0.367, 0.575]], [0.855, [0.016, 0.367, 0.575]], [0.857, [0.016, 0.364, 0.571]], [0.859, [0.016, 0.364, 0.571]], [0.861, [0.016, 0.361, 0.566]], [0.863, [0.016, 0.361, 0.566]], [0.865, [0.016, 0.359, 0.562]], [0.867, [0.016, 0.359, 0.562]], [0.869, [0.016, 0.356, 0.558]], [0.871, [0.016, 0.356, 0.558]], [0.873, [0.016, 0.353, 0.553]], [0.875, [0.016, 0.353, 0.553]], [0.877, [0.015, 0.349, 0.547]], [0.879, [0.015, 0.349, 0.547]], [0.881, [0.015, 0.345, 0.541]], [0.883, [0.015, 0.345, 0.541]], [0.885, [0.015, 0.341, 0.534]], [0.886, [0.015, 0.341, 0.534]], [0.888, [0.015, 0.337, 0.528]], [0.890, [0.015, 0.337, 0.528]], [0.892, [0.014, 0.333, 0.521]], [0.894, [0.014, 0.333, 0.521]], [0.896, [0.014, 0.328, 0.515]], [0.898, [0.014, 0.328, 0.515]], [0.900, [0.014, 0.324, 0.508]], [0.902, [0.014, 0.324, 0.508]], [0.904, [0.014, 0.320, 0.502]], [0.906, [0.014, 0.320, 0.502]], [0.908, [0.014, 0.316, 0.495]], [0.910, [0.014, 0.316, 0.495]], [0.912, [0.013, 0.312, 0.489]], [0.914, [0.013, 0.312, 0.489]], [0.916, [0.013, 0.307, 0.482]], [0.918, [0.013, 0.307, 0.482]], [0.920, [0.013, 0.303, 0.476]], [0.922, [0.013, 0.303, 0.476]], [0.924, [0.013, 0.299, 0.469]], [0.926, [0.013, 0.299, 0.469]], [0.928, [0.012, 0.295, 0.462]], [0.930, [0.012, 0.295, 0.462]], [0.932, [0.012, 0.291, 0.456]], [0.933, [0.012, 0.291, 0.456]], [0.935, [0.012, 0.287, 0.449]], [0.937, [0.012, 0.287, 0.449]], [0.939, [0.012, 0.282, 0.443]], [0.941, [0.012, 0.282, 0.443]], [0.943, [0.011, 0.278, 0.436]], [0.945, [0.011, 0.278, 0.436]], [0.947, [0.011, 0.274, 0.430]], [0.949, [0.011, 0.274, 0.430]], [0.951, [0.011, 0.270, 0.423]], [0.953, [0.011, 0.270, 0.423]], [0.955, [0.011, 0.266, 0.417]], [0.957, [0.011, 0.266, 0.417]], [0.959, [0.010, 0.261, 0.410]], [0.961, [0.010, 0.261, 0.410]], [0.963, [0.010, 0.257, 0.404]], [0.965, [0.010, 0.257, 0.404]], [0.967, [0.010, 0.253, 0.397]], [0.969, [0.010, 0.253, 0.397]], [0.971, [0.010, 0.249, 0.391]], [0.973, [0.010, 0.249, 0.391]], [0.975, [0.009, 0.245, 0.384]], [0.977, [0.009, 0.245, 0.384]], [0.978, [0.009, 0.241, 0.378]], [0.980, [0.009, 0.241, 0.378]], [0.982, [0.009, 0.236, 0.371]], [0.984, [0.009, 0.236, 0.371]], [0.986, [0.009, 0.232, 0.365]], [0.988, [0.009, 0.232, 0.365]], [0.990, [0.008, 0.228, 0.358]], [0.992, [0.008, 0.228, 0.358]], [0.994, [0.008, 0.224, 0.352]], [0.996, [0.008, 0.224, 0.352]], [0.998, [0.008, 0.220, 0.345]], [1.000, [0.008, 0.220, 0.345]]];
H.colormap_PuBuGn = [[0.000, [1.000, 0.969, 0.984]], [0.002, [1.000, 0.969, 0.984]], [0.004, [0.998, 0.966, 0.983]], [0.006, [0.998, 0.966, 0.983]], [0.008, [0.995, 0.963, 0.982]], [0.010, [0.995, 0.963, 0.982]], [0.012, [0.993, 0.961, 0.980]], [0.014, [0.993, 0.961, 0.980]], [0.016, [0.991, 0.958, 0.979]], [0.018, [0.991, 0.958, 0.979]], [0.020, [0.988, 0.956, 0.978]], [0.022, [0.988, 0.956, 0.978]], [0.023, [0.986, 0.953, 0.976]], [0.025, [0.986, 0.953, 0.976]], [0.027, [0.984, 0.951, 0.975]], [0.029, [0.984, 0.951, 0.975]], [0.031, [0.981, 0.948, 0.973]], [0.033, [0.981, 0.948, 0.973]], [0.035, [0.979, 0.945, 0.972]], [0.037, [0.979, 0.945, 0.972]], [0.039, [0.977, 0.943, 0.971]], [0.041, [0.977, 0.943, 0.971]], [0.043, [0.974, 0.940, 0.969]], [0.045, [0.974, 0.940, 0.969]], [0.047, [0.972, 0.938, 0.968]], [0.049, [0.972, 0.938, 0.968]], [0.051, [0.970, 0.935, 0.967]], [0.053, [0.970, 0.935, 0.967]], [0.055, [0.967, 0.932, 0.965]], [0.057, [0.967, 0.932, 0.965]], [0.059, [0.965, 0.930, 0.964]], [0.061, [0.965, 0.930, 0.964]], [0.063, [0.963, 0.927, 0.963]], [0.065, [0.963, 0.927, 0.963]], [0.067, [0.960, 0.925, 0.961]], [0.068, [0.960, 0.925, 0.961]], [0.070, [0.958, 0.922, 0.960]], [0.072, [0.958, 0.922, 0.960]], [0.074, [0.956, 0.920, 0.959]], [0.076, [0.956, 0.920, 0.959]], [0.078, [0.953, 0.917, 0.957]], [0.080, [0.953, 0.917, 0.957]], [0.082, [0.951, 0.914, 0.956]], [0.084, [0.951, 0.914, 0.956]], [0.086, [0.949, 0.912, 0.955]], [0.088, [0.949, 0.912, 0.955]], [0.090, [0.946, 0.909, 0.953]], [0.092, [0.946, 0.909, 0.953]], [0.094, [0.944, 0.907, 0.952]], [0.096, [0.944, 0.907, 0.952]], [0.098, [0.942, 0.904, 0.950]], [0.100, [0.942, 0.904, 0.950]], [0.102, [0.939, 0.901, 0.949]], [0.104, [0.939, 0.901, 0.949]], [0.106, [0.937, 0.899, 0.948]], [0.108, [0.937, 0.899, 0.948]], [0.110, [0.935, 0.896, 0.946]], [0.112, [0.935, 0.896, 0.946]], [0.114, [0.932, 0.894, 0.945]], [0.115, [0.932, 0.894, 0.945]], [0.117, [0.930, 0.891, 0.944]], [0.119, [0.930, 0.891, 0.944]], [0.121, [0.928, 0.889, 0.942]], [0.123, [0.928, 0.889, 0.942]], [0.125, [0.925, 0.886, 0.941]], [0.127, [0.925, 0.886, 0.941]], [0.129, [0.922, 0.884, 0.940]], [0.131, [0.922, 0.884, 0.940]], [0.133, [0.918, 0.882, 0.939]], [0.135, [0.918, 0.882, 0.939]], [0.137, [0.915, 0.880, 0.937]], [0.139, [0.915, 0.880, 0.937]], [0.141, [0.911, 0.878, 0.936]], [0.143, [0.911, 0.878, 0.936]], [0.145, [0.908, 0.876, 0.935]], [0.147, [0.908, 0.876, 0.935]], [0.149, [0.904, 0.873, 0.934]], [0.151, [0.904, 0.873, 0.934]], [0.153, [0.901, 0.871, 0.932]], [0.155, [0.901, 0.871, 0.932]], [0.157, [0.898, 0.869, 0.931]], [0.159, [0.898, 0.869, 0.931]], [0.160, [0.894, 0.867, 0.930]], [0.162, [0.894, 0.867, 0.930]], [0.164, [0.891, 0.865, 0.929]], [0.166, [0.891, 0.865, 0.929]], [0.168, [0.887, 0.863, 0.927]], [0.170, [0.887, 0.863, 0.927]], [0.172, [0.884, 0.861, 0.926]], [0.174, [0.884, 0.861, 0.926]], [0.176, [0.880, 0.859, 0.925]], [0.178, [0.880, 0.859, 0.925]], [0.180, [0.877, 0.857, 0.924]], [0.182, [0.877, 0.857, 0.924]], [0.184, [0.873, 0.855, 0.923]], [0.186, [0.873, 0.855, 0.923]], [0.188, [0.870, 0.853, 0.921]], [0.190, [0.870, 0.853, 0.921]], [0.192, [0.866, 0.850, 0.920]], [0.194, [0.866, 0.850, 0.920]], [0.196, [0.863, 0.848, 0.919]], [0.198, [0.863, 0.848, 0.919]], [0.200, [0.860, 0.846, 0.918]], [0.202, [0.860, 0.846, 0.918]], [0.204, [0.856, 0.844, 0.916]], [0.205, [0.856, 0.844, 0.916]], [0.207, [0.853, 0.842, 0.915]], [0.209, [0.853, 0.842, 0.915]], [0.211, [0.849, 0.840, 0.914]], [0.213, [0.849, 0.840, 0.914]], [0.215, [0.846, 0.838, 0.913]], [0.217, [0.846, 0.838, 0.913]], [0.219, [0.842, 0.836, 0.911]], [0.221, [0.842, 0.836, 0.911]], [0.223, [0.839, 0.834, 0.910]], [0.225, [0.839, 0.834, 0.910]], [0.227, [0.835, 0.832, 0.909]], [0.229, [0.835, 0.832, 0.909]], [0.231, [0.832, 0.830, 0.908]], [0.233, [0.832, 0.830, 0.908]], [0.235, [0.829, 0.827, 0.907]], [0.237, [0.829, 0.827, 0.907]], [0.239, [0.825, 0.825, 0.905]], [0.241, [0.825, 0.825, 0.905]], [0.243, [0.822, 0.823, 0.904]], [0.245, [0.822, 0.823, 0.904]], [0.247, [0.818, 0.821, 0.903]], [0.249, [0.818, 0.821, 0.903]], [0.250, [0.814, 0.819, 0.902]], [0.252, [0.814, 0.819, 0.902]], [0.254, [0.809, 0.817, 0.900]], [0.256, [0.809, 0.817, 0.900]], [0.258, [0.804, 0.814, 0.899]], [0.260, [0.804, 0.814, 0.899]], [0.262, [0.799, 0.812, 0.898]], [0.264, [0.799, 0.812, 0.898]], [0.266, [0.794, 0.809, 0.896]], [0.268, [0.794, 0.809, 0.896]], [0.270, [0.789, 0.807, 0.895]], [0.272, [0.789, 0.807, 0.895]], [0.274, [0.783, 0.804, 0.894]], [0.276, [0.783, 0.804, 0.894]], [0.278, [0.778, 0.802, 0.892]], [0.280, [0.778, 0.802, 0.892]], [0.282, [0.773, 0.799, 0.891]], [0.284, [0.773, 0.799, 0.891]], [0.286, [0.768, 0.797, 0.889]], [0.288, [0.768, 0.797, 0.889]], [0.290, [0.763, 0.794, 0.888]], [0.292, [0.763, 0.794, 0.888]], [0.294, [0.758, 0.792, 0.887]], [0.295, [0.758, 0.792, 0.887]], [0.297, [0.752, 0.789, 0.885]], [0.299, [0.752, 0.789, 0.885]], [0.301, [0.747, 0.787, 0.884]], [0.303, [0.747, 0.787, 0.884]], [0.305, [0.742, 0.785, 0.883]], [0.307, [0.742, 0.785, 0.883]], [0.309, [0.737, 0.782, 0.881]], [0.311, [0.737, 0.782, 0.881]], [0.313, [0.732, 0.780, 0.880]], [0.315, [0.732, 0.780, 0.880]], [0.317, [0.727, 0.777, 0.879]], [0.319, [0.727, 0.777, 0.879]], [0.321, [0.721, 0.775, 0.877]], [0.323, [0.721, 0.775, 0.877]], [0.325, [0.716, 0.772, 0.876]], [0.327, [0.716, 0.772, 0.876]], [0.329, [0.711, 0.770, 0.875]], [0.331, [0.711, 0.770, 0.875]], [0.333, [0.706, 0.767, 0.873]], [0.335, [0.706, 0.767, 0.873]], [0.337, [0.701, 0.765, 0.872]], [0.339, [0.701, 0.765, 0.872]], [0.341, [0.696, 0.762, 0.870]], [0.342, [0.696, 0.762, 0.870]], [0.344, [0.690, 0.760, 0.869]], [0.346, [0.690, 0.760, 0.869]], [0.348, [0.685, 0.757, 0.868]], [0.350, [0.685, 0.757, 0.868]], [0.352, [0.680, 0.755, 0.866]], [0.354, [0.680, 0.755, 0.866]], [0.356, [0.675, 0.753, 0.865]], [0.358, [0.675, 0.753, 0.865]], [0.360, [0.670, 0.750, 0.864]], [0.362, [0.670, 0.750, 0.864]], [0.364, [0.665, 0.748, 0.862]], [0.366, [0.665, 0.748, 0.862]], [0.368, [0.659, 0.745, 0.861]], [0.370, [0.659, 0.745, 0.861]], [0.372, [0.654, 0.743, 0.860]], [0.374, [0.654, 0.743, 0.860]], [0.376, [0.648, 0.740, 0.858]], [0.378, [0.648, 0.740, 0.858]], [0.380, [0.640, 0.738, 0.857]], [0.382, [0.640, 0.738, 0.857]], [0.384, [0.633, 0.735, 0.855]], [0.386, [0.633, 0.735, 0.855]], [0.387, [0.625, 0.733, 0.854]], [0.389, [0.625, 0.733, 0.854]], [0.391, [0.617, 0.730, 0.852]], [0.393, [0.617, 0.730, 0.852]], [0.395, [0.609, 0.728, 0.851]], [0.397, [0.609, 0.728, 0.851]], [0.399, [0.602, 0.725, 0.849]], [0.401, [0.602, 0.725, 0.849]], [0.403, [0.594, 0.723, 0.848]], [0.405, [0.594, 0.723, 0.848]], [0.407, [0.586, 0.721, 0.846]], [0.409, [0.586, 0.721, 0.846]], [0.411, [0.578, 0.718, 0.845]], [0.413, [0.578, 0.718, 0.845]], [0.415, [0.571, 0.716, 0.844]], [0.417, [0.571, 0.716, 0.844]], [0.419, [0.563, 0.713, 0.842]], [0.421, [0.563, 0.713, 0.842]], [0.423, [0.555, 0.711, 0.841]], [0.425, [0.555, 0.711, 0.841]], [0.427, [0.547, 0.708, 0.839]], [0.429, [0.547, 0.708, 0.839]], [0.431, [0.540, 0.706, 0.838]], [0.432, [0.540, 0.706, 0.838]], [0.434, [0.532, 0.703, 0.836]], [0.436, [0.532, 0.703, 0.836]], [0.438, [0.524, 0.701, 0.835]], [0.440, [0.524, 0.701, 0.835]], [0.442, [0.516, 0.698, 0.833]], [0.444, [0.516, 0.698, 0.833]], [0.446, [0.509, 0.696, 0.832]], [0.448, [0.509, 0.696, 0.832]], [0.450, [0.501, 0.694, 0.830]], [0.452, [0.501, 0.694, 0.830]], [0.454, [0.493, 0.691, 0.829]], [0.456, [0.493, 0.691, 0.829]], [0.458, [0.485, 0.689, 0.827]], [0.460, [0.485, 0.689, 0.827]], [0.462, [0.478, 0.686, 0.826]], [0.464, [0.478, 0.686, 0.826]], [0.466, [0.470, 0.684, 0.824]], [0.468, [0.470, 0.684, 0.824]], [0.470, [0.462, 0.681, 0.823]], [0.472, [0.462, 0.681, 0.823]], [0.474, [0.454, 0.679, 0.821]], [0.476, [0.454, 0.679, 0.821]], [0.477, [0.447, 0.676, 0.820]], [0.479, [0.447, 0.676, 0.820]], [0.481, [0.439, 0.674, 0.818]], [0.483, [0.439, 0.674, 0.818]], [0.485, [0.431, 0.671, 0.817]], [0.487, [0.431, 0.671, 0.817]], [0.489, [0.423, 0.669, 0.815]], [0.491, [0.423, 0.669, 0.815]], [0.493, [0.416, 0.666, 0.814]], [0.495, [0.416, 0.666, 0.814]], [0.497, [0.408, 0.664, 0.813]], [0.499, [0.408, 0.664, 0.813]], [0.501, [0.401, 0.661, 0.811]], [0.503, [0.401, 0.661, 0.811]], [0.505, [0.395, 0.658, 0.809]], [0.507, [0.395, 0.658, 0.809]], [0.509, [0.389, 0.655, 0.807]], [0.511, [0.389, 0.655, 0.807]], [0.513, [0.383, 0.652, 0.805]], [0.515, [0.383, 0.652, 0.805]], [0.517, [0.377, 0.649, 0.803]], [0.519, [0.377, 0.649, 0.803]], [0.521, [0.371, 0.646, 0.802]], [0.523, [0.371, 0.646, 0.802]], [0.524, [0.365, 0.643, 0.800]], [0.526, [0.365, 0.643, 0.800]], [0.528, [0.359, 0.640, 0.798]], [0.530, [0.359, 0.640, 0.798]], [0.532, [0.353, 0.637, 0.796]], [0.534, [0.353, 0.637, 0.796]], [0.536, [0.347, 0.634, 0.794]], [0.538, [0.347, 0.634, 0.794]], [0.540, [0.341, 0.630, 0.792]], [0.542, [0.341, 0.630, 0.792]], [0.544, [0.335, 0.627, 0.791]], [0.546, [0.335, 0.627, 0.791]], [0.548, [0.329, 0.624, 0.789]], [0.550, [0.329, 0.624, 0.789]], [0.552, [0.323, 0.621, 0.787]], [0.554, [0.323, 0.621, 0.787]], [0.556, [0.317, 0.618, 0.785]], [0.558, [0.317, 0.618, 0.785]], [0.560, [0.310, 0.615, 0.783]], [0.562, [0.310, 0.615, 0.783]], [0.564, [0.304, 0.612, 0.781]], [0.566, [0.304, 0.612, 0.781]], [0.568, [0.298, 0.609, 0.779]], [0.569, [0.298, 0.609, 0.779]], [0.571, [0.292, 0.606, 0.778]], [0.573, [0.292, 0.606, 0.778]], [0.575, [0.286, 0.603, 0.776]], [0.577, [0.286, 0.603, 0.776]], [0.579, [0.280, 0.600, 0.774]], [0.581, [0.280, 0.600, 0.774]], [0.583, [0.274, 0.597, 0.772]], [0.585, [0.274, 0.597, 0.772]], [0.587, [0.268, 0.594, 0.770]], [0.589, [0.268, 0.594, 0.770]], [0.591, [0.262, 0.590, 0.768]], [0.593, [0.262, 0.590, 0.768]], [0.595, [0.256, 0.587, 0.767]], [0.597, [0.256, 0.587, 0.767]], [0.599, [0.250, 0.584, 0.765]], [0.601, [0.250, 0.584, 0.765]], [0.603, [0.244, 0.581, 0.763]], [0.605, [0.244, 0.581, 0.763]], [0.607, [0.238, 0.578, 0.761]], [0.609, [0.238, 0.578, 0.761]], [0.611, [0.232, 0.575, 0.759]], [0.613, [0.232, 0.575, 0.759]], [0.614, [0.226, 0.572, 0.757]], [0.616, [0.226, 0.572, 0.757]], [0.618, [0.220, 0.569, 0.755]], [0.620, [0.220, 0.569, 0.755]], [0.622, [0.214, 0.566, 0.754]], [0.624, [0.214, 0.566, 0.754]], [0.626, [0.208, 0.564, 0.749]], [0.628, [0.208, 0.564, 0.749]], [0.630, [0.201, 0.562, 0.742]], [0.632, [0.201, 0.562, 0.742]], [0.634, [0.195, 0.560, 0.736]], [0.636, [0.195, 0.560, 0.736]], [0.638, [0.189, 0.558, 0.729]], [0.640, [0.189, 0.558, 0.729]], [0.642, [0.182, 0.556, 0.722]], [0.644, [0.182, 0.556, 0.722]], [0.646, [0.176, 0.554, 0.716]], [0.648, [0.176, 0.554, 0.716]], [0.650, [0.169, 0.552, 0.709]], [0.652, [0.169, 0.552, 0.709]], [0.654, [0.163, 0.551, 0.702]], [0.656, [0.163, 0.551, 0.702]], [0.658, [0.157, 0.549, 0.696]], [0.659, [0.157, 0.549, 0.696]], [0.661, [0.150, 0.547, 0.689]], [0.663, [0.150, 0.547, 0.689]], [0.665, [0.144, 0.545, 0.682]], [0.667, [0.144, 0.545, 0.682]], [0.669, [0.137, 0.543, 0.676]], [0.671, [0.137, 0.543, 0.676]], [0.673, [0.131, 0.541, 0.669]], [0.675, [0.131, 0.541, 0.669]], [0.677, [0.125, 0.540, 0.662]], [0.679, [0.125, 0.540, 0.662]], [0.681, [0.118, 0.538, 0.656]], [0.683, [0.118, 0.538, 0.656]], [0.685, [0.112, 0.536, 0.649]], [0.687, [0.112, 0.536, 0.649]], [0.689, [0.105, 0.534, 0.642]], [0.691, [0.105, 0.534, 0.642]], [0.693, [0.099, 0.532, 0.636]], [0.695, [0.099, 0.532, 0.636]], [0.697, [0.093, 0.530, 0.629]], [0.699, [0.093, 0.530, 0.629]], [0.701, [0.086, 0.528, 0.623]], [0.703, [0.086, 0.528, 0.623]], [0.705, [0.080, 0.527, 0.616]], [0.706, [0.080, 0.527, 0.616]], [0.708, [0.073, 0.525, 0.609]], [0.710, [0.073, 0.525, 0.609]], [0.712, [0.067, 0.523, 0.603]], [0.714, [0.067, 0.523, 0.603]], [0.716, [0.061, 0.521, 0.596]], [0.718, [0.061, 0.521, 0.596]], [0.720, [0.054, 0.519, 0.589]], [0.722, [0.054, 0.519, 0.589]], [0.724, [0.048, 0.517, 0.583]], [0.726, [0.048, 0.517, 0.583]], [0.728, [0.041, 0.516, 0.576]], [0.730, [0.041, 0.516, 0.576]], [0.732, [0.035, 0.514, 0.569]], [0.734, [0.035, 0.514, 0.569]], [0.736, [0.029, 0.512, 0.563]], [0.738, [0.029, 0.512, 0.563]], [0.740, [0.022, 0.510, 0.556]], [0.742, [0.022, 0.510, 0.556]], [0.744, [0.016, 0.508, 0.549]], [0.746, [0.016, 0.508, 0.549]], [0.748, [0.009, 0.506, 0.543]], [0.750, [0.009, 0.506, 0.543]], [0.751, [0.008, 0.504, 0.537]], [0.753, [0.008, 0.504, 0.537]], [0.755, [0.008, 0.501, 0.531]], [0.757, [0.008, 0.501, 0.531]], [0.759, [0.008, 0.499, 0.525]], [0.761, [0.008, 0.499, 0.525]], [0.763, [0.007, 0.496, 0.519]], [0.765, [0.007, 0.496, 0.519]], [0.767, [0.007, 0.494, 0.513]], [0.769, [0.007, 0.494, 0.513]], [0.771, [0.007, 0.491, 0.507]], [0.773, [0.007, 0.491, 0.507]], [0.775, [0.007, 0.488, 0.500]], [0.777, [0.007, 0.488, 0.500]], [0.779, [0.007, 0.486, 0.494]], [0.781, [0.007, 0.486, 0.494]], [0.783, [0.007, 0.483, 0.488]], [0.785, [0.007, 0.483, 0.488]], [0.787, [0.007, 0.481, 0.482]], [0.789, [0.007, 0.481, 0.482]], [0.791, [0.007, 0.478, 0.476]], [0.793, [0.007, 0.478, 0.476]], [0.795, [0.006, 0.476, 0.470]], [0.796, [0.006, 0.476, 0.470]], [0.798, [0.006, 0.473, 0.464]], [0.800, [0.006, 0.473, 0.464]], [0.802, [0.006, 0.470, 0.458]], [0.804, [0.006, 0.470, 0.458]], [0.806, [0.006, 0.468, 0.452]], [0.808, [0.006, 0.468, 0.452]], [0.810, [0.006, 0.465, 0.446]], [0.812, [0.006, 0.465, 0.446]], [0.814, [0.006, 0.463, 0.440]], [0.816, [0.006, 0.463, 0.440]], [0.818, [0.006, 0.460, 0.434]], [0.820, [0.006, 0.460, 0.434]], [0.822, [0.006, 0.457, 0.428]], [0.824, [0.006, 0.457, 0.428]], [0.826, [0.005, 0.455, 0.422]], [0.828, [0.005, 0.455, 0.422]], [0.830, [0.005, 0.452, 0.416]], [0.832, [0.005, 0.452, 0.416]], [0.834, [0.005, 0.450, 0.410]], [0.836, [0.005, 0.450, 0.410]], [0.838, [0.005, 0.447, 0.404]], [0.840, [0.005, 0.447, 0.404]], [0.841, [0.005, 0.445, 0.398]], [0.843, [0.005, 0.445, 0.398]], [0.845, [0.005, 0.442, 0.392]], [0.847, [0.005, 0.442, 0.392]], [0.849, [0.005, 0.439, 0.386]], [0.851, [0.005, 0.439, 0.386]], [0.853, [0.005, 0.437, 0.380]], [0.855, [0.005, 0.437, 0.380]], [0.857, [0.004, 0.434, 0.374]], [0.859, [0.004, 0.434, 0.374]], [0.861, [0.004, 0.432, 0.368]], [0.863, [0.004, 0.432, 0.368]], [0.865, [0.004, 0.429, 0.362]], [0.867, [0.004, 0.429, 0.362]], [0.869, [0.004, 0.426, 0.356]], [0.871, [0.004, 0.426, 0.356]], [0.873, [0.004, 0.424, 0.350]], [0.875, [0.004, 0.424, 0.350]], [0.877, [0.004, 0.419, 0.345]], [0.879, [0.004, 0.419, 0.345]], [0.881, [0.004, 0.415, 0.341]], [0.883, [0.004, 0.415, 0.341]], [0.885, [0.004, 0.410, 0.337]], [0.886, [0.004, 0.410, 0.337]], [0.888, [0.004, 0.405, 0.332]], [0.890, [0.004, 0.405, 0.332]], [0.892, [0.004, 0.401, 0.328]], [0.894, [0.004, 0.401, 0.328]], [0.896, [0.004, 0.396, 0.324]], [0.898, [0.004, 0.396, 0.324]], [0.900, [0.004, 0.391, 0.319]], [0.902, [0.004, 0.391, 0.319]], [0.904, [0.004, 0.387, 0.315]], [0.906, [0.004, 0.387, 0.315]], [0.908, [0.004, 0.382, 0.311]], [0.910, [0.004, 0.382, 0.311]], [0.912, [0.004, 0.377, 0.306]], [0.914, [0.004, 0.377, 0.306]], [0.916, [0.004, 0.373, 0.302]], [0.918, [0.004, 0.373, 0.302]], [0.920, [0.004, 0.368, 0.298]], [0.922, [0.004, 0.368, 0.298]], [0.924, [0.004, 0.363, 0.294]], [0.926, [0.004, 0.363, 0.294]], [0.928, [0.004, 0.359, 0.289]], [0.930, [0.004, 0.359, 0.289]], [0.932, [0.004, 0.354, 0.285]], [0.933, [0.004, 0.354, 0.285]], [0.935, [0.004, 0.349, 0.281]], [0.937, [0.004, 0.349, 0.281]], [0.939, [0.004, 0.345, 0.276]], [0.941, [0.004, 0.345, 0.276]], [0.943, [0.004, 0.340, 0.272]], [0.945, [0.004, 0.340, 0.272]], [0.947, [0.004, 0.335, 0.268]], [0.949, [0.004, 0.335, 0.268]], [0.951, [0.004, 0.331, 0.263]], [0.953, [0.004, 0.331, 0.263]], [0.955, [0.004, 0.326, 0.259]], [0.957, [0.004, 0.326, 0.259]], [0.959, [0.004, 0.321, 0.255]], [0.961, [0.004, 0.321, 0.255]], [0.963, [0.004, 0.317, 0.251]], [0.965, [0.004, 0.317, 0.251]], [0.967, [0.004, 0.312, 0.246]], [0.969, [0.004, 0.312, 0.246]], [0.971, [0.004, 0.307, 0.242]], [0.973, [0.004, 0.307, 0.242]], [0.975, [0.004, 0.303, 0.238]], [0.977, [0.004, 0.303, 0.238]], [0.978, [0.004, 0.298, 0.233]], [0.980, [0.004, 0.298, 0.233]], [0.982, [0.004, 0.293, 0.229]], [0.984, [0.004, 0.293, 0.229]], [0.986, [0.004, 0.289, 0.225]], [0.988, [0.004, 0.289, 0.225]], [0.990, [0.004, 0.284, 0.220]], [0.992, [0.004, 0.284, 0.220]], [0.994, [0.004, 0.279, 0.216]], [0.996, [0.004, 0.279, 0.216]], [0.998, [0.004, 0.275, 0.212]], [1.000, [0.004, 0.275, 0.212]]];
H.colormap_PuOr = [[0.000, [0.498, 0.231, 0.031]], [0.002, [0.498, 0.231, 0.031]], [0.004, [0.506, 0.236, 0.031]], [0.006, [0.506, 0.236, 0.031]], [0.008, [0.514, 0.240, 0.031]], [0.010, [0.514, 0.240, 0.031]], [0.012, [0.522, 0.245, 0.030]], [0.014, [0.522, 0.245, 0.030]], [0.016, [0.530, 0.249, 0.030]], [0.018, [0.530, 0.249, 0.030]], [0.020, [0.538, 0.254, 0.030]], [0.022, [0.538, 0.254, 0.030]], [0.023, [0.546, 0.258, 0.030]], [0.025, [0.546, 0.258, 0.030]], [0.027, [0.554, 0.263, 0.029]], [0.029, [0.554, 0.263, 0.029]], [0.031, [0.562, 0.267, 0.029]], [0.033, [0.562, 0.267, 0.029]], [0.035, [0.570, 0.272, 0.029]], [0.037, [0.570, 0.272, 0.029]], [0.039, [0.578, 0.276, 0.028]], [0.041, [0.578, 0.276, 0.028]], [0.043, [0.586, 0.280, 0.028]], [0.045, [0.586, 0.280, 0.028]], [0.047, [0.594, 0.285, 0.028]], [0.049, [0.594, 0.285, 0.028]], [0.051, [0.602, 0.289, 0.027]], [0.053, [0.602, 0.289, 0.027]], [0.055, [0.610, 0.294, 0.027]], [0.057, [0.610, 0.294, 0.027]], [0.059, [0.618, 0.298, 0.027]], [0.061, [0.618, 0.298, 0.027]], [0.063, [0.626, 0.303, 0.026]], [0.065, [0.626, 0.303, 0.026]], [0.067, [0.634, 0.307, 0.026]], [0.068, [0.634, 0.307, 0.026]], [0.070, [0.642, 0.312, 0.026]], [0.072, [0.642, 0.312, 0.026]], [0.074, [0.650, 0.316, 0.026]], [0.076, [0.650, 0.316, 0.026]], [0.078, [0.658, 0.321, 0.025]], [0.080, [0.658, 0.321, 0.025]], [0.082, [0.666, 0.325, 0.025]], [0.084, [0.666, 0.325, 0.025]], [0.086, [0.674, 0.329, 0.025]], [0.088, [0.674, 0.329, 0.025]], [0.090, [0.682, 0.334, 0.024]], [0.092, [0.682, 0.334, 0.024]], [0.094, [0.690, 0.338, 0.024]], [0.096, [0.690, 0.338, 0.024]], [0.098, [0.698, 0.343, 0.024]], [0.100, [0.698, 0.343, 0.024]], [0.102, [0.705, 0.348, 0.025]], [0.104, [0.705, 0.348, 0.025]], [0.106, [0.712, 0.355, 0.027]], [0.108, [0.712, 0.355, 0.027]], [0.110, [0.719, 0.361, 0.029]], [0.112, [0.719, 0.361, 0.029]], [0.114, [0.726, 0.368, 0.031]], [0.115, [0.726, 0.368, 0.031]], [0.117, [0.733, 0.374, 0.033]], [0.119, [0.733, 0.374, 0.033]], [0.121, [0.740, 0.381, 0.035]], [0.123, [0.740, 0.381, 0.035]], [0.125, [0.747, 0.387, 0.038]], [0.127, [0.747, 0.387, 0.038]], [0.129, [0.754, 0.394, 0.040]], [0.131, [0.754, 0.394, 0.040]], [0.133, [0.761, 0.400, 0.042]], [0.135, [0.761, 0.400, 0.042]], [0.137, [0.768, 0.406, 0.044]], [0.139, [0.768, 0.406, 0.044]], [0.141, [0.775, 0.413, 0.046]], [0.143, [0.775, 0.413, 0.046]], [0.145, [0.782, 0.419, 0.048]], [0.147, [0.782, 0.419, 0.048]], [0.149, [0.788, 0.426, 0.050]], [0.151, [0.788, 0.426, 0.050]], [0.153, [0.795, 0.432, 0.053]], [0.155, [0.795, 0.432, 0.053]], [0.157, [0.802, 0.439, 0.055]], [0.159, [0.802, 0.439, 0.055]], [0.160, [0.809, 0.445, 0.057]], [0.162, [0.809, 0.445, 0.057]], [0.164, [0.816, 0.452, 0.059]], [0.166, [0.816, 0.452, 0.059]], [0.168, [0.823, 0.458, 0.061]], [0.170, [0.823, 0.458, 0.061]], [0.172, [0.830, 0.465, 0.063]], [0.174, [0.830, 0.465, 0.063]], [0.176, [0.837, 0.471, 0.066]], [0.178, [0.837, 0.471, 0.066]], [0.180, [0.844, 0.478, 0.068]], [0.182, [0.844, 0.478, 0.068]], [0.184, [0.851, 0.484, 0.070]], [0.186, [0.851, 0.484, 0.070]], [0.188, [0.858, 0.490, 0.072]], [0.190, [0.858, 0.490, 0.072]], [0.192, [0.865, 0.497, 0.074]], [0.194, [0.865, 0.497, 0.074]], [0.196, [0.872, 0.503, 0.076]], [0.198, [0.872, 0.503, 0.076]], [0.200, [0.878, 0.510, 0.078]], [0.202, [0.878, 0.510, 0.078]], [0.204, [0.883, 0.518, 0.091]], [0.205, [0.883, 0.518, 0.091]], [0.207, [0.887, 0.526, 0.103]], [0.209, [0.887, 0.526, 0.103]], [0.211, [0.892, 0.535, 0.115]], [0.213, [0.892, 0.535, 0.115]], [0.215, [0.896, 0.543, 0.127]], [0.217, [0.896, 0.543, 0.127]], [0.219, [0.901, 0.551, 0.139]], [0.221, [0.901, 0.551, 0.139]], [0.223, [0.905, 0.560, 0.151]], [0.225, [0.905, 0.560, 0.151]], [0.227, [0.910, 0.568, 0.163]], [0.229, [0.910, 0.568, 0.163]], [0.231, [0.914, 0.576, 0.176]], [0.233, [0.914, 0.576, 0.176]], [0.235, [0.919, 0.585, 0.188]], [0.237, [0.919, 0.585, 0.188]], [0.239, [0.923, 0.593, 0.200]], [0.241, [0.923, 0.593, 0.200]], [0.243, [0.927, 0.601, 0.212]], [0.245, [0.927, 0.601, 0.212]], [0.247, [0.932, 0.609, 0.224]], [0.249, [0.932, 0.609, 0.224]], [0.250, [0.936, 0.618, 0.236]], [0.252, [0.936, 0.618, 0.236]], [0.254, [0.941, 0.626, 0.249]], [0.256, [0.941, 0.626, 0.249]], [0.258, [0.945, 0.634, 0.261]], [0.260, [0.945, 0.634, 0.261]], [0.262, [0.950, 0.643, 0.273]], [0.264, [0.950, 0.643, 0.273]], [0.266, [0.954, 0.651, 0.285]], [0.268, [0.954, 0.651, 0.285]], [0.270, [0.959, 0.659, 0.297]], [0.272, [0.959, 0.659, 0.297]], [0.274, [0.963, 0.668, 0.309]], [0.276, [0.963, 0.668, 0.309]], [0.278, [0.968, 0.676, 0.321]], [0.280, [0.968, 0.676, 0.321]], [0.282, [0.972, 0.684, 0.334]], [0.284, [0.972, 0.684, 0.334]], [0.286, [0.977, 0.693, 0.346]], [0.288, [0.977, 0.693, 0.346]], [0.290, [0.981, 0.701, 0.358]], [0.292, [0.981, 0.701, 0.358]], [0.294, [0.985, 0.709, 0.370]], [0.295, [0.985, 0.709, 0.370]], [0.297, [0.990, 0.717, 0.382]], [0.299, [0.990, 0.717, 0.382]], [0.301, [0.992, 0.725, 0.395]], [0.303, [0.992, 0.725, 0.395]], [0.305, [0.992, 0.731, 0.407]], [0.307, [0.992, 0.731, 0.407]], [0.309, [0.993, 0.737, 0.420]], [0.311, [0.993, 0.737, 0.420]], [0.313, [0.993, 0.743, 0.433]], [0.315, [0.993, 0.743, 0.433]], [0.317, [0.993, 0.749, 0.446]], [0.319, [0.993, 0.749, 0.446]], [0.321, [0.993, 0.755, 0.458]], [0.323, [0.993, 0.755, 0.458]], [0.325, [0.993, 0.762, 0.471]], [0.327, [0.993, 0.762, 0.471]], [0.329, [0.993, 0.768, 0.484]], [0.331, [0.993, 0.768, 0.484]], [0.333, [0.993, 0.774, 0.497]], [0.335, [0.993, 0.774, 0.497]], [0.337, [0.994, 0.780, 0.509]], [0.339, [0.994, 0.780, 0.509]], [0.341, [0.994, 0.786, 0.522]], [0.342, [0.994, 0.786, 0.522]], [0.344, [0.994, 0.792, 0.535]], [0.346, [0.994, 0.792, 0.535]], [0.348, [0.994, 0.798, 0.548]], [0.350, [0.994, 0.798, 0.548]], [0.352, [0.994, 0.805, 0.561]], [0.354, [0.994, 0.805, 0.561]], [0.356, [0.994, 0.811, 0.573]], [0.358, [0.994, 0.811, 0.573]], [0.360, [0.995, 0.817, 0.586]], [0.362, [0.995, 0.817, 0.586]], [0.364, [0.995, 0.823, 0.599]], [0.366, [0.995, 0.823, 0.599]], [0.368, [0.995, 0.829, 0.612]], [0.370, [0.995, 0.829, 0.612]], [0.372, [0.995, 0.835, 0.624]], [0.374, [0.995, 0.835, 0.624]], [0.376, [0.995, 0.842, 0.637]], [0.378, [0.995, 0.842, 0.637]], [0.380, [0.995, 0.848, 0.650]], [0.382, [0.995, 0.848, 0.650]], [0.384, [0.995, 0.854, 0.663]], [0.386, [0.995, 0.854, 0.663]], [0.387, [0.996, 0.860, 0.675]], [0.389, [0.996, 0.860, 0.675]], [0.391, [0.996, 0.866, 0.688]], [0.393, [0.996, 0.866, 0.688]], [0.395, [0.996, 0.872, 0.701]], [0.397, [0.996, 0.872, 0.701]], [0.399, [0.996, 0.878, 0.714]], [0.401, [0.996, 0.878, 0.714]], [0.403, [0.995, 0.882, 0.724]], [0.405, [0.995, 0.882, 0.724]], [0.407, [0.994, 0.886, 0.734]], [0.409, [0.994, 0.886, 0.734]], [0.411, [0.993, 0.889, 0.744]], [0.413, [0.993, 0.889, 0.744]], [0.415, [0.992, 0.893, 0.754]], [0.417, [0.992, 0.893, 0.754]], [0.419, [0.991, 0.896, 0.764]], [0.421, [0.991, 0.896, 0.764]], [0.423, [0.990, 0.900, 0.774]], [0.425, [0.990, 0.900, 0.774]], [0.427, [0.989, 0.903, 0.784]], [0.429, [0.989, 0.903, 0.784]], [0.431, [0.987, 0.907, 0.794]], [0.432, [0.987, 0.907, 0.794]], [0.434, [0.986, 0.910, 0.804]], [0.436, [0.986, 0.910, 0.804]], [0.438, [0.985, 0.914, 0.814]], [0.440, [0.985, 0.914, 0.814]], [0.442, [0.984, 0.917, 0.824]], [0.444, [0.984, 0.917, 0.824]], [0.446, [0.983, 0.921, 0.834]], [0.448, [0.983, 0.921, 0.834]], [0.450, [0.982, 0.924, 0.844]], [0.452, [0.982, 0.924, 0.844]], [0.454, [0.981, 0.928, 0.854]], [0.456, [0.981, 0.928, 0.854]], [0.458, [0.980, 0.931, 0.864]], [0.460, [0.980, 0.931, 0.864]], [0.462, [0.979, 0.935, 0.874]], [0.464, [0.979, 0.935, 0.874]], [0.466, [0.978, 0.939, 0.884]], [0.468, [0.978, 0.939, 0.884]], [0.470, [0.977, 0.942, 0.894]], [0.472, [0.977, 0.942, 0.894]], [0.474, [0.976, 0.946, 0.904]], [0.476, [0.976, 0.946, 0.904]], [0.477, [0.975, 0.949, 0.914]], [0.479, [0.975, 0.949, 0.914]], [0.481, [0.973, 0.953, 0.924]], [0.483, [0.973, 0.953, 0.924]], [0.485, [0.972, 0.956, 0.934]], [0.487, [0.972, 0.956, 0.934]], [0.489, [0.971, 0.960, 0.944]], [0.491, [0.971, 0.960, 0.944]], [0.493, [0.970, 0.963, 0.954]], [0.495, [0.970, 0.963, 0.954]], [0.497, [0.969, 0.967, 0.964]], [0.499, [0.969, 0.967, 0.964]], [0.501, [0.966, 0.966, 0.968]], [0.503, [0.966, 0.966, 0.968]], [0.505, [0.961, 0.962, 0.966]], [0.507, [0.961, 0.962, 0.966]], [0.509, [0.957, 0.957, 0.964]], [0.511, [0.957, 0.957, 0.964]], [0.513, [0.952, 0.953, 0.962]], [0.515, [0.952, 0.953, 0.962]], [0.517, [0.947, 0.949, 0.960]], [0.519, [0.947, 0.949, 0.960]], [0.521, [0.942, 0.944, 0.958]], [0.523, [0.942, 0.944, 0.958]], [0.524, [0.938, 0.940, 0.957]], [0.526, [0.938, 0.940, 0.957]], [0.528, [0.933, 0.935, 0.955]], [0.530, [0.933, 0.935, 0.955]], [0.532, [0.928, 0.931, 0.953]], [0.534, [0.928, 0.931, 0.953]], [0.536, [0.923, 0.926, 0.951]], [0.538, [0.923, 0.926, 0.951]], [0.540, [0.919, 0.922, 0.949]], [0.542, [0.919, 0.922, 0.949]], [0.544, [0.914, 0.917, 0.947]], [0.546, [0.914, 0.917, 0.947]], [0.548, [0.909, 0.913, 0.946]], [0.550, [0.909, 0.913, 0.946]], [0.552, [0.904, 0.908, 0.944]], [0.554, [0.904, 0.908, 0.944]], [0.556, [0.900, 0.904, 0.942]], [0.558, [0.900, 0.904, 0.942]], [0.560, [0.895, 0.900, 0.940]], [0.562, [0.895, 0.900, 0.940]], [0.564, [0.890, 0.895, 0.938]], [0.566, [0.890, 0.895, 0.938]], [0.568, [0.885, 0.891, 0.936]], [0.569, [0.885, 0.891, 0.936]], [0.571, [0.880, 0.886, 0.934]], [0.573, [0.880, 0.886, 0.934]], [0.575, [0.876, 0.882, 0.933]], [0.577, [0.876, 0.882, 0.933]], [0.579, [0.871, 0.877, 0.931]], [0.581, [0.871, 0.877, 0.931]], [0.583, [0.866, 0.873, 0.929]], [0.585, [0.866, 0.873, 0.929]], [0.587, [0.861, 0.868, 0.927]], [0.589, [0.861, 0.868, 0.927]], [0.591, [0.857, 0.864, 0.925]], [0.593, [0.857, 0.864, 0.925]], [0.595, [0.852, 0.859, 0.923]], [0.597, [0.852, 0.859, 0.923]], [0.599, [0.847, 0.855, 0.922]], [0.601, [0.847, 0.855, 0.922]], [0.603, [0.841, 0.848, 0.918]], [0.605, [0.841, 0.848, 0.918]], [0.607, [0.835, 0.840, 0.914]], [0.609, [0.835, 0.840, 0.914]], [0.611, [0.830, 0.833, 0.910]], [0.613, [0.830, 0.833, 0.910]], [0.614, [0.824, 0.826, 0.906]], [0.616, [0.824, 0.826, 0.906]], [0.618, [0.818, 0.819, 0.902]], [0.620, [0.818, 0.819, 0.902]], [0.622, [0.812, 0.812, 0.899]], [0.624, [0.812, 0.812, 0.899]], [0.626, [0.806, 0.804, 0.895]], [0.628, [0.806, 0.804, 0.895]], [0.630, [0.800, 0.797, 0.891]], [0.632, [0.800, 0.797, 0.891]], [0.634, [0.794, 0.790, 0.887]], [0.636, [0.794, 0.790, 0.887]], [0.638, [0.789, 0.783, 0.883]], [0.640, [0.789, 0.783, 0.883]], [0.642, [0.783, 0.775, 0.879]], [0.644, [0.783, 0.775, 0.879]], [0.646, [0.777, 0.768, 0.875]], [0.648, [0.777, 0.768, 0.875]], [0.650, [0.771, 0.761, 0.872]], [0.652, [0.771, 0.761, 0.872]], [0.654, [0.765, 0.754, 0.868]], [0.656, [0.765, 0.754, 0.868]], [0.658, [0.759, 0.746, 0.864]], [0.659, [0.759, 0.746, 0.864]], [0.661, [0.754, 0.739, 0.860]], [0.663, [0.754, 0.739, 0.860]], [0.665, [0.748, 0.732, 0.856]], [0.667, [0.748, 0.732, 0.856]], [0.669, [0.742, 0.725, 0.852]], [0.671, [0.742, 0.725, 0.852]], [0.673, [0.736, 0.718, 0.849]], [0.675, [0.736, 0.718, 0.849]], [0.677, [0.730, 0.710, 0.845]], [0.679, [0.730, 0.710, 0.845]], [0.681, [0.724, 0.703, 0.841]], [0.683, [0.724, 0.703, 0.841]], [0.685, [0.718, 0.696, 0.837]], [0.687, [0.718, 0.696, 0.837]], [0.689, [0.713, 0.689, 0.833]], [0.691, [0.713, 0.689, 0.833]], [0.693, [0.707, 0.681, 0.829]], [0.695, [0.707, 0.681, 0.829]], [0.697, [0.701, 0.674, 0.825]], [0.699, [0.701, 0.674, 0.825]], [0.701, [0.694, 0.666, 0.821]], [0.703, [0.694, 0.666, 0.821]], [0.705, [0.687, 0.658, 0.815]], [0.706, [0.687, 0.658, 0.815]], [0.708, [0.679, 0.649, 0.809]], [0.710, [0.679, 0.649, 0.809]], [0.712, [0.671, 0.640, 0.803]], [0.714, [0.671, 0.640, 0.803]], [0.716, [0.663, 0.632, 0.797]], [0.718, [0.663, 0.632, 0.797]], [0.720, [0.656, 0.623, 0.791]], [0.722, [0.656, 0.623, 0.791]], [0.724, [0.648, 0.615, 0.786]], [0.726, [0.648, 0.615, 0.786]], [0.728, [0.640, 0.606, 0.780]], [0.730, [0.640, 0.606, 0.780]], [0.732, [0.633, 0.597, 0.774]], [0.734, [0.633, 0.597, 0.774]], [0.736, [0.625, 0.589, 0.768]], [0.738, [0.625, 0.589, 0.768]], [0.740, [0.617, 0.580, 0.762]], [0.742, [0.617, 0.580, 0.762]], [0.744, [0.610, 0.572, 0.756]], [0.746, [0.610, 0.572, 0.756]], [0.748, [0.602, 0.563, 0.750]], [0.750, [0.602, 0.563, 0.750]], [0.751, [0.594, 0.554, 0.745]], [0.753, [0.594, 0.554, 0.745]], [0.755, [0.587, 0.546, 0.739]], [0.757, [0.587, 0.546, 0.739]], [0.759, [0.579, 0.537, 0.733]], [0.761, [0.579, 0.537, 0.733]], [0.763, [0.571, 0.528, 0.727]], [0.765, [0.571, 0.528, 0.727]], [0.767, [0.563, 0.520, 0.721]], [0.769, [0.563, 0.520, 0.721]], [0.771, [0.556, 0.511, 0.715]], [0.773, [0.556, 0.511, 0.715]], [0.775, [0.548, 0.503, 0.710]], [0.777, [0.548, 0.503, 0.710]], [0.779, [0.540, 0.494, 0.704]], [0.781, [0.540, 0.494, 0.704]], [0.783, [0.533, 0.485, 0.698]], [0.785, [0.533, 0.485, 0.698]], [0.787, [0.525, 0.477, 0.692]], [0.789, [0.525, 0.477, 0.692]], [0.791, [0.517, 0.468, 0.686]], [0.793, [0.517, 0.468, 0.686]], [0.795, [0.510, 0.460, 0.680]], [0.796, [0.510, 0.460, 0.680]], [0.798, [0.502, 0.451, 0.675]], [0.800, [0.502, 0.451, 0.675]], [0.802, [0.495, 0.439, 0.669]], [0.804, [0.495, 0.439, 0.669]], [0.806, [0.488, 0.428, 0.663]], [0.808, [0.488, 0.428, 0.663]], [0.810, [0.482, 0.416, 0.658]], [0.812, [0.482, 0.416, 0.658]], [0.814, [0.475, 0.404, 0.652]], [0.816, [0.475, 0.404, 0.652]], [0.818, [0.468, 0.393, 0.647]], [0.820, [0.468, 0.393, 0.647]], [0.822, [0.461, 0.381, 0.641]], [0.824, [0.461, 0.381, 0.641]], [0.826, [0.455, 0.369, 0.636]], [0.828, [0.455, 0.369, 0.636]], [0.830, [0.448, 0.357, 0.630]], [0.832, [0.448, 0.357, 0.630]], [0.834, [0.441, 0.346, 0.625]], [0.836, [0.441, 0.346, 0.625]], [0.838, [0.434, 0.334, 0.619]], [0.840, [0.434, 0.334, 0.619]], [0.841, [0.428, 0.322, 0.614]], [0.843, [0.428, 0.322, 0.614]], [0.845, [0.421, 0.311, 0.608]], [0.847, [0.421, 0.311, 0.608]], [0.849, [0.414, 0.299, 0.603]], [0.851, [0.414, 0.299, 0.603]], [0.853, [0.407, 0.287, 0.597]], [0.855, [0.407, 0.287, 0.597]], [0.857, [0.400, 0.276, 0.591]], [0.859, [0.400, 0.276, 0.591]], [0.861, [0.394, 0.264, 0.586]], [0.863, [0.394, 0.264, 0.586]], [0.865, [0.387, 0.252, 0.580]], [0.867, [0.387, 0.252, 0.580]], [0.869, [0.380, 0.241, 0.575]], [0.871, [0.380, 0.241, 0.575]], [0.873, [0.373, 0.229, 0.569]], [0.875, [0.373, 0.229, 0.569]], [0.877, [0.367, 0.217, 0.564]], [0.879, [0.367, 0.217, 0.564]], [0.881, [0.360, 0.206, 0.558]], [0.883, [0.360, 0.206, 0.558]], [0.885, [0.353, 0.194, 0.553]], [0.886, [0.353, 0.194, 0.553]], [0.888, [0.346, 0.182, 0.547]], [0.890, [0.346, 0.182, 0.547]], [0.892, [0.340, 0.170, 0.542]], [0.894, [0.340, 0.170, 0.542]], [0.896, [0.333, 0.159, 0.536]], [0.898, [0.333, 0.159, 0.536]], [0.900, [0.326, 0.150, 0.529]], [0.902, [0.326, 0.150, 0.529]], [0.904, [0.320, 0.144, 0.519]], [0.906, [0.320, 0.144, 0.519]], [0.908, [0.314, 0.138, 0.510]], [0.910, [0.314, 0.138, 0.510]], [0.912, [0.308, 0.132, 0.500]], [0.914, [0.308, 0.132, 0.500]], [0.916, [0.302, 0.126, 0.491]], [0.918, [0.302, 0.126, 0.491]], [0.920, [0.296, 0.120, 0.482]], [0.922, [0.296, 0.120, 0.482]], [0.924, [0.290, 0.114, 0.472]], [0.926, [0.290, 0.114, 0.472]], [0.928, [0.284, 0.108, 0.463]], [0.930, [0.284, 0.108, 0.463]], [0.932, [0.278, 0.102, 0.454]], [0.933, [0.278, 0.102, 0.454]], [0.935, [0.272, 0.096, 0.444]], [0.937, [0.272, 0.096, 0.444]], [0.939, [0.266, 0.090, 0.435]], [0.941, [0.266, 0.090, 0.435]], [0.943, [0.260, 0.084, 0.425]], [0.945, [0.260, 0.084, 0.425]], [0.947, [0.254, 0.078, 0.416]], [0.949, [0.254, 0.078, 0.416]], [0.951, [0.248, 0.072, 0.407]], [0.953, [0.248, 0.072, 0.407]], [0.955, [0.242, 0.066, 0.397]], [0.957, [0.242, 0.066, 0.397]], [0.959, [0.236, 0.060, 0.388]], [0.961, [0.236, 0.060, 0.388]], [0.963, [0.230, 0.054, 0.379]], [0.965, [0.230, 0.054, 0.379]], [0.967, [0.224, 0.048, 0.369]], [0.969, [0.224, 0.048, 0.369]], [0.971, [0.218, 0.042, 0.360]], [0.973, [0.218, 0.042, 0.360]], [0.975, [0.212, 0.036, 0.350]], [0.977, [0.212, 0.036, 0.350]], [0.978, [0.206, 0.030, 0.341]], [0.980, [0.206, 0.030, 0.341]], [0.982, [0.200, 0.024, 0.332]], [0.984, [0.200, 0.024, 0.332]], [0.986, [0.194, 0.018, 0.322]], [0.988, [0.194, 0.018, 0.322]], [0.990, [0.188, 0.012, 0.313]], [0.992, [0.188, 0.012, 0.313]], [0.994, [0.182, 0.006, 0.303]], [0.996, [0.182, 0.006, 0.303]], [0.998, [0.176, 0.000, 0.294]], [1.000, [0.176, 0.000, 0.294]]];
H.colormap_PuRd = [[0.000, [0.969, 0.957, 0.976]], [0.002, [0.969, 0.957, 0.976]], [0.004, [0.967, 0.955, 0.975]], [0.006, [0.967, 0.955, 0.975]], [0.008, [0.965, 0.952, 0.974]], [0.010, [0.965, 0.952, 0.974]], [0.012, [0.963, 0.950, 0.973]], [0.014, [0.963, 0.950, 0.973]], [0.016, [0.961, 0.948, 0.972]], [0.018, [0.961, 0.948, 0.972]], [0.020, [0.959, 0.945, 0.970]], [0.022, [0.959, 0.945, 0.970]], [0.023, [0.957, 0.943, 0.969]], [0.025, [0.957, 0.943, 0.969]], [0.027, [0.955, 0.940, 0.968]], [0.029, [0.955, 0.940, 0.968]], [0.031, [0.953, 0.938, 0.967]], [0.033, [0.953, 0.938, 0.967]], [0.035, [0.951, 0.936, 0.965]], [0.037, [0.951, 0.936, 0.965]], [0.039, [0.949, 0.933, 0.964]], [0.041, [0.949, 0.933, 0.964]], [0.043, [0.947, 0.931, 0.963]], [0.045, [0.947, 0.931, 0.963]], [0.047, [0.945, 0.929, 0.962]], [0.049, [0.945, 0.929, 0.962]], [0.051, [0.943, 0.926, 0.960]], [0.053, [0.943, 0.926, 0.960]], [0.055, [0.941, 0.924, 0.959]], [0.057, [0.941, 0.924, 0.959]], [0.059, [0.939, 0.922, 0.958]], [0.061, [0.939, 0.922, 0.958]], [0.063, [0.937, 0.919, 0.957]], [0.065, [0.937, 0.919, 0.957]], [0.067, [0.935, 0.917, 0.956]], [0.068, [0.935, 0.917, 0.956]], [0.070, [0.933, 0.915, 0.954]], [0.072, [0.933, 0.915, 0.954]], [0.074, [0.931, 0.912, 0.953]], [0.076, [0.931, 0.912, 0.953]], [0.078, [0.929, 0.910, 0.952]], [0.080, [0.929, 0.910, 0.952]], [0.082, [0.927, 0.908, 0.951]], [0.084, [0.927, 0.908, 0.951]], [0.086, [0.925, 0.905, 0.949]], [0.088, [0.925, 0.905, 0.949]], [0.090, [0.923, 0.903, 0.948]], [0.092, [0.923, 0.903, 0.948]], [0.094, [0.921, 0.901, 0.947]], [0.096, [0.921, 0.901, 0.947]], [0.098, [0.919, 0.898, 0.946]], [0.100, [0.919, 0.898, 0.946]], [0.102, [0.917, 0.896, 0.944]], [0.104, [0.917, 0.896, 0.944]], [0.106, [0.915, 0.894, 0.943]], [0.108, [0.915, 0.894, 0.943]], [0.110, [0.914, 0.891, 0.942]], [0.112, [0.914, 0.891, 0.942]], [0.114, [0.912, 0.889, 0.941]], [0.115, [0.912, 0.889, 0.941]], [0.117, [0.910, 0.887, 0.940]], [0.119, [0.910, 0.887, 0.940]], [0.121, [0.908, 0.884, 0.938]], [0.123, [0.908, 0.884, 0.938]], [0.125, [0.906, 0.882, 0.937]], [0.127, [0.906, 0.882, 0.937]], [0.129, [0.903, 0.877, 0.934]], [0.131, [0.903, 0.877, 0.934]], [0.133, [0.901, 0.872, 0.932]], [0.135, [0.901, 0.872, 0.932]], [0.137, [0.899, 0.867, 0.929]], [0.139, [0.899, 0.867, 0.929]], [0.141, [0.896, 0.862, 0.927]], [0.143, [0.896, 0.862, 0.927]], [0.145, [0.894, 0.857, 0.924]], [0.147, [0.894, 0.857, 0.924]], [0.149, [0.892, 0.852, 0.921]], [0.151, [0.892, 0.852, 0.921]], [0.153, [0.889, 0.847, 0.919]], [0.155, [0.889, 0.847, 0.919]], [0.157, [0.887, 0.842, 0.916]], [0.159, [0.887, 0.842, 0.916]], [0.160, [0.885, 0.837, 0.914]], [0.162, [0.885, 0.837, 0.914]], [0.164, [0.882, 0.833, 0.911]], [0.166, [0.882, 0.833, 0.911]], [0.168, [0.880, 0.828, 0.909]], [0.170, [0.880, 0.828, 0.909]], [0.172, [0.878, 0.823, 0.906]], [0.174, [0.878, 0.823, 0.906]], [0.176, [0.875, 0.818, 0.903]], [0.178, [0.875, 0.818, 0.903]], [0.180, [0.873, 0.813, 0.901]], [0.182, [0.873, 0.813, 0.901]], [0.184, [0.871, 0.808, 0.898]], [0.186, [0.871, 0.808, 0.898]], [0.188, [0.868, 0.803, 0.896]], [0.190, [0.868, 0.803, 0.896]], [0.192, [0.866, 0.798, 0.893]], [0.194, [0.866, 0.798, 0.893]], [0.196, [0.864, 0.793, 0.890]], [0.198, [0.864, 0.793, 0.890]], [0.200, [0.861, 0.788, 0.888]], [0.202, [0.861, 0.788, 0.888]], [0.204, [0.859, 0.783, 0.885]], [0.205, [0.859, 0.783, 0.885]], [0.207, [0.857, 0.778, 0.883]], [0.209, [0.857, 0.778, 0.883]], [0.211, [0.854, 0.773, 0.880]], [0.213, [0.854, 0.773, 0.880]], [0.215, [0.852, 0.769, 0.878]], [0.217, [0.852, 0.769, 0.878]], [0.219, [0.849, 0.764, 0.875]], [0.221, [0.849, 0.764, 0.875]], [0.223, [0.847, 0.759, 0.872]], [0.225, [0.847, 0.759, 0.872]], [0.227, [0.845, 0.754, 0.870]], [0.229, [0.845, 0.754, 0.870]], [0.231, [0.842, 0.749, 0.867]], [0.233, [0.842, 0.749, 0.867]], [0.235, [0.840, 0.744, 0.865]], [0.237, [0.840, 0.744, 0.865]], [0.239, [0.838, 0.739, 0.862]], [0.241, [0.838, 0.739, 0.862]], [0.243, [0.835, 0.734, 0.859]], [0.245, [0.835, 0.734, 0.859]], [0.247, [0.833, 0.729, 0.857]], [0.249, [0.833, 0.729, 0.857]], [0.250, [0.831, 0.724, 0.854]], [0.252, [0.831, 0.724, 0.854]], [0.254, [0.830, 0.720, 0.852]], [0.256, [0.830, 0.720, 0.852]], [0.258, [0.828, 0.715, 0.850]], [0.260, [0.828, 0.715, 0.850]], [0.262, [0.827, 0.711, 0.847]], [0.264, [0.827, 0.711, 0.847]], [0.266, [0.826, 0.706, 0.845]], [0.268, [0.826, 0.706, 0.845]], [0.270, [0.824, 0.702, 0.843]], [0.272, [0.824, 0.702, 0.843]], [0.274, [0.823, 0.697, 0.840]], [0.276, [0.823, 0.697, 0.840]], [0.278, [0.822, 0.692, 0.838]], [0.280, [0.822, 0.692, 0.838]], [0.282, [0.820, 0.688, 0.836]], [0.284, [0.820, 0.688, 0.836]], [0.286, [0.819, 0.683, 0.833]], [0.288, [0.819, 0.683, 0.833]], [0.290, [0.818, 0.679, 0.831]], [0.292, [0.818, 0.679, 0.831]], [0.294, [0.816, 0.674, 0.829]], [0.295, [0.816, 0.674, 0.829]], [0.297, [0.815, 0.670, 0.826]], [0.299, [0.815, 0.670, 0.826]], [0.301, [0.813, 0.665, 0.824]], [0.303, [0.813, 0.665, 0.824]], [0.305, [0.812, 0.661, 0.822]], [0.307, [0.812, 0.661, 0.822]], [0.309, [0.811, 0.656, 0.819]], [0.311, [0.811, 0.656, 0.819]], [0.313, [0.809, 0.652, 0.817]], [0.315, [0.809, 0.652, 0.817]], [0.317, [0.808, 0.647, 0.815]], [0.319, [0.808, 0.647, 0.815]], [0.321, [0.807, 0.642, 0.812]], [0.323, [0.807, 0.642, 0.812]], [0.325, [0.805, 0.638, 0.810]], [0.327, [0.805, 0.638, 0.810]], [0.329, [0.804, 0.633, 0.808]], [0.331, [0.804, 0.633, 0.808]], [0.333, [0.803, 0.629, 0.805]], [0.335, [0.803, 0.629, 0.805]], [0.337, [0.801, 0.624, 0.803]], [0.339, [0.801, 0.624, 0.803]], [0.341, [0.800, 0.620, 0.801]], [0.342, [0.800, 0.620, 0.801]], [0.344, [0.799, 0.615, 0.798]], [0.346, [0.799, 0.615, 0.798]], [0.348, [0.797, 0.611, 0.796]], [0.350, [0.797, 0.611, 0.796]], [0.352, [0.796, 0.606, 0.794]], [0.354, [0.796, 0.606, 0.794]], [0.356, [0.794, 0.601, 0.791]], [0.358, [0.794, 0.601, 0.791]], [0.360, [0.793, 0.597, 0.789]], [0.362, [0.793, 0.597, 0.789]], [0.364, [0.792, 0.592, 0.787]], [0.366, [0.792, 0.592, 0.787]], [0.368, [0.790, 0.588, 0.784]], [0.370, [0.790, 0.588, 0.784]], [0.372, [0.789, 0.583, 0.782]], [0.374, [0.789, 0.583, 0.782]], [0.376, [0.789, 0.578, 0.779]], [0.378, [0.789, 0.578, 0.779]], [0.380, [0.792, 0.572, 0.777]], [0.382, [0.792, 0.572, 0.777]], [0.384, [0.795, 0.567, 0.774]], [0.386, [0.795, 0.567, 0.774]], [0.387, [0.797, 0.561, 0.771]], [0.389, [0.797, 0.561, 0.771]], [0.391, [0.800, 0.555, 0.768]], [0.393, [0.800, 0.555, 0.768]], [0.395, [0.803, 0.549, 0.765]], [0.397, [0.803, 0.549, 0.765]], [0.399, [0.805, 0.544, 0.762]], [0.401, [0.805, 0.544, 0.762]], [0.403, [0.808, 0.538, 0.760]], [0.405, [0.808, 0.538, 0.760]], [0.407, [0.811, 0.532, 0.757]], [0.409, [0.811, 0.532, 0.757]], [0.411, [0.814, 0.526, 0.754]], [0.413, [0.814, 0.526, 0.754]], [0.415, [0.816, 0.520, 0.751]], [0.417, [0.816, 0.520, 0.751]], [0.419, [0.819, 0.515, 0.748]], [0.421, [0.819, 0.515, 0.748]], [0.423, [0.822, 0.509, 0.745]], [0.425, [0.822, 0.509, 0.745]], [0.427, [0.824, 0.503, 0.743]], [0.429, [0.824, 0.503, 0.743]], [0.431, [0.827, 0.497, 0.740]], [0.432, [0.827, 0.497, 0.740]], [0.434, [0.830, 0.491, 0.737]], [0.436, [0.830, 0.491, 0.737]], [0.438, [0.833, 0.486, 0.734]], [0.440, [0.833, 0.486, 0.734]], [0.442, [0.835, 0.480, 0.731]], [0.444, [0.835, 0.480, 0.731]], [0.446, [0.838, 0.474, 0.728]], [0.448, [0.838, 0.474, 0.728]], [0.450, [0.841, 0.468, 0.726]], [0.452, [0.841, 0.468, 0.726]], [0.454, [0.843, 0.463, 0.723]], [0.456, [0.843, 0.463, 0.723]], [0.458, [0.846, 0.457, 0.720]], [0.460, [0.846, 0.457, 0.720]], [0.462, [0.849, 0.451, 0.717]], [0.464, [0.849, 0.451, 0.717]], [0.466, [0.852, 0.445, 0.714]], [0.468, [0.852, 0.445, 0.714]], [0.470, [0.854, 0.439, 0.711]], [0.472, [0.854, 0.439, 0.711]], [0.474, [0.857, 0.434, 0.709]], [0.476, [0.857, 0.434, 0.709]], [0.477, [0.860, 0.428, 0.706]], [0.479, [0.860, 0.428, 0.706]], [0.481, [0.862, 0.422, 0.703]], [0.483, [0.862, 0.422, 0.703]], [0.485, [0.865, 0.416, 0.700]], [0.487, [0.865, 0.416, 0.700]], [0.489, [0.868, 0.411, 0.697]], [0.491, [0.868, 0.411, 0.697]], [0.493, [0.870, 0.405, 0.694]], [0.495, [0.870, 0.405, 0.694]], [0.497, [0.873, 0.399, 0.692]], [0.499, [0.873, 0.399, 0.692]], [0.501, [0.875, 0.392, 0.688]], [0.503, [0.875, 0.392, 0.688]], [0.505, [0.876, 0.385, 0.683]], [0.507, [0.876, 0.385, 0.683]], [0.509, [0.877, 0.378, 0.679]], [0.511, [0.877, 0.378, 0.679]], [0.513, [0.878, 0.370, 0.674]], [0.515, [0.878, 0.370, 0.674]], [0.517, [0.879, 0.363, 0.669]], [0.519, [0.879, 0.363, 0.669]], [0.521, [0.880, 0.355, 0.664]], [0.523, [0.880, 0.355, 0.664]], [0.524, [0.881, 0.348, 0.660]], [0.526, [0.881, 0.348, 0.660]], [0.528, [0.882, 0.341, 0.655]], [0.530, [0.882, 0.341, 0.655]], [0.532, [0.883, 0.333, 0.650]], [0.534, [0.883, 0.333, 0.650]], [0.536, [0.884, 0.326, 0.646]], [0.538, [0.884, 0.326, 0.646]], [0.540, [0.885, 0.319, 0.641]], [0.542, [0.885, 0.319, 0.641]], [0.544, [0.886, 0.311, 0.636]], [0.546, [0.886, 0.311, 0.636]], [0.548, [0.887, 0.304, 0.632]], [0.550, [0.887, 0.304, 0.632]], [0.552, [0.888, 0.296, 0.627]], [0.554, [0.888, 0.296, 0.627]], [0.556, [0.889, 0.289, 0.622]], [0.558, [0.889, 0.289, 0.622]], [0.560, [0.890, 0.282, 0.618]], [0.562, [0.890, 0.282, 0.618]], [0.564, [0.891, 0.274, 0.613]], [0.566, [0.891, 0.274, 0.613]], [0.568, [0.892, 0.267, 0.608]], [0.569, [0.892, 0.267, 0.608]], [0.571, [0.893, 0.260, 0.604]], [0.573, [0.893, 0.260, 0.604]], [0.575, [0.894, 0.252, 0.599]], [0.577, [0.894, 0.252, 0.599]], [0.579, [0.895, 0.245, 0.594]], [0.581, [0.895, 0.245, 0.594]], [0.583, [0.896, 0.237, 0.590]], [0.585, [0.896, 0.237, 0.590]], [0.587, [0.897, 0.230, 0.585]], [0.589, [0.897, 0.230, 0.585]], [0.591, [0.898, 0.223, 0.580]], [0.593, [0.898, 0.223, 0.580]], [0.595, [0.899, 0.215, 0.576]], [0.597, [0.899, 0.215, 0.576]], [0.599, [0.900, 0.208, 0.571]], [0.601, [0.900, 0.208, 0.571]], [0.603, [0.901, 0.200, 0.566]], [0.605, [0.901, 0.200, 0.566]], [0.607, [0.902, 0.193, 0.562]], [0.609, [0.902, 0.193, 0.562]], [0.611, [0.903, 0.186, 0.557]], [0.613, [0.903, 0.186, 0.557]], [0.614, [0.904, 0.178, 0.552]], [0.616, [0.904, 0.178, 0.552]], [0.618, [0.905, 0.171, 0.548]], [0.620, [0.905, 0.171, 0.548]], [0.622, [0.906, 0.164, 0.543]], [0.624, [0.906, 0.164, 0.543]], [0.626, [0.904, 0.159, 0.537]], [0.628, [0.904, 0.159, 0.537]], [0.630, [0.901, 0.156, 0.531]], [0.632, [0.901, 0.156, 0.531]], [0.634, [0.898, 0.153, 0.524]], [0.636, [0.898, 0.153, 0.524]], [0.638, [0.895, 0.151, 0.518]], [0.640, [0.895, 0.151, 0.518]], [0.642, [0.892, 0.148, 0.512]], [0.644, [0.892, 0.148, 0.512]], [0.646, [0.889, 0.145, 0.505]], [0.648, [0.889, 0.145, 0.505]], [0.650, [0.886, 0.142, 0.499]], [0.652, [0.886, 0.142, 0.499]], [0.654, [0.882, 0.139, 0.492]], [0.656, [0.882, 0.139, 0.492]], [0.658, [0.879, 0.136, 0.486]], [0.659, [0.879, 0.136, 0.486]], [0.661, [0.876, 0.134, 0.480]], [0.663, [0.876, 0.134, 0.480]], [0.665, [0.873, 0.131, 0.473]], [0.667, [0.873, 0.131, 0.473]], [0.669, [0.870, 0.128, 0.467]], [0.671, [0.870, 0.128, 0.467]], [0.673, [0.867, 0.125, 0.460]], [0.675, [0.867, 0.125, 0.460]], [0.677, [0.864, 0.122, 0.454]], [0.679, [0.864, 0.122, 0.454]], [0.681, [0.861, 0.119, 0.448]], [0.683, [0.861, 0.119, 0.448]], [0.685, [0.858, 0.117, 0.441]], [0.687, [0.858, 0.117, 0.441]], [0.689, [0.855, 0.114, 0.435]], [0.691, [0.855, 0.114, 0.435]], [0.693, [0.852, 0.111, 0.428]], [0.695, [0.852, 0.111, 0.428]], [0.697, [0.849, 0.108, 0.422]], [0.699, [0.849, 0.108, 0.422]], [0.701, [0.846, 0.105, 0.416]], [0.703, [0.846, 0.105, 0.416]], [0.705, [0.842, 0.102, 0.409]], [0.706, [0.842, 0.102, 0.409]], [0.708, [0.839, 0.100, 0.403]], [0.710, [0.839, 0.100, 0.403]], [0.712, [0.836, 0.097, 0.396]], [0.714, [0.836, 0.097, 0.396]], [0.716, [0.833, 0.094, 0.390]], [0.718, [0.833, 0.094, 0.390]], [0.720, [0.830, 0.091, 0.384]], [0.722, [0.830, 0.091, 0.384]], [0.724, [0.827, 0.088, 0.377]], [0.726, [0.827, 0.088, 0.377]], [0.728, [0.824, 0.085, 0.371]], [0.730, [0.824, 0.085, 0.371]], [0.732, [0.821, 0.083, 0.364]], [0.734, [0.821, 0.083, 0.364]], [0.736, [0.818, 0.080, 0.358]], [0.738, [0.818, 0.080, 0.358]], [0.740, [0.815, 0.077, 0.352]], [0.742, [0.815, 0.077, 0.352]], [0.744, [0.812, 0.074, 0.345]], [0.746, [0.812, 0.074, 0.345]], [0.748, [0.809, 0.071, 0.339]], [0.750, [0.809, 0.071, 0.339]], [0.751, [0.803, 0.069, 0.336]], [0.753, [0.803, 0.069, 0.336]], [0.755, [0.796, 0.067, 0.333]], [0.757, [0.796, 0.067, 0.333]], [0.759, [0.790, 0.064, 0.331]], [0.761, [0.790, 0.064, 0.331]], [0.763, [0.783, 0.062, 0.328]], [0.765, [0.783, 0.062, 0.328]], [0.767, [0.776, 0.060, 0.326]], [0.769, [0.776, 0.060, 0.326]], [0.771, [0.770, 0.058, 0.324]], [0.773, [0.770, 0.058, 0.324]], [0.775, [0.763, 0.056, 0.321]], [0.777, [0.763, 0.056, 0.321]], [0.779, [0.756, 0.053, 0.319]], [0.781, [0.756, 0.053, 0.319]], [0.783, [0.750, 0.051, 0.317]], [0.785, [0.750, 0.051, 0.317]], [0.787, [0.743, 0.049, 0.314]], [0.789, [0.743, 0.049, 0.314]], [0.791, [0.736, 0.047, 0.312]], [0.793, [0.736, 0.047, 0.312]], [0.795, [0.730, 0.045, 0.310]], [0.796, [0.730, 0.045, 0.310]], [0.798, [0.723, 0.042, 0.307]], [0.800, [0.723, 0.042, 0.307]], [0.802, [0.716, 0.040, 0.305]], [0.804, [0.716, 0.040, 0.305]], [0.806, [0.710, 0.038, 0.303]], [0.808, [0.710, 0.038, 0.303]], [0.810, [0.703, 0.036, 0.300]], [0.812, [0.703, 0.036, 0.300]], [0.814, [0.697, 0.033, 0.298]], [0.816, [0.697, 0.033, 0.298]], [0.818, [0.690, 0.031, 0.296]], [0.820, [0.690, 0.031, 0.296]], [0.822, [0.683, 0.029, 0.293]], [0.824, [0.683, 0.029, 0.293]], [0.826, [0.677, 0.027, 0.291]], [0.828, [0.677, 0.027, 0.291]], [0.830, [0.670, 0.025, 0.289]], [0.832, [0.670, 0.025, 0.289]], [0.834, [0.663, 0.022, 0.286]], [0.836, [0.663, 0.022, 0.286]], [0.838, [0.657, 0.020, 0.284]], [0.840, [0.657, 0.020, 0.284]], [0.841, [0.650, 0.018, 0.282]], [0.843, [0.650, 0.018, 0.282]], [0.845, [0.643, 0.016, 0.279]], [0.847, [0.643, 0.016, 0.279]], [0.849, [0.637, 0.014, 0.277]], [0.851, [0.637, 0.014, 0.277]], [0.853, [0.630, 0.011, 0.275]], [0.855, [0.630, 0.011, 0.275]], [0.857, [0.623, 0.009, 0.272]], [0.859, [0.623, 0.009, 0.272]], [0.861, [0.617, 0.007, 0.270]], [0.863, [0.617, 0.007, 0.270]], [0.865, [0.610, 0.005, 0.268]], [0.867, [0.610, 0.005, 0.268]], [0.869, [0.604, 0.002, 0.265]], [0.871, [0.604, 0.002, 0.265]], [0.873, [0.597, 0.000, 0.263]], [0.875, [0.597, 0.000, 0.263]], [0.877, [0.591, 0.000, 0.259]], [0.879, [0.591, 0.000, 0.259]], [0.881, [0.585, 0.000, 0.254]], [0.883, [0.585, 0.000, 0.254]], [0.885, [0.579, 0.000, 0.250]], [0.886, [0.579, 0.000, 0.250]], [0.888, [0.573, 0.000, 0.246]], [0.890, [0.573, 0.000, 0.246]], [0.892, [0.567, 0.000, 0.241]], [0.894, [0.567, 0.000, 0.241]], [0.896, [0.561, 0.000, 0.237]], [0.898, [0.561, 0.000, 0.237]], [0.900, [0.555, 0.000, 0.232]], [0.902, [0.555, 0.000, 0.232]], [0.904, [0.549, 0.000, 0.228]], [0.906, [0.549, 0.000, 0.228]], [0.908, [0.543, 0.000, 0.223]], [0.910, [0.543, 0.000, 0.223]], [0.912, [0.537, 0.000, 0.219]], [0.914, [0.537, 0.000, 0.219]], [0.916, [0.531, 0.000, 0.215]], [0.918, [0.531, 0.000, 0.215]], [0.920, [0.524, 0.000, 0.210]], [0.922, [0.524, 0.000, 0.210]], [0.924, [0.518, 0.000, 0.206]], [0.926, [0.518, 0.000, 0.206]], [0.928, [0.512, 0.000, 0.201]], [0.930, [0.512, 0.000, 0.201]], [0.932, [0.506, 0.000, 0.197]], [0.933, [0.506, 0.000, 0.197]], [0.935, [0.500, 0.000, 0.192]], [0.937, [0.500, 0.000, 0.192]], [0.939, [0.494, 0.000, 0.188]], [0.941, [0.494, 0.000, 0.188]], [0.943, [0.488, 0.000, 0.184]], [0.945, [0.488, 0.000, 0.184]], [0.947, [0.482, 0.000, 0.179]], [0.949, [0.482, 0.000, 0.179]], [0.951, [0.476, 0.000, 0.175]], [0.953, [0.476, 0.000, 0.175]], [0.955, [0.470, 0.000, 0.170]], [0.957, [0.470, 0.000, 0.170]], [0.959, [0.464, 0.000, 0.166]], [0.961, [0.464, 0.000, 0.166]], [0.963, [0.458, 0.000, 0.161]], [0.965, [0.458, 0.000, 0.161]], [0.967, [0.452, 0.000, 0.157]], [0.969, [0.452, 0.000, 0.157]], [0.971, [0.446, 0.000, 0.153]], [0.973, [0.446, 0.000, 0.153]], [0.975, [0.440, 0.000, 0.148]], [0.977, [0.440, 0.000, 0.148]], [0.978, [0.434, 0.000, 0.144]], [0.980, [0.434, 0.000, 0.144]], [0.982, [0.428, 0.000, 0.139]], [0.984, [0.428, 0.000, 0.139]], [0.986, [0.422, 0.000, 0.135]], [0.988, [0.422, 0.000, 0.135]], [0.990, [0.416, 0.000, 0.130]], [0.992, [0.416, 0.000, 0.130]], [0.994, [0.410, 0.000, 0.126]], [0.996, [0.410, 0.000, 0.126]], [0.998, [0.404, 0.000, 0.122]], [1.000, [0.404, 0.000, 0.122]]];
H.colormap_Purples = [[0.000, [0.988, 0.984, 0.992]], [0.002, [0.988, 0.984, 0.992]], [0.004, [0.987, 0.983, 0.991]], [0.006, [0.987, 0.983, 0.991]], [0.008, [0.985, 0.981, 0.990]], [0.010, [0.985, 0.981, 0.990]], [0.012, [0.983, 0.979, 0.989]], [0.014, [0.983, 0.979, 0.989]], [0.016, [0.982, 0.977, 0.988]], [0.018, [0.982, 0.977, 0.988]], [0.020, [0.980, 0.976, 0.987]], [0.022, [0.980, 0.976, 0.987]], [0.023, [0.979, 0.974, 0.986]], [0.025, [0.979, 0.974, 0.986]], [0.027, [0.977, 0.972, 0.985]], [0.029, [0.977, 0.972, 0.985]], [0.031, [0.975, 0.971, 0.984]], [0.033, [0.975, 0.971, 0.984]], [0.035, [0.974, 0.969, 0.983]], [0.037, [0.974, 0.969, 0.983]], [0.039, [0.972, 0.967, 0.982]], [0.041, [0.972, 0.967, 0.982]], [0.043, [0.971, 0.965, 0.981]], [0.045, [0.971, 0.965, 0.981]], [0.047, [0.969, 0.964, 0.980]], [0.049, [0.969, 0.964, 0.980]], [0.051, [0.967, 0.962, 0.979]], [0.053, [0.967, 0.962, 0.979]], [0.055, [0.966, 0.960, 0.978]], [0.057, [0.966, 0.960, 0.978]], [0.059, [0.964, 0.958, 0.977]], [0.061, [0.964, 0.958, 0.977]], [0.063, [0.963, 0.957, 0.976]], [0.065, [0.963, 0.957, 0.976]], [0.067, [0.961, 0.955, 0.975]], [0.068, [0.961, 0.955, 0.975]], [0.070, [0.959, 0.953, 0.974]], [0.072, [0.959, 0.953, 0.974]], [0.074, [0.958, 0.952, 0.973]], [0.076, [0.958, 0.952, 0.973]], [0.078, [0.956, 0.950, 0.972]], [0.080, [0.956, 0.950, 0.972]], [0.082, [0.955, 0.948, 0.971]], [0.084, [0.955, 0.948, 0.971]], [0.086, [0.953, 0.946, 0.971]], [0.088, [0.953, 0.946, 0.971]], [0.090, [0.951, 0.945, 0.970]], [0.092, [0.951, 0.945, 0.970]], [0.094, [0.950, 0.943, 0.969]], [0.096, [0.950, 0.943, 0.969]], [0.098, [0.948, 0.941, 0.968]], [0.100, [0.948, 0.941, 0.968]], [0.102, [0.947, 0.940, 0.967]], [0.104, [0.947, 0.940, 0.967]], [0.106, [0.945, 0.938, 0.966]], [0.108, [0.945, 0.938, 0.966]], [0.110, [0.943, 0.936, 0.965]], [0.112, [0.943, 0.936, 0.965]], [0.114, [0.942, 0.934, 0.964]], [0.115, [0.942, 0.934, 0.964]], [0.117, [0.940, 0.933, 0.963]], [0.119, [0.940, 0.933, 0.963]], [0.121, [0.939, 0.931, 0.962]], [0.123, [0.939, 0.931, 0.962]], [0.125, [0.937, 0.929, 0.961]], [0.127, [0.937, 0.929, 0.961]], [0.129, [0.934, 0.927, 0.959]], [0.131, [0.934, 0.927, 0.959]], [0.133, [0.932, 0.924, 0.958]], [0.135, [0.932, 0.924, 0.958]], [0.137, [0.929, 0.922, 0.957]], [0.139, [0.929, 0.922, 0.957]], [0.141, [0.927, 0.920, 0.956]], [0.143, [0.927, 0.920, 0.956]], [0.145, [0.924, 0.917, 0.954]], [0.147, [0.924, 0.917, 0.954]], [0.149, [0.921, 0.915, 0.953]], [0.151, [0.921, 0.915, 0.953]], [0.153, [0.919, 0.913, 0.952]], [0.155, [0.919, 0.913, 0.952]], [0.157, [0.916, 0.910, 0.951]], [0.159, [0.916, 0.910, 0.951]], [0.160, [0.914, 0.908, 0.950]], [0.162, [0.914, 0.908, 0.950]], [0.164, [0.911, 0.906, 0.948]], [0.166, [0.911, 0.906, 0.948]], [0.168, [0.909, 0.903, 0.947]], [0.170, [0.909, 0.903, 0.947]], [0.172, [0.906, 0.901, 0.946]], [0.174, [0.906, 0.901, 0.946]], [0.176, [0.903, 0.899, 0.945]], [0.178, [0.903, 0.899, 0.945]], [0.180, [0.901, 0.896, 0.943]], [0.182, [0.901, 0.896, 0.943]], [0.184, [0.898, 0.894, 0.942]], [0.186, [0.898, 0.894, 0.942]], [0.188, [0.896, 0.892, 0.941]], [0.190, [0.896, 0.892, 0.941]], [0.192, [0.893, 0.889, 0.940]], [0.194, [0.893, 0.889, 0.940]], [0.196, [0.890, 0.887, 0.938]], [0.198, [0.890, 0.887, 0.938]], [0.200, [0.888, 0.885, 0.937]], [0.202, [0.888, 0.885, 0.937]], [0.204, [0.885, 0.882, 0.936]], [0.205, [0.885, 0.882, 0.936]], [0.207, [0.883, 0.880, 0.935]], [0.209, [0.883, 0.880, 0.935]], [0.211, [0.880, 0.878, 0.934]], [0.213, [0.880, 0.878, 0.934]], [0.215, [0.878, 0.875, 0.932]], [0.217, [0.878, 0.875, 0.932]], [0.219, [0.875, 0.873, 0.931]], [0.221, [0.875, 0.873, 0.931]], [0.223, [0.872, 0.871, 0.930]], [0.225, [0.872, 0.871, 0.930]], [0.227, [0.870, 0.868, 0.929]], [0.229, [0.870, 0.868, 0.929]], [0.231, [0.867, 0.866, 0.927]], [0.233, [0.867, 0.866, 0.927]], [0.235, [0.865, 0.864, 0.926]], [0.237, [0.865, 0.864, 0.926]], [0.239, [0.862, 0.861, 0.925]], [0.241, [0.862, 0.861, 0.925]], [0.243, [0.859, 0.859, 0.924]], [0.245, [0.859, 0.859, 0.924]], [0.247, [0.857, 0.857, 0.922]], [0.249, [0.857, 0.857, 0.922]], [0.250, [0.854, 0.854, 0.921]], [0.252, [0.854, 0.854, 0.921]], [0.254, [0.850, 0.850, 0.919]], [0.256, [0.850, 0.850, 0.919]], [0.258, [0.847, 0.847, 0.917]], [0.260, [0.847, 0.847, 0.917]], [0.262, [0.843, 0.843, 0.916]], [0.264, [0.843, 0.843, 0.916]], [0.266, [0.839, 0.840, 0.914]], [0.268, [0.839, 0.840, 0.914]], [0.270, [0.836, 0.836, 0.912]], [0.272, [0.836, 0.836, 0.912]], [0.274, [0.832, 0.833, 0.910]], [0.276, [0.832, 0.833, 0.910]], [0.278, [0.828, 0.829, 0.908]], [0.280, [0.828, 0.829, 0.908]], [0.282, [0.824, 0.825, 0.906]], [0.284, [0.824, 0.825, 0.906]], [0.286, [0.821, 0.822, 0.904]], [0.288, [0.821, 0.822, 0.904]], [0.290, [0.817, 0.818, 0.903]], [0.292, [0.817, 0.818, 0.903]], [0.294, [0.813, 0.815, 0.901]], [0.295, [0.813, 0.815, 0.901]], [0.297, [0.810, 0.811, 0.899]], [0.299, [0.810, 0.811, 0.899]], [0.301, [0.806, 0.808, 0.897]], [0.303, [0.806, 0.808, 0.897]], [0.305, [0.802, 0.804, 0.895]], [0.307, [0.802, 0.804, 0.895]], [0.309, [0.799, 0.800, 0.893]], [0.311, [0.799, 0.800, 0.893]], [0.313, [0.795, 0.797, 0.892]], [0.315, [0.795, 0.797, 0.892]], [0.317, [0.791, 0.793, 0.890]], [0.319, [0.791, 0.793, 0.890]], [0.321, [0.788, 0.790, 0.888]], [0.323, [0.788, 0.790, 0.888]], [0.325, [0.784, 0.786, 0.886]], [0.327, [0.784, 0.786, 0.886]], [0.329, [0.780, 0.783, 0.884]], [0.331, [0.780, 0.783, 0.884]], [0.333, [0.776, 0.779, 0.882]], [0.335, [0.776, 0.779, 0.882]], [0.337, [0.773, 0.776, 0.881]], [0.339, [0.773, 0.776, 0.881]], [0.341, [0.769, 0.772, 0.879]], [0.342, [0.769, 0.772, 0.879]], [0.344, [0.765, 0.768, 0.877]], [0.346, [0.765, 0.768, 0.877]], [0.348, [0.762, 0.765, 0.875]], [0.350, [0.762, 0.765, 0.875]], [0.352, [0.758, 0.761, 0.873]], [0.354, [0.758, 0.761, 0.873]], [0.356, [0.754, 0.758, 0.871]], [0.358, [0.754, 0.758, 0.871]], [0.360, [0.751, 0.754, 0.869]], [0.362, [0.751, 0.754, 0.869]], [0.364, [0.747, 0.751, 0.868]], [0.366, [0.747, 0.751, 0.868]], [0.368, [0.743, 0.747, 0.866]], [0.370, [0.743, 0.747, 0.866]], [0.372, [0.740, 0.743, 0.864]], [0.374, [0.740, 0.743, 0.864]], [0.376, [0.736, 0.740, 0.862]], [0.378, [0.736, 0.740, 0.862]], [0.380, [0.732, 0.735, 0.859]], [0.382, [0.732, 0.735, 0.859]], [0.384, [0.728, 0.731, 0.857]], [0.386, [0.728, 0.731, 0.857]], [0.387, [0.725, 0.727, 0.854]], [0.389, [0.725, 0.727, 0.854]], [0.391, [0.721, 0.722, 0.852]], [0.393, [0.721, 0.722, 0.852]], [0.395, [0.717, 0.718, 0.850]], [0.397, [0.717, 0.718, 0.850]], [0.399, [0.714, 0.714, 0.847]], [0.401, [0.714, 0.714, 0.847]], [0.403, [0.710, 0.709, 0.845]], [0.405, [0.710, 0.709, 0.845]], [0.407, [0.706, 0.705, 0.842]], [0.409, [0.706, 0.705, 0.842]], [0.411, [0.703, 0.701, 0.840]], [0.413, [0.703, 0.701, 0.840]], [0.415, [0.699, 0.697, 0.837]], [0.417, [0.699, 0.697, 0.837]], [0.419, [0.695, 0.692, 0.835]], [0.421, [0.695, 0.692, 0.835]], [0.423, [0.692, 0.688, 0.832]], [0.425, [0.692, 0.688, 0.832]], [0.427, [0.688, 0.684, 0.830]], [0.429, [0.688, 0.684, 0.830]], [0.431, [0.684, 0.679, 0.827]], [0.432, [0.684, 0.679, 0.827]], [0.434, [0.681, 0.675, 0.825]], [0.436, [0.681, 0.675, 0.825]], [0.438, [0.677, 0.671, 0.822]], [0.440, [0.677, 0.671, 0.822]], [0.442, [0.673, 0.666, 0.820]], [0.444, [0.673, 0.666, 0.820]], [0.446, [0.669, 0.662, 0.818]], [0.448, [0.669, 0.662, 0.818]], [0.450, [0.666, 0.658, 0.815]], [0.452, [0.666, 0.658, 0.815]], [0.454, [0.662, 0.653, 0.813]], [0.456, [0.662, 0.653, 0.813]], [0.458, [0.658, 0.649, 0.810]], [0.460, [0.658, 0.649, 0.810]], [0.462, [0.655, 0.645, 0.808]], [0.464, [0.655, 0.645, 0.808]], [0.466, [0.651, 0.641, 0.805]], [0.468, [0.651, 0.641, 0.805]], [0.470, [0.647, 0.636, 0.803]], [0.472, [0.647, 0.636, 0.803]], [0.474, [0.644, 0.632, 0.800]], [0.476, [0.644, 0.632, 0.800]], [0.477, [0.640, 0.628, 0.798]], [0.479, [0.640, 0.628, 0.798]], [0.481, [0.636, 0.623, 0.795]], [0.483, [0.636, 0.623, 0.795]], [0.485, [0.633, 0.619, 0.793]], [0.487, [0.633, 0.619, 0.793]], [0.489, [0.629, 0.615, 0.790]], [0.491, [0.629, 0.615, 0.790]], [0.493, [0.625, 0.610, 0.788]], [0.495, [0.625, 0.610, 0.788]], [0.497, [0.621, 0.606, 0.786]], [0.499, [0.621, 0.606, 0.786]], [0.501, [0.618, 0.602, 0.783]], [0.503, [0.618, 0.602, 0.783]], [0.505, [0.614, 0.599, 0.782]], [0.507, [0.614, 0.599, 0.782]], [0.509, [0.610, 0.595, 0.780]], [0.511, [0.610, 0.595, 0.780]], [0.513, [0.607, 0.591, 0.778]], [0.515, [0.607, 0.591, 0.778]], [0.517, [0.603, 0.588, 0.777]], [0.519, [0.603, 0.588, 0.777]], [0.521, [0.599, 0.584, 0.775]], [0.523, [0.599, 0.584, 0.775]], [0.524, [0.596, 0.581, 0.773]], [0.526, [0.596, 0.581, 0.773]], [0.528, [0.592, 0.577, 0.771]], [0.530, [0.592, 0.577, 0.771]], [0.532, [0.588, 0.574, 0.770]], [0.534, [0.588, 0.574, 0.770]], [0.536, [0.585, 0.570, 0.768]], [0.538, [0.585, 0.570, 0.768]], [0.540, [0.581, 0.566, 0.766]], [0.542, [0.581, 0.566, 0.766]], [0.544, [0.577, 0.563, 0.765]], [0.546, [0.577, 0.563, 0.765]], [0.548, [0.573, 0.559, 0.763]], [0.550, [0.573, 0.559, 0.763]], [0.552, [0.570, 0.556, 0.761]], [0.554, [0.570, 0.556, 0.761]], [0.556, [0.566, 0.552, 0.759]], [0.558, [0.566, 0.552, 0.759]], [0.560, [0.562, 0.549, 0.758]], [0.562, [0.562, 0.549, 0.758]], [0.564, [0.559, 0.545, 0.756]], [0.566, [0.559, 0.545, 0.756]], [0.568, [0.555, 0.541, 0.754]], [0.569, [0.555, 0.541, 0.754]], [0.571, [0.551, 0.538, 0.752]], [0.573, [0.551, 0.538, 0.752]], [0.575, [0.548, 0.534, 0.751]], [0.577, [0.548, 0.534, 0.751]], [0.579, [0.544, 0.531, 0.749]], [0.581, [0.544, 0.531, 0.749]], [0.583, [0.540, 0.527, 0.747]], [0.585, [0.540, 0.527, 0.747]], [0.587, [0.537, 0.524, 0.746]], [0.589, [0.537, 0.524, 0.746]], [0.591, [0.533, 0.520, 0.744]], [0.593, [0.533, 0.520, 0.744]], [0.595, [0.529, 0.517, 0.742]], [0.597, [0.529, 0.517, 0.742]], [0.599, [0.525, 0.513, 0.740]], [0.601, [0.525, 0.513, 0.740]], [0.603, [0.522, 0.509, 0.739]], [0.605, [0.522, 0.509, 0.739]], [0.607, [0.518, 0.506, 0.737]], [0.609, [0.518, 0.506, 0.737]], [0.611, [0.514, 0.502, 0.735]], [0.613, [0.514, 0.502, 0.735]], [0.614, [0.511, 0.499, 0.734]], [0.616, [0.511, 0.499, 0.734]], [0.618, [0.507, 0.495, 0.732]], [0.620, [0.507, 0.495, 0.732]], [0.622, [0.503, 0.492, 0.730]], [0.624, [0.503, 0.492, 0.730]], [0.626, [0.500, 0.487, 0.728]], [0.628, [0.500, 0.487, 0.728]], [0.630, [0.498, 0.481, 0.725]], [0.632, [0.498, 0.481, 0.725]], [0.634, [0.495, 0.476, 0.722]], [0.636, [0.495, 0.476, 0.722]], [0.638, [0.492, 0.471, 0.719]], [0.640, [0.492, 0.471, 0.719]], [0.642, [0.489, 0.465, 0.716]], [0.644, [0.489, 0.465, 0.716]], [0.646, [0.487, 0.460, 0.713]], [0.648, [0.487, 0.460, 0.713]], [0.650, [0.484, 0.454, 0.711]], [0.652, [0.484, 0.454, 0.711]], [0.654, [0.481, 0.449, 0.708]], [0.656, [0.481, 0.449, 0.708]], [0.658, [0.479, 0.444, 0.705]], [0.659, [0.479, 0.444, 0.705]], [0.661, [0.476, 0.438, 0.702]], [0.663, [0.476, 0.438, 0.702]], [0.665, [0.473, 0.433, 0.699]], [0.667, [0.473, 0.433, 0.699]], [0.669, [0.470, 0.427, 0.697]], [0.671, [0.470, 0.427, 0.697]], [0.673, [0.468, 0.422, 0.694]], [0.675, [0.468, 0.422, 0.694]], [0.677, [0.465, 0.416, 0.691]], [0.679, [0.465, 0.416, 0.691]], [0.681, [0.462, 0.411, 0.688]], [0.683, [0.462, 0.411, 0.688]], [0.685, [0.460, 0.406, 0.685]], [0.687, [0.460, 0.406, 0.685]], [0.689, [0.457, 0.400, 0.682]], [0.691, [0.457, 0.400, 0.682]], [0.693, [0.454, 0.395, 0.680]], [0.695, [0.454, 0.395, 0.680]], [0.697, [0.452, 0.389, 0.677]], [0.699, [0.452, 0.389, 0.677]], [0.701, [0.449, 0.384, 0.674]], [0.703, [0.449, 0.384, 0.674]], [0.705, [0.446, 0.379, 0.671]], [0.706, [0.446, 0.379, 0.671]], [0.708, [0.443, 0.373, 0.668]], [0.710, [0.443, 0.373, 0.668]], [0.712, [0.441, 0.368, 0.665]], [0.714, [0.441, 0.368, 0.665]], [0.716, [0.438, 0.362, 0.663]], [0.718, [0.438, 0.362, 0.663]], [0.720, [0.435, 0.357, 0.660]], [0.722, [0.435, 0.357, 0.660]], [0.724, [0.433, 0.351, 0.657]], [0.726, [0.433, 0.351, 0.657]], [0.728, [0.430, 0.346, 0.654]], [0.730, [0.430, 0.346, 0.654]], [0.732, [0.427, 0.341, 0.651]], [0.734, [0.427, 0.341, 0.651]], [0.736, [0.424, 0.335, 0.648]], [0.738, [0.424, 0.335, 0.648]], [0.740, [0.422, 0.330, 0.646]], [0.742, [0.422, 0.330, 0.646]], [0.744, [0.419, 0.324, 0.643]], [0.746, [0.419, 0.324, 0.643]], [0.748, [0.416, 0.319, 0.640]], [0.750, [0.416, 0.319, 0.640]], [0.751, [0.414, 0.314, 0.637]], [0.753, [0.414, 0.314, 0.637]], [0.755, [0.411, 0.309, 0.635]], [0.757, [0.411, 0.309, 0.635]], [0.759, [0.408, 0.303, 0.632]], [0.761, [0.408, 0.303, 0.632]], [0.763, [0.406, 0.298, 0.630]], [0.765, [0.406, 0.298, 0.630]], [0.767, [0.403, 0.293, 0.628]], [0.769, [0.403, 0.293, 0.628]], [0.771, [0.400, 0.288, 0.625]], [0.773, [0.400, 0.288, 0.625]], [0.775, [0.397, 0.283, 0.623]], [0.777, [0.397, 0.283, 0.623]], [0.779, [0.395, 0.278, 0.620]], [0.781, [0.395, 0.278, 0.620]], [0.783, [0.392, 0.272, 0.618]], [0.785, [0.392, 0.272, 0.618]], [0.787, [0.389, 0.267, 0.615]], [0.789, [0.389, 0.267, 0.615]], [0.791, [0.387, 0.262, 0.613]], [0.793, [0.387, 0.262, 0.613]], [0.795, [0.384, 0.257, 0.610]], [0.796, [0.384, 0.257, 0.610]], [0.798, [0.381, 0.252, 0.608]], [0.800, [0.381, 0.252, 0.608]], [0.802, [0.378, 0.247, 0.605]], [0.804, [0.378, 0.247, 0.605]], [0.806, [0.376, 0.241, 0.603]], [0.808, [0.376, 0.241, 0.603]], [0.810, [0.373, 0.236, 0.600]], [0.812, [0.373, 0.236, 0.600]], [0.814, [0.370, 0.231, 0.598]], [0.816, [0.370, 0.231, 0.598]], [0.818, [0.368, 0.226, 0.596]], [0.820, [0.368, 0.226, 0.596]], [0.822, [0.365, 0.221, 0.593]], [0.824, [0.365, 0.221, 0.593]], [0.826, [0.362, 0.216, 0.591]], [0.828, [0.362, 0.216, 0.591]], [0.830, [0.360, 0.210, 0.588]], [0.832, [0.360, 0.210, 0.588]], [0.834, [0.357, 0.205, 0.586]], [0.836, [0.357, 0.205, 0.586]], [0.838, [0.354, 0.200, 0.583]], [0.840, [0.354, 0.200, 0.583]], [0.841, [0.351, 0.195, 0.581]], [0.843, [0.351, 0.195, 0.581]], [0.845, [0.349, 0.190, 0.578]], [0.847, [0.349, 0.190, 0.578]], [0.849, [0.346, 0.185, 0.576]], [0.851, [0.346, 0.185, 0.576]], [0.853, [0.343, 0.179, 0.573]], [0.855, [0.343, 0.179, 0.573]], [0.857, [0.341, 0.174, 0.571]], [0.859, [0.341, 0.174, 0.571]], [0.861, [0.338, 0.169, 0.568]], [0.863, [0.338, 0.169, 0.568]], [0.865, [0.335, 0.164, 0.566]], [0.867, [0.335, 0.164, 0.566]], [0.869, [0.332, 0.159, 0.564]], [0.871, [0.332, 0.159, 0.564]], [0.873, [0.330, 0.154, 0.561]], [0.875, [0.330, 0.154, 0.561]], [0.877, [0.327, 0.149, 0.559]], [0.879, [0.327, 0.149, 0.559]], [0.881, [0.325, 0.144, 0.557]], [0.883, [0.325, 0.144, 0.557]], [0.885, [0.322, 0.139, 0.554]], [0.886, [0.322, 0.139, 0.554]], [0.888, [0.319, 0.134, 0.552]], [0.890, [0.319, 0.134, 0.552]], [0.892, [0.317, 0.130, 0.550]], [0.894, [0.317, 0.130, 0.550]], [0.896, [0.314, 0.125, 0.548]], [0.898, [0.314, 0.125, 0.548]], [0.900, [0.312, 0.120, 0.546]], [0.902, [0.312, 0.120, 0.546]], [0.904, [0.309, 0.115, 0.543]], [0.906, [0.309, 0.115, 0.543]], [0.908, [0.306, 0.110, 0.541]], [0.910, [0.306, 0.110, 0.541]], [0.912, [0.304, 0.106, 0.539]], [0.914, [0.304, 0.106, 0.539]], [0.916, [0.301, 0.101, 0.537]], [0.918, [0.301, 0.101, 0.537]], [0.920, [0.299, 0.096, 0.534]], [0.922, [0.299, 0.096, 0.534]], [0.924, [0.296, 0.091, 0.532]], [0.926, [0.296, 0.091, 0.532]], [0.928, [0.294, 0.086, 0.530]], [0.930, [0.294, 0.086, 0.530]], [0.932, [0.291, 0.082, 0.528]], [0.933, [0.291, 0.082, 0.528]], [0.935, [0.288, 0.077, 0.526]], [0.937, [0.288, 0.077, 0.526]], [0.939, [0.286, 0.072, 0.523]], [0.941, [0.286, 0.072, 0.523]], [0.943, [0.283, 0.067, 0.521]], [0.945, [0.283, 0.067, 0.521]], [0.947, [0.281, 0.062, 0.519]], [0.949, [0.281, 0.062, 0.519]], [0.951, [0.278, 0.058, 0.517]], [0.953, [0.278, 0.058, 0.517]], [0.955, [0.275, 0.053, 0.515]], [0.957, [0.275, 0.053, 0.515]], [0.959, [0.273, 0.048, 0.512]], [0.961, [0.273, 0.048, 0.512]], [0.963, [0.270, 0.043, 0.510]], [0.965, [0.270, 0.043, 0.510]], [0.967, [0.268, 0.038, 0.508]], [0.969, [0.268, 0.038, 0.508]], [0.971, [0.265, 0.034, 0.506]], [0.973, [0.265, 0.034, 0.506]], [0.975, [0.263, 0.029, 0.503]], [0.977, [0.263, 0.029, 0.503]], [0.978, [0.260, 0.024, 0.501]], [0.980, [0.260, 0.024, 0.501]], [0.982, [0.257, 0.019, 0.499]], [0.984, [0.257, 0.019, 0.499]], [0.986, [0.255, 0.014, 0.497]], [0.988, [0.255, 0.014, 0.497]], [0.990, [0.252, 0.010, 0.495]], [0.992, [0.252, 0.010, 0.495]], [0.994, [0.250, 0.005, 0.492]], [0.996, [0.250, 0.005, 0.492]], [0.998, [0.247, 0.000, 0.490]], [1.000, [0.247, 0.000, 0.490]]];
H.colormap_rain = [[0.000,[0.93458992,0.93084685,0.95271216]],[0.004,[0.93174274,0.92655592,0.94614128]],[0.008,[0.92883232,0.92229032,0.93972589]],[0.012,[0.92590147,0.91804221,0.93338116]],[0.016,[0.92294909,0.91381183,0.92710877]],[0.020,[0.91997775,0.90959874,0.92090292]],[0.024,[0.91698343,0.90540376,0.91477075]],[0.027,[0.91396872,0.90122648,0.90870604]],[0.031,[0.91092859,0.89706796,0.90271769]],[0.035,[0.90785842,0.89292913,0.89681424]],[0.039,[0.90475311,0.88881073,0.89100818]],[0.043,[0.90161112,0.88471100,0.88532221]],[0.047,[0.89847736,0.88060724,0.87980059]],[0.051,[0.89571566,0.87637331,0.87424400]],[0.055,[0.89344299,0.87203768,0.86791328]],[0.059,[0.89118623,0.86775531,0.86114513]],[0.063,[0.88893595,0.86350149,0.85420959]],[0.067,[0.88671169,0.85926095,0.84717411]],[0.071,[0.88452661,0.85502694,0.84004884]],[0.075,[0.88237375,0.85079913,0.83286119]],[0.078,[0.88025518,0.84657600,0.82561441]],[0.082,[0.87817232,0.84235651,0.81830962]],[0.086,[0.87611851,0.83814156,0.81096189]],[0.090,[0.87409305,0.83393085,0.80357397]],[0.094,[0.87209521,0.82972415,0.79614812]],[0.098,[0.87012807,0.82552043,0.78867872]],[0.102,[0.86818604,0.82132060,0.78117691]],[0.106,[0.86626888,0.81712440,0.77364317]],[0.110,[0.86437460,0.81293202,0.76608138]],[0.114,[0.86250349,0.80874311,0.75849078]],[0.118,[0.86065461,0.80455761,0.75087295]],[0.122,[0.85882667,0.80037557,0.74323018]],[0.125,[0.85696239,0.79621914,0.73558594]],[0.129,[0.85505049,0.79209708,0.72789987]],[0.133,[0.85308496,0.78801238,0.72016838]],[0.137,[0.85105535,0.78396919,0.71239597]],[0.141,[0.84893302,0.77997871,0.70459728]],[0.145,[0.84672171,0.77604029,0.69676425]],[0.149,[0.84440947,0.77215909,0.68889926]],[0.153,[0.84198269,0.76834088,0.68100675]],[0.157,[0.83938584,0.76460657,0.67312819]],[0.161,[0.83663463,0.76095127,0.66524514]],[0.165,[0.83368447,0.75739152,0.65739550]],[0.169,[0.83051005,0.75393675,0.64960254]],[0.173,[0.82707956,0.75059794,0.64190395]],[0.176,[0.82337953,0.74737861,0.63432901]],[0.180,[0.81935278,0.74429735,0.62695437]],[0.184,[0.81501874,0.74134369,0.61979922]],[0.188,[0.81036719,0.73851720,0.61291548]],[0.192,[0.80537923,0.73582010,0.60636629]],[0.196,[0.80010915,0.73322811,0.60014607]],[0.200,[0.79457890,0.73072918,0.59427153]],[0.204,[0.78880070,0.72831552,0.58875917]],[0.208,[0.78285008,0.72595754,0.58355781]],[0.212,[0.77670615,0.72366094,0.57869499]],[0.216,[0.77045152,0.72139528,0.57409851]],[0.220,[0.76407360,0.71916443,0.56977675]],[0.224,[0.75761016,0.71695484,0.56569006]],[0.227,[0.75108682,0.71475762,0.56180763]],[0.231,[0.74450733,0.71257164,0.55811773]],[0.235,[0.73787263,0.71039675,0.55461056]],[0.239,[0.73120796,0.70822477,0.55125283]],[0.243,[0.72452239,0.70605279,0.54803034]],[0.247,[0.71781791,0.70388073,0.54492997]],[0.251,[0.71110060,0.70170684,0.54193961]],[0.255,[0.70437481,0.69953000,0.53904805]],[0.259,[0.69764288,0.69734985,0.53624513]],[0.263,[0.69090824,0.69516560,0.53352137]],[0.267,[0.68417297,0.69297692,0.53086811]],[0.271,[0.67743897,0.69078350,0.52827742]],[0.275,[0.67070844,0.68858492,0.52574186]],[0.278,[0.66398309,0.68638091,0.52325461]],[0.282,[0.65726289,0.68417179,0.52080971]],[0.286,[0.65053102,0.68196278,0.51841813]],[0.290,[0.64380522,0.67974867,0.51605916]],[0.294,[0.63708328,0.67753045,0.51372854]],[0.298,[0.63037051,0.67530648,0.51142055]],[0.302,[0.62366190,0.67307864,0.50913241]],[0.306,[0.61693353,0.67085375,0.50688275]],[0.310,[0.61021043,0.66862463,0.50464628]],[0.314,[0.60348983,0.66639227,0.50242019]],[0.318,[0.59676763,0.66415781,0.50020545]],[0.322,[0.59002343,0.66192677,0.49801753]],[0.325,[0.58327864,0.65969331,0.49583287]],[0.329,[0.57653407,0.65745714,0.49364900]],[0.333,[0.56975827,0.65522665,0.49148849]],[0.337,[0.56297301,0.65299583,0.48933022]],[0.341,[0.55618473,0.65076278,0.48716782]],[0.345,[0.54935511,0.64853752,0.48502659]],[0.349,[0.54252563,0.64630769,0.48288872]],[0.353,[0.53566130,0.64408352,0.48075997]],[0.357,[0.52879222,0.64185366,0.47866009]],[0.361,[0.52188503,0.63962917,0.47657334]],[0.365,[0.51493765,0.63740999,0.47450062]],[0.369,[0.50797661,0.63518625,0.47245952]],[0.373,[0.50097554,0.63296622,0.47043782]],[0.376,[0.49392853,0.63075093,0.46843567]],[0.380,[0.48684902,0.62853495,0.46646428]],[0.384,[0.47973465,0.62631838,0.46452358]],[0.388,[0.47256845,0.62410566,0.46260848]],[0.392,[0.46534875,0.62189626,0.46072118]],[0.396,[0.45809583,0.61968284,0.45887522]],[0.400,[0.45079246,0.61746984,0.45706412]],[0.404,[0.44342880,0.61525900,0.45528771]],[0.408,[0.43600455,0.61304927,0.45354803]],[0.412,[0.42852549,0.61083774,0.45185157]],[0.416,[0.42099864,0.60862126,0.45020441]],[0.420,[0.41340502,0.60640405,0.44860122]],[0.424,[0.40574423,0.60418494,0.44704424]],[0.427,[0.39801038,0.60196390,0.44553753]],[0.431,[0.39020634,0.59973896,0.44408244]],[0.435,[0.38233302,0.59750845,0.44268277]],[0.439,[0.37439948,0.59526859,0.44134641]],[0.443,[0.36638953,0.59302213,0.44006951]],[0.447,[0.35830273,0.59076766,0.43885458]],[0.451,[0.35013880,0.58850372,0.43770413]],[0.455,[0.34189743,0.58622885,0.43662067]],[0.459,[0.33357884,0.58394147,0.43560656]],[0.463,[0.32518332,0.58163995,0.43466413]],[0.467,[0.31671278,0.57932244,0.43379512]],[0.471,[0.30816909,0.57698709,0.43300125]],[0.475,[0.29955540,0.57463189,0.43228366]],[0.478,[0.29087493,0.57225489,0.43164346]],[0.482,[0.28213176,0.56985407,0.43108132]],[0.486,[0.27333271,0.56742715,0.43059666]],[0.490,[0.26448445,0.56497201,0.43018883]],[0.494,[0.25559343,0.56248668,0.42985721]],[0.498,[0.24667058,0.55996884,0.42959898]],[0.502,[0.23772510,0.55741661,0.42941198]],[0.506,[0.22879743,0.55482373,0.42929766]],[0.510,[0.21987785,0.55219218,0.42924736]],[0.514,[0.21097824,0.54952074,0.42925580]],[0.518,[0.20211299,0.54680814,0.42931750]],[0.522,[0.19329708,0.54405341,0.42942645]],[0.525,[0.18454590,0.54125583,0.42957626]],[0.529,[0.17587472,0.53841505,0.42976041]],[0.533,[0.16729927,0.53553097,0.42997191]],[0.537,[0.15886375,0.53260072,0.43020777]],[0.541,[0.15056830,0.52962680,0.43045865]],[0.545,[0.14241226,0.52661161,0.43071706]],[0.549,[0.13440859,0.52355628,0.43097663]],[0.553,[0.12656906,0.52046216,0.43123171]],[0.557,[0.11890420,0.51733077,0.43147760]],[0.561,[0.11142463,0.51416379,0.43170912]],[0.565,[0.10413966,0.51096300,0.43192216]],[0.569,[0.09705780,0.50773024,0.43211350]],[0.573,[0.09018738,0.50446741,0.43227991]],[0.576,[0.08353622,0.50117643,0.43241864]],[0.580,[0.07711178,0.49785924,0.43252733]],[0.584,[0.07092119,0.49451776,0.43260411]],[0.588,[0.06497113,0.49115392,0.43264696]],[0.592,[0.05926836,0.48776951,0.43265517]],[0.596,[0.05381953,0.48436631,0.43262791]],[0.600,[0.04863121,0.48094604,0.43256465]],[0.604,[0.04370963,0.47751036,0.43246496]],[0.608,[0.03905112,0.47406088,0.43232856]],[0.612,[0.03496889,0.47059405,0.43215827]],[0.616,[0.03143475,0.46711489,0.43195695]],[0.620,[0.02822939,0.46363109,0.43172285]],[0.624,[0.02532317,0.46014293,0.43146118]],[0.627,[0.02271621,0.45665025,0.43117049]],[0.631,[0.02041022,0.45315270,0.43085004]],[0.635,[0.01840750,0.44964992,0.43049933]],[0.639,[0.01672948,0.44614090,0.43011657]],[0.643,[0.01538959,0.44262500,0.42969905]],[0.647,[0.01435413,0.43910288,0.42924960]],[0.651,[0.01362474,0.43557416,0.42876742]],[0.655,[0.01320277,0.43203848,0.42825165]],[0.659,[0.01308981,0.42849546,0.42770151]],[0.663,[0.01328604,0.42494477,0.42711585]],[0.667,[0.01379163,0.42138610,0.42649357]],[0.671,[0.01460602,0.41781914,0.42583347]],[0.675,[0.01572830,0.41424361,0.42513431]],[0.678,[0.01715690,0.41065923,0.42439480]],[0.682,[0.01888987,0.40706573,0.42361364]],[0.686,[0.02092393,0.40346294,0.42278936]],[0.690,[0.02325552,0.39985064,0.42192053]],[0.694,[0.02587977,0.39622871,0.42100562]],[0.698,[0.02879190,0.39259700,0.42004322]],[0.702,[0.03198536,0.38895543,0.41903174]],[0.706,[0.03545196,0.38530403,0.41796946]],[0.710,[0.03918323,0.38164282,0.41685480]],[0.714,[0.04307414,0.37797184,0.41568633]],[0.718,[0.04697177,0.37429119,0.41446247]],[0.722,[0.05086969,0.37060112,0.41318157]],[0.725,[0.05475507,0.36690182,0.41184220]],[0.729,[0.05861718,0.36319354,0.41044305]],[0.733,[0.06244486,0.35947672,0.40898258]],[0.737,[0.06623027,0.35575166,0.40745970]],[0.741,[0.06998642,0.35201780,0.40586828]],[0.745,[0.07368349,0.34827668,0.40421199]],[0.749,[0.07731558,0.34452883,0.40249009]],[0.753,[0.08087676,0.34077486,0.40070181]],[0.757,[0.08436223,0.33701540,0.39884664]],[0.761,[0.08776751,0.33325110,0.39692422]],[0.765,[0.09108869,0.32948264,0.39493437]],[0.769,[0.09432202,0.32571076,0.39287704]],[0.773,[0.09746470,0.32193612,0.39075246]],[0.776,[0.10051371,0.31815948,0.38856094]],[0.780,[0.10346678,0.31438155,0.38630303]],[0.784,[0.10632343,0.31060292,0.38397899]],[0.788,[0.10908868,0.30682379,0.38158639]],[0.792,[0.11175168,0.30304553,0.37913036]],[0.796,[0.11431166,0.29926877,0.37661214]],[0.800,[0.11676701,0.29549428,0.37403303]],[0.804,[0.11911810,0.29172257,0.37139457]],[0.808,[0.12136487,0.28795419,0.36869837]],[0.812,[0.12350726,0.28418970,0.36594614]],[0.816,[0.12554502,0.28042969,0.36313966]],[0.820,[0.12747934,0.27667448,0.36028082]],[0.824,[0.12931088,0.27292450,0.35737157]],[0.827,[0.13104047,0.26918012,0.35441388]],[0.831,[0.13266906,0.26544165,0.35140981]],[0.835,[0.13419779,0.26170939,0.34836139]],[0.839,[0.13562766,0.25798359,0.34527073]],[0.843,[0.13696004,0.25426446,0.34213992]],[0.847,[0.13819654,0.25055209,0.33897105]],[0.851,[0.13933874,0.24684659,0.33576620]],[0.855,[0.14038813,0.24314803,0.33252745]],[0.859,[0.14134636,0.23945642,0.32925686]],[0.863,[0.14221502,0.23577176,0.32595646]],[0.867,[0.14302414,0.23208788,0.32262419]],[0.871,[0.14372068,0.22841053,0.31931081]],[0.875,[0.14431672,0.22473767,0.31601603]],[0.878,[0.14481722,0.22106871,0.31274020]],[0.882,[0.14522703,0.21740298,0.30948365]],[0.886,[0.14555033,0.21373987,0.30624673]],[0.890,[0.14579161,0.21007859,0.30302975]],[0.894,[0.14595538,0.20641829,0.29983296]],[0.898,[0.14604507,0.20275827,0.29665668]],[0.902,[0.14606397,0.19909781,0.29350117]],[0.906,[0.14601320,0.19543673,0.29036679]],[0.910,[0.14589758,0.19177376,0.28725359]],[0.914,[0.14572180,0.18810754,0.28416166]],[0.918,[0.14548876,0.18443713,0.28109113]],[0.922,[0.14520325,0.18076092,0.27804206]],[0.925,[0.14486760,0.17707795,0.27501454]],[0.929,[0.14447802,0.17338920,0.27200860]],[0.933,[0.14404134,0.16969218,0.26902410]],[0.937,[0.14356440,0.16598419,0.26606104]],[0.941,[0.14304362,0.16226594,0.26311918]],[0.945,[0.14248206,0.15853587,0.26019830]],[0.949,[0.14188694,0.15479070,0.25729842]],[0.953,[0.14125043,0.15103262,0.25441869]],[0.957,[0.14058476,0.14725621,0.25155944]],[0.961,[0.13988670,0.14346171,0.24871997]],[0.965,[0.13915556,0.13964840,0.24589959]],[0.969,[0.13839724,0.13581269,0.24309828]],[0.973,[0.13761199,0.13195310,0.24031547]],[0.976,[0.13680129,0.12806745,0.23755069]],[0.980,[0.13596881,0.12415233,0.23480382]],[0.984,[0.13510797,0.12020886,0.23207311]],[0.988,[0.13422945,0.11622983,0.22935965]],[0.992,[0.13333402,0.11221218,0.22666306]],[0.996,[0.13242494,0.10815118,0.22398350]],[1.000,[0.13157216,0.10400556,0.22133637]]]
H.colormap_rainbow = [[0.000, [0.500, 0.000, 1.000]], [0.002, [0.500, 0.000, 1.000]], [0.004, [0.492, 0.012, 1.000]], [0.006, [0.492, 0.012, 1.000]], [0.008, [0.484, 0.025, 1.000]], [0.010, [0.484, 0.025, 1.000]], [0.012, [0.476, 0.037, 1.000]], [0.014, [0.476, 0.037, 1.000]], [0.016, [0.469, 0.049, 1.000]], [0.018, [0.469, 0.049, 1.000]], [0.020, [0.461, 0.062, 1.000]], [0.022, [0.461, 0.062, 1.000]], [0.023, [0.453, 0.074, 0.999]], [0.025, [0.453, 0.074, 0.999]], [0.027, [0.445, 0.086, 0.999]], [0.029, [0.445, 0.086, 0.999]], [0.031, [0.437, 0.098, 0.999]], [0.033, [0.437, 0.098, 0.999]], [0.035, [0.429, 0.111, 0.998]], [0.037, [0.429, 0.111, 0.998]], [0.039, [0.422, 0.123, 0.998]], [0.041, [0.422, 0.123, 0.998]], [0.043, [0.414, 0.135, 0.998]], [0.045, [0.414, 0.135, 0.998]], [0.047, [0.406, 0.147, 0.997]], [0.049, [0.406, 0.147, 0.997]], [0.051, [0.398, 0.159, 0.997]], [0.053, [0.398, 0.159, 0.997]], [0.055, [0.390, 0.172, 0.996]], [0.057, [0.390, 0.172, 0.996]], [0.059, [0.382, 0.184, 0.996]], [0.061, [0.382, 0.184, 0.996]], [0.063, [0.375, 0.196, 0.995]], [0.065, [0.375, 0.196, 0.995]], [0.067, [0.367, 0.208, 0.995]], [0.068, [0.367, 0.208, 0.995]], [0.070, [0.359, 0.220, 0.994]], [0.072, [0.359, 0.220, 0.994]], [0.074, [0.351, 0.232, 0.993]], [0.076, [0.351, 0.232, 0.993]], [0.078, [0.343, 0.244, 0.992]], [0.080, [0.343, 0.244, 0.992]], [0.082, [0.335, 0.256, 0.992]], [0.084, [0.335, 0.256, 0.992]], [0.086, [0.327, 0.268, 0.991]], [0.088, [0.327, 0.268, 0.991]], [0.090, [0.320, 0.280, 0.990]], [0.092, [0.320, 0.280, 0.990]], [0.094, [0.312, 0.291, 0.989]], [0.096, [0.312, 0.291, 0.989]], [0.098, [0.304, 0.303, 0.988]], [0.100, [0.304, 0.303, 0.988]], [0.102, [0.296, 0.315, 0.987]], [0.104, [0.296, 0.315, 0.987]], [0.106, [0.288, 0.327, 0.986]], [0.108, [0.288, 0.327, 0.986]], [0.110, [0.280, 0.338, 0.985]], [0.112, [0.280, 0.338, 0.985]], [0.114, [0.273, 0.350, 0.984]], [0.115, [0.273, 0.350, 0.984]], [0.117, [0.265, 0.361, 0.983]], [0.119, [0.265, 0.361, 0.983]], [0.121, [0.257, 0.373, 0.982]], [0.123, [0.257, 0.373, 0.982]], [0.125, [0.249, 0.384, 0.981]], [0.127, [0.249, 0.384, 0.981]], [0.129, [0.241, 0.395, 0.979]], [0.131, [0.241, 0.395, 0.979]], [0.133, [0.233, 0.407, 0.978]], [0.135, [0.233, 0.407, 0.978]], [0.137, [0.225, 0.418, 0.977]], [0.139, [0.225, 0.418, 0.977]], [0.141, [0.218, 0.429, 0.976]], [0.143, [0.218, 0.429, 0.976]], [0.145, [0.210, 0.440, 0.974]], [0.147, [0.210, 0.440, 0.974]], [0.149, [0.202, 0.451, 0.973]], [0.151, [0.202, 0.451, 0.973]], [0.153, [0.194, 0.462, 0.971]], [0.155, [0.194, 0.462, 0.971]], [0.157, [0.186, 0.473, 0.970]], [0.159, [0.186, 0.473, 0.970]], [0.160, [0.178, 0.484, 0.968]], [0.162, [0.178, 0.484, 0.968]], [0.164, [0.171, 0.495, 0.967]], [0.166, [0.171, 0.495, 0.967]], [0.168, [0.163, 0.505, 0.965]], [0.170, [0.163, 0.505, 0.965]], [0.172, [0.155, 0.516, 0.963]], [0.174, [0.155, 0.516, 0.963]], [0.176, [0.147, 0.526, 0.962]], [0.178, [0.147, 0.526, 0.962]], [0.180, [0.139, 0.537, 0.960]], [0.182, [0.139, 0.537, 0.960]], [0.184, [0.131, 0.547, 0.958]], [0.186, [0.131, 0.547, 0.958]], [0.188, [0.124, 0.557, 0.957]], [0.190, [0.124, 0.557, 0.957]], [0.192, [0.116, 0.568, 0.955]], [0.194, [0.116, 0.568, 0.955]], [0.196, [0.108, 0.578, 0.953]], [0.198, [0.108, 0.578, 0.953]], [0.200, [0.100, 0.588, 0.951]], [0.202, [0.100, 0.588, 0.951]], [0.204, [0.092, 0.598, 0.949]], [0.205, [0.092, 0.598, 0.949]], [0.207, [0.084, 0.608, 0.947]], [0.209, [0.084, 0.608, 0.947]], [0.211, [0.076, 0.617, 0.945]], [0.213, [0.076, 0.617, 0.945]], [0.215, [0.069, 0.627, 0.943]], [0.217, [0.069, 0.627, 0.943]], [0.219, [0.061, 0.636, 0.941]], [0.221, [0.061, 0.636, 0.941]], [0.223, [0.053, 0.646, 0.939]], [0.225, [0.053, 0.646, 0.939]], [0.227, [0.045, 0.655, 0.937]], [0.229, [0.045, 0.655, 0.937]], [0.231, [0.037, 0.665, 0.935]], [0.233, [0.037, 0.665, 0.935]], [0.235, [0.029, 0.674, 0.932]], [0.237, [0.029, 0.674, 0.932]], [0.239, [0.022, 0.683, 0.930]], [0.241, [0.022, 0.683, 0.930]], [0.243, [0.014, 0.692, 0.928]], [0.245, [0.014, 0.692, 0.928]], [0.247, [0.006, 0.701, 0.926]], [0.249, [0.006, 0.701, 0.926]], [0.250, [0.002, 0.709, 0.923]], [0.252, [0.002, 0.709, 0.923]], [0.254, [0.010, 0.718, 0.921]], [0.256, [0.010, 0.718, 0.921]], [0.258, [0.018, 0.726, 0.918]], [0.260, [0.018, 0.726, 0.918]], [0.262, [0.025, 0.735, 0.916]], [0.264, [0.025, 0.735, 0.916]], [0.266, [0.033, 0.743, 0.914]], [0.268, [0.033, 0.743, 0.914]], [0.270, [0.041, 0.751, 0.911]], [0.272, [0.041, 0.751, 0.911]], [0.274, [0.049, 0.759, 0.908]], [0.276, [0.049, 0.759, 0.908]], [0.278, [0.057, 0.767, 0.906]], [0.280, [0.057, 0.767, 0.906]], [0.282, [0.065, 0.775, 0.903]], [0.284, [0.065, 0.775, 0.903]], [0.286, [0.073, 0.783, 0.901]], [0.288, [0.073, 0.783, 0.901]], [0.290, [0.080, 0.791, 0.898]], [0.292, [0.080, 0.791, 0.898]], [0.294, [0.088, 0.798, 0.895]], [0.295, [0.088, 0.798, 0.895]], [0.297, [0.096, 0.805, 0.892]], [0.299, [0.096, 0.805, 0.892]], [0.301, [0.104, 0.813, 0.890]], [0.303, [0.104, 0.813, 0.890]], [0.305, [0.112, 0.820, 0.887]], [0.307, [0.112, 0.820, 0.887]], [0.309, [0.120, 0.827, 0.884]], [0.311, [0.120, 0.827, 0.884]], [0.313, [0.127, 0.834, 0.881]], [0.315, [0.127, 0.834, 0.881]], [0.317, [0.135, 0.840, 0.878]], [0.319, [0.135, 0.840, 0.878]], [0.321, [0.143, 0.847, 0.875]], [0.323, [0.143, 0.847, 0.875]], [0.325, [0.151, 0.853, 0.872]], [0.327, [0.151, 0.853, 0.872]], [0.329, [0.159, 0.860, 0.869]], [0.331, [0.159, 0.860, 0.869]], [0.333, [0.167, 0.866, 0.866]], [0.335, [0.167, 0.866, 0.866]], [0.337, [0.175, 0.872, 0.863]], [0.339, [0.175, 0.872, 0.863]], [0.341, [0.182, 0.878, 0.860]], [0.342, [0.182, 0.878, 0.860]], [0.344, [0.190, 0.884, 0.857]], [0.346, [0.190, 0.884, 0.857]], [0.348, [0.198, 0.890, 0.853]], [0.350, [0.198, 0.890, 0.853]], [0.352, [0.206, 0.895, 0.850]], [0.354, [0.206, 0.895, 0.850]], [0.356, [0.214, 0.901, 0.847]], [0.358, [0.214, 0.901, 0.847]], [0.360, [0.222, 0.906, 0.844]], [0.362, [0.222, 0.906, 0.844]], [0.364, [0.229, 0.911, 0.840]], [0.366, [0.229, 0.911, 0.840]], [0.368, [0.237, 0.916, 0.837]], [0.370, [0.237, 0.916, 0.837]], [0.372, [0.245, 0.921, 0.834]], [0.374, [0.245, 0.921, 0.834]], [0.376, [0.253, 0.926, 0.830]], [0.378, [0.253, 0.926, 0.830]], [0.380, [0.261, 0.930, 0.827]], [0.382, [0.261, 0.930, 0.827]], [0.384, [0.269, 0.935, 0.823]], [0.386, [0.269, 0.935, 0.823]], [0.387, [0.276, 0.939, 0.820]], [0.389, [0.276, 0.939, 0.820]], [0.391, [0.284, 0.943, 0.816]], [0.393, [0.284, 0.943, 0.816]], [0.395, [0.292, 0.947, 0.813]], [0.397, [0.292, 0.947, 0.813]], [0.399, [0.300, 0.951, 0.809]], [0.401, [0.300, 0.951, 0.809]], [0.403, [0.308, 0.955, 0.805]], [0.405, [0.308, 0.955, 0.805]], [0.407, [0.316, 0.958, 0.802]], [0.409, [0.316, 0.958, 0.802]], [0.411, [0.324, 0.962, 0.798]], [0.413, [0.324, 0.962, 0.798]], [0.415, [0.331, 0.965, 0.794]], [0.417, [0.331, 0.965, 0.794]], [0.419, [0.339, 0.968, 0.791]], [0.421, [0.339, 0.968, 0.791]], [0.423, [0.347, 0.971, 0.787]], [0.425, [0.347, 0.971, 0.787]], [0.427, [0.355, 0.974, 0.783]], [0.429, [0.355, 0.974, 0.783]], [0.431, [0.363, 0.977, 0.779]], [0.432, [0.363, 0.977, 0.779]], [0.434, [0.371, 0.979, 0.775]], [0.436, [0.371, 0.979, 0.775]], [0.438, [0.378, 0.982, 0.771]], [0.440, [0.378, 0.982, 0.771]], [0.442, [0.386, 0.984, 0.767]], [0.444, [0.386, 0.984, 0.767]], [0.446, [0.394, 0.986, 0.763]], [0.448, [0.394, 0.986, 0.763]], [0.450, [0.402, 0.988, 0.759]], [0.452, [0.402, 0.988, 0.759]], [0.454, [0.410, 0.990, 0.755]], [0.456, [0.410, 0.990, 0.755]], [0.458, [0.418, 0.992, 0.751]], [0.460, [0.418, 0.992, 0.751]], [0.462, [0.425, 0.993, 0.747]], [0.464, [0.425, 0.993, 0.747]], [0.466, [0.433, 0.995, 0.743]], [0.468, [0.433, 0.995, 0.743]], [0.470, [0.441, 0.996, 0.739]], [0.472, [0.441, 0.996, 0.739]], [0.474, [0.449, 0.997, 0.735]], [0.476, [0.449, 0.997, 0.735]], [0.477, [0.457, 0.998, 0.731]], [0.479, [0.457, 0.998, 0.731]], [0.481, [0.465, 0.998, 0.726]], [0.483, [0.465, 0.998, 0.726]], [0.485, [0.473, 0.999, 0.722]], [0.487, [0.473, 0.999, 0.722]], [0.489, [0.480, 1.000, 0.718]], [0.491, [0.480, 1.000, 0.718]], [0.493, [0.488, 1.000, 0.714]], [0.495, [0.488, 1.000, 0.714]], [0.497, [0.496, 1.000, 0.709]], [0.499, [0.496, 1.000, 0.709]], [0.501, [0.504, 1.000, 0.705]], [0.503, [0.504, 1.000, 0.705]], [0.505, [0.512, 1.000, 0.701]], [0.507, [0.512, 1.000, 0.701]], [0.509, [0.520, 1.000, 0.696]], [0.511, [0.520, 1.000, 0.696]], [0.513, [0.527, 0.999, 0.692]], [0.515, [0.527, 0.999, 0.692]], [0.517, [0.535, 0.998, 0.687]], [0.519, [0.535, 0.998, 0.687]], [0.521, [0.543, 0.998, 0.683]], [0.523, [0.543, 0.998, 0.683]], [0.524, [0.551, 0.997, 0.678]], [0.526, [0.551, 0.997, 0.678]], [0.528, [0.559, 0.996, 0.674]], [0.530, [0.559, 0.996, 0.674]], [0.532, [0.567, 0.995, 0.669]], [0.534, [0.567, 0.995, 0.669]], [0.536, [0.575, 0.993, 0.665]], [0.538, [0.575, 0.993, 0.665]], [0.540, [0.582, 0.992, 0.660]], [0.542, [0.582, 0.992, 0.660]], [0.544, [0.590, 0.990, 0.655]], [0.546, [0.590, 0.990, 0.655]], [0.548, [0.598, 0.988, 0.651]], [0.550, [0.598, 0.988, 0.651]], [0.552, [0.606, 0.986, 0.646]], [0.554, [0.606, 0.986, 0.646]], [0.556, [0.614, 0.984, 0.641]], [0.558, [0.614, 0.984, 0.641]], [0.560, [0.622, 0.982, 0.636]], [0.562, [0.622, 0.982, 0.636]], [0.564, [0.629, 0.979, 0.632]], [0.566, [0.629, 0.979, 0.632]], [0.568, [0.637, 0.977, 0.627]], [0.569, [0.637, 0.977, 0.627]], [0.571, [0.645, 0.974, 0.622]], [0.573, [0.645, 0.974, 0.622]], [0.575, [0.653, 0.971, 0.617]], [0.577, [0.653, 0.971, 0.617]], [0.579, [0.661, 0.968, 0.612]], [0.581, [0.661, 0.968, 0.612]], [0.583, [0.669, 0.965, 0.608]], [0.585, [0.669, 0.965, 0.608]], [0.587, [0.676, 0.962, 0.603]], [0.589, [0.676, 0.962, 0.603]], [0.591, [0.684, 0.958, 0.598]], [0.593, [0.684, 0.958, 0.598]], [0.595, [0.692, 0.955, 0.593]], [0.597, [0.692, 0.955, 0.593]], [0.599, [0.700, 0.951, 0.588]], [0.601, [0.700, 0.951, 0.588]], [0.603, [0.708, 0.947, 0.583]], [0.605, [0.708, 0.947, 0.583]], [0.607, [0.716, 0.943, 0.578]], [0.609, [0.716, 0.943, 0.578]], [0.611, [0.724, 0.939, 0.573]], [0.613, [0.724, 0.939, 0.573]], [0.614, [0.731, 0.935, 0.568]], [0.616, [0.731, 0.935, 0.568]], [0.618, [0.739, 0.930, 0.563]], [0.620, [0.739, 0.930, 0.563]], [0.622, [0.747, 0.926, 0.557]], [0.624, [0.747, 0.926, 0.557]], [0.626, [0.755, 0.921, 0.552]], [0.628, [0.755, 0.921, 0.552]], [0.630, [0.763, 0.916, 0.547]], [0.632, [0.763, 0.916, 0.547]], [0.634, [0.771, 0.911, 0.542]], [0.636, [0.771, 0.911, 0.542]], [0.638, [0.778, 0.906, 0.537]], [0.640, [0.778, 0.906, 0.537]], [0.642, [0.786, 0.901, 0.532]], [0.644, [0.786, 0.901, 0.532]], [0.646, [0.794, 0.895, 0.526]], [0.648, [0.794, 0.895, 0.526]], [0.650, [0.802, 0.890, 0.521]], [0.652, [0.802, 0.890, 0.521]], [0.654, [0.810, 0.884, 0.516]], [0.656, [0.810, 0.884, 0.516]], [0.658, [0.818, 0.878, 0.511]], [0.659, [0.818, 0.878, 0.511]], [0.661, [0.825, 0.872, 0.505]], [0.663, [0.825, 0.872, 0.505]], [0.665, [0.833, 0.866, 0.500]], [0.667, [0.833, 0.866, 0.500]], [0.669, [0.841, 0.860, 0.495]], [0.671, [0.841, 0.860, 0.495]], [0.673, [0.849, 0.853, 0.489]], [0.675, [0.849, 0.853, 0.489]], [0.677, [0.857, 0.847, 0.484]], [0.679, [0.857, 0.847, 0.484]], [0.681, [0.865, 0.840, 0.479]], [0.683, [0.865, 0.840, 0.479]], [0.685, [0.873, 0.834, 0.473]], [0.687, [0.873, 0.834, 0.473]], [0.689, [0.880, 0.827, 0.468]], [0.691, [0.880, 0.827, 0.468]], [0.693, [0.888, 0.820, 0.462]], [0.695, [0.888, 0.820, 0.462]], [0.697, [0.896, 0.813, 0.457]], [0.699, [0.896, 0.813, 0.457]], [0.701, [0.904, 0.805, 0.451]], [0.703, [0.904, 0.805, 0.451]], [0.705, [0.912, 0.798, 0.446]], [0.706, [0.912, 0.798, 0.446]], [0.708, [0.920, 0.791, 0.440]], [0.710, [0.920, 0.791, 0.440]], [0.712, [0.927, 0.783, 0.435]], [0.714, [0.927, 0.783, 0.435]], [0.716, [0.935, 0.775, 0.429]], [0.718, [0.935, 0.775, 0.429]], [0.720, [0.943, 0.767, 0.424]], [0.722, [0.943, 0.767, 0.424]], [0.724, [0.951, 0.759, 0.418]], [0.726, [0.951, 0.759, 0.418]], [0.728, [0.959, 0.751, 0.412]], [0.730, [0.959, 0.751, 0.412]], [0.732, [0.967, 0.743, 0.407]], [0.734, [0.967, 0.743, 0.407]], [0.736, [0.975, 0.735, 0.401]], [0.738, [0.975, 0.735, 0.401]], [0.740, [0.982, 0.726, 0.395]], [0.742, [0.982, 0.726, 0.395]], [0.744, [0.990, 0.718, 0.390]], [0.746, [0.990, 0.718, 0.390]], [0.748, [0.998, 0.709, 0.384]], [0.750, [0.998, 0.709, 0.384]], [0.751, [1.000, 0.701, 0.378]], [0.753, [1.000, 0.701, 0.378]], [0.755, [1.000, 0.692, 0.373]], [0.757, [1.000, 0.692, 0.373]], [0.759, [1.000, 0.683, 0.367]], [0.761, [1.000, 0.683, 0.367]], [0.763, [1.000, 0.674, 0.361]], [0.765, [1.000, 0.674, 0.361]], [0.767, [1.000, 0.665, 0.355]], [0.769, [1.000, 0.665, 0.355]], [0.771, [1.000, 0.655, 0.350]], [0.773, [1.000, 0.655, 0.350]], [0.775, [1.000, 0.646, 0.344]], [0.777, [1.000, 0.646, 0.344]], [0.779, [1.000, 0.636, 0.338]], [0.781, [1.000, 0.636, 0.338]], [0.783, [1.000, 0.627, 0.332]], [0.785, [1.000, 0.627, 0.332]], [0.787, [1.000, 0.617, 0.327]], [0.789, [1.000, 0.617, 0.327]], [0.791, [1.000, 0.608, 0.321]], [0.793, [1.000, 0.608, 0.321]], [0.795, [1.000, 0.598, 0.315]], [0.796, [1.000, 0.598, 0.315]], [0.798, [1.000, 0.588, 0.309]], [0.800, [1.000, 0.588, 0.309]], [0.802, [1.000, 0.578, 0.303]], [0.804, [1.000, 0.578, 0.303]], [0.806, [1.000, 0.568, 0.297]], [0.808, [1.000, 0.568, 0.297]], [0.810, [1.000, 0.557, 0.291]], [0.812, [1.000, 0.557, 0.291]], [0.814, [1.000, 0.547, 0.285]], [0.816, [1.000, 0.547, 0.285]], [0.818, [1.000, 0.537, 0.280]], [0.820, [1.000, 0.537, 0.280]], [0.822, [1.000, 0.526, 0.274]], [0.824, [1.000, 0.526, 0.274]], [0.826, [1.000, 0.516, 0.268]], [0.828, [1.000, 0.516, 0.268]], [0.830, [1.000, 0.505, 0.262]], [0.832, [1.000, 0.505, 0.262]], [0.834, [1.000, 0.495, 0.256]], [0.836, [1.000, 0.495, 0.256]], [0.838, [1.000, 0.484, 0.250]], [0.840, [1.000, 0.484, 0.250]], [0.841, [1.000, 0.473, 0.244]], [0.843, [1.000, 0.473, 0.244]], [0.845, [1.000, 0.462, 0.238]], [0.847, [1.000, 0.462, 0.238]], [0.849, [1.000, 0.451, 0.232]], [0.851, [1.000, 0.451, 0.232]], [0.853, [1.000, 0.440, 0.226]], [0.855, [1.000, 0.440, 0.226]], [0.857, [1.000, 0.429, 0.220]], [0.859, [1.000, 0.429, 0.220]], [0.861, [1.000, 0.418, 0.214]], [0.863, [1.000, 0.418, 0.214]], [0.865, [1.000, 0.407, 0.208]], [0.867, [1.000, 0.407, 0.208]], [0.869, [1.000, 0.395, 0.202]], [0.871, [1.000, 0.395, 0.202]], [0.873, [1.000, 0.384, 0.196]], [0.875, [1.000, 0.384, 0.196]], [0.877, [1.000, 0.373, 0.190]], [0.879, [1.000, 0.373, 0.190]], [0.881, [1.000, 0.361, 0.184]], [0.883, [1.000, 0.361, 0.184]], [0.885, [1.000, 0.350, 0.178]], [0.886, [1.000, 0.350, 0.178]], [0.888, [1.000, 0.338, 0.172]], [0.890, [1.000, 0.338, 0.172]], [0.892, [1.000, 0.327, 0.166]], [0.894, [1.000, 0.327, 0.166]], [0.896, [1.000, 0.315, 0.159]], [0.898, [1.000, 0.315, 0.159]], [0.900, [1.000, 0.303, 0.153]], [0.902, [1.000, 0.303, 0.153]], [0.904, [1.000, 0.291, 0.147]], [0.906, [1.000, 0.291, 0.147]], [0.908, [1.000, 0.280, 0.141]], [0.910, [1.000, 0.280, 0.141]], [0.912, [1.000, 0.268, 0.135]], [0.914, [1.000, 0.268, 0.135]], [0.916, [1.000, 0.256, 0.129]], [0.918, [1.000, 0.256, 0.129]], [0.920, [1.000, 0.244, 0.123]], [0.922, [1.000, 0.244, 0.123]], [0.924, [1.000, 0.232, 0.117]], [0.926, [1.000, 0.232, 0.117]], [0.928, [1.000, 0.220, 0.111]], [0.930, [1.000, 0.220, 0.111]], [0.932, [1.000, 0.208, 0.105]], [0.933, [1.000, 0.208, 0.105]], [0.935, [1.000, 0.196, 0.098]], [0.937, [1.000, 0.196, 0.098]], [0.939, [1.000, 0.184, 0.092]], [0.941, [1.000, 0.184, 0.092]], [0.943, [1.000, 0.172, 0.086]], [0.945, [1.000, 0.172, 0.086]], [0.947, [1.000, 0.159, 0.080]], [0.949, [1.000, 0.159, 0.080]], [0.951, [1.000, 0.147, 0.074]], [0.953, [1.000, 0.147, 0.074]], [0.955, [1.000, 0.135, 0.068]], [0.957, [1.000, 0.135, 0.068]], [0.959, [1.000, 0.123, 0.062]], [0.961, [1.000, 0.123, 0.062]], [0.963, [1.000, 0.111, 0.055]], [0.965, [1.000, 0.111, 0.055]], [0.967, [1.000, 0.098, 0.049]], [0.969, [1.000, 0.098, 0.049]], [0.971, [1.000, 0.086, 0.043]], [0.973, [1.000, 0.086, 0.043]], [0.975, [1.000, 0.074, 0.037]], [0.977, [1.000, 0.074, 0.037]], [0.978, [1.000, 0.062, 0.031]], [0.980, [1.000, 0.062, 0.031]], [0.982, [1.000, 0.049, 0.025]], [0.984, [1.000, 0.049, 0.025]], [0.986, [1.000, 0.037, 0.018]], [0.988, [1.000, 0.037, 0.018]], [0.990, [1.000, 0.025, 0.012]], [0.992, [1.000, 0.025, 0.012]], [0.994, [1.000, 0.012, 0.006]], [0.996, [1.000, 0.012, 0.006]], [0.998, [1.000, 0.000, 0.000]], [1.000, [1.000, 0.000, 0.000]]];
H.colormap_RdBu = [[0.000, [0.404, 0.000, 0.122]], [0.002, [0.404, 0.000, 0.122]], [0.004, [0.415, 0.004, 0.123]], [0.006, [0.415, 0.004, 0.123]], [0.008, [0.427, 0.007, 0.125]], [0.010, [0.427, 0.007, 0.125]], [0.012, [0.439, 0.011, 0.127]], [0.014, [0.439, 0.011, 0.127]], [0.016, [0.450, 0.015, 0.129]], [0.018, [0.450, 0.015, 0.129]], [0.020, [0.462, 0.018, 0.131]], [0.022, [0.462, 0.018, 0.131]], [0.023, [0.473, 0.022, 0.133]], [0.025, [0.473, 0.022, 0.133]], [0.027, [0.485, 0.026, 0.134]], [0.029, [0.485, 0.026, 0.134]], [0.031, [0.496, 0.030, 0.136]], [0.033, [0.496, 0.030, 0.136]], [0.035, [0.508, 0.033, 0.138]], [0.037, [0.508, 0.033, 0.138]], [0.039, [0.519, 0.037, 0.140]], [0.041, [0.519, 0.037, 0.140]], [0.043, [0.531, 0.041, 0.142]], [0.045, [0.531, 0.041, 0.142]], [0.047, [0.542, 0.044, 0.144]], [0.049, [0.542, 0.044, 0.144]], [0.051, [0.554, 0.048, 0.146]], [0.053, [0.554, 0.048, 0.146]], [0.055, [0.565, 0.052, 0.147]], [0.057, [0.565, 0.052, 0.147]], [0.059, [0.577, 0.055, 0.149]], [0.061, [0.577, 0.055, 0.149]], [0.063, [0.588, 0.059, 0.151]], [0.065, [0.588, 0.059, 0.151]], [0.067, [0.600, 0.063, 0.153]], [0.068, [0.600, 0.063, 0.153]], [0.070, [0.612, 0.066, 0.155]], [0.072, [0.612, 0.066, 0.155]], [0.074, [0.623, 0.070, 0.157]], [0.076, [0.623, 0.070, 0.157]], [0.078, [0.635, 0.074, 0.158]], [0.080, [0.635, 0.074, 0.158]], [0.082, [0.646, 0.078, 0.160]], [0.084, [0.646, 0.078, 0.160]], [0.086, [0.658, 0.081, 0.162]], [0.088, [0.658, 0.081, 0.162]], [0.090, [0.669, 0.085, 0.164]], [0.092, [0.669, 0.085, 0.164]], [0.094, [0.681, 0.089, 0.166]], [0.096, [0.681, 0.089, 0.166]], [0.098, [0.692, 0.092, 0.168]], [0.100, [0.692, 0.092, 0.168]], [0.102, [0.701, 0.100, 0.171]], [0.104, [0.701, 0.100, 0.171]], [0.106, [0.706, 0.111, 0.176]], [0.108, [0.706, 0.111, 0.176]], [0.110, [0.712, 0.122, 0.182]], [0.112, [0.712, 0.122, 0.182]], [0.114, [0.717, 0.133, 0.187]], [0.115, [0.717, 0.133, 0.187]], [0.117, [0.723, 0.144, 0.192]], [0.119, [0.723, 0.144, 0.192]], [0.121, [0.728, 0.155, 0.197]], [0.123, [0.728, 0.155, 0.197]], [0.125, [0.734, 0.166, 0.203]], [0.127, [0.734, 0.166, 0.203]], [0.129, [0.740, 0.177, 0.208]], [0.131, [0.740, 0.177, 0.208]], [0.133, [0.745, 0.188, 0.213]], [0.135, [0.745, 0.188, 0.213]], [0.137, [0.751, 0.199, 0.218]], [0.139, [0.751, 0.199, 0.218]], [0.141, [0.756, 0.210, 0.224]], [0.143, [0.756, 0.210, 0.224]], [0.145, [0.762, 0.221, 0.229]], [0.147, [0.762, 0.221, 0.229]], [0.149, [0.767, 0.233, 0.234]], [0.151, [0.767, 0.233, 0.234]], [0.153, [0.773, 0.244, 0.239]], [0.155, [0.773, 0.244, 0.239]], [0.157, [0.778, 0.255, 0.244]], [0.159, [0.778, 0.255, 0.244]], [0.160, [0.784, 0.266, 0.250]], [0.162, [0.784, 0.266, 0.250]], [0.164, [0.789, 0.277, 0.255]], [0.166, [0.789, 0.277, 0.255]], [0.168, [0.795, 0.288, 0.260]], [0.170, [0.795, 0.288, 0.260]], [0.172, [0.800, 0.299, 0.265]], [0.174, [0.800, 0.299, 0.265]], [0.176, [0.806, 0.310, 0.271]], [0.178, [0.806, 0.310, 0.271]], [0.180, [0.812, 0.321, 0.276]], [0.182, [0.812, 0.321, 0.276]], [0.184, [0.817, 0.332, 0.281]], [0.186, [0.817, 0.332, 0.281]], [0.188, [0.823, 0.343, 0.286]], [0.190, [0.823, 0.343, 0.286]], [0.192, [0.828, 0.354, 0.292]], [0.194, [0.828, 0.354, 0.292]], [0.196, [0.834, 0.365, 0.297]], [0.198, [0.834, 0.365, 0.297]], [0.200, [0.839, 0.376, 0.302]], [0.202, [0.839, 0.376, 0.302]], [0.204, [0.844, 0.387, 0.310]], [0.205, [0.844, 0.387, 0.310]], [0.207, [0.848, 0.398, 0.318]], [0.209, [0.848, 0.398, 0.318]], [0.211, [0.853, 0.408, 0.326]], [0.213, [0.853, 0.408, 0.326]], [0.215, [0.858, 0.419, 0.335]], [0.217, [0.858, 0.419, 0.335]], [0.219, [0.862, 0.430, 0.343]], [0.221, [0.862, 0.430, 0.343]], [0.223, [0.867, 0.440, 0.351]], [0.225, [0.867, 0.440, 0.351]], [0.227, [0.872, 0.451, 0.359]], [0.229, [0.872, 0.451, 0.359]], [0.231, [0.876, 0.461, 0.367]], [0.233, [0.876, 0.461, 0.367]], [0.235, [0.881, 0.472, 0.375]], [0.237, [0.881, 0.472, 0.375]], [0.239, [0.885, 0.483, 0.383]], [0.241, [0.885, 0.483, 0.383]], [0.243, [0.890, 0.493, 0.392]], [0.245, [0.890, 0.493, 0.392]], [0.247, [0.895, 0.504, 0.400]], [0.249, [0.895, 0.504, 0.400]], [0.250, [0.899, 0.514, 0.408]], [0.252, [0.899, 0.514, 0.408]], [0.254, [0.904, 0.525, 0.416]], [0.256, [0.904, 0.525, 0.416]], [0.258, [0.908, 0.536, 0.424]], [0.260, [0.908, 0.536, 0.424]], [0.262, [0.913, 0.546, 0.432]], [0.264, [0.913, 0.546, 0.432]], [0.266, [0.918, 0.557, 0.441]], [0.268, [0.918, 0.557, 0.441]], [0.270, [0.922, 0.567, 0.449]], [0.272, [0.922, 0.567, 0.449]], [0.274, [0.927, 0.578, 0.457]], [0.276, [0.927, 0.578, 0.457]], [0.278, [0.931, 0.589, 0.465]], [0.280, [0.931, 0.589, 0.465]], [0.282, [0.936, 0.599, 0.473]], [0.284, [0.936, 0.599, 0.473]], [0.286, [0.941, 0.610, 0.481]], [0.288, [0.941, 0.610, 0.481]], [0.290, [0.945, 0.621, 0.489]], [0.292, [0.945, 0.621, 0.489]], [0.294, [0.950, 0.631, 0.498]], [0.295, [0.950, 0.631, 0.498]], [0.297, [0.955, 0.642, 0.506]], [0.299, [0.955, 0.642, 0.506]], [0.301, [0.958, 0.651, 0.515]], [0.303, [0.958, 0.651, 0.515]], [0.305, [0.959, 0.660, 0.526]], [0.307, [0.959, 0.660, 0.526]], [0.309, [0.960, 0.668, 0.536]], [0.311, [0.960, 0.668, 0.536]], [0.313, [0.962, 0.676, 0.547]], [0.315, [0.962, 0.676, 0.547]], [0.317, [0.963, 0.684, 0.558]], [0.319, [0.963, 0.684, 0.558]], [0.321, [0.964, 0.693, 0.568]], [0.323, [0.964, 0.693, 0.568]], [0.325, [0.966, 0.701, 0.579]], [0.327, [0.966, 0.701, 0.579]], [0.329, [0.967, 0.709, 0.589]], [0.331, [0.967, 0.709, 0.589]], [0.333, [0.969, 0.718, 0.600]], [0.335, [0.969, 0.718, 0.600]], [0.337, [0.970, 0.726, 0.611]], [0.339, [0.970, 0.726, 0.611]], [0.341, [0.971, 0.734, 0.621]], [0.342, [0.971, 0.734, 0.621]], [0.344, [0.973, 0.743, 0.632]], [0.346, [0.973, 0.743, 0.632]], [0.348, [0.974, 0.751, 0.642]], [0.350, [0.974, 0.751, 0.642]], [0.352, [0.976, 0.759, 0.653]], [0.354, [0.976, 0.759, 0.653]], [0.356, [0.977, 0.767, 0.664]], [0.358, [0.977, 0.767, 0.664]], [0.360, [0.978, 0.776, 0.674]], [0.362, [0.978, 0.776, 0.674]], [0.364, [0.980, 0.784, 0.685]], [0.366, [0.980, 0.784, 0.685]], [0.368, [0.981, 0.792, 0.696]], [0.370, [0.981, 0.792, 0.696]], [0.372, [0.982, 0.801, 0.706]], [0.374, [0.982, 0.801, 0.706]], [0.376, [0.984, 0.809, 0.717]], [0.378, [0.984, 0.809, 0.717]], [0.380, [0.985, 0.817, 0.727]], [0.382, [0.985, 0.817, 0.727]], [0.384, [0.987, 0.826, 0.738]], [0.386, [0.987, 0.826, 0.738]], [0.387, [0.988, 0.834, 0.749]], [0.389, [0.988, 0.834, 0.749]], [0.391, [0.989, 0.842, 0.759]], [0.393, [0.989, 0.842, 0.759]], [0.395, [0.991, 0.851, 0.770]], [0.397, [0.991, 0.851, 0.770]], [0.399, [0.992, 0.859, 0.780]], [0.401, [0.992, 0.859, 0.780]], [0.403, [0.991, 0.863, 0.788]], [0.405, [0.991, 0.863, 0.788]], [0.407, [0.990, 0.867, 0.795]], [0.409, [0.990, 0.867, 0.795]], [0.411, [0.989, 0.872, 0.803]], [0.413, [0.989, 0.872, 0.803]], [0.415, [0.988, 0.876, 0.810]], [0.417, [0.988, 0.876, 0.810]], [0.419, [0.988, 0.880, 0.817]], [0.421, [0.988, 0.880, 0.817]], [0.423, [0.987, 0.885, 0.825]], [0.425, [0.987, 0.885, 0.825]], [0.427, [0.986, 0.889, 0.832]], [0.429, [0.986, 0.889, 0.832]], [0.431, [0.985, 0.893, 0.839]], [0.432, [0.985, 0.893, 0.839]], [0.434, [0.984, 0.898, 0.847]], [0.436, [0.984, 0.898, 0.847]], [0.438, [0.983, 0.902, 0.854]], [0.440, [0.983, 0.902, 0.854]], [0.442, [0.982, 0.906, 0.862]], [0.444, [0.982, 0.906, 0.862]], [0.446, [0.981, 0.910, 0.869]], [0.448, [0.981, 0.910, 0.869]], [0.450, [0.980, 0.915, 0.876]], [0.452, [0.980, 0.915, 0.876]], [0.454, [0.979, 0.919, 0.884]], [0.456, [0.979, 0.919, 0.884]], [0.458, [0.978, 0.923, 0.891]], [0.460, [0.978, 0.923, 0.891]], [0.462, [0.977, 0.928, 0.899]], [0.464, [0.977, 0.928, 0.899]], [0.466, [0.976, 0.932, 0.906]], [0.468, [0.976, 0.932, 0.906]], [0.470, [0.976, 0.936, 0.913]], [0.472, [0.976, 0.936, 0.913]], [0.474, [0.975, 0.941, 0.921]], [0.476, [0.975, 0.941, 0.921]], [0.477, [0.974, 0.945, 0.928]], [0.479, [0.974, 0.945, 0.928]], [0.481, [0.973, 0.949, 0.935]], [0.483, [0.973, 0.949, 0.935]], [0.485, [0.972, 0.954, 0.943]], [0.487, [0.972, 0.954, 0.943]], [0.489, [0.971, 0.958, 0.950]], [0.491, [0.971, 0.958, 0.950]], [0.493, [0.970, 0.962, 0.958]], [0.495, [0.970, 0.962, 0.958]], [0.497, [0.969, 0.966, 0.965]], [0.499, [0.969, 0.966, 0.965]], [0.501, [0.966, 0.967, 0.968]], [0.503, [0.966, 0.967, 0.968]], [0.505, [0.960, 0.964, 0.967]], [0.507, [0.960, 0.964, 0.967]], [0.509, [0.954, 0.962, 0.966]], [0.511, [0.954, 0.962, 0.966]], [0.513, [0.948, 0.959, 0.965]], [0.515, [0.948, 0.959, 0.965]], [0.517, [0.942, 0.956, 0.964]], [0.519, [0.942, 0.956, 0.964]], [0.521, [0.936, 0.953, 0.963]], [0.523, [0.936, 0.953, 0.963]], [0.524, [0.931, 0.951, 0.962]], [0.526, [0.931, 0.951, 0.962]], [0.528, [0.925, 0.948, 0.961]], [0.530, [0.925, 0.948, 0.961]], [0.532, [0.919, 0.945, 0.959]], [0.534, [0.919, 0.945, 0.959]], [0.536, [0.913, 0.942, 0.958]], [0.538, [0.913, 0.942, 0.958]], [0.540, [0.907, 0.940, 0.957]], [0.542, [0.907, 0.940, 0.957]], [0.544, [0.901, 0.937, 0.956]], [0.546, [0.901, 0.937, 0.956]], [0.548, [0.896, 0.934, 0.955]], [0.550, [0.896, 0.934, 0.955]], [0.552, [0.890, 0.931, 0.954]], [0.554, [0.890, 0.931, 0.954]], [0.556, [0.884, 0.928, 0.953]], [0.558, [0.884, 0.928, 0.953]], [0.560, [0.878, 0.926, 0.952]], [0.562, [0.878, 0.926, 0.952]], [0.564, [0.872, 0.923, 0.951]], [0.566, [0.872, 0.923, 0.951]], [0.568, [0.866, 0.920, 0.950]], [0.569, [0.866, 0.920, 0.950]], [0.571, [0.861, 0.917, 0.949]], [0.573, [0.861, 0.917, 0.949]], [0.575, [0.855, 0.915, 0.948]], [0.577, [0.855, 0.915, 0.948]], [0.579, [0.849, 0.912, 0.947]], [0.581, [0.849, 0.912, 0.947]], [0.583, [0.843, 0.909, 0.945]], [0.585, [0.843, 0.909, 0.945]], [0.587, [0.837, 0.906, 0.944]], [0.589, [0.837, 0.906, 0.944]], [0.591, [0.831, 0.904, 0.943]], [0.593, [0.831, 0.904, 0.943]], [0.595, [0.825, 0.901, 0.942]], [0.597, [0.825, 0.901, 0.942]], [0.599, [0.820, 0.898, 0.941]], [0.601, [0.820, 0.898, 0.941]], [0.603, [0.810, 0.893, 0.938]], [0.605, [0.810, 0.893, 0.938]], [0.607, [0.800, 0.888, 0.936]], [0.609, [0.800, 0.888, 0.936]], [0.611, [0.791, 0.883, 0.933]], [0.613, [0.791, 0.883, 0.933]], [0.614, [0.781, 0.878, 0.930]], [0.616, [0.781, 0.878, 0.930]], [0.618, [0.771, 0.873, 0.927]], [0.620, [0.771, 0.873, 0.927]], [0.622, [0.761, 0.869, 0.925]], [0.624, [0.761, 0.869, 0.925]], [0.626, [0.752, 0.864, 0.922]], [0.628, [0.752, 0.864, 0.922]], [0.630, [0.742, 0.859, 0.919]], [0.632, [0.742, 0.859, 0.919]], [0.634, [0.732, 0.854, 0.916]], [0.636, [0.732, 0.854, 0.916]], [0.638, [0.723, 0.849, 0.913]], [0.640, [0.723, 0.849, 0.913]], [0.642, [0.713, 0.844, 0.911]], [0.644, [0.713, 0.844, 0.911]], [0.646, [0.703, 0.839, 0.908]], [0.648, [0.703, 0.839, 0.908]], [0.650, [0.694, 0.834, 0.905]], [0.652, [0.694, 0.834, 0.905]], [0.654, [0.684, 0.829, 0.902]], [0.656, [0.684, 0.829, 0.902]], [0.658, [0.674, 0.824, 0.900]], [0.659, [0.674, 0.824, 0.900]], [0.661, [0.665, 0.819, 0.897]], [0.663, [0.665, 0.819, 0.897]], [0.665, [0.655, 0.814, 0.894]], [0.667, [0.655, 0.814, 0.894]], [0.669, [0.645, 0.809, 0.891]], [0.671, [0.645, 0.809, 0.891]], [0.673, [0.636, 0.805, 0.889]], [0.675, [0.636, 0.805, 0.889]], [0.677, [0.626, 0.800, 0.886]], [0.679, [0.626, 0.800, 0.886]], [0.681, [0.616, 0.795, 0.883]], [0.683, [0.616, 0.795, 0.883]], [0.685, [0.606, 0.790, 0.880]], [0.687, [0.606, 0.790, 0.880]], [0.689, [0.597, 0.785, 0.878]], [0.691, [0.597, 0.785, 0.878]], [0.693, [0.587, 0.780, 0.875]], [0.695, [0.587, 0.780, 0.875]], [0.697, [0.577, 0.775, 0.872]], [0.699, [0.577, 0.775, 0.872]], [0.701, [0.566, 0.769, 0.869]], [0.703, [0.566, 0.769, 0.869]], [0.705, [0.554, 0.761, 0.864]], [0.706, [0.554, 0.761, 0.864]], [0.708, [0.542, 0.753, 0.860]], [0.710, [0.542, 0.753, 0.860]], [0.712, [0.530, 0.746, 0.856]], [0.714, [0.530, 0.746, 0.856]], [0.716, [0.518, 0.738, 0.852]], [0.718, [0.518, 0.738, 0.852]], [0.720, [0.506, 0.730, 0.848]], [0.722, [0.506, 0.730, 0.848]], [0.724, [0.494, 0.723, 0.844]], [0.726, [0.494, 0.723, 0.844]], [0.728, [0.481, 0.715, 0.839]], [0.730, [0.481, 0.715, 0.839]], [0.732, [0.469, 0.707, 0.835]], [0.734, [0.469, 0.707, 0.835]], [0.736, [0.457, 0.700, 0.831]], [0.738, [0.457, 0.700, 0.831]], [0.740, [0.445, 0.692, 0.827]], [0.742, [0.445, 0.692, 0.827]], [0.744, [0.433, 0.684, 0.823]], [0.746, [0.433, 0.684, 0.823]], [0.748, [0.421, 0.676, 0.819]], [0.750, [0.421, 0.676, 0.819]], [0.751, [0.409, 0.669, 0.815]], [0.753, [0.409, 0.669, 0.815]], [0.755, [0.396, 0.661, 0.810]], [0.757, [0.396, 0.661, 0.810]], [0.759, [0.384, 0.653, 0.806]], [0.761, [0.384, 0.653, 0.806]], [0.763, [0.372, 0.646, 0.802]], [0.765, [0.372, 0.646, 0.802]], [0.767, [0.360, 0.638, 0.798]], [0.769, [0.360, 0.638, 0.798]], [0.771, [0.348, 0.630, 0.794]], [0.773, [0.348, 0.630, 0.794]], [0.775, [0.336, 0.623, 0.790]], [0.777, [0.336, 0.623, 0.790]], [0.779, [0.323, 0.615, 0.785]], [0.781, [0.323, 0.615, 0.785]], [0.783, [0.311, 0.607, 0.781]], [0.785, [0.311, 0.607, 0.781]], [0.787, [0.299, 0.600, 0.777]], [0.789, [0.299, 0.600, 0.777]], [0.791, [0.287, 0.592, 0.773]], [0.793, [0.287, 0.592, 0.773]], [0.795, [0.275, 0.584, 0.769]], [0.796, [0.275, 0.584, 0.769]], [0.798, [0.263, 0.576, 0.765]], [0.800, [0.263, 0.576, 0.765]], [0.802, [0.258, 0.570, 0.761]], [0.804, [0.258, 0.570, 0.761]], [0.806, [0.252, 0.563, 0.758]], [0.808, [0.252, 0.563, 0.758]], [0.810, [0.247, 0.556, 0.754]], [0.812, [0.247, 0.556, 0.754]], [0.814, [0.242, 0.549, 0.751]], [0.816, [0.242, 0.549, 0.751]], [0.818, [0.237, 0.542, 0.747]], [0.820, [0.237, 0.542, 0.747]], [0.822, [0.231, 0.535, 0.743]], [0.824, [0.231, 0.535, 0.743]], [0.826, [0.226, 0.528, 0.740]], [0.828, [0.226, 0.528, 0.740]], [0.830, [0.221, 0.521, 0.736]], [0.832, [0.221, 0.521, 0.736]], [0.834, [0.216, 0.514, 0.733]], [0.836, [0.216, 0.514, 0.733]], [0.838, [0.210, 0.507, 0.729]], [0.840, [0.210, 0.507, 0.729]], [0.841, [0.205, 0.500, 0.726]], [0.843, [0.205, 0.500, 0.726]], [0.845, [0.200, 0.493, 0.722]], [0.847, [0.200, 0.493, 0.722]], [0.849, [0.195, 0.487, 0.719]], [0.851, [0.195, 0.487, 0.719]], [0.853, [0.190, 0.480, 0.715]], [0.855, [0.190, 0.480, 0.715]], [0.857, [0.184, 0.473, 0.712]], [0.859, [0.184, 0.473, 0.712]], [0.861, [0.179, 0.466, 0.708]], [0.863, [0.179, 0.466, 0.708]], [0.865, [0.174, 0.459, 0.705]], [0.867, [0.174, 0.459, 0.705]], [0.869, [0.169, 0.452, 0.701]], [0.871, [0.169, 0.452, 0.701]], [0.873, [0.163, 0.445, 0.698]], [0.875, [0.163, 0.445, 0.698]], [0.877, [0.158, 0.438, 0.694]], [0.879, [0.158, 0.438, 0.694]], [0.881, [0.153, 0.431, 0.690]], [0.883, [0.153, 0.431, 0.690]], [0.885, [0.148, 0.424, 0.687]], [0.886, [0.148, 0.424, 0.687]], [0.888, [0.142, 0.417, 0.683]], [0.890, [0.142, 0.417, 0.683]], [0.892, [0.137, 0.410, 0.680]], [0.894, [0.137, 0.410, 0.680]], [0.896, [0.132, 0.403, 0.676]], [0.898, [0.132, 0.403, 0.676]], [0.900, [0.127, 0.396, 0.669]], [0.902, [0.127, 0.396, 0.669]], [0.904, [0.123, 0.388, 0.657]], [0.906, [0.123, 0.388, 0.657]], [0.908, [0.119, 0.379, 0.646]], [0.910, [0.119, 0.379, 0.646]], [0.912, [0.114, 0.371, 0.634]], [0.914, [0.114, 0.371, 0.634]], [0.916, [0.110, 0.363, 0.623]], [0.918, [0.110, 0.363, 0.623]], [0.920, [0.106, 0.354, 0.611]], [0.922, [0.106, 0.354, 0.611]], [0.924, [0.101, 0.346, 0.600]], [0.926, [0.101, 0.346, 0.600]], [0.928, [0.097, 0.338, 0.588]], [0.930, [0.097, 0.338, 0.588]], [0.932, [0.093, 0.329, 0.576]], [0.933, [0.093, 0.329, 0.576]], [0.935, [0.089, 0.321, 0.565]], [0.937, [0.089, 0.321, 0.565]], [0.939, [0.084, 0.313, 0.553]], [0.941, [0.084, 0.313, 0.553]], [0.943, [0.080, 0.304, 0.542]], [0.945, [0.080, 0.304, 0.542]], [0.947, [0.076, 0.296, 0.530]], [0.949, [0.076, 0.296, 0.530]], [0.951, [0.071, 0.288, 0.519]], [0.953, [0.071, 0.288, 0.519]], [0.955, [0.067, 0.280, 0.507]], [0.957, [0.067, 0.280, 0.507]], [0.959, [0.063, 0.271, 0.496]], [0.961, [0.063, 0.271, 0.496]], [0.963, [0.058, 0.263, 0.484]], [0.965, [0.058, 0.263, 0.484]], [0.967, [0.054, 0.255, 0.473]], [0.969, [0.054, 0.255, 0.473]], [0.971, [0.050, 0.246, 0.461]], [0.973, [0.050, 0.246, 0.461]], [0.975, [0.045, 0.238, 0.450]], [0.977, [0.045, 0.238, 0.450]], [0.978, [0.041, 0.230, 0.438]], [0.980, [0.041, 0.230, 0.438]], [0.982, [0.037, 0.221, 0.427]], [0.984, [0.037, 0.221, 0.427]], [0.986, [0.033, 0.213, 0.415]], [0.988, [0.033, 0.213, 0.415]], [0.990, [0.028, 0.205, 0.403]], [0.992, [0.028, 0.205, 0.403]], [0.994, [0.024, 0.197, 0.392]], [0.996, [0.024, 0.197, 0.392]], [0.998, [0.020, 0.188, 0.380]], [1.000, [0.020, 0.188, 0.380]]];
H.colormap_RdGy = [[0.000, [0.404, 0.000, 0.122]], [0.002, [0.404, 0.000, 0.122]], [0.004, [0.415, 0.004, 0.123]], [0.006, [0.415, 0.004, 0.123]], [0.008, [0.427, 0.007, 0.125]], [0.010, [0.427, 0.007, 0.125]], [0.012, [0.439, 0.011, 0.127]], [0.014, [0.439, 0.011, 0.127]], [0.016, [0.450, 0.015, 0.129]], [0.018, [0.450, 0.015, 0.129]], [0.020, [0.462, 0.018, 0.131]], [0.022, [0.462, 0.018, 0.131]], [0.023, [0.473, 0.022, 0.133]], [0.025, [0.473, 0.022, 0.133]], [0.027, [0.485, 0.026, 0.134]], [0.029, [0.485, 0.026, 0.134]], [0.031, [0.496, 0.030, 0.136]], [0.033, [0.496, 0.030, 0.136]], [0.035, [0.508, 0.033, 0.138]], [0.037, [0.508, 0.033, 0.138]], [0.039, [0.519, 0.037, 0.140]], [0.041, [0.519, 0.037, 0.140]], [0.043, [0.531, 0.041, 0.142]], [0.045, [0.531, 0.041, 0.142]], [0.047, [0.542, 0.044, 0.144]], [0.049, [0.542, 0.044, 0.144]], [0.051, [0.554, 0.048, 0.146]], [0.053, [0.554, 0.048, 0.146]], [0.055, [0.565, 0.052, 0.147]], [0.057, [0.565, 0.052, 0.147]], [0.059, [0.577, 0.055, 0.149]], [0.061, [0.577, 0.055, 0.149]], [0.063, [0.588, 0.059, 0.151]], [0.065, [0.588, 0.059, 0.151]], [0.067, [0.600, 0.063, 0.153]], [0.068, [0.600, 0.063, 0.153]], [0.070, [0.612, 0.066, 0.155]], [0.072, [0.612, 0.066, 0.155]], [0.074, [0.623, 0.070, 0.157]], [0.076, [0.623, 0.070, 0.157]], [0.078, [0.635, 0.074, 0.158]], [0.080, [0.635, 0.074, 0.158]], [0.082, [0.646, 0.078, 0.160]], [0.084, [0.646, 0.078, 0.160]], [0.086, [0.658, 0.081, 0.162]], [0.088, [0.658, 0.081, 0.162]], [0.090, [0.669, 0.085, 0.164]], [0.092, [0.669, 0.085, 0.164]], [0.094, [0.681, 0.089, 0.166]], [0.096, [0.681, 0.089, 0.166]], [0.098, [0.692, 0.092, 0.168]], [0.100, [0.692, 0.092, 0.168]], [0.102, [0.701, 0.100, 0.171]], [0.104, [0.701, 0.100, 0.171]], [0.106, [0.706, 0.111, 0.176]], [0.108, [0.706, 0.111, 0.176]], [0.110, [0.712, 0.122, 0.182]], [0.112, [0.712, 0.122, 0.182]], [0.114, [0.717, 0.133, 0.187]], [0.115, [0.717, 0.133, 0.187]], [0.117, [0.723, 0.144, 0.192]], [0.119, [0.723, 0.144, 0.192]], [0.121, [0.728, 0.155, 0.197]], [0.123, [0.728, 0.155, 0.197]], [0.125, [0.734, 0.166, 0.203]], [0.127, [0.734, 0.166, 0.203]], [0.129, [0.740, 0.177, 0.208]], [0.131, [0.740, 0.177, 0.208]], [0.133, [0.745, 0.188, 0.213]], [0.135, [0.745, 0.188, 0.213]], [0.137, [0.751, 0.199, 0.218]], [0.139, [0.751, 0.199, 0.218]], [0.141, [0.756, 0.210, 0.224]], [0.143, [0.756, 0.210, 0.224]], [0.145, [0.762, 0.221, 0.229]], [0.147, [0.762, 0.221, 0.229]], [0.149, [0.767, 0.233, 0.234]], [0.151, [0.767, 0.233, 0.234]], [0.153, [0.773, 0.244, 0.239]], [0.155, [0.773, 0.244, 0.239]], [0.157, [0.778, 0.255, 0.244]], [0.159, [0.778, 0.255, 0.244]], [0.160, [0.784, 0.266, 0.250]], [0.162, [0.784, 0.266, 0.250]], [0.164, [0.789, 0.277, 0.255]], [0.166, [0.789, 0.277, 0.255]], [0.168, [0.795, 0.288, 0.260]], [0.170, [0.795, 0.288, 0.260]], [0.172, [0.800, 0.299, 0.265]], [0.174, [0.800, 0.299, 0.265]], [0.176, [0.806, 0.310, 0.271]], [0.178, [0.806, 0.310, 0.271]], [0.180, [0.812, 0.321, 0.276]], [0.182, [0.812, 0.321, 0.276]], [0.184, [0.817, 0.332, 0.281]], [0.186, [0.817, 0.332, 0.281]], [0.188, [0.823, 0.343, 0.286]], [0.190, [0.823, 0.343, 0.286]], [0.192, [0.828, 0.354, 0.292]], [0.194, [0.828, 0.354, 0.292]], [0.196, [0.834, 0.365, 0.297]], [0.198, [0.834, 0.365, 0.297]], [0.200, [0.839, 0.376, 0.302]], [0.202, [0.839, 0.376, 0.302]], [0.204, [0.844, 0.387, 0.310]], [0.205, [0.844, 0.387, 0.310]], [0.207, [0.848, 0.398, 0.318]], [0.209, [0.848, 0.398, 0.318]], [0.211, [0.853, 0.408, 0.326]], [0.213, [0.853, 0.408, 0.326]], [0.215, [0.858, 0.419, 0.335]], [0.217, [0.858, 0.419, 0.335]], [0.219, [0.862, 0.430, 0.343]], [0.221, [0.862, 0.430, 0.343]], [0.223, [0.867, 0.440, 0.351]], [0.225, [0.867, 0.440, 0.351]], [0.227, [0.872, 0.451, 0.359]], [0.229, [0.872, 0.451, 0.359]], [0.231, [0.876, 0.461, 0.367]], [0.233, [0.876, 0.461, 0.367]], [0.235, [0.881, 0.472, 0.375]], [0.237, [0.881, 0.472, 0.375]], [0.239, [0.885, 0.483, 0.383]], [0.241, [0.885, 0.483, 0.383]], [0.243, [0.890, 0.493, 0.392]], [0.245, [0.890, 0.493, 0.392]], [0.247, [0.895, 0.504, 0.400]], [0.249, [0.895, 0.504, 0.400]], [0.250, [0.899, 0.514, 0.408]], [0.252, [0.899, 0.514, 0.408]], [0.254, [0.904, 0.525, 0.416]], [0.256, [0.904, 0.525, 0.416]], [0.258, [0.908, 0.536, 0.424]], [0.260, [0.908, 0.536, 0.424]], [0.262, [0.913, 0.546, 0.432]], [0.264, [0.913, 0.546, 0.432]], [0.266, [0.918, 0.557, 0.441]], [0.268, [0.918, 0.557, 0.441]], [0.270, [0.922, 0.567, 0.449]], [0.272, [0.922, 0.567, 0.449]], [0.274, [0.927, 0.578, 0.457]], [0.276, [0.927, 0.578, 0.457]], [0.278, [0.931, 0.589, 0.465]], [0.280, [0.931, 0.589, 0.465]], [0.282, [0.936, 0.599, 0.473]], [0.284, [0.936, 0.599, 0.473]], [0.286, [0.941, 0.610, 0.481]], [0.288, [0.941, 0.610, 0.481]], [0.290, [0.945, 0.621, 0.489]], [0.292, [0.945, 0.621, 0.489]], [0.294, [0.950, 0.631, 0.498]], [0.295, [0.950, 0.631, 0.498]], [0.297, [0.955, 0.642, 0.506]], [0.299, [0.955, 0.642, 0.506]], [0.301, [0.958, 0.651, 0.515]], [0.303, [0.958, 0.651, 0.515]], [0.305, [0.959, 0.660, 0.526]], [0.307, [0.959, 0.660, 0.526]], [0.309, [0.960, 0.668, 0.536]], [0.311, [0.960, 0.668, 0.536]], [0.313, [0.962, 0.676, 0.547]], [0.315, [0.962, 0.676, 0.547]], [0.317, [0.963, 0.684, 0.558]], [0.319, [0.963, 0.684, 0.558]], [0.321, [0.964, 0.693, 0.568]], [0.323, [0.964, 0.693, 0.568]], [0.325, [0.966, 0.701, 0.579]], [0.327, [0.966, 0.701, 0.579]], [0.329, [0.967, 0.709, 0.589]], [0.331, [0.967, 0.709, 0.589]], [0.333, [0.969, 0.718, 0.600]], [0.335, [0.969, 0.718, 0.600]], [0.337, [0.970, 0.726, 0.611]], [0.339, [0.970, 0.726, 0.611]], [0.341, [0.971, 0.734, 0.621]], [0.342, [0.971, 0.734, 0.621]], [0.344, [0.973, 0.743, 0.632]], [0.346, [0.973, 0.743, 0.632]], [0.348, [0.974, 0.751, 0.642]], [0.350, [0.974, 0.751, 0.642]], [0.352, [0.976, 0.759, 0.653]], [0.354, [0.976, 0.759, 0.653]], [0.356, [0.977, 0.767, 0.664]], [0.358, [0.977, 0.767, 0.664]], [0.360, [0.978, 0.776, 0.674]], [0.362, [0.978, 0.776, 0.674]], [0.364, [0.980, 0.784, 0.685]], [0.366, [0.980, 0.784, 0.685]], [0.368, [0.981, 0.792, 0.696]], [0.370, [0.981, 0.792, 0.696]], [0.372, [0.982, 0.801, 0.706]], [0.374, [0.982, 0.801, 0.706]], [0.376, [0.984, 0.809, 0.717]], [0.378, [0.984, 0.809, 0.717]], [0.380, [0.985, 0.817, 0.727]], [0.382, [0.985, 0.817, 0.727]], [0.384, [0.987, 0.826, 0.738]], [0.386, [0.987, 0.826, 0.738]], [0.387, [0.988, 0.834, 0.749]], [0.389, [0.988, 0.834, 0.749]], [0.391, [0.989, 0.842, 0.759]], [0.393, [0.989, 0.842, 0.759]], [0.395, [0.991, 0.851, 0.770]], [0.397, [0.991, 0.851, 0.770]], [0.399, [0.992, 0.859, 0.780]], [0.401, [0.992, 0.859, 0.780]], [0.403, [0.992, 0.864, 0.789]], [0.405, [0.992, 0.864, 0.789]], [0.407, [0.993, 0.870, 0.798]], [0.409, [0.993, 0.870, 0.798]], [0.411, [0.993, 0.875, 0.806]], [0.413, [0.993, 0.875, 0.806]], [0.415, [0.993, 0.881, 0.815]], [0.417, [0.993, 0.881, 0.815]], [0.419, [0.994, 0.887, 0.823]], [0.421, [0.994, 0.887, 0.823]], [0.423, [0.994, 0.892, 0.832]], [0.425, [0.994, 0.892, 0.832]], [0.427, [0.994, 0.898, 0.841]], [0.429, [0.994, 0.898, 0.841]], [0.431, [0.995, 0.903, 0.849]], [0.432, [0.995, 0.903, 0.849]], [0.434, [0.995, 0.909, 0.858]], [0.436, [0.995, 0.909, 0.858]], [0.438, [0.995, 0.914, 0.867]], [0.440, [0.995, 0.914, 0.867]], [0.442, [0.996, 0.920, 0.875]], [0.444, [0.996, 0.920, 0.875]], [0.446, [0.996, 0.925, 0.884]], [0.448, [0.996, 0.925, 0.884]], [0.450, [0.996, 0.931, 0.892]], [0.452, [0.996, 0.931, 0.892]], [0.454, [0.996, 0.936, 0.901]], [0.456, [0.996, 0.936, 0.901]], [0.458, [0.997, 0.942, 0.910]], [0.460, [0.997, 0.942, 0.910]], [0.462, [0.997, 0.947, 0.918]], [0.464, [0.997, 0.947, 0.918]], [0.466, [0.997, 0.953, 0.927]], [0.468, [0.997, 0.953, 0.927]], [0.470, [0.998, 0.958, 0.935]], [0.472, [0.998, 0.958, 0.935]], [0.474, [0.998, 0.964, 0.944]], [0.476, [0.998, 0.964, 0.944]], [0.477, [0.998, 0.970, 0.953]], [0.479, [0.998, 0.970, 0.953]], [0.481, [0.999, 0.975, 0.961]], [0.483, [0.999, 0.975, 0.961]], [0.485, [0.999, 0.981, 0.970]], [0.487, [0.999, 0.981, 0.970]], [0.489, [0.999, 0.986, 0.978]], [0.491, [0.999, 0.986, 0.978]], [0.493, [1.000, 0.992, 0.987]], [0.495, [1.000, 0.992, 0.987]], [0.497, [1.000, 0.997, 0.996]], [0.499, [1.000, 0.997, 0.996]], [0.501, [0.998, 0.998, 0.998]], [0.503, [0.998, 0.998, 0.998]], [0.505, [0.993, 0.993, 0.993]], [0.507, [0.993, 0.993, 0.993]], [0.509, [0.988, 0.988, 0.988]], [0.511, [0.988, 0.988, 0.988]], [0.513, [0.983, 0.983, 0.983]], [0.515, [0.983, 0.983, 0.983]], [0.517, [0.979, 0.979, 0.979]], [0.519, [0.979, 0.979, 0.979]], [0.521, [0.974, 0.974, 0.974]], [0.523, [0.974, 0.974, 0.974]], [0.524, [0.969, 0.969, 0.969]], [0.526, [0.969, 0.969, 0.969]], [0.528, [0.964, 0.964, 0.964]], [0.530, [0.964, 0.964, 0.964]], [0.532, [0.959, 0.959, 0.959]], [0.534, [0.959, 0.959, 0.959]], [0.536, [0.955, 0.955, 0.955]], [0.538, [0.955, 0.955, 0.955]], [0.540, [0.950, 0.950, 0.950]], [0.542, [0.950, 0.950, 0.950]], [0.544, [0.945, 0.945, 0.945]], [0.546, [0.945, 0.945, 0.945]], [0.548, [0.940, 0.940, 0.940]], [0.550, [0.940, 0.940, 0.940]], [0.552, [0.936, 0.936, 0.936]], [0.554, [0.936, 0.936, 0.936]], [0.556, [0.931, 0.931, 0.931]], [0.558, [0.931, 0.931, 0.931]], [0.560, [0.926, 0.926, 0.926]], [0.562, [0.926, 0.926, 0.926]], [0.564, [0.921, 0.921, 0.921]], [0.566, [0.921, 0.921, 0.921]], [0.568, [0.917, 0.917, 0.917]], [0.569, [0.917, 0.917, 0.917]], [0.571, [0.912, 0.912, 0.912]], [0.573, [0.912, 0.912, 0.912]], [0.575, [0.907, 0.907, 0.907]], [0.577, [0.907, 0.907, 0.907]], [0.579, [0.902, 0.902, 0.902]], [0.581, [0.902, 0.902, 0.902]], [0.583, [0.898, 0.898, 0.898]], [0.585, [0.898, 0.898, 0.898]], [0.587, [0.893, 0.893, 0.893]], [0.589, [0.893, 0.893, 0.893]], [0.591, [0.888, 0.888, 0.888]], [0.593, [0.888, 0.888, 0.888]], [0.595, [0.883, 0.883, 0.883]], [0.597, [0.883, 0.883, 0.883]], [0.599, [0.878, 0.878, 0.878]], [0.601, [0.878, 0.878, 0.878]], [0.603, [0.873, 0.873, 0.873]], [0.605, [0.873, 0.873, 0.873]], [0.607, [0.867, 0.867, 0.867]], [0.609, [0.867, 0.867, 0.867]], [0.611, [0.861, 0.861, 0.861]], [0.613, [0.861, 0.861, 0.861]], [0.614, [0.855, 0.855, 0.855]], [0.616, [0.855, 0.855, 0.855]], [0.618, [0.849, 0.849, 0.849]], [0.620, [0.849, 0.849, 0.849]], [0.622, [0.843, 0.843, 0.843]], [0.624, [0.843, 0.843, 0.843]], [0.626, [0.838, 0.838, 0.838]], [0.628, [0.838, 0.838, 0.838]], [0.630, [0.832, 0.832, 0.832]], [0.632, [0.832, 0.832, 0.832]], [0.634, [0.826, 0.826, 0.826]], [0.636, [0.826, 0.826, 0.826]], [0.638, [0.820, 0.820, 0.820]], [0.640, [0.820, 0.820, 0.820]], [0.642, [0.814, 0.814, 0.814]], [0.644, [0.814, 0.814, 0.814]], [0.646, [0.808, 0.808, 0.808]], [0.648, [0.808, 0.808, 0.808]], [0.650, [0.802, 0.802, 0.802]], [0.652, [0.802, 0.802, 0.802]], [0.654, [0.797, 0.797, 0.797]], [0.656, [0.797, 0.797, 0.797]], [0.658, [0.791, 0.791, 0.791]], [0.659, [0.791, 0.791, 0.791]], [0.661, [0.785, 0.785, 0.785]], [0.663, [0.785, 0.785, 0.785]], [0.665, [0.779, 0.779, 0.779]], [0.667, [0.779, 0.779, 0.779]], [0.669, [0.773, 0.773, 0.773]], [0.671, [0.773, 0.773, 0.773]], [0.673, [0.767, 0.767, 0.767]], [0.675, [0.767, 0.767, 0.767]], [0.677, [0.762, 0.762, 0.762]], [0.679, [0.762, 0.762, 0.762]], [0.681, [0.756, 0.756, 0.756]], [0.683, [0.756, 0.756, 0.756]], [0.685, [0.750, 0.750, 0.750]], [0.687, [0.750, 0.750, 0.750]], [0.689, [0.744, 0.744, 0.744]], [0.691, [0.744, 0.744, 0.744]], [0.693, [0.738, 0.738, 0.738]], [0.695, [0.738, 0.738, 0.738]], [0.697, [0.732, 0.732, 0.732]], [0.699, [0.732, 0.732, 0.732]], [0.701, [0.725, 0.725, 0.725]], [0.703, [0.725, 0.725, 0.725]], [0.705, [0.718, 0.718, 0.718]], [0.706, [0.718, 0.718, 0.718]], [0.708, [0.710, 0.710, 0.710]], [0.710, [0.710, 0.710, 0.710]], [0.712, [0.702, 0.702, 0.702]], [0.714, [0.702, 0.702, 0.702]], [0.716, [0.694, 0.694, 0.694]], [0.718, [0.694, 0.694, 0.694]], [0.720, [0.686, 0.686, 0.686]], [0.722, [0.686, 0.686, 0.686]], [0.724, [0.678, 0.678, 0.678]], [0.726, [0.678, 0.678, 0.678]], [0.728, [0.671, 0.671, 0.671]], [0.730, [0.671, 0.671, 0.671]], [0.732, [0.663, 0.663, 0.663]], [0.734, [0.663, 0.663, 0.663]], [0.736, [0.655, 0.655, 0.655]], [0.738, [0.655, 0.655, 0.655]], [0.740, [0.647, 0.647, 0.647]], [0.742, [0.647, 0.647, 0.647]], [0.744, [0.639, 0.639, 0.639]], [0.746, [0.639, 0.639, 0.639]], [0.748, [0.631, 0.631, 0.631]], [0.750, [0.631, 0.631, 0.631]], [0.751, [0.624, 0.624, 0.624]], [0.753, [0.624, 0.624, 0.624]], [0.755, [0.616, 0.616, 0.616]], [0.757, [0.616, 0.616, 0.616]], [0.759, [0.608, 0.608, 0.608]], [0.761, [0.608, 0.608, 0.608]], [0.763, [0.600, 0.600, 0.600]], [0.765, [0.600, 0.600, 0.600]], [0.767, [0.592, 0.592, 0.592]], [0.769, [0.592, 0.592, 0.592]], [0.771, [0.584, 0.584, 0.584]], [0.773, [0.584, 0.584, 0.584]], [0.775, [0.576, 0.576, 0.576]], [0.777, [0.576, 0.576, 0.576]], [0.779, [0.569, 0.569, 0.569]], [0.781, [0.569, 0.569, 0.569]], [0.783, [0.561, 0.561, 0.561]], [0.785, [0.561, 0.561, 0.561]], [0.787, [0.553, 0.553, 0.553]], [0.789, [0.553, 0.553, 0.553]], [0.791, [0.545, 0.545, 0.545]], [0.793, [0.545, 0.545, 0.545]], [0.795, [0.537, 0.537, 0.537]], [0.796, [0.537, 0.537, 0.537]], [0.798, [0.529, 0.529, 0.529]], [0.800, [0.529, 0.529, 0.529]], [0.802, [0.520, 0.520, 0.520]], [0.804, [0.520, 0.520, 0.520]], [0.806, [0.512, 0.512, 0.512]], [0.808, [0.512, 0.512, 0.512]], [0.810, [0.503, 0.503, 0.503]], [0.812, [0.503, 0.503, 0.503]], [0.814, [0.494, 0.494, 0.494]], [0.816, [0.494, 0.494, 0.494]], [0.818, [0.485, 0.485, 0.485]], [0.820, [0.485, 0.485, 0.485]], [0.822, [0.476, 0.476, 0.476]], [0.824, [0.476, 0.476, 0.476]], [0.826, [0.467, 0.467, 0.467]], [0.828, [0.467, 0.467, 0.467]], [0.830, [0.458, 0.458, 0.458]], [0.832, [0.458, 0.458, 0.458]], [0.834, [0.449, 0.449, 0.449]], [0.836, [0.449, 0.449, 0.449]], [0.838, [0.440, 0.440, 0.440]], [0.840, [0.440, 0.440, 0.440]], [0.841, [0.431, 0.431, 0.431]], [0.843, [0.431, 0.431, 0.431]], [0.845, [0.422, 0.422, 0.422]], [0.847, [0.422, 0.422, 0.422]], [0.849, [0.413, 0.413, 0.413]], [0.851, [0.413, 0.413, 0.413]], [0.853, [0.405, 0.405, 0.405]], [0.855, [0.405, 0.405, 0.405]], [0.857, [0.396, 0.396, 0.396]], [0.859, [0.396, 0.396, 0.396]], [0.861, [0.387, 0.387, 0.387]], [0.863, [0.387, 0.387, 0.387]], [0.865, [0.378, 0.378, 0.378]], [0.867, [0.378, 0.378, 0.378]], [0.869, [0.369, 0.369, 0.369]], [0.871, [0.369, 0.369, 0.369]], [0.873, [0.360, 0.360, 0.360]], [0.875, [0.360, 0.360, 0.360]], [0.877, [0.351, 0.351, 0.351]], [0.879, [0.351, 0.351, 0.351]], [0.881, [0.342, 0.342, 0.342]], [0.883, [0.342, 0.342, 0.342]], [0.885, [0.333, 0.333, 0.333]], [0.886, [0.333, 0.333, 0.333]], [0.888, [0.324, 0.324, 0.324]], [0.890, [0.324, 0.324, 0.324]], [0.892, [0.315, 0.315, 0.315]], [0.894, [0.315, 0.315, 0.315]], [0.896, [0.306, 0.306, 0.306]], [0.898, [0.306, 0.306, 0.306]], [0.900, [0.298, 0.298, 0.298]], [0.902, [0.298, 0.298, 0.298]], [0.904, [0.290, 0.290, 0.290]], [0.906, [0.290, 0.290, 0.290]], [0.908, [0.282, 0.282, 0.282]], [0.910, [0.282, 0.282, 0.282]], [0.912, [0.275, 0.275, 0.275]], [0.914, [0.275, 0.275, 0.275]], [0.916, [0.267, 0.267, 0.267]], [0.918, [0.267, 0.267, 0.267]], [0.920, [0.259, 0.259, 0.259]], [0.922, [0.259, 0.259, 0.259]], [0.924, [0.251, 0.251, 0.251]], [0.926, [0.251, 0.251, 0.251]], [0.928, [0.243, 0.243, 0.243]], [0.930, [0.243, 0.243, 0.243]], [0.932, [0.235, 0.235, 0.235]], [0.933, [0.235, 0.235, 0.235]], [0.935, [0.227, 0.227, 0.227]], [0.937, [0.227, 0.227, 0.227]], [0.939, [0.220, 0.220, 0.220]], [0.941, [0.220, 0.220, 0.220]], [0.943, [0.212, 0.212, 0.212]], [0.945, [0.212, 0.212, 0.212]], [0.947, [0.204, 0.204, 0.204]], [0.949, [0.204, 0.204, 0.204]], [0.951, [0.196, 0.196, 0.196]], [0.953, [0.196, 0.196, 0.196]], [0.955, [0.188, 0.188, 0.188]], [0.957, [0.188, 0.188, 0.188]], [0.959, [0.180, 0.180, 0.180]], [0.961, [0.180, 0.180, 0.180]], [0.963, [0.173, 0.173, 0.173]], [0.965, [0.173, 0.173, 0.173]], [0.967, [0.165, 0.165, 0.165]], [0.969, [0.165, 0.165, 0.165]], [0.971, [0.157, 0.157, 0.157]], [0.973, [0.157, 0.157, 0.157]], [0.975, [0.149, 0.149, 0.149]], [0.977, [0.149, 0.149, 0.149]], [0.978, [0.141, 0.141, 0.141]], [0.980, [0.141, 0.141, 0.141]], [0.982, [0.133, 0.133, 0.133]], [0.984, [0.133, 0.133, 0.133]], [0.986, [0.125, 0.125, 0.125]], [0.988, [0.125, 0.125, 0.125]], [0.990, [0.118, 0.118, 0.118]], [0.992, [0.118, 0.118, 0.118]], [0.994, [0.110, 0.110, 0.110]], [0.996, [0.110, 0.110, 0.110]], [0.998, [0.102, 0.102, 0.102]], [1.000, [0.102, 0.102, 0.102]]];
H.colormap_RdPu = [[0.000, [1.000, 0.969, 0.953]], [0.002, [1.000, 0.969, 0.953]], [0.004, [1.000, 0.966, 0.950]], [0.006, [1.000, 0.966, 0.950]], [0.008, [1.000, 0.963, 0.948]], [0.010, [1.000, 0.963, 0.948]], [0.012, [0.999, 0.960, 0.945]], [0.014, [0.999, 0.960, 0.945]], [0.016, [0.999, 0.957, 0.942]], [0.018, [0.999, 0.957, 0.942]], [0.020, [0.999, 0.954, 0.939]], [0.022, [0.999, 0.954, 0.939]], [0.023, [0.999, 0.952, 0.937]], [0.025, [0.999, 0.952, 0.937]], [0.027, [0.998, 0.949, 0.934]], [0.029, [0.998, 0.949, 0.934]], [0.031, [0.998, 0.946, 0.931]], [0.033, [0.998, 0.946, 0.931]], [0.035, [0.998, 0.943, 0.929]], [0.037, [0.998, 0.943, 0.929]], [0.039, [0.998, 0.940, 0.926]], [0.041, [0.998, 0.940, 0.926]], [0.043, [0.997, 0.938, 0.923]], [0.045, [0.997, 0.938, 0.923]], [0.047, [0.997, 0.935, 0.920]], [0.049, [0.997, 0.935, 0.920]], [0.051, [0.997, 0.932, 0.918]], [0.053, [0.997, 0.932, 0.918]], [0.055, [0.997, 0.929, 0.915]], [0.057, [0.997, 0.929, 0.915]], [0.059, [0.996, 0.926, 0.912]], [0.061, [0.996, 0.926, 0.912]], [0.063, [0.996, 0.923, 0.910]], [0.065, [0.996, 0.923, 0.910]], [0.067, [0.996, 0.921, 0.907]], [0.068, [0.996, 0.921, 0.907]], [0.070, [0.996, 0.918, 0.904]], [0.072, [0.996, 0.918, 0.904]], [0.074, [0.995, 0.915, 0.902]], [0.076, [0.995, 0.915, 0.902]], [0.078, [0.995, 0.912, 0.899]], [0.080, [0.995, 0.912, 0.899]], [0.082, [0.995, 0.909, 0.896]], [0.084, [0.995, 0.909, 0.896]], [0.086, [0.995, 0.906, 0.893]], [0.088, [0.995, 0.906, 0.893]], [0.090, [0.994, 0.904, 0.891]], [0.092, [0.994, 0.904, 0.891]], [0.094, [0.994, 0.901, 0.888]], [0.096, [0.994, 0.901, 0.888]], [0.098, [0.994, 0.898, 0.885]], [0.100, [0.994, 0.898, 0.885]], [0.102, [0.994, 0.895, 0.883]], [0.104, [0.994, 0.895, 0.883]], [0.106, [0.993, 0.892, 0.880]], [0.108, [0.993, 0.892, 0.880]], [0.110, [0.993, 0.889, 0.877]], [0.112, [0.993, 0.889, 0.877]], [0.114, [0.993, 0.887, 0.874]], [0.115, [0.993, 0.887, 0.874]], [0.117, [0.993, 0.884, 0.872]], [0.119, [0.993, 0.884, 0.872]], [0.121, [0.992, 0.881, 0.869]], [0.123, [0.992, 0.881, 0.869]], [0.125, [0.992, 0.878, 0.866]], [0.127, [0.992, 0.878, 0.866]], [0.129, [0.992, 0.875, 0.863]], [0.131, [0.992, 0.875, 0.863]], [0.133, [0.992, 0.871, 0.859]], [0.135, [0.992, 0.871, 0.859]], [0.137, [0.992, 0.868, 0.856]], [0.139, [0.992, 0.868, 0.856]], [0.141, [0.992, 0.865, 0.852]], [0.143, [0.992, 0.865, 0.852]], [0.145, [0.992, 0.861, 0.848]], [0.147, [0.992, 0.861, 0.848]], [0.149, [0.991, 0.858, 0.845]], [0.151, [0.991, 0.858, 0.845]], [0.153, [0.991, 0.855, 0.841]], [0.155, [0.991, 0.855, 0.841]], [0.157, [0.991, 0.851, 0.838]], [0.159, [0.991, 0.851, 0.838]], [0.160, [0.991, 0.848, 0.834]], [0.162, [0.991, 0.848, 0.834]], [0.164, [0.991, 0.845, 0.831]], [0.166, [0.991, 0.845, 0.831]], [0.168, [0.991, 0.841, 0.827]], [0.170, [0.991, 0.841, 0.827]], [0.172, [0.991, 0.838, 0.823]], [0.174, [0.991, 0.838, 0.823]], [0.176, [0.991, 0.835, 0.820]], [0.178, [0.991, 0.835, 0.820]], [0.180, [0.990, 0.832, 0.816]], [0.182, [0.990, 0.832, 0.816]], [0.184, [0.990, 0.828, 0.813]], [0.186, [0.990, 0.828, 0.813]], [0.188, [0.990, 0.825, 0.809]], [0.190, [0.990, 0.825, 0.809]], [0.192, [0.990, 0.822, 0.806]], [0.194, [0.990, 0.822, 0.806]], [0.196, [0.990, 0.818, 0.802]], [0.198, [0.990, 0.818, 0.802]], [0.200, [0.990, 0.815, 0.798]], [0.202, [0.990, 0.815, 0.798]], [0.204, [0.990, 0.812, 0.795]], [0.205, [0.990, 0.812, 0.795]], [0.207, [0.990, 0.808, 0.791]], [0.209, [0.990, 0.808, 0.791]], [0.211, [0.989, 0.805, 0.788]], [0.213, [0.989, 0.805, 0.788]], [0.215, [0.989, 0.802, 0.784]], [0.217, [0.989, 0.802, 0.784]], [0.219, [0.989, 0.798, 0.781]], [0.221, [0.989, 0.798, 0.781]], [0.223, [0.989, 0.795, 0.777]], [0.225, [0.989, 0.795, 0.777]], [0.227, [0.989, 0.792, 0.773]], [0.229, [0.989, 0.792, 0.773]], [0.231, [0.989, 0.788, 0.770]], [0.233, [0.989, 0.788, 0.770]], [0.235, [0.989, 0.785, 0.766]], [0.237, [0.989, 0.785, 0.766]], [0.239, [0.989, 0.782, 0.763]], [0.241, [0.989, 0.782, 0.763]], [0.243, [0.988, 0.778, 0.759]], [0.245, [0.988, 0.778, 0.759]], [0.247, [0.988, 0.775, 0.756]], [0.249, [0.988, 0.775, 0.756]], [0.250, [0.988, 0.771, 0.753]], [0.252, [0.988, 0.771, 0.753]], [0.254, [0.988, 0.767, 0.751]], [0.256, [0.988, 0.767, 0.751]], [0.258, [0.988, 0.762, 0.750]], [0.260, [0.988, 0.762, 0.750]], [0.262, [0.987, 0.757, 0.749]], [0.264, [0.987, 0.757, 0.749]], [0.266, [0.987, 0.753, 0.747]], [0.268, [0.987, 0.753, 0.747]], [0.270, [0.987, 0.748, 0.746]], [0.272, [0.987, 0.748, 0.746]], [0.274, [0.987, 0.743, 0.744]], [0.276, [0.987, 0.743, 0.744]], [0.278, [0.986, 0.739, 0.743]], [0.280, [0.986, 0.739, 0.743]], [0.282, [0.986, 0.734, 0.742]], [0.284, [0.986, 0.734, 0.742]], [0.286, [0.986, 0.729, 0.740]], [0.288, [0.986, 0.729, 0.740]], [0.290, [0.986, 0.725, 0.739]], [0.292, [0.986, 0.725, 0.739]], [0.294, [0.985, 0.720, 0.738]], [0.295, [0.985, 0.720, 0.738]], [0.297, [0.985, 0.715, 0.736]], [0.299, [0.985, 0.715, 0.736]], [0.301, [0.985, 0.711, 0.735]], [0.303, [0.985, 0.711, 0.735]], [0.305, [0.985, 0.706, 0.734]], [0.307, [0.985, 0.706, 0.734]], [0.309, [0.984, 0.701, 0.732]], [0.311, [0.984, 0.701, 0.732]], [0.313, [0.984, 0.697, 0.731]], [0.315, [0.984, 0.697, 0.731]], [0.317, [0.984, 0.692, 0.730]], [0.319, [0.984, 0.692, 0.730]], [0.321, [0.984, 0.687, 0.728]], [0.323, [0.984, 0.687, 0.728]], [0.325, [0.983, 0.683, 0.727]], [0.327, [0.983, 0.683, 0.727]], [0.329, [0.983, 0.678, 0.726]], [0.331, [0.983, 0.678, 0.726]], [0.333, [0.983, 0.673, 0.724]], [0.335, [0.983, 0.673, 0.724]], [0.337, [0.983, 0.669, 0.723]], [0.339, [0.983, 0.669, 0.723]], [0.341, [0.983, 0.664, 0.721]], [0.342, [0.983, 0.664, 0.721]], [0.344, [0.982, 0.659, 0.720]], [0.346, [0.982, 0.659, 0.720]], [0.348, [0.982, 0.655, 0.719]], [0.350, [0.982, 0.655, 0.719]], [0.352, [0.982, 0.650, 0.717]], [0.354, [0.982, 0.650, 0.717]], [0.356, [0.982, 0.645, 0.716]], [0.358, [0.982, 0.645, 0.716]], [0.360, [0.981, 0.640, 0.715]], [0.362, [0.981, 0.640, 0.715]], [0.364, [0.981, 0.636, 0.713]], [0.366, [0.981, 0.636, 0.713]], [0.368, [0.981, 0.631, 0.712]], [0.370, [0.981, 0.631, 0.712]], [0.372, [0.981, 0.626, 0.711]], [0.374, [0.981, 0.626, 0.711]], [0.376, [0.980, 0.621, 0.709]], [0.378, [0.980, 0.621, 0.709]], [0.380, [0.980, 0.614, 0.706]], [0.382, [0.980, 0.614, 0.706]], [0.384, [0.980, 0.607, 0.704]], [0.386, [0.980, 0.607, 0.704]], [0.387, [0.979, 0.601, 0.701]], [0.389, [0.979, 0.601, 0.701]], [0.391, [0.979, 0.594, 0.699]], [0.393, [0.979, 0.594, 0.699]], [0.395, [0.978, 0.587, 0.697]], [0.397, [0.978, 0.587, 0.697]], [0.399, [0.978, 0.580, 0.694]], [0.401, [0.978, 0.580, 0.694]], [0.403, [0.978, 0.574, 0.692]], [0.405, [0.978, 0.574, 0.692]], [0.407, [0.977, 0.567, 0.689]], [0.409, [0.977, 0.567, 0.689]], [0.411, [0.977, 0.560, 0.687]], [0.413, [0.977, 0.560, 0.687]], [0.415, [0.977, 0.553, 0.684]], [0.417, [0.977, 0.553, 0.684]], [0.419, [0.976, 0.547, 0.682]], [0.421, [0.976, 0.547, 0.682]], [0.423, [0.976, 0.540, 0.679]], [0.425, [0.976, 0.540, 0.679]], [0.427, [0.975, 0.533, 0.677]], [0.429, [0.975, 0.533, 0.677]], [0.431, [0.975, 0.526, 0.674]], [0.432, [0.975, 0.526, 0.674]], [0.434, [0.975, 0.519, 0.672]], [0.436, [0.975, 0.519, 0.672]], [0.438, [0.974, 0.513, 0.670]], [0.440, [0.974, 0.513, 0.670]], [0.442, [0.974, 0.506, 0.667]], [0.444, [0.974, 0.506, 0.667]], [0.446, [0.974, 0.499, 0.665]], [0.448, [0.974, 0.499, 0.665]], [0.450, [0.973, 0.492, 0.662]], [0.452, [0.973, 0.492, 0.662]], [0.454, [0.973, 0.486, 0.660]], [0.456, [0.973, 0.486, 0.660]], [0.458, [0.973, 0.479, 0.657]], [0.460, [0.973, 0.479, 0.657]], [0.462, [0.972, 0.472, 0.655]], [0.464, [0.972, 0.472, 0.655]], [0.466, [0.972, 0.465, 0.652]], [0.468, [0.972, 0.465, 0.652]], [0.470, [0.971, 0.459, 0.650]], [0.472, [0.971, 0.459, 0.650]], [0.474, [0.971, 0.452, 0.647]], [0.476, [0.971, 0.452, 0.647]], [0.477, [0.971, 0.445, 0.645]], [0.479, [0.971, 0.445, 0.645]], [0.481, [0.970, 0.438, 0.642]], [0.483, [0.970, 0.438, 0.642]], [0.485, [0.970, 0.432, 0.640]], [0.487, [0.970, 0.432, 0.640]], [0.489, [0.970, 0.425, 0.638]], [0.491, [0.970, 0.425, 0.638]], [0.493, [0.969, 0.418, 0.635]], [0.495, [0.969, 0.418, 0.635]], [0.497, [0.969, 0.411, 0.633]], [0.499, [0.969, 0.411, 0.633]], [0.501, [0.967, 0.405, 0.631]], [0.503, [0.967, 0.405, 0.631]], [0.505, [0.964, 0.398, 0.630]], [0.507, [0.964, 0.398, 0.630]], [0.509, [0.961, 0.392, 0.628]], [0.511, [0.961, 0.392, 0.628]], [0.513, [0.957, 0.385, 0.627]], [0.515, [0.957, 0.385, 0.627]], [0.517, [0.954, 0.379, 0.626]], [0.519, [0.954, 0.379, 0.626]], [0.521, [0.951, 0.373, 0.625]], [0.523, [0.951, 0.373, 0.625]], [0.524, [0.948, 0.366, 0.623]], [0.526, [0.948, 0.366, 0.623]], [0.528, [0.945, 0.360, 0.622]], [0.530, [0.945, 0.360, 0.622]], [0.532, [0.941, 0.353, 0.621]], [0.534, [0.941, 0.353, 0.621]], [0.536, [0.938, 0.347, 0.620]], [0.538, [0.938, 0.347, 0.620]], [0.540, [0.935, 0.341, 0.618]], [0.542, [0.935, 0.341, 0.618]], [0.544, [0.932, 0.334, 0.617]], [0.546, [0.932, 0.334, 0.617]], [0.548, [0.929, 0.328, 0.616]], [0.550, [0.929, 0.328, 0.616]], [0.552, [0.925, 0.321, 0.615]], [0.554, [0.925, 0.321, 0.615]], [0.556, [0.922, 0.315, 0.614]], [0.558, [0.922, 0.315, 0.614]], [0.560, [0.919, 0.309, 0.612]], [0.562, [0.919, 0.309, 0.612]], [0.564, [0.916, 0.302, 0.611]], [0.566, [0.916, 0.302, 0.611]], [0.568, [0.913, 0.296, 0.610]], [0.569, [0.913, 0.296, 0.610]], [0.571, [0.909, 0.289, 0.609]], [0.573, [0.909, 0.289, 0.609]], [0.575, [0.906, 0.283, 0.607]], [0.577, [0.906, 0.283, 0.607]], [0.579, [0.903, 0.277, 0.606]], [0.581, [0.903, 0.277, 0.606]], [0.583, [0.900, 0.270, 0.605]], [0.585, [0.900, 0.270, 0.605]], [0.587, [0.897, 0.264, 0.604]], [0.589, [0.897, 0.264, 0.604]], [0.591, [0.893, 0.258, 0.602]], [0.593, [0.893, 0.258, 0.602]], [0.595, [0.890, 0.251, 0.601]], [0.597, [0.890, 0.251, 0.601]], [0.599, [0.887, 0.245, 0.600]], [0.601, [0.887, 0.245, 0.600]], [0.603, [0.884, 0.238, 0.599]], [0.605, [0.884, 0.238, 0.599]], [0.607, [0.881, 0.232, 0.598]], [0.609, [0.881, 0.232, 0.598]], [0.611, [0.877, 0.226, 0.596]], [0.613, [0.877, 0.226, 0.596]], [0.614, [0.874, 0.219, 0.595]], [0.616, [0.874, 0.219, 0.595]], [0.618, [0.871, 0.213, 0.594]], [0.620, [0.871, 0.213, 0.594]], [0.622, [0.868, 0.206, 0.593]], [0.624, [0.868, 0.206, 0.593]], [0.626, [0.863, 0.200, 0.590]], [0.628, [0.863, 0.200, 0.590]], [0.630, [0.857, 0.194, 0.587]], [0.632, [0.857, 0.194, 0.587]], [0.634, [0.851, 0.187, 0.584]], [0.636, [0.851, 0.187, 0.584]], [0.638, [0.846, 0.181, 0.581]], [0.640, [0.846, 0.181, 0.581]], [0.642, [0.840, 0.175, 0.578]], [0.644, [0.840, 0.175, 0.578]], [0.646, [0.834, 0.169, 0.575]], [0.648, [0.834, 0.169, 0.575]], [0.650, [0.828, 0.162, 0.572]], [0.652, [0.828, 0.162, 0.572]], [0.654, [0.823, 0.156, 0.569]], [0.656, [0.823, 0.156, 0.569]], [0.658, [0.817, 0.150, 0.566]], [0.659, [0.817, 0.150, 0.566]], [0.661, [0.811, 0.144, 0.563]], [0.663, [0.811, 0.144, 0.563]], [0.665, [0.805, 0.137, 0.559]], [0.667, [0.805, 0.137, 0.559]], [0.669, [0.799, 0.131, 0.556]], [0.671, [0.799, 0.131, 0.556]], [0.673, [0.794, 0.125, 0.553]], [0.675, [0.794, 0.125, 0.553]], [0.677, [0.788, 0.118, 0.550]], [0.679, [0.788, 0.118, 0.550]], [0.681, [0.782, 0.112, 0.547]], [0.683, [0.782, 0.112, 0.547]], [0.685, [0.776, 0.106, 0.544]], [0.687, [0.776, 0.106, 0.544]], [0.689, [0.771, 0.100, 0.541]], [0.691, [0.771, 0.100, 0.541]], [0.693, [0.765, 0.093, 0.538]], [0.695, [0.765, 0.093, 0.538]], [0.697, [0.759, 0.087, 0.535]], [0.699, [0.759, 0.087, 0.535]], [0.701, [0.753, 0.081, 0.532]], [0.703, [0.753, 0.081, 0.532]], [0.705, [0.747, 0.075, 0.529]], [0.706, [0.747, 0.075, 0.529]], [0.708, [0.742, 0.068, 0.526]], [0.710, [0.742, 0.068, 0.526]], [0.712, [0.736, 0.062, 0.523]], [0.714, [0.736, 0.062, 0.523]], [0.716, [0.730, 0.056, 0.519]], [0.718, [0.730, 0.056, 0.519]], [0.720, [0.724, 0.049, 0.516]], [0.722, [0.724, 0.049, 0.516]], [0.724, [0.718, 0.043, 0.513]], [0.726, [0.718, 0.043, 0.513]], [0.728, [0.713, 0.037, 0.510]], [0.730, [0.713, 0.037, 0.510]], [0.732, [0.707, 0.031, 0.507]], [0.734, [0.707, 0.031, 0.507]], [0.736, [0.701, 0.024, 0.504]], [0.738, [0.701, 0.024, 0.504]], [0.740, [0.695, 0.018, 0.501]], [0.742, [0.695, 0.018, 0.501]], [0.744, [0.690, 0.012, 0.498]], [0.746, [0.690, 0.012, 0.498]], [0.748, [0.684, 0.005, 0.495]], [0.750, [0.684, 0.005, 0.495]], [0.751, [0.678, 0.004, 0.493]], [0.753, [0.678, 0.004, 0.493]], [0.755, [0.671, 0.004, 0.493]], [0.757, [0.671, 0.004, 0.493]], [0.759, [0.665, 0.004, 0.492]], [0.761, [0.665, 0.004, 0.492]], [0.763, [0.658, 0.004, 0.491]], [0.765, [0.658, 0.004, 0.491]], [0.767, [0.652, 0.004, 0.490]], [0.769, [0.652, 0.004, 0.490]], [0.771, [0.646, 0.004, 0.489]], [0.773, [0.646, 0.004, 0.489]], [0.775, [0.639, 0.004, 0.488]], [0.777, [0.639, 0.004, 0.488]], [0.779, [0.633, 0.004, 0.487]], [0.781, [0.633, 0.004, 0.487]], [0.783, [0.626, 0.004, 0.487]], [0.785, [0.626, 0.004, 0.487]], [0.787, [0.620, 0.004, 0.486]], [0.789, [0.620, 0.004, 0.486]], [0.791, [0.614, 0.004, 0.485]], [0.793, [0.614, 0.004, 0.485]], [0.795, [0.607, 0.004, 0.484]], [0.796, [0.607, 0.004, 0.484]], [0.798, [0.601, 0.004, 0.483]], [0.800, [0.601, 0.004, 0.483]], [0.802, [0.594, 0.004, 0.482]], [0.804, [0.594, 0.004, 0.482]], [0.806, [0.588, 0.004, 0.481]], [0.808, [0.588, 0.004, 0.481]], [0.810, [0.582, 0.004, 0.481]], [0.812, [0.582, 0.004, 0.481]], [0.814, [0.575, 0.004, 0.480]], [0.816, [0.575, 0.004, 0.480]], [0.818, [0.569, 0.004, 0.479]], [0.820, [0.569, 0.004, 0.479]], [0.822, [0.562, 0.004, 0.478]], [0.824, [0.562, 0.004, 0.478]], [0.826, [0.556, 0.004, 0.477]], [0.828, [0.556, 0.004, 0.477]], [0.830, [0.550, 0.004, 0.476]], [0.832, [0.550, 0.004, 0.476]], [0.834, [0.543, 0.004, 0.475]], [0.836, [0.543, 0.004, 0.475]], [0.838, [0.537, 0.004, 0.475]], [0.840, [0.537, 0.004, 0.475]], [0.841, [0.530, 0.004, 0.474]], [0.843, [0.530, 0.004, 0.474]], [0.845, [0.524, 0.004, 0.473]], [0.847, [0.524, 0.004, 0.473]], [0.849, [0.518, 0.004, 0.472]], [0.851, [0.518, 0.004, 0.472]], [0.853, [0.511, 0.004, 0.471]], [0.855, [0.511, 0.004, 0.471]], [0.857, [0.505, 0.004, 0.470]], [0.859, [0.505, 0.004, 0.470]], [0.861, [0.498, 0.004, 0.469]], [0.863, [0.498, 0.004, 0.469]], [0.865, [0.492, 0.004, 0.468]], [0.867, [0.492, 0.004, 0.468]], [0.869, [0.486, 0.004, 0.468]], [0.871, [0.486, 0.004, 0.468]], [0.873, [0.479, 0.004, 0.467]], [0.875, [0.479, 0.004, 0.467]], [0.877, [0.473, 0.004, 0.465]], [0.879, [0.473, 0.004, 0.465]], [0.881, [0.467, 0.004, 0.464]], [0.883, [0.467, 0.004, 0.464]], [0.885, [0.461, 0.004, 0.462]], [0.886, [0.461, 0.004, 0.462]], [0.888, [0.455, 0.003, 0.460]], [0.890, [0.455, 0.003, 0.460]], [0.892, [0.449, 0.003, 0.459]], [0.894, [0.449, 0.003, 0.459]], [0.896, [0.443, 0.003, 0.457]], [0.898, [0.443, 0.003, 0.457]], [0.900, [0.437, 0.003, 0.456]], [0.902, [0.437, 0.003, 0.456]], [0.904, [0.431, 0.003, 0.454]], [0.906, [0.431, 0.003, 0.454]], [0.908, [0.425, 0.003, 0.452]], [0.910, [0.425, 0.003, 0.452]], [0.912, [0.419, 0.003, 0.451]], [0.914, [0.419, 0.003, 0.451]], [0.916, [0.413, 0.003, 0.449]], [0.918, [0.413, 0.003, 0.449]], [0.920, [0.407, 0.002, 0.448]], [0.922, [0.407, 0.002, 0.448]], [0.924, [0.401, 0.002, 0.446]], [0.926, [0.401, 0.002, 0.446]], [0.928, [0.395, 0.002, 0.444]], [0.930, [0.395, 0.002, 0.444]], [0.932, [0.389, 0.002, 0.443]], [0.933, [0.389, 0.002, 0.443]], [0.935, [0.383, 0.002, 0.441]], [0.937, [0.383, 0.002, 0.441]], [0.939, [0.377, 0.002, 0.440]], [0.941, [0.377, 0.002, 0.440]], [0.943, [0.371, 0.002, 0.438]], [0.945, [0.371, 0.002, 0.438]], [0.947, [0.365, 0.002, 0.436]], [0.949, [0.365, 0.002, 0.436]], [0.951, [0.359, 0.001, 0.435]], [0.953, [0.359, 0.001, 0.435]], [0.955, [0.353, 0.001, 0.433]], [0.957, [0.353, 0.001, 0.433]], [0.959, [0.347, 0.001, 0.432]], [0.961, [0.347, 0.001, 0.432]], [0.963, [0.341, 0.001, 0.430]], [0.965, [0.341, 0.001, 0.430]], [0.967, [0.335, 0.001, 0.428]], [0.969, [0.335, 0.001, 0.428]], [0.971, [0.328, 0.001, 0.427]], [0.973, [0.328, 0.001, 0.427]], [0.975, [0.322, 0.001, 0.425]], [0.977, [0.322, 0.001, 0.425]], [0.978, [0.316, 0.001, 0.424]], [0.980, [0.316, 0.001, 0.424]], [0.982, [0.310, 0.000, 0.422]], [0.984, [0.310, 0.000, 0.422]], [0.986, [0.304, 0.000, 0.420]], [0.988, [0.304, 0.000, 0.420]], [0.990, [0.298, 0.000, 0.419]], [0.992, [0.298, 0.000, 0.419]], [0.994, [0.292, 0.000, 0.417]], [0.996, [0.292, 0.000, 0.417]], [0.998, [0.286, 0.000, 0.416]], [1.000, [0.286, 0.000, 0.416]]];
H.colormap_RdYlBu = [[0.000, [0.647, 0.000, 0.149]], [0.002, [0.647, 0.000, 0.149]], [0.004, [0.655, 0.007, 0.149]], [0.006, [0.655, 0.007, 0.149]], [0.008, [0.662, 0.015, 0.149]], [0.010, [0.662, 0.015, 0.149]], [0.012, [0.670, 0.022, 0.149]], [0.014, [0.670, 0.022, 0.149]], [0.016, [0.678, 0.030, 0.150]], [0.018, [0.678, 0.030, 0.150]], [0.020, [0.686, 0.037, 0.150]], [0.022, [0.686, 0.037, 0.150]], [0.023, [0.693, 0.044, 0.150]], [0.025, [0.693, 0.044, 0.150]], [0.027, [0.701, 0.052, 0.150]], [0.029, [0.701, 0.052, 0.150]], [0.031, [0.709, 0.059, 0.150]], [0.033, [0.709, 0.059, 0.150]], [0.035, [0.716, 0.066, 0.150]], [0.037, [0.716, 0.066, 0.150]], [0.039, [0.724, 0.074, 0.151]], [0.041, [0.724, 0.074, 0.151]], [0.043, [0.732, 0.081, 0.151]], [0.045, [0.732, 0.081, 0.151]], [0.047, [0.739, 0.089, 0.151]], [0.049, [0.739, 0.089, 0.151]], [0.051, [0.747, 0.096, 0.151]], [0.053, [0.747, 0.096, 0.151]], [0.055, [0.755, 0.103, 0.151]], [0.057, [0.755, 0.103, 0.151]], [0.059, [0.762, 0.111, 0.151]], [0.061, [0.762, 0.111, 0.151]], [0.063, [0.770, 0.118, 0.151]], [0.065, [0.770, 0.118, 0.151]], [0.067, [0.778, 0.125, 0.152]], [0.068, [0.778, 0.125, 0.152]], [0.070, [0.785, 0.133, 0.152]], [0.072, [0.785, 0.133, 0.152]], [0.074, [0.793, 0.140, 0.152]], [0.076, [0.793, 0.140, 0.152]], [0.078, [0.801, 0.148, 0.152]], [0.080, [0.801, 0.148, 0.152]], [0.082, [0.809, 0.155, 0.152]], [0.084, [0.809, 0.155, 0.152]], [0.086, [0.816, 0.162, 0.152]], [0.088, [0.816, 0.162, 0.152]], [0.090, [0.824, 0.170, 0.153]], [0.092, [0.824, 0.170, 0.153]], [0.094, [0.832, 0.177, 0.153]], [0.096, [0.832, 0.177, 0.153]], [0.098, [0.839, 0.185, 0.153]], [0.100, [0.839, 0.185, 0.153]], [0.102, [0.845, 0.193, 0.155]], [0.104, [0.845, 0.193, 0.155]], [0.106, [0.850, 0.202, 0.159]], [0.108, [0.850, 0.202, 0.159]], [0.110, [0.854, 0.212, 0.164]], [0.112, [0.854, 0.212, 0.164]], [0.114, [0.859, 0.221, 0.168]], [0.115, [0.859, 0.221, 0.168]], [0.117, [0.863, 0.230, 0.172]], [0.119, [0.863, 0.230, 0.172]], [0.121, [0.868, 0.240, 0.177]], [0.123, [0.868, 0.240, 0.177]], [0.125, [0.872, 0.249, 0.181]], [0.127, [0.872, 0.249, 0.181]], [0.129, [0.877, 0.259, 0.185]], [0.131, [0.877, 0.259, 0.185]], [0.133, [0.881, 0.268, 0.190]], [0.135, [0.881, 0.268, 0.190]], [0.137, [0.886, 0.277, 0.194]], [0.139, [0.886, 0.277, 0.194]], [0.141, [0.890, 0.287, 0.198]], [0.143, [0.890, 0.287, 0.198]], [0.145, [0.894, 0.296, 0.202]], [0.147, [0.894, 0.296, 0.202]], [0.149, [0.899, 0.305, 0.207]], [0.151, [0.899, 0.305, 0.207]], [0.153, [0.903, 0.315, 0.211]], [0.155, [0.903, 0.315, 0.211]], [0.157, [0.908, 0.324, 0.215]], [0.159, [0.908, 0.324, 0.215]], [0.160, [0.912, 0.334, 0.220]], [0.162, [0.912, 0.334, 0.220]], [0.164, [0.917, 0.343, 0.224]], [0.166, [0.917, 0.343, 0.224]], [0.168, [0.921, 0.352, 0.228]], [0.170, [0.921, 0.352, 0.228]], [0.172, [0.926, 0.362, 0.233]], [0.174, [0.926, 0.362, 0.233]], [0.176, [0.930, 0.371, 0.237]], [0.178, [0.930, 0.371, 0.237]], [0.180, [0.935, 0.381, 0.241]], [0.182, [0.935, 0.381, 0.241]], [0.184, [0.939, 0.390, 0.246]], [0.186, [0.939, 0.390, 0.246]], [0.188, [0.943, 0.399, 0.250]], [0.190, [0.943, 0.399, 0.250]], [0.192, [0.948, 0.409, 0.254]], [0.194, [0.948, 0.409, 0.254]], [0.196, [0.952, 0.418, 0.258]], [0.198, [0.952, 0.418, 0.258]], [0.200, [0.957, 0.427, 0.263]], [0.202, [0.957, 0.427, 0.263]], [0.204, [0.958, 0.437, 0.267]], [0.205, [0.958, 0.437, 0.267]], [0.207, [0.960, 0.447, 0.272]], [0.209, [0.960, 0.447, 0.272]], [0.211, [0.961, 0.457, 0.277]], [0.213, [0.961, 0.457, 0.277]], [0.215, [0.962, 0.467, 0.281]], [0.217, [0.962, 0.467, 0.281]], [0.219, [0.964, 0.477, 0.286]], [0.221, [0.964, 0.477, 0.286]], [0.223, [0.965, 0.487, 0.290]], [0.225, [0.965, 0.487, 0.290]], [0.227, [0.967, 0.497, 0.295]], [0.229, [0.967, 0.497, 0.295]], [0.231, [0.968, 0.507, 0.300]], [0.233, [0.968, 0.507, 0.300]], [0.235, [0.969, 0.517, 0.304]], [0.237, [0.969, 0.517, 0.304]], [0.239, [0.971, 0.527, 0.309]], [0.241, [0.971, 0.527, 0.309]], [0.243, [0.972, 0.537, 0.313]], [0.245, [0.972, 0.537, 0.313]], [0.247, [0.973, 0.547, 0.318]], [0.249, [0.973, 0.547, 0.318]], [0.250, [0.975, 0.557, 0.323]], [0.252, [0.975, 0.557, 0.323]], [0.254, [0.976, 0.567, 0.327]], [0.256, [0.976, 0.567, 0.327]], [0.258, [0.978, 0.577, 0.332]], [0.260, [0.978, 0.577, 0.332]], [0.262, [0.979, 0.587, 0.337]], [0.264, [0.979, 0.587, 0.337]], [0.266, [0.980, 0.597, 0.341]], [0.268, [0.980, 0.597, 0.341]], [0.270, [0.982, 0.607, 0.346]], [0.272, [0.982, 0.607, 0.346]], [0.274, [0.983, 0.617, 0.350]], [0.276, [0.983, 0.617, 0.350]], [0.278, [0.985, 0.627, 0.355]], [0.280, [0.985, 0.627, 0.355]], [0.282, [0.986, 0.637, 0.360]], [0.284, [0.986, 0.637, 0.360]], [0.286, [0.987, 0.647, 0.364]], [0.288, [0.987, 0.647, 0.364]], [0.290, [0.989, 0.657, 0.369]], [0.292, [0.989, 0.657, 0.369]], [0.294, [0.990, 0.667, 0.373]], [0.295, [0.990, 0.667, 0.373]], [0.297, [0.991, 0.677, 0.378]], [0.299, [0.991, 0.677, 0.378]], [0.301, [0.992, 0.686, 0.384]], [0.303, [0.992, 0.686, 0.384]], [0.305, [0.992, 0.694, 0.391]], [0.307, [0.992, 0.694, 0.391]], [0.309, [0.993, 0.702, 0.398]], [0.311, [0.993, 0.702, 0.398]], [0.313, [0.993, 0.709, 0.406]], [0.315, [0.993, 0.709, 0.406]], [0.317, [0.993, 0.717, 0.413]], [0.319, [0.993, 0.717, 0.413]], [0.321, [0.993, 0.725, 0.420]], [0.323, [0.993, 0.725, 0.420]], [0.325, [0.993, 0.732, 0.427]], [0.327, [0.993, 0.732, 0.427]], [0.329, [0.993, 0.740, 0.435]], [0.331, [0.993, 0.740, 0.435]], [0.333, [0.993, 0.748, 0.442]], [0.335, [0.993, 0.748, 0.442]], [0.337, [0.994, 0.755, 0.449]], [0.339, [0.994, 0.755, 0.449]], [0.341, [0.994, 0.763, 0.456]], [0.342, [0.994, 0.763, 0.456]], [0.344, [0.994, 0.771, 0.464]], [0.346, [0.994, 0.771, 0.464]], [0.348, [0.994, 0.778, 0.471]], [0.350, [0.994, 0.778, 0.471]], [0.352, [0.994, 0.786, 0.478]], [0.354, [0.994, 0.786, 0.478]], [0.356, [0.994, 0.794, 0.485]], [0.358, [0.994, 0.794, 0.485]], [0.360, [0.995, 0.802, 0.492]], [0.362, [0.995, 0.802, 0.492]], [0.364, [0.995, 0.809, 0.500]], [0.366, [0.995, 0.809, 0.500]], [0.368, [0.995, 0.817, 0.507]], [0.370, [0.995, 0.817, 0.507]], [0.372, [0.995, 0.825, 0.514]], [0.374, [0.995, 0.825, 0.514]], [0.376, [0.995, 0.832, 0.521]], [0.378, [0.995, 0.832, 0.521]], [0.380, [0.995, 0.840, 0.529]], [0.382, [0.995, 0.840, 0.529]], [0.384, [0.995, 0.848, 0.536]], [0.386, [0.995, 0.848, 0.536]], [0.387, [0.996, 0.855, 0.543]], [0.389, [0.996, 0.855, 0.543]], [0.391, [0.996, 0.863, 0.550]], [0.393, [0.996, 0.863, 0.550]], [0.395, [0.996, 0.871, 0.557]], [0.397, [0.996, 0.871, 0.557]], [0.399, [0.996, 0.878, 0.565]], [0.401, [0.996, 0.878, 0.565]], [0.403, [0.996, 0.883, 0.572]], [0.405, [0.996, 0.883, 0.572]], [0.407, [0.996, 0.888, 0.579]], [0.409, [0.996, 0.888, 0.579]], [0.411, [0.997, 0.893, 0.586]], [0.413, [0.997, 0.893, 0.586]], [0.415, [0.997, 0.898, 0.594]], [0.417, [0.997, 0.898, 0.594]], [0.419, [0.997, 0.902, 0.601]], [0.421, [0.997, 0.902, 0.601]], [0.423, [0.997, 0.907, 0.608]], [0.425, [0.997, 0.907, 0.608]], [0.427, [0.997, 0.912, 0.615]], [0.429, [0.997, 0.912, 0.615]], [0.431, [0.997, 0.917, 0.623]], [0.432, [0.997, 0.917, 0.623]], [0.434, [0.997, 0.921, 0.630]], [0.436, [0.997, 0.921, 0.630]], [0.438, [0.998, 0.926, 0.637]], [0.440, [0.998, 0.926, 0.637]], [0.442, [0.998, 0.931, 0.644]], [0.444, [0.998, 0.931, 0.644]], [0.446, [0.998, 0.936, 0.651]], [0.448, [0.998, 0.936, 0.651]], [0.450, [0.998, 0.940, 0.659]], [0.452, [0.998, 0.940, 0.659]], [0.454, [0.998, 0.945, 0.666]], [0.456, [0.998, 0.945, 0.666]], [0.458, [0.998, 0.950, 0.673]], [0.460, [0.998, 0.950, 0.673]], [0.462, [0.999, 0.955, 0.680]], [0.464, [0.999, 0.955, 0.680]], [0.466, [0.999, 0.959, 0.688]], [0.468, [0.999, 0.959, 0.688]], [0.470, [0.999, 0.964, 0.695]], [0.472, [0.999, 0.964, 0.695]], [0.474, [0.999, 0.969, 0.702]], [0.476, [0.999, 0.969, 0.702]], [0.477, [0.999, 0.974, 0.709]], [0.479, [0.999, 0.974, 0.709]], [0.481, [0.999, 0.979, 0.716]], [0.483, [0.999, 0.979, 0.716]], [0.485, [0.999, 0.983, 0.724]], [0.487, [0.999, 0.983, 0.724]], [0.489, [1.000, 0.988, 0.731]], [0.491, [1.000, 0.988, 0.731]], [0.493, [1.000, 0.993, 0.738]], [0.495, [1.000, 0.993, 0.738]], [0.497, [1.000, 0.998, 0.745]], [0.499, [1.000, 0.998, 0.745]], [0.501, [0.998, 0.999, 0.753]], [0.503, [0.998, 0.999, 0.753]], [0.505, [0.993, 0.997, 0.762]], [0.507, [0.993, 0.997, 0.762]], [0.509, [0.988, 0.995, 0.771]], [0.511, [0.988, 0.995, 0.771]], [0.513, [0.983, 0.994, 0.780]], [0.515, [0.983, 0.994, 0.780]], [0.517, [0.979, 0.992, 0.788]], [0.519, [0.979, 0.992, 0.788]], [0.521, [0.974, 0.990, 0.797]], [0.523, [0.974, 0.990, 0.797]], [0.524, [0.969, 0.988, 0.806]], [0.526, [0.969, 0.988, 0.806]], [0.528, [0.964, 0.986, 0.815]], [0.530, [0.964, 0.986, 0.815]], [0.532, [0.959, 0.984, 0.824]], [0.534, [0.959, 0.984, 0.824]], [0.536, [0.955, 0.982, 0.832]], [0.538, [0.955, 0.982, 0.832]], [0.540, [0.950, 0.981, 0.841]], [0.542, [0.950, 0.981, 0.841]], [0.544, [0.945, 0.979, 0.850]], [0.546, [0.945, 0.979, 0.850]], [0.548, [0.940, 0.977, 0.859]], [0.550, [0.940, 0.977, 0.859]], [0.552, [0.936, 0.975, 0.867]], [0.554, [0.936, 0.975, 0.867]], [0.556, [0.931, 0.973, 0.876]], [0.558, [0.931, 0.973, 0.876]], [0.560, [0.926, 0.971, 0.885]], [0.562, [0.926, 0.971, 0.885]], [0.564, [0.921, 0.970, 0.894]], [0.566, [0.921, 0.970, 0.894]], [0.568, [0.917, 0.968, 0.902]], [0.569, [0.917, 0.968, 0.902]], [0.571, [0.912, 0.966, 0.911]], [0.573, [0.912, 0.966, 0.911]], [0.575, [0.907, 0.964, 0.920]], [0.577, [0.907, 0.964, 0.920]], [0.579, [0.902, 0.962, 0.929]], [0.581, [0.902, 0.962, 0.929]], [0.583, [0.898, 0.960, 0.937]], [0.585, [0.898, 0.960, 0.937]], [0.587, [0.893, 0.958, 0.946]], [0.589, [0.893, 0.958, 0.946]], [0.591, [0.888, 0.957, 0.955]], [0.593, [0.888, 0.957, 0.955]], [0.595, [0.883, 0.955, 0.964]], [0.597, [0.883, 0.955, 0.964]], [0.599, [0.878, 0.953, 0.973]], [0.601, [0.878, 0.953, 0.973]], [0.603, [0.870, 0.949, 0.970]], [0.605, [0.870, 0.949, 0.970]], [0.607, [0.862, 0.945, 0.968]], [0.609, [0.862, 0.945, 0.968]], [0.611, [0.854, 0.941, 0.966]], [0.613, [0.854, 0.941, 0.966]], [0.614, [0.846, 0.937, 0.963]], [0.616, [0.846, 0.937, 0.963]], [0.618, [0.838, 0.933, 0.961]], [0.620, [0.838, 0.933, 0.961]], [0.622, [0.830, 0.929, 0.959]], [0.624, [0.830, 0.929, 0.959]], [0.626, [0.821, 0.925, 0.956]], [0.628, [0.821, 0.925, 0.956]], [0.630, [0.813, 0.921, 0.954]], [0.632, [0.813, 0.921, 0.954]], [0.634, [0.805, 0.917, 0.952]], [0.636, [0.805, 0.917, 0.952]], [0.638, [0.797, 0.913, 0.949]], [0.640, [0.797, 0.913, 0.949]], [0.642, [0.789, 0.909, 0.947]], [0.644, [0.789, 0.909, 0.947]], [0.646, [0.781, 0.905, 0.945]], [0.648, [0.781, 0.905, 0.945]], [0.650, [0.772, 0.901, 0.943]], [0.652, [0.772, 0.901, 0.943]], [0.654, [0.764, 0.897, 0.940]], [0.656, [0.764, 0.897, 0.940]], [0.658, [0.756, 0.893, 0.938]], [0.659, [0.756, 0.893, 0.938]], [0.661, [0.748, 0.889, 0.936]], [0.663, [0.748, 0.889, 0.936]], [0.665, [0.740, 0.885, 0.933]], [0.667, [0.740, 0.885, 0.933]], [0.669, [0.732, 0.881, 0.931]], [0.671, [0.732, 0.881, 0.931]], [0.673, [0.724, 0.877, 0.929]], [0.675, [0.724, 0.877, 0.929]], [0.677, [0.715, 0.873, 0.926]], [0.679, [0.715, 0.873, 0.926]], [0.681, [0.707, 0.869, 0.924]], [0.683, [0.707, 0.869, 0.924]], [0.685, [0.699, 0.865, 0.922]], [0.687, [0.699, 0.865, 0.922]], [0.689, [0.691, 0.861, 0.919]], [0.691, [0.691, 0.861, 0.919]], [0.693, [0.683, 0.857, 0.917]], [0.695, [0.683, 0.857, 0.917]], [0.697, [0.675, 0.853, 0.915]], [0.699, [0.675, 0.853, 0.915]], [0.701, [0.666, 0.848, 0.912]], [0.703, [0.666, 0.848, 0.912]], [0.705, [0.658, 0.841, 0.908]], [0.706, [0.658, 0.841, 0.908]], [0.708, [0.649, 0.834, 0.904]], [0.710, [0.649, 0.834, 0.904]], [0.712, [0.641, 0.827, 0.901]], [0.714, [0.641, 0.827, 0.901]], [0.716, [0.633, 0.821, 0.897]], [0.718, [0.633, 0.821, 0.897]], [0.720, [0.624, 0.814, 0.893]], [0.722, [0.624, 0.814, 0.893]], [0.724, [0.616, 0.807, 0.890]], [0.726, [0.616, 0.807, 0.890]], [0.728, [0.607, 0.800, 0.886]], [0.730, [0.607, 0.800, 0.886]], [0.732, [0.599, 0.793, 0.882]], [0.734, [0.599, 0.793, 0.882]], [0.736, [0.590, 0.787, 0.879]], [0.738, [0.590, 0.787, 0.879]], [0.740, [0.582, 0.780, 0.875]], [0.742, [0.582, 0.780, 0.875]], [0.744, [0.573, 0.773, 0.871]], [0.746, [0.573, 0.773, 0.871]], [0.748, [0.565, 0.766, 0.868]], [0.750, [0.565, 0.766, 0.868]], [0.751, [0.556, 0.760, 0.864]], [0.753, [0.556, 0.760, 0.864]], [0.755, [0.548, 0.753, 0.860]], [0.757, [0.548, 0.753, 0.860]], [0.759, [0.539, 0.746, 0.857]], [0.761, [0.539, 0.746, 0.857]], [0.763, [0.531, 0.739, 0.853]], [0.765, [0.531, 0.739, 0.853]], [0.767, [0.523, 0.733, 0.849]], [0.769, [0.523, 0.733, 0.849]], [0.771, [0.514, 0.726, 0.845]], [0.773, [0.514, 0.726, 0.845]], [0.775, [0.506, 0.719, 0.842]], [0.777, [0.506, 0.719, 0.842]], [0.779, [0.497, 0.712, 0.838]], [0.781, [0.497, 0.712, 0.838]], [0.783, [0.489, 0.705, 0.834]], [0.785, [0.489, 0.705, 0.834]], [0.787, [0.480, 0.699, 0.831]], [0.789, [0.480, 0.699, 0.831]], [0.791, [0.472, 0.692, 0.827]], [0.793, [0.472, 0.692, 0.827]], [0.795, [0.463, 0.685, 0.823]], [0.796, [0.463, 0.685, 0.823]], [0.798, [0.455, 0.678, 0.820]], [0.800, [0.455, 0.678, 0.820]], [0.802, [0.448, 0.670, 0.815]], [0.804, [0.448, 0.670, 0.815]], [0.806, [0.440, 0.661, 0.811]], [0.808, [0.440, 0.661, 0.811]], [0.810, [0.433, 0.653, 0.806]], [0.812, [0.433, 0.653, 0.806]], [0.814, [0.426, 0.644, 0.802]], [0.816, [0.426, 0.644, 0.802]], [0.818, [0.419, 0.635, 0.797]], [0.820, [0.419, 0.635, 0.797]], [0.822, [0.412, 0.627, 0.793]], [0.824, [0.412, 0.627, 0.793]], [0.826, [0.404, 0.618, 0.788]], [0.828, [0.404, 0.618, 0.788]], [0.830, [0.397, 0.610, 0.784]], [0.832, [0.397, 0.610, 0.784]], [0.834, [0.390, 0.601, 0.779]], [0.836, [0.390, 0.601, 0.779]], [0.838, [0.383, 0.592, 0.775]], [0.840, [0.383, 0.592, 0.775]], [0.841, [0.375, 0.584, 0.771]], [0.843, [0.375, 0.584, 0.771]], [0.845, [0.368, 0.575, 0.766]], [0.847, [0.368, 0.575, 0.766]], [0.849, [0.361, 0.566, 0.762]], [0.851, [0.361, 0.566, 0.762]], [0.853, [0.354, 0.558, 0.757]], [0.855, [0.354, 0.558, 0.757]], [0.857, [0.346, 0.549, 0.753]], [0.859, [0.346, 0.549, 0.753]], [0.861, [0.339, 0.541, 0.748]], [0.863, [0.339, 0.541, 0.748]], [0.865, [0.332, 0.532, 0.744]], [0.867, [0.332, 0.532, 0.744]], [0.869, [0.325, 0.523, 0.739]], [0.871, [0.325, 0.523, 0.739]], [0.873, [0.318, 0.515, 0.735]], [0.875, [0.318, 0.515, 0.735]], [0.877, [0.310, 0.506, 0.730]], [0.879, [0.310, 0.506, 0.730]], [0.881, [0.303, 0.498, 0.726]], [0.883, [0.303, 0.498, 0.726]], [0.885, [0.296, 0.489, 0.721]], [0.886, [0.296, 0.489, 0.721]], [0.888, [0.289, 0.480, 0.717]], [0.890, [0.289, 0.480, 0.717]], [0.892, [0.281, 0.472, 0.713]], [0.894, [0.281, 0.472, 0.713]], [0.896, [0.274, 0.463, 0.708]], [0.898, [0.274, 0.463, 0.708]], [0.900, [0.269, 0.454, 0.703]], [0.902, [0.269, 0.454, 0.703]], [0.904, [0.266, 0.444, 0.699]], [0.906, [0.266, 0.444, 0.699]], [0.908, [0.263, 0.435, 0.694]], [0.910, [0.263, 0.435, 0.694]], [0.912, [0.260, 0.425, 0.689]], [0.914, [0.260, 0.425, 0.689]], [0.916, [0.257, 0.415, 0.684]], [0.918, [0.257, 0.415, 0.684]], [0.920, [0.254, 0.406, 0.680]], [0.922, [0.254, 0.406, 0.680]], [0.924, [0.251, 0.396, 0.675]], [0.926, [0.251, 0.396, 0.675]], [0.928, [0.248, 0.386, 0.670]], [0.930, [0.248, 0.386, 0.670]], [0.932, [0.244, 0.376, 0.665]], [0.933, [0.244, 0.376, 0.665]], [0.935, [0.241, 0.367, 0.661]], [0.937, [0.241, 0.367, 0.661]], [0.939, [0.238, 0.357, 0.656]], [0.941, [0.238, 0.357, 0.656]], [0.943, [0.235, 0.347, 0.651]], [0.945, [0.235, 0.347, 0.651]], [0.947, [0.232, 0.338, 0.646]], [0.949, [0.232, 0.338, 0.646]], [0.951, [0.229, 0.328, 0.642]], [0.953, [0.229, 0.328, 0.642]], [0.955, [0.226, 0.318, 0.637]], [0.957, [0.226, 0.318, 0.637]], [0.959, [0.223, 0.309, 0.632]], [0.961, [0.223, 0.309, 0.632]], [0.963, [0.220, 0.299, 0.627]], [0.965, [0.220, 0.299, 0.627]], [0.967, [0.217, 0.289, 0.622]], [0.969, [0.217, 0.289, 0.622]], [0.971, [0.214, 0.280, 0.618]], [0.973, [0.214, 0.280, 0.618]], [0.975, [0.211, 0.270, 0.613]], [0.977, [0.211, 0.270, 0.613]], [0.978, [0.208, 0.260, 0.608]], [0.980, [0.208, 0.260, 0.608]], [0.982, [0.204, 0.251, 0.603]], [0.984, [0.204, 0.251, 0.603]], [0.986, [0.201, 0.241, 0.599]], [0.988, [0.201, 0.241, 0.599]], [0.990, [0.198, 0.231, 0.594]], [0.992, [0.198, 0.231, 0.594]], [0.994, [0.195, 0.221, 0.589]], [0.996, [0.195, 0.221, 0.589]], [0.998, [0.192, 0.212, 0.584]], [1.000, [0.192, 0.212, 0.584]]];
H.colormap_RdYlGn = [[0.000, [0.647, 0.000, 0.149]], [0.002, [0.647, 0.000, 0.149]], [0.004, [0.655, 0.007, 0.149]], [0.006, [0.655, 0.007, 0.149]], [0.008, [0.662, 0.015, 0.149]], [0.010, [0.662, 0.015, 0.149]], [0.012, [0.670, 0.022, 0.149]], [0.014, [0.670, 0.022, 0.149]], [0.016, [0.678, 0.030, 0.150]], [0.018, [0.678, 0.030, 0.150]], [0.020, [0.686, 0.037, 0.150]], [0.022, [0.686, 0.037, 0.150]], [0.023, [0.693, 0.044, 0.150]], [0.025, [0.693, 0.044, 0.150]], [0.027, [0.701, 0.052, 0.150]], [0.029, [0.701, 0.052, 0.150]], [0.031, [0.709, 0.059, 0.150]], [0.033, [0.709, 0.059, 0.150]], [0.035, [0.716, 0.066, 0.150]], [0.037, [0.716, 0.066, 0.150]], [0.039, [0.724, 0.074, 0.151]], [0.041, [0.724, 0.074, 0.151]], [0.043, [0.732, 0.081, 0.151]], [0.045, [0.732, 0.081, 0.151]], [0.047, [0.739, 0.089, 0.151]], [0.049, [0.739, 0.089, 0.151]], [0.051, [0.747, 0.096, 0.151]], [0.053, [0.747, 0.096, 0.151]], [0.055, [0.755, 0.103, 0.151]], [0.057, [0.755, 0.103, 0.151]], [0.059, [0.762, 0.111, 0.151]], [0.061, [0.762, 0.111, 0.151]], [0.063, [0.770, 0.118, 0.151]], [0.065, [0.770, 0.118, 0.151]], [0.067, [0.778, 0.125, 0.152]], [0.068, [0.778, 0.125, 0.152]], [0.070, [0.785, 0.133, 0.152]], [0.072, [0.785, 0.133, 0.152]], [0.074, [0.793, 0.140, 0.152]], [0.076, [0.793, 0.140, 0.152]], [0.078, [0.801, 0.148, 0.152]], [0.080, [0.801, 0.148, 0.152]], [0.082, [0.809, 0.155, 0.152]], [0.084, [0.809, 0.155, 0.152]], [0.086, [0.816, 0.162, 0.152]], [0.088, [0.816, 0.162, 0.152]], [0.090, [0.824, 0.170, 0.153]], [0.092, [0.824, 0.170, 0.153]], [0.094, [0.832, 0.177, 0.153]], [0.096, [0.832, 0.177, 0.153]], [0.098, [0.839, 0.185, 0.153]], [0.100, [0.839, 0.185, 0.153]], [0.102, [0.845, 0.193, 0.155]], [0.104, [0.845, 0.193, 0.155]], [0.106, [0.850, 0.202, 0.159]], [0.108, [0.850, 0.202, 0.159]], [0.110, [0.854, 0.212, 0.164]], [0.112, [0.854, 0.212, 0.164]], [0.114, [0.859, 0.221, 0.168]], [0.115, [0.859, 0.221, 0.168]], [0.117, [0.863, 0.230, 0.172]], [0.119, [0.863, 0.230, 0.172]], [0.121, [0.868, 0.240, 0.177]], [0.123, [0.868, 0.240, 0.177]], [0.125, [0.872, 0.249, 0.181]], [0.127, [0.872, 0.249, 0.181]], [0.129, [0.877, 0.259, 0.185]], [0.131, [0.877, 0.259, 0.185]], [0.133, [0.881, 0.268, 0.190]], [0.135, [0.881, 0.268, 0.190]], [0.137, [0.886, 0.277, 0.194]], [0.139, [0.886, 0.277, 0.194]], [0.141, [0.890, 0.287, 0.198]], [0.143, [0.890, 0.287, 0.198]], [0.145, [0.894, 0.296, 0.202]], [0.147, [0.894, 0.296, 0.202]], [0.149, [0.899, 0.305, 0.207]], [0.151, [0.899, 0.305, 0.207]], [0.153, [0.903, 0.315, 0.211]], [0.155, [0.903, 0.315, 0.211]], [0.157, [0.908, 0.324, 0.215]], [0.159, [0.908, 0.324, 0.215]], [0.160, [0.912, 0.334, 0.220]], [0.162, [0.912, 0.334, 0.220]], [0.164, [0.917, 0.343, 0.224]], [0.166, [0.917, 0.343, 0.224]], [0.168, [0.921, 0.352, 0.228]], [0.170, [0.921, 0.352, 0.228]], [0.172, [0.926, 0.362, 0.233]], [0.174, [0.926, 0.362, 0.233]], [0.176, [0.930, 0.371, 0.237]], [0.178, [0.930, 0.371, 0.237]], [0.180, [0.935, 0.381, 0.241]], [0.182, [0.935, 0.381, 0.241]], [0.184, [0.939, 0.390, 0.246]], [0.186, [0.939, 0.390, 0.246]], [0.188, [0.943, 0.399, 0.250]], [0.190, [0.943, 0.399, 0.250]], [0.192, [0.948, 0.409, 0.254]], [0.194, [0.948, 0.409, 0.254]], [0.196, [0.952, 0.418, 0.258]], [0.198, [0.952, 0.418, 0.258]], [0.200, [0.957, 0.427, 0.263]], [0.202, [0.957, 0.427, 0.263]], [0.204, [0.958, 0.437, 0.267]], [0.205, [0.958, 0.437, 0.267]], [0.207, [0.960, 0.447, 0.272]], [0.209, [0.960, 0.447, 0.272]], [0.211, [0.961, 0.457, 0.277]], [0.213, [0.961, 0.457, 0.277]], [0.215, [0.962, 0.467, 0.281]], [0.217, [0.962, 0.467, 0.281]], [0.219, [0.964, 0.477, 0.286]], [0.221, [0.964, 0.477, 0.286]], [0.223, [0.965, 0.487, 0.290]], [0.225, [0.965, 0.487, 0.290]], [0.227, [0.967, 0.497, 0.295]], [0.229, [0.967, 0.497, 0.295]], [0.231, [0.968, 0.507, 0.300]], [0.233, [0.968, 0.507, 0.300]], [0.235, [0.969, 0.517, 0.304]], [0.237, [0.969, 0.517, 0.304]], [0.239, [0.971, 0.527, 0.309]], [0.241, [0.971, 0.527, 0.309]], [0.243, [0.972, 0.537, 0.313]], [0.245, [0.972, 0.537, 0.313]], [0.247, [0.973, 0.547, 0.318]], [0.249, [0.973, 0.547, 0.318]], [0.250, [0.975, 0.557, 0.323]], [0.252, [0.975, 0.557, 0.323]], [0.254, [0.976, 0.567, 0.327]], [0.256, [0.976, 0.567, 0.327]], [0.258, [0.978, 0.577, 0.332]], [0.260, [0.978, 0.577, 0.332]], [0.262, [0.979, 0.587, 0.337]], [0.264, [0.979, 0.587, 0.337]], [0.266, [0.980, 0.597, 0.341]], [0.268, [0.980, 0.597, 0.341]], [0.270, [0.982, 0.607, 0.346]], [0.272, [0.982, 0.607, 0.346]], [0.274, [0.983, 0.617, 0.350]], [0.276, [0.983, 0.617, 0.350]], [0.278, [0.985, 0.627, 0.355]], [0.280, [0.985, 0.627, 0.355]], [0.282, [0.986, 0.637, 0.360]], [0.284, [0.986, 0.637, 0.360]], [0.286, [0.987, 0.647, 0.364]], [0.288, [0.987, 0.647, 0.364]], [0.290, [0.989, 0.657, 0.369]], [0.292, [0.989, 0.657, 0.369]], [0.294, [0.990, 0.667, 0.373]], [0.295, [0.990, 0.667, 0.373]], [0.297, [0.991, 0.677, 0.378]], [0.299, [0.991, 0.677, 0.378]], [0.301, [0.992, 0.686, 0.384]], [0.303, [0.992, 0.686, 0.384]], [0.305, [0.992, 0.694, 0.390]], [0.307, [0.992, 0.694, 0.390]], [0.309, [0.993, 0.702, 0.397]], [0.311, [0.993, 0.702, 0.397]], [0.313, [0.993, 0.709, 0.403]], [0.315, [0.993, 0.709, 0.403]], [0.317, [0.993, 0.717, 0.409]], [0.319, [0.993, 0.717, 0.409]], [0.321, [0.993, 0.725, 0.416]], [0.323, [0.993, 0.725, 0.416]], [0.325, [0.993, 0.732, 0.422]], [0.327, [0.993, 0.732, 0.422]], [0.329, [0.993, 0.740, 0.429]], [0.331, [0.993, 0.740, 0.429]], [0.333, [0.993, 0.748, 0.435]], [0.335, [0.993, 0.748, 0.435]], [0.337, [0.994, 0.755, 0.442]], [0.339, [0.994, 0.755, 0.442]], [0.341, [0.994, 0.763, 0.448]], [0.342, [0.994, 0.763, 0.448]], [0.344, [0.994, 0.771, 0.455]], [0.346, [0.994, 0.771, 0.455]], [0.348, [0.994, 0.778, 0.461]], [0.350, [0.994, 0.778, 0.461]], [0.352, [0.994, 0.786, 0.468]], [0.354, [0.994, 0.786, 0.468]], [0.356, [0.994, 0.794, 0.474]], [0.358, [0.994, 0.794, 0.474]], [0.360, [0.995, 0.802, 0.481]], [0.362, [0.995, 0.802, 0.481]], [0.364, [0.995, 0.809, 0.487]], [0.366, [0.995, 0.809, 0.487]], [0.368, [0.995, 0.817, 0.493]], [0.370, [0.995, 0.817, 0.493]], [0.372, [0.995, 0.825, 0.500]], [0.374, [0.995, 0.825, 0.500]], [0.376, [0.995, 0.832, 0.506]], [0.378, [0.995, 0.832, 0.506]], [0.380, [0.995, 0.840, 0.513]], [0.382, [0.995, 0.840, 0.513]], [0.384, [0.995, 0.848, 0.519]], [0.386, [0.995, 0.848, 0.519]], [0.387, [0.996, 0.855, 0.526]], [0.389, [0.996, 0.855, 0.526]], [0.391, [0.996, 0.863, 0.532]], [0.393, [0.996, 0.863, 0.532]], [0.395, [0.996, 0.871, 0.539]], [0.397, [0.996, 0.871, 0.539]], [0.399, [0.996, 0.878, 0.545]], [0.401, [0.996, 0.878, 0.545]], [0.403, [0.996, 0.883, 0.553]], [0.405, [0.996, 0.883, 0.553]], [0.407, [0.996, 0.888, 0.561]], [0.409, [0.996, 0.888, 0.561]], [0.411, [0.997, 0.893, 0.569]], [0.413, [0.997, 0.893, 0.569]], [0.415, [0.997, 0.898, 0.577]], [0.417, [0.997, 0.898, 0.577]], [0.419, [0.997, 0.902, 0.585]], [0.421, [0.997, 0.902, 0.585]], [0.423, [0.997, 0.907, 0.593]], [0.425, [0.997, 0.907, 0.593]], [0.427, [0.997, 0.912, 0.601]], [0.429, [0.997, 0.912, 0.601]], [0.431, [0.997, 0.917, 0.609]], [0.432, [0.997, 0.917, 0.609]], [0.434, [0.997, 0.921, 0.617]], [0.436, [0.997, 0.921, 0.617]], [0.438, [0.998, 0.926, 0.625]], [0.440, [0.998, 0.926, 0.625]], [0.442, [0.998, 0.931, 0.633]], [0.444, [0.998, 0.931, 0.633]], [0.446, [0.998, 0.936, 0.641]], [0.448, [0.998, 0.936, 0.641]], [0.450, [0.998, 0.940, 0.649]], [0.452, [0.998, 0.940, 0.649]], [0.454, [0.998, 0.945, 0.657]], [0.456, [0.998, 0.945, 0.657]], [0.458, [0.998, 0.950, 0.665]], [0.460, [0.998, 0.950, 0.665]], [0.462, [0.999, 0.955, 0.673]], [0.464, [0.999, 0.955, 0.673]], [0.466, [0.999, 0.959, 0.681]], [0.468, [0.999, 0.959, 0.681]], [0.470, [0.999, 0.964, 0.689]], [0.472, [0.999, 0.964, 0.689]], [0.474, [0.999, 0.969, 0.697]], [0.476, [0.999, 0.969, 0.697]], [0.477, [0.999, 0.974, 0.705]], [0.479, [0.999, 0.974, 0.705]], [0.481, [0.999, 0.979, 0.713]], [0.483, [0.999, 0.979, 0.713]], [0.485, [0.999, 0.983, 0.721]], [0.487, [0.999, 0.983, 0.721]], [0.489, [1.000, 0.988, 0.729]], [0.491, [1.000, 0.988, 0.729]], [0.493, [1.000, 0.993, 0.737]], [0.495, [1.000, 0.993, 0.737]], [0.497, [1.000, 0.998, 0.745]], [0.499, [1.000, 0.998, 0.745]], [0.501, [0.997, 0.999, 0.745]], [0.503, [0.997, 0.999, 0.745]], [0.505, [0.991, 0.996, 0.737]], [0.507, [0.991, 0.996, 0.737]], [0.509, [0.985, 0.994, 0.729]], [0.511, [0.985, 0.994, 0.729]], [0.513, [0.980, 0.991, 0.721]], [0.515, [0.980, 0.991, 0.721]], [0.517, [0.974, 0.989, 0.713]], [0.519, [0.974, 0.989, 0.713]], [0.521, [0.968, 0.986, 0.705]], [0.523, [0.968, 0.986, 0.705]], [0.524, [0.962, 0.984, 0.697]], [0.526, [0.962, 0.984, 0.697]], [0.528, [0.956, 0.982, 0.689]], [0.530, [0.956, 0.982, 0.689]], [0.532, [0.950, 0.979, 0.681]], [0.534, [0.950, 0.979, 0.681]], [0.536, [0.944, 0.977, 0.673]], [0.538, [0.944, 0.977, 0.673]], [0.540, [0.939, 0.974, 0.665]], [0.542, [0.939, 0.974, 0.665]], [0.544, [0.933, 0.972, 0.657]], [0.546, [0.933, 0.972, 0.657]], [0.548, [0.927, 0.969, 0.649]], [0.550, [0.927, 0.969, 0.649]], [0.552, [0.921, 0.967, 0.641]], [0.554, [0.921, 0.967, 0.641]], [0.556, [0.915, 0.964, 0.633]], [0.558, [0.915, 0.964, 0.633]], [0.560, [0.909, 0.962, 0.625]], [0.562, [0.909, 0.962, 0.625]], [0.564, [0.904, 0.959, 0.617]], [0.566, [0.904, 0.959, 0.617]], [0.568, [0.898, 0.957, 0.609]], [0.569, [0.898, 0.957, 0.609]], [0.571, [0.892, 0.954, 0.601]], [0.573, [0.892, 0.954, 0.601]], [0.575, [0.886, 0.952, 0.593]], [0.577, [0.886, 0.952, 0.593]], [0.579, [0.880, 0.950, 0.585]], [0.581, [0.880, 0.950, 0.585]], [0.583, [0.874, 0.947, 0.577]], [0.585, [0.874, 0.947, 0.577]], [0.587, [0.869, 0.945, 0.569]], [0.589, [0.869, 0.945, 0.569]], [0.591, [0.863, 0.942, 0.561]], [0.593, [0.863, 0.942, 0.561]], [0.595, [0.857, 0.940, 0.553]], [0.597, [0.857, 0.940, 0.553]], [0.599, [0.851, 0.937, 0.545]], [0.601, [0.851, 0.937, 0.545]], [0.603, [0.843, 0.934, 0.540]], [0.605, [0.843, 0.934, 0.540]], [0.607, [0.835, 0.930, 0.535]], [0.609, [0.835, 0.930, 0.535]], [0.611, [0.827, 0.927, 0.530]], [0.613, [0.827, 0.927, 0.530]], [0.614, [0.820, 0.924, 0.525]], [0.616, [0.820, 0.924, 0.525]], [0.618, [0.812, 0.920, 0.520]], [0.620, [0.812, 0.920, 0.520]], [0.622, [0.804, 0.917, 0.515]], [0.624, [0.804, 0.917, 0.515]], [0.626, [0.796, 0.914, 0.510]], [0.628, [0.796, 0.914, 0.510]], [0.630, [0.788, 0.910, 0.504]], [0.632, [0.788, 0.910, 0.504]], [0.634, [0.780, 0.907, 0.499]], [0.636, [0.780, 0.907, 0.499]], [0.638, [0.773, 0.903, 0.494]], [0.640, [0.773, 0.903, 0.494]], [0.642, [0.765, 0.900, 0.489]], [0.644, [0.765, 0.900, 0.489]], [0.646, [0.757, 0.897, 0.484]], [0.648, [0.757, 0.897, 0.484]], [0.650, [0.749, 0.893, 0.479]], [0.652, [0.749, 0.893, 0.479]], [0.654, [0.741, 0.890, 0.474]], [0.656, [0.741, 0.890, 0.474]], [0.658, [0.733, 0.887, 0.469]], [0.659, [0.733, 0.887, 0.469]], [0.661, [0.725, 0.883, 0.464]], [0.663, [0.725, 0.883, 0.464]], [0.665, [0.718, 0.880, 0.459]], [0.667, [0.718, 0.880, 0.459]], [0.669, [0.710, 0.876, 0.454]], [0.671, [0.710, 0.876, 0.454]], [0.673, [0.702, 0.873, 0.449]], [0.675, [0.702, 0.873, 0.449]], [0.677, [0.694, 0.870, 0.444]], [0.679, [0.694, 0.870, 0.444]], [0.681, [0.686, 0.866, 0.439]], [0.683, [0.686, 0.866, 0.439]], [0.685, [0.678, 0.863, 0.433]], [0.687, [0.678, 0.863, 0.433]], [0.689, [0.671, 0.859, 0.428]], [0.691, [0.671, 0.859, 0.428]], [0.693, [0.663, 0.856, 0.423]], [0.695, [0.663, 0.856, 0.423]], [0.697, [0.655, 0.853, 0.418]], [0.699, [0.655, 0.853, 0.418]], [0.701, [0.646, 0.849, 0.415]], [0.703, [0.646, 0.849, 0.415]], [0.705, [0.636, 0.845, 0.414]], [0.706, [0.636, 0.845, 0.414]], [0.708, [0.626, 0.840, 0.413]], [0.710, [0.626, 0.840, 0.413]], [0.712, [0.617, 0.836, 0.412]], [0.714, [0.617, 0.836, 0.412]], [0.716, [0.607, 0.832, 0.411]], [0.718, [0.607, 0.832, 0.411]], [0.720, [0.597, 0.827, 0.410]], [0.722, [0.597, 0.827, 0.410]], [0.724, [0.587, 0.823, 0.409]], [0.726, [0.587, 0.823, 0.409]], [0.728, [0.577, 0.819, 0.408]], [0.730, [0.577, 0.819, 0.408]], [0.732, [0.567, 0.814, 0.407]], [0.734, [0.567, 0.814, 0.407]], [0.736, [0.557, 0.810, 0.405]], [0.738, [0.557, 0.810, 0.405]], [0.740, [0.548, 0.806, 0.404]], [0.742, [0.548, 0.806, 0.404]], [0.744, [0.538, 0.801, 0.403]], [0.746, [0.538, 0.801, 0.403]], [0.748, [0.528, 0.797, 0.402]], [0.750, [0.528, 0.797, 0.402]], [0.751, [0.518, 0.793, 0.401]], [0.753, [0.518, 0.793, 0.401]], [0.755, [0.508, 0.789, 0.400]], [0.757, [0.508, 0.789, 0.400]], [0.759, [0.498, 0.784, 0.399]], [0.761, [0.498, 0.784, 0.399]], [0.763, [0.489, 0.780, 0.398]], [0.765, [0.489, 0.780, 0.398]], [0.767, [0.479, 0.776, 0.397]], [0.769, [0.479, 0.776, 0.397]], [0.771, [0.469, 0.771, 0.396]], [0.773, [0.469, 0.771, 0.396]], [0.775, [0.459, 0.767, 0.395]], [0.777, [0.459, 0.767, 0.395]], [0.779, [0.449, 0.763, 0.394]], [0.781, [0.449, 0.763, 0.394]], [0.783, [0.439, 0.758, 0.393]], [0.785, [0.439, 0.758, 0.393]], [0.787, [0.430, 0.754, 0.391]], [0.789, [0.430, 0.754, 0.391]], [0.791, [0.420, 0.750, 0.390]], [0.793, [0.420, 0.750, 0.390]], [0.795, [0.410, 0.745, 0.389]], [0.796, [0.410, 0.745, 0.389]], [0.798, [0.400, 0.741, 0.388]], [0.800, [0.400, 0.741, 0.388]], [0.802, [0.388, 0.735, 0.385]], [0.804, [0.388, 0.735, 0.385]], [0.806, [0.377, 0.730, 0.382]], [0.808, [0.377, 0.730, 0.382]], [0.810, [0.365, 0.724, 0.379]], [0.812, [0.365, 0.724, 0.379]], [0.814, [0.353, 0.718, 0.377]], [0.816, [0.353, 0.718, 0.377]], [0.818, [0.342, 0.713, 0.374]], [0.820, [0.342, 0.713, 0.374]], [0.822, [0.330, 0.707, 0.371]], [0.824, [0.330, 0.707, 0.371]], [0.826, [0.318, 0.701, 0.368]], [0.828, [0.318, 0.701, 0.368]], [0.830, [0.306, 0.696, 0.365]], [0.832, [0.306, 0.696, 0.365]], [0.834, [0.295, 0.690, 0.362]], [0.836, [0.295, 0.690, 0.362]], [0.838, [0.283, 0.684, 0.359]], [0.840, [0.283, 0.684, 0.359]], [0.841, [0.271, 0.679, 0.356]], [0.843, [0.271, 0.679, 0.356]], [0.845, [0.260, 0.673, 0.353]], [0.847, [0.260, 0.673, 0.353]], [0.849, [0.248, 0.667, 0.350]], [0.851, [0.248, 0.667, 0.350]], [0.853, [0.236, 0.662, 0.347]], [0.855, [0.236, 0.662, 0.347]], [0.857, [0.225, 0.656, 0.344]], [0.859, [0.225, 0.656, 0.344]], [0.861, [0.213, 0.650, 0.341]], [0.863, [0.213, 0.650, 0.341]], [0.865, [0.201, 0.644, 0.339]], [0.867, [0.201, 0.644, 0.339]], [0.869, [0.190, 0.639, 0.336]], [0.871, [0.190, 0.639, 0.336]], [0.873, [0.178, 0.633, 0.333]], [0.875, [0.178, 0.633, 0.333]], [0.877, [0.166, 0.627, 0.330]], [0.879, [0.166, 0.627, 0.330]], [0.881, [0.155, 0.622, 0.327]], [0.883, [0.155, 0.622, 0.327]], [0.885, [0.143, 0.616, 0.324]], [0.886, [0.143, 0.616, 0.324]], [0.888, [0.131, 0.610, 0.321]], [0.890, [0.131, 0.610, 0.321]], [0.892, [0.119, 0.605, 0.318]], [0.894, [0.119, 0.605, 0.318]], [0.896, [0.108, 0.599, 0.315]], [0.898, [0.108, 0.599, 0.315]], [0.900, [0.100, 0.592, 0.312]], [0.902, [0.100, 0.592, 0.312]], [0.904, [0.096, 0.585, 0.308]], [0.906, [0.096, 0.585, 0.308]], [0.908, [0.092, 0.578, 0.304]], [0.910, [0.092, 0.578, 0.304]], [0.912, [0.088, 0.570, 0.300]], [0.914, [0.088, 0.570, 0.300]], [0.916, [0.084, 0.563, 0.296]], [0.918, [0.084, 0.563, 0.296]], [0.920, [0.080, 0.555, 0.293]], [0.922, [0.080, 0.555, 0.293]], [0.924, [0.076, 0.548, 0.289]], [0.926, [0.076, 0.548, 0.289]], [0.928, [0.072, 0.541, 0.285]], [0.930, [0.072, 0.541, 0.285]], [0.932, [0.068, 0.533, 0.281]], [0.933, [0.068, 0.533, 0.281]], [0.935, [0.064, 0.526, 0.277]], [0.937, [0.064, 0.526, 0.277]], [0.939, [0.060, 0.519, 0.273]], [0.941, [0.060, 0.519, 0.273]], [0.943, [0.056, 0.511, 0.270]], [0.945, [0.056, 0.511, 0.270]], [0.947, [0.052, 0.504, 0.266]], [0.949, [0.052, 0.504, 0.266]], [0.951, [0.048, 0.496, 0.262]], [0.953, [0.048, 0.496, 0.262]], [0.955, [0.044, 0.489, 0.258]], [0.957, [0.044, 0.489, 0.258]], [0.959, [0.040, 0.482, 0.254]], [0.961, [0.040, 0.482, 0.254]], [0.963, [0.036, 0.474, 0.250]], [0.965, [0.036, 0.474, 0.250]], [0.967, [0.032, 0.467, 0.246]], [0.969, [0.032, 0.467, 0.246]], [0.971, [0.028, 0.460, 0.243]], [0.973, [0.028, 0.460, 0.243]], [0.975, [0.024, 0.452, 0.239]], [0.977, [0.024, 0.452, 0.239]], [0.978, [0.020, 0.445, 0.235]], [0.980, [0.020, 0.445, 0.235]], [0.982, [0.016, 0.437, 0.231]], [0.984, [0.016, 0.437, 0.231]], [0.986, [0.012, 0.430, 0.227]], [0.988, [0.012, 0.430, 0.227]], [0.990, [0.008, 0.423, 0.223]], [0.992, [0.008, 0.423, 0.223]], [0.994, [0.004, 0.415, 0.220]], [0.996, [0.004, 0.415, 0.220]], [0.998, [0.000, 0.408, 0.216]], [1.000, [0.000, 0.408, 0.216]]];
H.colormap_Reds = [[0.000, [1.000, 0.961, 0.941]], [0.002, [1.000, 0.961, 0.941]], [0.004, [1.000, 0.958, 0.937]], [0.006, [1.000, 0.958, 0.937]], [0.008, [1.000, 0.956, 0.934]], [0.010, [1.000, 0.956, 0.934]], [0.012, [1.000, 0.953, 0.930]], [0.014, [1.000, 0.953, 0.930]], [0.016, [1.000, 0.950, 0.926]], [0.018, [1.000, 0.950, 0.926]], [0.020, [0.999, 0.948, 0.923]], [0.022, [0.999, 0.948, 0.923]], [0.023, [0.999, 0.945, 0.919]], [0.025, [0.999, 0.945, 0.919]], [0.027, [0.999, 0.943, 0.915]], [0.029, [0.999, 0.943, 0.915]], [0.031, [0.999, 0.940, 0.912]], [0.033, [0.999, 0.940, 0.912]], [0.035, [0.999, 0.938, 0.908]], [0.037, [0.999, 0.938, 0.908]], [0.039, [0.999, 0.935, 0.904]], [0.041, [0.999, 0.935, 0.904]], [0.043, [0.999, 0.932, 0.901]], [0.045, [0.999, 0.932, 0.901]], [0.047, [0.999, 0.930, 0.897]], [0.049, [0.999, 0.930, 0.897]], [0.051, [0.998, 0.927, 0.893]], [0.053, [0.998, 0.927, 0.893]], [0.055, [0.998, 0.925, 0.890]], [0.057, [0.998, 0.925, 0.890]], [0.059, [0.998, 0.922, 0.886]], [0.061, [0.998, 0.922, 0.886]], [0.063, [0.998, 0.919, 0.882]], [0.065, [0.998, 0.919, 0.882]], [0.067, [0.998, 0.917, 0.878]], [0.068, [0.998, 0.917, 0.878]], [0.070, [0.998, 0.914, 0.875]], [0.072, [0.998, 0.914, 0.875]], [0.074, [0.998, 0.912, 0.871]], [0.076, [0.998, 0.912, 0.871]], [0.078, [0.998, 0.909, 0.867]], [0.080, [0.998, 0.909, 0.867]], [0.082, [0.997, 0.907, 0.864]], [0.084, [0.997, 0.907, 0.864]], [0.086, [0.997, 0.904, 0.860]], [0.088, [0.997, 0.904, 0.860]], [0.090, [0.997, 0.901, 0.856]], [0.092, [0.997, 0.901, 0.856]], [0.094, [0.997, 0.899, 0.853]], [0.096, [0.997, 0.899, 0.853]], [0.098, [0.997, 0.896, 0.849]], [0.100, [0.997, 0.896, 0.849]], [0.102, [0.997, 0.894, 0.845]], [0.104, [0.997, 0.894, 0.845]], [0.106, [0.997, 0.891, 0.842]], [0.108, [0.997, 0.891, 0.842]], [0.110, [0.997, 0.888, 0.838]], [0.112, [0.997, 0.888, 0.838]], [0.114, [0.996, 0.886, 0.834]], [0.115, [0.996, 0.886, 0.834]], [0.117, [0.996, 0.883, 0.830]], [0.119, [0.996, 0.883, 0.830]], [0.121, [0.996, 0.881, 0.827]], [0.123, [0.996, 0.881, 0.827]], [0.125, [0.996, 0.878, 0.823]], [0.127, [0.996, 0.878, 0.823]], [0.129, [0.996, 0.873, 0.817]], [0.131, [0.996, 0.873, 0.817]], [0.133, [0.996, 0.869, 0.811]], [0.135, [0.996, 0.869, 0.811]], [0.137, [0.995, 0.864, 0.805]], [0.139, [0.995, 0.864, 0.805]], [0.141, [0.995, 0.860, 0.799]], [0.143, [0.995, 0.860, 0.799]], [0.145, [0.995, 0.855, 0.793]], [0.147, [0.995, 0.855, 0.793]], [0.149, [0.995, 0.851, 0.787]], [0.151, [0.995, 0.851, 0.787]], [0.153, [0.994, 0.846, 0.781]], [0.155, [0.994, 0.846, 0.781]], [0.157, [0.994, 0.841, 0.775]], [0.159, [0.994, 0.841, 0.775]], [0.160, [0.994, 0.837, 0.769]], [0.162, [0.994, 0.837, 0.769]], [0.164, [0.994, 0.832, 0.762]], [0.166, [0.994, 0.832, 0.762]], [0.168, [0.993, 0.828, 0.756]], [0.170, [0.993, 0.828, 0.756]], [0.172, [0.993, 0.823, 0.750]], [0.174, [0.993, 0.823, 0.750]], [0.176, [0.993, 0.819, 0.744]], [0.178, [0.993, 0.819, 0.744]], [0.180, [0.993, 0.814, 0.738]], [0.182, [0.993, 0.814, 0.738]], [0.184, [0.992, 0.810, 0.732]], [0.186, [0.992, 0.810, 0.732]], [0.188, [0.992, 0.805, 0.726]], [0.190, [0.992, 0.805, 0.726]], [0.192, [0.992, 0.800, 0.720]], [0.194, [0.992, 0.800, 0.720]], [0.196, [0.992, 0.796, 0.714]], [0.198, [0.992, 0.796, 0.714]], [0.200, [0.991, 0.791, 0.708]], [0.202, [0.991, 0.791, 0.708]], [0.204, [0.991, 0.787, 0.702]], [0.205, [0.991, 0.787, 0.702]], [0.207, [0.991, 0.782, 0.696]], [0.209, [0.991, 0.782, 0.696]], [0.211, [0.991, 0.778, 0.690]], [0.213, [0.991, 0.778, 0.690]], [0.215, [0.990, 0.773, 0.684]], [0.217, [0.990, 0.773, 0.684]], [0.219, [0.990, 0.769, 0.678]], [0.221, [0.990, 0.769, 0.678]], [0.223, [0.990, 0.764, 0.672]], [0.225, [0.990, 0.764, 0.672]], [0.227, [0.990, 0.760, 0.666]], [0.229, [0.990, 0.760, 0.666]], [0.231, [0.989, 0.755, 0.660]], [0.233, [0.989, 0.755, 0.660]], [0.235, [0.989, 0.750, 0.654]], [0.237, [0.989, 0.750, 0.654]], [0.239, [0.989, 0.746, 0.648]], [0.241, [0.989, 0.746, 0.648]], [0.243, [0.989, 0.741, 0.642]], [0.245, [0.989, 0.741, 0.642]], [0.247, [0.988, 0.737, 0.636]], [0.249, [0.988, 0.737, 0.636]], [0.250, [0.988, 0.732, 0.630]], [0.252, [0.988, 0.732, 0.630]], [0.254, [0.988, 0.727, 0.624]], [0.256, [0.988, 0.727, 0.624]], [0.258, [0.988, 0.722, 0.618]], [0.260, [0.988, 0.722, 0.618]], [0.262, [0.988, 0.717, 0.613]], [0.264, [0.988, 0.717, 0.613]], [0.266, [0.988, 0.712, 0.607]], [0.268, [0.988, 0.712, 0.607]], [0.270, [0.988, 0.707, 0.601]], [0.272, [0.988, 0.707, 0.601]], [0.274, [0.988, 0.702, 0.595]], [0.276, [0.988, 0.702, 0.595]], [0.278, [0.988, 0.697, 0.589]], [0.280, [0.988, 0.697, 0.589]], [0.282, [0.988, 0.692, 0.584]], [0.284, [0.988, 0.692, 0.584]], [0.286, [0.988, 0.687, 0.578]], [0.288, [0.988, 0.687, 0.578]], [0.290, [0.988, 0.682, 0.572]], [0.292, [0.988, 0.682, 0.572]], [0.294, [0.988, 0.677, 0.566]], [0.295, [0.988, 0.677, 0.566]], [0.297, [0.988, 0.672, 0.561]], [0.299, [0.988, 0.672, 0.561]], [0.301, [0.988, 0.666, 0.555]], [0.303, [0.988, 0.666, 0.555]], [0.305, [0.988, 0.661, 0.549]], [0.307, [0.988, 0.661, 0.549]], [0.309, [0.988, 0.656, 0.543]], [0.311, [0.988, 0.656, 0.543]], [0.313, [0.988, 0.651, 0.537]], [0.315, [0.988, 0.651, 0.537]], [0.317, [0.988, 0.646, 0.532]], [0.319, [0.988, 0.646, 0.532]], [0.321, [0.988, 0.641, 0.526]], [0.323, [0.988, 0.641, 0.526]], [0.325, [0.988, 0.636, 0.520]], [0.327, [0.988, 0.636, 0.520]], [0.329, [0.988, 0.631, 0.514]], [0.331, [0.988, 0.631, 0.514]], [0.333, [0.988, 0.626, 0.508]], [0.335, [0.988, 0.626, 0.508]], [0.337, [0.988, 0.621, 0.503]], [0.339, [0.988, 0.621, 0.503]], [0.341, [0.988, 0.616, 0.497]], [0.342, [0.988, 0.616, 0.497]], [0.344, [0.988, 0.611, 0.491]], [0.346, [0.988, 0.611, 0.491]], [0.348, [0.988, 0.606, 0.485]], [0.350, [0.988, 0.606, 0.485]], [0.352, [0.988, 0.601, 0.480]], [0.354, [0.988, 0.601, 0.480]], [0.356, [0.988, 0.596, 0.474]], [0.358, [0.988, 0.596, 0.474]], [0.360, [0.988, 0.591, 0.468]], [0.362, [0.988, 0.591, 0.468]], [0.364, [0.988, 0.586, 0.462]], [0.366, [0.988, 0.586, 0.462]], [0.368, [0.988, 0.581, 0.456]], [0.370, [0.988, 0.581, 0.456]], [0.372, [0.988, 0.576, 0.451]], [0.374, [0.988, 0.576, 0.451]], [0.376, [0.988, 0.571, 0.445]], [0.378, [0.988, 0.571, 0.445]], [0.380, [0.988, 0.566, 0.440]], [0.382, [0.988, 0.566, 0.440]], [0.384, [0.988, 0.561, 0.435]], [0.386, [0.988, 0.561, 0.435]], [0.387, [0.988, 0.556, 0.430]], [0.389, [0.988, 0.556, 0.430]], [0.391, [0.988, 0.551, 0.426]], [0.393, [0.988, 0.551, 0.426]], [0.395, [0.988, 0.546, 0.421]], [0.397, [0.988, 0.546, 0.421]], [0.399, [0.987, 0.541, 0.416]], [0.401, [0.987, 0.541, 0.416]], [0.403, [0.987, 0.536, 0.411]], [0.405, [0.987, 0.536, 0.411]], [0.407, [0.987, 0.531, 0.406]], [0.409, [0.987, 0.531, 0.406]], [0.411, [0.987, 0.526, 0.401]], [0.413, [0.987, 0.526, 0.401]], [0.415, [0.987, 0.521, 0.396]], [0.417, [0.987, 0.521, 0.396]], [0.419, [0.987, 0.517, 0.391]], [0.421, [0.987, 0.517, 0.391]], [0.423, [0.987, 0.512, 0.386]], [0.425, [0.987, 0.512, 0.386]], [0.427, [0.987, 0.507, 0.381]], [0.429, [0.987, 0.507, 0.381]], [0.431, [0.986, 0.502, 0.376]], [0.432, [0.986, 0.502, 0.376]], [0.434, [0.986, 0.497, 0.371]], [0.436, [0.986, 0.497, 0.371]], [0.438, [0.986, 0.492, 0.366]], [0.440, [0.986, 0.492, 0.366]], [0.442, [0.986, 0.487, 0.362]], [0.444, [0.986, 0.487, 0.362]], [0.446, [0.986, 0.482, 0.357]], [0.448, [0.986, 0.482, 0.357]], [0.450, [0.986, 0.477, 0.352]], [0.452, [0.986, 0.477, 0.352]], [0.454, [0.986, 0.472, 0.347]], [0.456, [0.986, 0.472, 0.347]], [0.458, [0.986, 0.467, 0.342]], [0.460, [0.986, 0.467, 0.342]], [0.462, [0.985, 0.462, 0.337]], [0.464, [0.985, 0.462, 0.337]], [0.466, [0.985, 0.458, 0.332]], [0.468, [0.985, 0.458, 0.332]], [0.470, [0.985, 0.453, 0.327]], [0.472, [0.985, 0.453, 0.327]], [0.474, [0.985, 0.448, 0.322]], [0.476, [0.985, 0.448, 0.322]], [0.477, [0.985, 0.443, 0.317]], [0.479, [0.985, 0.443, 0.317]], [0.481, [0.985, 0.438, 0.312]], [0.483, [0.985, 0.438, 0.312]], [0.485, [0.985, 0.433, 0.307]], [0.487, [0.985, 0.433, 0.307]], [0.489, [0.985, 0.428, 0.302]], [0.491, [0.985, 0.428, 0.302]], [0.493, [0.984, 0.423, 0.298]], [0.495, [0.984, 0.423, 0.298]], [0.497, [0.984, 0.418, 0.293]], [0.499, [0.984, 0.418, 0.293]], [0.501, [0.984, 0.413, 0.288]], [0.503, [0.984, 0.413, 0.288]], [0.505, [0.982, 0.407, 0.285]], [0.507, [0.982, 0.407, 0.285]], [0.509, [0.981, 0.401, 0.281]], [0.511, [0.981, 0.401, 0.281]], [0.513, [0.979, 0.395, 0.277]], [0.515, [0.979, 0.395, 0.277]], [0.517, [0.978, 0.390, 0.274]], [0.519, [0.978, 0.390, 0.274]], [0.521, [0.976, 0.384, 0.270]], [0.523, [0.976, 0.384, 0.270]], [0.524, [0.975, 0.378, 0.266]], [0.526, [0.975, 0.378, 0.266]], [0.528, [0.973, 0.372, 0.263]], [0.530, [0.973, 0.372, 0.263]], [0.532, [0.972, 0.367, 0.259]], [0.534, [0.972, 0.367, 0.259]], [0.536, [0.970, 0.361, 0.255]], [0.538, [0.970, 0.361, 0.255]], [0.540, [0.969, 0.355, 0.251]], [0.542, [0.969, 0.355, 0.251]], [0.544, [0.967, 0.349, 0.248]], [0.546, [0.967, 0.349, 0.248]], [0.548, [0.966, 0.343, 0.244]], [0.550, [0.966, 0.343, 0.244]], [0.552, [0.964, 0.338, 0.240]], [0.554, [0.964, 0.338, 0.240]], [0.556, [0.963, 0.332, 0.237]], [0.558, [0.963, 0.332, 0.237]], [0.560, [0.961, 0.326, 0.233]], [0.562, [0.961, 0.326, 0.233]], [0.564, [0.960, 0.320, 0.229]], [0.566, [0.960, 0.320, 0.229]], [0.568, [0.958, 0.314, 0.226]], [0.569, [0.958, 0.314, 0.226]], [0.571, [0.957, 0.309, 0.222]], [0.573, [0.957, 0.309, 0.222]], [0.575, [0.956, 0.303, 0.218]], [0.577, [0.956, 0.303, 0.218]], [0.579, [0.954, 0.297, 0.215]], [0.581, [0.954, 0.297, 0.215]], [0.583, [0.953, 0.291, 0.211]], [0.585, [0.953, 0.291, 0.211]], [0.587, [0.951, 0.286, 0.207]], [0.589, [0.951, 0.286, 0.207]], [0.591, [0.950, 0.280, 0.203]], [0.593, [0.950, 0.280, 0.203]], [0.595, [0.948, 0.274, 0.200]], [0.597, [0.948, 0.274, 0.200]], [0.599, [0.947, 0.268, 0.196]], [0.601, [0.947, 0.268, 0.196]], [0.603, [0.945, 0.262, 0.192]], [0.605, [0.945, 0.262, 0.192]], [0.607, [0.944, 0.257, 0.189]], [0.609, [0.944, 0.257, 0.189]], [0.611, [0.942, 0.251, 0.185]], [0.613, [0.942, 0.251, 0.185]], [0.614, [0.941, 0.245, 0.181]], [0.616, [0.941, 0.245, 0.181]], [0.618, [0.939, 0.239, 0.178]], [0.620, [0.939, 0.239, 0.178]], [0.622, [0.938, 0.234, 0.174]], [0.624, [0.938, 0.234, 0.174]], [0.626, [0.934, 0.229, 0.171]], [0.628, [0.934, 0.229, 0.171]], [0.630, [0.930, 0.224, 0.170]], [0.632, [0.930, 0.224, 0.170]], [0.634, [0.926, 0.220, 0.168]], [0.636, [0.926, 0.220, 0.168]], [0.638, [0.921, 0.216, 0.166]], [0.640, [0.921, 0.216, 0.166]], [0.642, [0.917, 0.211, 0.164]], [0.644, [0.917, 0.211, 0.164]], [0.646, [0.912, 0.207, 0.162]], [0.648, [0.912, 0.207, 0.162]], [0.650, [0.908, 0.203, 0.160]], [0.652, [0.908, 0.203, 0.160]], [0.654, [0.903, 0.199, 0.158]], [0.656, [0.903, 0.199, 0.158]], [0.658, [0.899, 0.194, 0.157]], [0.659, [0.899, 0.194, 0.157]], [0.661, [0.895, 0.190, 0.155]], [0.663, [0.895, 0.190, 0.155]], [0.665, [0.890, 0.186, 0.153]], [0.667, [0.890, 0.186, 0.153]], [0.669, [0.886, 0.181, 0.151]], [0.671, [0.886, 0.181, 0.151]], [0.673, [0.881, 0.177, 0.149]], [0.675, [0.881, 0.177, 0.149]], [0.677, [0.877, 0.173, 0.147]], [0.679, [0.877, 0.173, 0.147]], [0.681, [0.872, 0.168, 0.146]], [0.683, [0.872, 0.168, 0.146]], [0.685, [0.868, 0.164, 0.144]], [0.687, [0.868, 0.164, 0.144]], [0.689, [0.864, 0.160, 0.142]], [0.691, [0.864, 0.160, 0.142]], [0.693, [0.859, 0.155, 0.140]], [0.695, [0.859, 0.155, 0.140]], [0.697, [0.855, 0.151, 0.138]], [0.699, [0.855, 0.151, 0.138]], [0.701, [0.850, 0.147, 0.136]], [0.703, [0.850, 0.147, 0.136]], [0.705, [0.846, 0.143, 0.134]], [0.706, [0.846, 0.143, 0.134]], [0.708, [0.841, 0.138, 0.133]], [0.710, [0.841, 0.138, 0.133]], [0.712, [0.837, 0.134, 0.131]], [0.714, [0.837, 0.134, 0.131]], [0.716, [0.833, 0.130, 0.129]], [0.718, [0.833, 0.130, 0.129]], [0.720, [0.828, 0.125, 0.127]], [0.722, [0.828, 0.125, 0.127]], [0.724, [0.824, 0.121, 0.125]], [0.726, [0.824, 0.121, 0.125]], [0.728, [0.819, 0.117, 0.123]], [0.730, [0.819, 0.117, 0.123]], [0.732, [0.815, 0.112, 0.122]], [0.734, [0.815, 0.112, 0.122]], [0.736, [0.810, 0.108, 0.120]], [0.738, [0.810, 0.108, 0.120]], [0.740, [0.806, 0.104, 0.118]], [0.742, [0.806, 0.104, 0.118]], [0.744, [0.802, 0.100, 0.116]], [0.746, [0.802, 0.100, 0.116]], [0.748, [0.797, 0.095, 0.114]], [0.750, [0.797, 0.095, 0.114]], [0.751, [0.793, 0.093, 0.113]], [0.753, [0.793, 0.093, 0.113]], [0.755, [0.788, 0.092, 0.112]], [0.757, [0.788, 0.092, 0.112]], [0.759, [0.783, 0.091, 0.111]], [0.761, [0.783, 0.091, 0.111]], [0.763, [0.779, 0.090, 0.110]], [0.765, [0.779, 0.090, 0.110]], [0.767, [0.774, 0.089, 0.109]], [0.769, [0.774, 0.089, 0.109]], [0.771, [0.769, 0.088, 0.108]], [0.773, [0.769, 0.088, 0.108]], [0.775, [0.765, 0.087, 0.107]], [0.777, [0.765, 0.087, 0.107]], [0.779, [0.760, 0.086, 0.106]], [0.781, [0.760, 0.086, 0.106]], [0.783, [0.755, 0.084, 0.105]], [0.785, [0.755, 0.084, 0.105]], [0.787, [0.750, 0.083, 0.104]], [0.789, [0.750, 0.083, 0.104]], [0.791, [0.746, 0.082, 0.103]], [0.793, [0.746, 0.082, 0.103]], [0.795, [0.741, 0.081, 0.102]], [0.796, [0.741, 0.081, 0.102]], [0.798, [0.736, 0.080, 0.101]], [0.800, [0.736, 0.080, 0.101]], [0.802, [0.732, 0.079, 0.100]], [0.804, [0.732, 0.079, 0.100]], [0.806, [0.727, 0.078, 0.099]], [0.808, [0.727, 0.078, 0.099]], [0.810, [0.722, 0.077, 0.098]], [0.812, [0.722, 0.077, 0.098]], [0.814, [0.718, 0.076, 0.097]], [0.816, [0.718, 0.076, 0.097]], [0.818, [0.713, 0.074, 0.096]], [0.820, [0.713, 0.074, 0.096]], [0.822, [0.708, 0.073, 0.095]], [0.824, [0.708, 0.073, 0.095]], [0.826, [0.704, 0.072, 0.094]], [0.828, [0.704, 0.072, 0.094]], [0.830, [0.699, 0.071, 0.093]], [0.832, [0.699, 0.071, 0.093]], [0.834, [0.694, 0.070, 0.092]], [0.836, [0.694, 0.070, 0.092]], [0.838, [0.690, 0.069, 0.091]], [0.840, [0.690, 0.069, 0.091]], [0.841, [0.685, 0.068, 0.090]], [0.843, [0.685, 0.068, 0.090]], [0.845, [0.680, 0.067, 0.089]], [0.847, [0.680, 0.067, 0.089]], [0.849, [0.676, 0.066, 0.088]], [0.851, [0.676, 0.066, 0.088]], [0.853, [0.671, 0.064, 0.087]], [0.855, [0.671, 0.064, 0.087]], [0.857, [0.666, 0.063, 0.086]], [0.859, [0.666, 0.063, 0.086]], [0.861, [0.662, 0.062, 0.085]], [0.863, [0.662, 0.062, 0.085]], [0.865, [0.657, 0.061, 0.084]], [0.867, [0.657, 0.061, 0.084]], [0.869, [0.652, 0.060, 0.083]], [0.871, [0.652, 0.060, 0.083]], [0.873, [0.648, 0.059, 0.082]], [0.875, [0.648, 0.059, 0.082]], [0.877, [0.640, 0.057, 0.081]], [0.879, [0.640, 0.057, 0.081]], [0.881, [0.633, 0.055, 0.081]], [0.883, [0.633, 0.055, 0.081]], [0.885, [0.625, 0.054, 0.080]], [0.886, [0.625, 0.054, 0.080]], [0.888, [0.618, 0.052, 0.079]], [0.890, [0.618, 0.052, 0.079]], [0.892, [0.610, 0.050, 0.078]], [0.894, [0.610, 0.050, 0.078]], [0.896, [0.602, 0.048, 0.077]], [0.898, [0.602, 0.048, 0.077]], [0.900, [0.595, 0.046, 0.076]], [0.902, [0.595, 0.046, 0.076]], [0.904, [0.587, 0.044, 0.075]], [0.906, [0.587, 0.044, 0.075]], [0.908, [0.579, 0.042, 0.074]], [0.910, [0.579, 0.042, 0.074]], [0.912, [0.572, 0.041, 0.073]], [0.914, [0.572, 0.041, 0.073]], [0.916, [0.564, 0.039, 0.072]], [0.918, [0.564, 0.039, 0.072]], [0.920, [0.556, 0.037, 0.071]], [0.922, [0.556, 0.037, 0.071]], [0.924, [0.549, 0.035, 0.070]], [0.926, [0.549, 0.035, 0.070]], [0.928, [0.541, 0.033, 0.069]], [0.930, [0.541, 0.033, 0.069]], [0.932, [0.534, 0.031, 0.068]], [0.933, [0.534, 0.031, 0.068]], [0.935, [0.526, 0.030, 0.067]], [0.937, [0.526, 0.030, 0.067]], [0.939, [0.518, 0.028, 0.066]], [0.941, [0.518, 0.028, 0.066]], [0.943, [0.511, 0.026, 0.065]], [0.945, [0.511, 0.026, 0.065]], [0.947, [0.503, 0.024, 0.064]], [0.949, [0.503, 0.024, 0.064]], [0.951, [0.495, 0.022, 0.063]], [0.953, [0.495, 0.022, 0.063]], [0.955, [0.488, 0.020, 0.062]], [0.957, [0.488, 0.020, 0.062]], [0.959, [0.480, 0.018, 0.061]], [0.961, [0.480, 0.018, 0.061]], [0.963, [0.473, 0.017, 0.060]], [0.965, [0.473, 0.017, 0.060]], [0.967, [0.465, 0.015, 0.059]], [0.969, [0.465, 0.015, 0.059]], [0.971, [0.457, 0.013, 0.058]], [0.973, [0.457, 0.013, 0.058]], [0.975, [0.450, 0.011, 0.057]], [0.977, [0.450, 0.011, 0.057]], [0.978, [0.442, 0.009, 0.056]], [0.980, [0.442, 0.009, 0.056]], [0.982, [0.434, 0.007, 0.055]], [0.984, [0.434, 0.007, 0.055]], [0.986, [0.427, 0.006, 0.054]], [0.988, [0.427, 0.006, 0.054]], [0.990, [0.419, 0.004, 0.053]], [0.992, [0.419, 0.004, 0.053]], [0.994, [0.412, 0.002, 0.052]], [0.996, [0.412, 0.002, 0.052]], [0.998, [0.404, 0.000, 0.051]], [1.000, [0.404, 0.000, 0.051]]];
H.colormap_salinity = [[0.000,[0.16295295,0.09521592,0.42257292]],[0.004,[0.16481011,0.09635116,0.43184597]],[0.008,[0.16661617,0.09744967,0.44120648]],[0.012,[0.16836624,0.09851521,0.45065110]],[0.016,[0.17005471,0.09955275,0.46017511]],[0.020,[0.17167508,0.10056873,0.46977222]],[0.024,[0.17321987,0.10157136,0.47943423]],[0.027,[0.17468043,0.10257097,0.48915068]],[0.031,[0.17604337,0.10356584,0.49894160]],[0.035,[0.17729823,0.10458025,0.50877159]],[0.039,[0.17843230,0.10563803,0.51861083]],[0.043,[0.17942267,0.10674166,0.52848361]],[0.047,[0.18025423,0.10793563,0.53832457]],[0.051,[0.18089754,0.10923866,0.54813521]],[0.055,[0.18132983,0.11070429,0.55784354]],[0.059,[0.18150693,0.11236134,0.56744719]],[0.063,[0.18139596,0.11428044,0.57685059]],[0.067,[0.18094994,0.11652515,0.58598210]],[0.071,[0.18011665,0.11916830,0.59474942]],[0.075,[0.17884196,0.12228861,0.60303661]],[0.078,[0.17707513,0.12596207,0.61070774]],[0.082,[0.17477650,0.13024864,0.61761743]],[0.086,[0.17192559,0.13517685,0.62362908]],[0.090,[0.16853023,0.14073088,0.62863572]],[0.094,[0.16463735,0.14684332,0.63257966]],[0.098,[0.16031417,0.15340748,0.63547019]],[0.102,[0.15565395,0.16029118,0.63737422]],[0.106,[0.15073736,0.16736889,0.63839897]],[0.110,[0.14564276,0.17452933,0.63866876]],[0.114,[0.14043681,0.18168415,0.63830895]],[0.118,[0.13517265,0.18876883,0.63743501]],[0.122,[0.12989066,0.19573986,0.63614699]],[0.125,[0.12462051,0.20257034,0.63452826]],[0.129,[0.11938590,0.20924466,0.63264783]],[0.133,[0.11422949,0.21574563,0.63057687]],[0.137,[0.10914049,0.22208312,0.62834552]],[0.141,[0.10414386,0.22825465,0.62599796]],[0.145,[0.09926305,0.23426098,0.62357178]],[0.149,[0.09449513,0.24011400,0.62108167]],[0.153,[0.08986952,0.24581472,0.61855919]],[0.157,[0.08539286,0.25137295,0.61601663]],[0.161,[0.08106757,0.25679971,0.61345967]],[0.165,[0.07694419,0.26209156,0.61092383]],[0.169,[0.07300704,0.26726550,0.60839650]],[0.173,[0.06927651,0.27232730,0.60588732]],[0.176,[0.06578801,0.27727895,0.60341418]],[0.180,[0.06255595,0.28212824,0.60097879]],[0.184,[0.05959205,0.28688317,0.59857975]],[0.188,[0.05691772,0.29154887,0.59622150]],[0.192,[0.05455347,0.29613025,0.59390760]],[0.196,[0.05251890,0.30063184,0.59164148]],[0.200,[0.05083877,0.30505623,0.58943153]],[0.204,[0.04951454,0.30941022,0.58727149]],[0.208,[0.04855490,0.31369777,0.58516273]],[0.212,[0.04796369,0.31792260,0.58310625]],[0.216,[0.04773946,0.32208826,0.58110273]],[0.220,[0.04787545,0.32619809,0.57915259]],[0.224,[0.04835985,0.33025524,0.57725602]],[0.227,[0.04917639,0.33426270,0.57541302]],[0.231,[0.05030519,0.33822330,0.57362343]],[0.235,[0.05172369,0.34213968,0.57188697]],[0.239,[0.05340768,0.34601437,0.57020322]],[0.243,[0.05533215,0.34984975,0.56857170]],[0.247,[0.05747218,0.35364807,0.56699183]],[0.251,[0.05980352,0.35741146,0.56546298]],[0.255,[0.06230309,0.36114193,0.56398445]],[0.259,[0.06494928,0.36484141,0.56255553]],[0.263,[0.06772215,0.36851170,0.56117544]],[0.267,[0.07060351,0.37215453,0.55984338]],[0.271,[0.07357840,0.37577101,0.55856129]],[0.275,[0.07663101,0.37936300,0.55732688]],[0.278,[0.07974740,0.38293224,0.55613803]],[0.282,[0.08291581,0.38648014,0.55499386]],[0.286,[0.08612581,0.39000807,0.55389345]],[0.290,[0.08936818,0.39351731,0.55283591]],[0.294,[0.09263475,0.39700911,0.55182030]],[0.298,[0.09591831,0.40048465,0.55084572]],[0.302,[0.09921324,0.40394470,0.54991337]],[0.306,[0.10251396,0.40739026,0.54902285]],[0.310,[0.10581449,0.41082289,0.54817039]],[0.314,[0.10911041,0.41424357,0.54735502]],[0.318,[0.11239785,0.41765327,0.54657580]],[0.322,[0.11567334,0.42105293,0.54583174]],[0.325,[0.11893417,0.42444322,0.54512319]],[0.329,[0.12217819,0.42782467,0.54445130]],[0.333,[0.12540189,0.43119871,0.54381137]],[0.337,[0.12860313,0.43456614,0.54320239]],[0.341,[0.13177997,0.43792773,0.54262334]],[0.345,[0.13493070,0.44128422,0.54207318]],[0.349,[0.13805491,0.44463569,0.54155509]],[0.353,[0.14115011,0.44798348,0.54106381]],[0.357,[0.14421502,0.45132831,0.54059793]],[0.361,[0.14724858,0.45467082,0.54015636]],[0.365,[0.15024993,0.45801160,0.53973830]],[0.369,[0.15321920,0.46135071,0.53934608]],[0.373,[0.15615459,0.46468937,0.53897446]],[0.376,[0.15905548,0.46802811,0.53862227]],[0.380,[0.16192139,0.47136748,0.53828832]],[0.384,[0.16475245,0.47470770,0.53797335]],[0.388,[0.16754826,0.47804933,0.53767570]],[0.392,[0.17030807,0.48139312,0.53739229]],[0.396,[0.17303172,0.48473950,0.53712185]],[0.400,[0.17571937,0.48808883,0.53686368]],[0.404,[0.17837165,0.49144123,0.53661836]],[0.408,[0.18098782,0.49479750,0.53638175]],[0.412,[0.18356807,0.49815802,0.53615252]],[0.416,[0.18611271,0.50152311,0.53592932]],[0.420,[0.18862304,0.50489271,0.53571335]],[0.424,[0.19109853,0.50826757,0.53550031]],[0.427,[0.19353972,0.51164795,0.53528878]],[0.431,[0.19594729,0.51503411,0.53507737]],[0.435,[0.19832271,0.51842599,0.53486655]],[0.439,[0.20066603,0.52182411,0.53465280]],[0.443,[0.20297814,0.52522869,0.53443452]],[0.447,[0.20526004,0.52863989,0.53421026]],[0.451,[0.20751347,0.53205763,0.53398000]],[0.455,[0.20973895,0.53548228,0.53374061]],[0.459,[0.21193777,0.53891395,0.53349055]],[0.463,[0.21411134,0.54235271,0.53322838]],[0.467,[0.21626158,0.54579847,0.53295358]],[0.471,[0.21838953,0.54925145,0.53266342]],[0.475,[0.22049690,0.55271165,0.53235648]],[0.478,[0.22258553,0.55617904,0.53203143]],[0.482,[0.22465737,0.55965355,0.53168703]],[0.486,[0.22671414,0.56313522,0.53132127]],[0.490,[0.22875792,0.56662395,0.53093283]],[0.494,[0.23079087,0.57011965,0.53052033]],[0.498,[0.23281507,0.57362224,0.53008206]],[0.502,[0.23483286,0.57713158,0.52961673]],[0.506,[0.23684665,0.58064749,0.52912308]],[0.510,[0.23885883,0.58416983,0.52859959]],[0.514,[0.24087168,0.58769850,0.52804439]],[0.518,[0.24288806,0.59123319,0.52745678]],[0.522,[0.24491068,0.59477367,0.52683562]],[0.525,[0.24694203,0.59831977,0.52617913]],[0.529,[0.24898467,0.60187131,0.52548550]],[0.533,[0.25104184,0.60542788,0.52475455]],[0.537,[0.25311648,0.60898917,0.52398530]],[0.541,[0.25521116,0.61255501,0.52317565]],[0.545,[0.25732863,0.61612516,0.52232392]],[0.549,[0.25947244,0.61969909,0.52143048]],[0.553,[0.26164566,0.62327645,0.52049446]],[0.557,[0.26385093,0.62685702,0.51951365]],[0.561,[0.26609108,0.63044055,0.51848614]],[0.565,[0.26836985,0.63402641,0.51741302]],[0.569,[0.27069035,0.63761419,0.51629357]],[0.573,[0.27305542,0.64120359,0.51512593]],[0.576,[0.27546763,0.64479445,0.51390698]],[0.580,[0.27793090,0.64838599,0.51263903]],[0.584,[0.28044833,0.65197775,0.51132146]],[0.588,[0.28302300,0.65556926,0.50995370]],[0.592,[0.28565699,0.65916060,0.50852973]],[0.596,[0.28835435,0.66275079,0.50705376]],[0.600,[0.29111809,0.66633932,0.50552536]],[0.604,[0.29395118,0.66992568,0.50394405]],[0.608,[0.29685621,0.67350965,0.50230621]],[0.612,[0.29983621,0.67709070,0.50061096]],[0.616,[0.30289440,0.68066801,0.49886092]],[0.620,[0.30603358,0.68424103,0.49705572]],[0.624,[0.30925654,0.68780920,0.49519500]],[0.627,[0.31256595,0.69137231,0.49327320]],[0.631,[0.31596475,0.69492953,0.49129275]],[0.635,[0.31945565,0.69848010,0.48925534]],[0.639,[0.32304124,0.70202339,0.48716074]],[0.643,[0.32672410,0.70555876,0.48500876]],[0.647,[0.33050708,0.70908574,0.48279556]],[0.651,[0.33439297,0.71260364,0.48052013]],[0.655,[0.33838396,0.71611153,0.47818646]],[0.659,[0.34248248,0.71960867,0.47579452]],[0.663,[0.34669093,0.72309429,0.47334431]],[0.667,[0.35101170,0.72656762,0.47083590]],[0.671,[0.35544775,0.73002792,0.46826672]],[0.675,[0.36000221,0.73347437,0.46563433]],[0.678,[0.36467645,0.73690592,0.46294413]],[0.682,[0.36947282,0.74032165,0.46019651]],[0.686,[0.37439369,0.74372060,0.45739197]],[0.690,[0.37944143,0.74710175,0.45453114]],[0.694,[0.38461841,0.75046408,0.45161478]],[0.698,[0.38992704,0.75380647,0.44864382]],[0.702,[0.39536975,0.75712778,0.44561937]],[0.706,[0.40095086,0.76042675,0.44253806]],[0.710,[0.40667140,0.76370211,0.43940565]],[0.714,[0.41253348,0.76695254,0.43622497]],[0.718,[0.41853957,0.77017668,0.43299833]],[0.722,[0.42469214,0.77337305,0.42972841]],[0.725,[0.43099366,0.77654014,0.42641835]],[0.729,[0.43744660,0.77967637,0.42307180]],[0.733,[0.44405337,0.78278006,0.41969303]],[0.737,[0.45081634,0.78584949,0.41628696]],[0.741,[0.45773776,0.78888286,0.41285929]],[0.745,[0.46481977,0.79187831,0.40941661]],[0.749,[0.47206428,0.79483390,0.40596650]],[0.753,[0.47947297,0.79774769,0.40251764]],[0.757,[0.48704720,0.80061765,0.39907996]],[0.761,[0.49478789,0.80344179,0.39566477]],[0.765,[0.50269545,0.80621808,0.39228485]],[0.769,[0.51077223,0.80894416,0.38895135]],[0.773,[0.51901758,0.81161801,0.38568043]],[0.776,[0.52742705,0.81423825,0.38249349]],[0.780,[0.53599744,0.81680329,0.37941065]],[0.784,[0.54472430,0.81931180,0.37645392]],[0.788,[0.55360175,0.82176277,0.37364707]],[0.792,[0.56262239,0.82415554,0.37101546]],[0.796,[0.57178017,0.82648930,0.36858305]],[0.800,[0.58106198,0.82876481,0.36637986]],[0.804,[0.59045227,0.83098363,0.36443634]],[0.808,[0.59993631,0.83314747,0.36278020]],[0.812,[0.60949784,0.83525870,0.36143806]],[0.816,[0.61911788,0.83732074,0.36043550]],[0.820,[0.62877531,0.83933797,0.35979568]],[0.824,[0.63845159,0.84131462,0.35953618]],[0.827,[0.64812757,0.84325556,0.35967077]],[0.831,[0.65778455,0.84516598,0.36020866]],[0.835,[0.66740471,0.84705131,0.36115427]],[0.839,[0.67696176,0.84891984,0.36250963]],[0.843,[0.68644876,0.85077489,0.36426656]],[0.847,[0.69585443,0.85262128,0.36641547]],[0.851,[0.70516856,0.85446373,0.36894368]],[0.855,[0.71438303,0.85630656,0.37183582]],[0.859,[0.72349176,0.85815365,0.37507450]],[0.863,[0.73249065,0.86000837,0.37864099]],[0.867,[0.74137736,0.86187357,0.38251590]],[0.871,[0.75015120,0.86375161,0.38667965]],[0.875,[0.75881284,0.86564434,0.39111303]],[0.878,[0.76736417,0.86755320,0.39579749]],[0.882,[0.77580803,0.86947917,0.40071548]],[0.886,[0.78414804,0.87142291,0.40585059]],[0.890,[0.79237773,0.87338865,0.41118249]],[0.894,[0.80049763,0.87537819,0.41669356]],[0.898,[0.80852429,0.87738718,0.42237605]],[0.902,[0.81646307,0.87941518,0.42821863]],[0.906,[0.82431945,0.88146161,0.43421127]],[0.910,[0.83208604,0.88353084,0.44033585]],[0.914,[0.83975443,0.88562785,0.44657232]],[0.918,[0.84735440,0.88774214,0.45293066]],[0.922,[0.85489132,0.88987266,0.45940532]],[0.925,[0.86234095,0.89203075,0.46596504]],[0.929,[0.86971917,0.89421116,0.47261258]],[0.933,[0.87704795,0.89640559,0.47935960]],[0.937,[0.88430614,0.89862422,0.48617718]],[0.941,[0.89149679,0.90086694,0.49305896]],[0.945,[0.89865066,0.90312109,0.50002982]],[0.949,[0.90573286,0.90540326,0.50704449]],[0.953,[0.91276817,0.90770328,0.51412293]],[0.957,[0.91977198,0.91001483,0.52127748]],[0.961,[0.92669995,0.91235949,0.52844799]],[0.965,[0.93360939,0.91471118,0.53569895]],[0.969,[0.94046103,0.91708934,0.54297530]],[0.973,[0.94728035,0.91948254,0.55030445]],[0.976,[0.95406597,0.92189212,0.55767999]],[0.980,[0.96080498,0.92432523,0.56507901]],[0.984,[0.96752874,0.92676689,0.57254139]],[0.988,[0.97419673,0.92923821,0.58000416]],[0.992,[0.98086270,0.93171248,0.58754258]],[0.996,[0.98746841,0.93422029,0.59506489]],[1.000,[0.99408058,0.93672758,0.60267000]]]
H.colormap_seismic = [[0.000, [0.000, 0.000, 0.300]], [0.002, [0.000, 0.000, 0.300]], [0.004, [0.000, 0.000, 0.311]], [0.006, [0.000, 0.000, 0.311]], [0.008, [0.000, 0.000, 0.322]], [0.010, [0.000, 0.000, 0.322]], [0.012, [0.000, 0.000, 0.333]], [0.014, [0.000, 0.000, 0.333]], [0.016, [0.000, 0.000, 0.344]], [0.018, [0.000, 0.000, 0.344]], [0.020, [0.000, 0.000, 0.355]], [0.022, [0.000, 0.000, 0.355]], [0.023, [0.000, 0.000, 0.366]], [0.025, [0.000, 0.000, 0.366]], [0.027, [0.000, 0.000, 0.377]], [0.029, [0.000, 0.000, 0.377]], [0.031, [0.000, 0.000, 0.388]], [0.033, [0.000, 0.000, 0.388]], [0.035, [0.000, 0.000, 0.399]], [0.037, [0.000, 0.000, 0.399]], [0.039, [0.000, 0.000, 0.410]], [0.041, [0.000, 0.000, 0.410]], [0.043, [0.000, 0.000, 0.421]], [0.045, [0.000, 0.000, 0.421]], [0.047, [0.000, 0.000, 0.432]], [0.049, [0.000, 0.000, 0.432]], [0.051, [0.000, 0.000, 0.443]], [0.053, [0.000, 0.000, 0.443]], [0.055, [0.000, 0.000, 0.454]], [0.057, [0.000, 0.000, 0.454]], [0.059, [0.000, 0.000, 0.465]], [0.061, [0.000, 0.000, 0.465]], [0.063, [0.000, 0.000, 0.476]], [0.065, [0.000, 0.000, 0.476]], [0.067, [0.000, 0.000, 0.487]], [0.068, [0.000, 0.000, 0.487]], [0.070, [0.000, 0.000, 0.498]], [0.072, [0.000, 0.000, 0.498]], [0.074, [0.000, 0.000, 0.509]], [0.076, [0.000, 0.000, 0.509]], [0.078, [0.000, 0.000, 0.520]], [0.080, [0.000, 0.000, 0.520]], [0.082, [0.000, 0.000, 0.531]], [0.084, [0.000, 0.000, 0.531]], [0.086, [0.000, 0.000, 0.542]], [0.088, [0.000, 0.000, 0.542]], [0.090, [0.000, 0.000, 0.553]], [0.092, [0.000, 0.000, 0.553]], [0.094, [0.000, 0.000, 0.564]], [0.096, [0.000, 0.000, 0.564]], [0.098, [0.000, 0.000, 0.575]], [0.100, [0.000, 0.000, 0.575]], [0.102, [0.000, 0.000, 0.585]], [0.104, [0.000, 0.000, 0.585]], [0.106, [0.000, 0.000, 0.596]], [0.108, [0.000, 0.000, 0.596]], [0.110, [0.000, 0.000, 0.607]], [0.112, [0.000, 0.000, 0.607]], [0.114, [0.000, 0.000, 0.618]], [0.115, [0.000, 0.000, 0.618]], [0.117, [0.000, 0.000, 0.629]], [0.119, [0.000, 0.000, 0.629]], [0.121, [0.000, 0.000, 0.640]], [0.123, [0.000, 0.000, 0.640]], [0.125, [0.000, 0.000, 0.651]], [0.127, [0.000, 0.000, 0.651]], [0.129, [0.000, 0.000, 0.662]], [0.131, [0.000, 0.000, 0.662]], [0.133, [0.000, 0.000, 0.673]], [0.135, [0.000, 0.000, 0.673]], [0.137, [0.000, 0.000, 0.684]], [0.139, [0.000, 0.000, 0.684]], [0.141, [0.000, 0.000, 0.695]], [0.143, [0.000, 0.000, 0.695]], [0.145, [0.000, 0.000, 0.706]], [0.147, [0.000, 0.000, 0.706]], [0.149, [0.000, 0.000, 0.717]], [0.151, [0.000, 0.000, 0.717]], [0.153, [0.000, 0.000, 0.728]], [0.155, [0.000, 0.000, 0.728]], [0.157, [0.000, 0.000, 0.739]], [0.159, [0.000, 0.000, 0.739]], [0.160, [0.000, 0.000, 0.750]], [0.162, [0.000, 0.000, 0.750]], [0.164, [0.000, 0.000, 0.761]], [0.166, [0.000, 0.000, 0.761]], [0.168, [0.000, 0.000, 0.772]], [0.170, [0.000, 0.000, 0.772]], [0.172, [0.000, 0.000, 0.783]], [0.174, [0.000, 0.000, 0.783]], [0.176, [0.000, 0.000, 0.794]], [0.178, [0.000, 0.000, 0.794]], [0.180, [0.000, 0.000, 0.805]], [0.182, [0.000, 0.000, 0.805]], [0.184, [0.000, 0.000, 0.816]], [0.186, [0.000, 0.000, 0.816]], [0.188, [0.000, 0.000, 0.827]], [0.190, [0.000, 0.000, 0.827]], [0.192, [0.000, 0.000, 0.838]], [0.194, [0.000, 0.000, 0.838]], [0.196, [0.000, 0.000, 0.849]], [0.198, [0.000, 0.000, 0.849]], [0.200, [0.000, 0.000, 0.860]], [0.202, [0.000, 0.000, 0.860]], [0.204, [0.000, 0.000, 0.871]], [0.205, [0.000, 0.000, 0.871]], [0.207, [0.000, 0.000, 0.882]], [0.209, [0.000, 0.000, 0.882]], [0.211, [0.000, 0.000, 0.893]], [0.213, [0.000, 0.000, 0.893]], [0.215, [0.000, 0.000, 0.904]], [0.217, [0.000, 0.000, 0.904]], [0.219, [0.000, 0.000, 0.915]], [0.221, [0.000, 0.000, 0.915]], [0.223, [0.000, 0.000, 0.926]], [0.225, [0.000, 0.000, 0.926]], [0.227, [0.000, 0.000, 0.937]], [0.229, [0.000, 0.000, 0.937]], [0.231, [0.000, 0.000, 0.948]], [0.233, [0.000, 0.000, 0.948]], [0.235, [0.000, 0.000, 0.959]], [0.237, [0.000, 0.000, 0.959]], [0.239, [0.000, 0.000, 0.970]], [0.241, [0.000, 0.000, 0.970]], [0.243, [0.000, 0.000, 0.981]], [0.245, [0.000, 0.000, 0.981]], [0.247, [0.000, 0.000, 0.992]], [0.249, [0.000, 0.000, 0.992]], [0.250, [0.004, 0.004, 1.000]], [0.252, [0.004, 0.004, 1.000]], [0.254, [0.020, 0.020, 1.000]], [0.256, [0.020, 0.020, 1.000]], [0.258, [0.035, 0.035, 1.000]], [0.260, [0.035, 0.035, 1.000]], [0.262, [0.051, 0.051, 1.000]], [0.264, [0.051, 0.051, 1.000]], [0.266, [0.067, 0.067, 1.000]], [0.268, [0.067, 0.067, 1.000]], [0.270, [0.082, 0.082, 1.000]], [0.272, [0.082, 0.082, 1.000]], [0.274, [0.098, 0.098, 1.000]], [0.276, [0.098, 0.098, 1.000]], [0.278, [0.114, 0.114, 1.000]], [0.280, [0.114, 0.114, 1.000]], [0.282, [0.129, 0.129, 1.000]], [0.284, [0.129, 0.129, 1.000]], [0.286, [0.145, 0.145, 1.000]], [0.288, [0.145, 0.145, 1.000]], [0.290, [0.161, 0.161, 1.000]], [0.292, [0.161, 0.161, 1.000]], [0.294, [0.176, 0.176, 1.000]], [0.295, [0.176, 0.176, 1.000]], [0.297, [0.192, 0.192, 1.000]], [0.299, [0.192, 0.192, 1.000]], [0.301, [0.208, 0.208, 1.000]], [0.303, [0.208, 0.208, 1.000]], [0.305, [0.224, 0.224, 1.000]], [0.307, [0.224, 0.224, 1.000]], [0.309, [0.239, 0.239, 1.000]], [0.311, [0.239, 0.239, 1.000]], [0.313, [0.255, 0.255, 1.000]], [0.315, [0.255, 0.255, 1.000]], [0.317, [0.271, 0.271, 1.000]], [0.319, [0.271, 0.271, 1.000]], [0.321, [0.286, 0.286, 1.000]], [0.323, [0.286, 0.286, 1.000]], [0.325, [0.302, 0.302, 1.000]], [0.327, [0.302, 0.302, 1.000]], [0.329, [0.318, 0.318, 1.000]], [0.331, [0.318, 0.318, 1.000]], [0.333, [0.333, 0.333, 1.000]], [0.335, [0.333, 0.333, 1.000]], [0.337, [0.349, 0.349, 1.000]], [0.339, [0.349, 0.349, 1.000]], [0.341, [0.365, 0.365, 1.000]], [0.342, [0.365, 0.365, 1.000]], [0.344, [0.380, 0.380, 1.000]], [0.346, [0.380, 0.380, 1.000]], [0.348, [0.396, 0.396, 1.000]], [0.350, [0.396, 0.396, 1.000]], [0.352, [0.412, 0.412, 1.000]], [0.354, [0.412, 0.412, 1.000]], [0.356, [0.427, 0.427, 1.000]], [0.358, [0.427, 0.427, 1.000]], [0.360, [0.443, 0.443, 1.000]], [0.362, [0.443, 0.443, 1.000]], [0.364, [0.459, 0.459, 1.000]], [0.366, [0.459, 0.459, 1.000]], [0.368, [0.475, 0.475, 1.000]], [0.370, [0.475, 0.475, 1.000]], [0.372, [0.490, 0.490, 1.000]], [0.374, [0.490, 0.490, 1.000]], [0.376, [0.506, 0.506, 1.000]], [0.378, [0.506, 0.506, 1.000]], [0.380, [0.522, 0.522, 1.000]], [0.382, [0.522, 0.522, 1.000]], [0.384, [0.537, 0.537, 1.000]], [0.386, [0.537, 0.537, 1.000]], [0.387, [0.553, 0.553, 1.000]], [0.389, [0.553, 0.553, 1.000]], [0.391, [0.569, 0.569, 1.000]], [0.393, [0.569, 0.569, 1.000]], [0.395, [0.584, 0.584, 1.000]], [0.397, [0.584, 0.584, 1.000]], [0.399, [0.600, 0.600, 1.000]], [0.401, [0.600, 0.600, 1.000]], [0.403, [0.616, 0.616, 1.000]], [0.405, [0.616, 0.616, 1.000]], [0.407, [0.631, 0.631, 1.000]], [0.409, [0.631, 0.631, 1.000]], [0.411, [0.647, 0.647, 1.000]], [0.413, [0.647, 0.647, 1.000]], [0.415, [0.663, 0.663, 1.000]], [0.417, [0.663, 0.663, 1.000]], [0.419, [0.678, 0.678, 1.000]], [0.421, [0.678, 0.678, 1.000]], [0.423, [0.694, 0.694, 1.000]], [0.425, [0.694, 0.694, 1.000]], [0.427, [0.710, 0.710, 1.000]], [0.429, [0.710, 0.710, 1.000]], [0.431, [0.725, 0.725, 1.000]], [0.432, [0.725, 0.725, 1.000]], [0.434, [0.741, 0.741, 1.000]], [0.436, [0.741, 0.741, 1.000]], [0.438, [0.757, 0.757, 1.000]], [0.440, [0.757, 0.757, 1.000]], [0.442, [0.773, 0.773, 1.000]], [0.444, [0.773, 0.773, 1.000]], [0.446, [0.788, 0.788, 1.000]], [0.448, [0.788, 0.788, 1.000]], [0.450, [0.804, 0.804, 1.000]], [0.452, [0.804, 0.804, 1.000]], [0.454, [0.820, 0.820, 1.000]], [0.456, [0.820, 0.820, 1.000]], [0.458, [0.835, 0.835, 1.000]], [0.460, [0.835, 0.835, 1.000]], [0.462, [0.851, 0.851, 1.000]], [0.464, [0.851, 0.851, 1.000]], [0.466, [0.867, 0.867, 1.000]], [0.468, [0.867, 0.867, 1.000]], [0.470, [0.882, 0.882, 1.000]], [0.472, [0.882, 0.882, 1.000]], [0.474, [0.898, 0.898, 1.000]], [0.476, [0.898, 0.898, 1.000]], [0.477, [0.914, 0.914, 1.000]], [0.479, [0.914, 0.914, 1.000]], [0.481, [0.929, 0.929, 1.000]], [0.483, [0.929, 0.929, 1.000]], [0.485, [0.945, 0.945, 1.000]], [0.487, [0.945, 0.945, 1.000]], [0.489, [0.961, 0.961, 1.000]], [0.491, [0.961, 0.961, 1.000]], [0.493, [0.976, 0.976, 1.000]], [0.495, [0.976, 0.976, 1.000]], [0.497, [0.992, 0.992, 1.000]], [0.499, [0.992, 0.992, 1.000]], [0.501, [1.000, 0.992, 0.992]], [0.503, [1.000, 0.992, 0.992]], [0.505, [1.000, 0.976, 0.976]], [0.507, [1.000, 0.976, 0.976]], [0.509, [1.000, 0.961, 0.961]], [0.511, [1.000, 0.961, 0.961]], [0.513, [1.000, 0.945, 0.945]], [0.515, [1.000, 0.945, 0.945]], [0.517, [1.000, 0.929, 0.929]], [0.519, [1.000, 0.929, 0.929]], [0.521, [1.000, 0.914, 0.914]], [0.523, [1.000, 0.914, 0.914]], [0.524, [1.000, 0.898, 0.898]], [0.526, [1.000, 0.898, 0.898]], [0.528, [1.000, 0.882, 0.882]], [0.530, [1.000, 0.882, 0.882]], [0.532, [1.000, 0.867, 0.867]], [0.534, [1.000, 0.867, 0.867]], [0.536, [1.000, 0.851, 0.851]], [0.538, [1.000, 0.851, 0.851]], [0.540, [1.000, 0.835, 0.835]], [0.542, [1.000, 0.835, 0.835]], [0.544, [1.000, 0.820, 0.820]], [0.546, [1.000, 0.820, 0.820]], [0.548, [1.000, 0.804, 0.804]], [0.550, [1.000, 0.804, 0.804]], [0.552, [1.000, 0.788, 0.788]], [0.554, [1.000, 0.788, 0.788]], [0.556, [1.000, 0.773, 0.773]], [0.558, [1.000, 0.773, 0.773]], [0.560, [1.000, 0.757, 0.757]], [0.562, [1.000, 0.757, 0.757]], [0.564, [1.000, 0.741, 0.741]], [0.566, [1.000, 0.741, 0.741]], [0.568, [1.000, 0.725, 0.725]], [0.569, [1.000, 0.725, 0.725]], [0.571, [1.000, 0.710, 0.710]], [0.573, [1.000, 0.710, 0.710]], [0.575, [1.000, 0.694, 0.694]], [0.577, [1.000, 0.694, 0.694]], [0.579, [1.000, 0.678, 0.678]], [0.581, [1.000, 0.678, 0.678]], [0.583, [1.000, 0.663, 0.663]], [0.585, [1.000, 0.663, 0.663]], [0.587, [1.000, 0.647, 0.647]], [0.589, [1.000, 0.647, 0.647]], [0.591, [1.000, 0.631, 0.631]], [0.593, [1.000, 0.631, 0.631]], [0.595, [1.000, 0.616, 0.616]], [0.597, [1.000, 0.616, 0.616]], [0.599, [1.000, 0.600, 0.600]], [0.601, [1.000, 0.600, 0.600]], [0.603, [1.000, 0.584, 0.584]], [0.605, [1.000, 0.584, 0.584]], [0.607, [1.000, 0.569, 0.569]], [0.609, [1.000, 0.569, 0.569]], [0.611, [1.000, 0.553, 0.553]], [0.613, [1.000, 0.553, 0.553]], [0.614, [1.000, 0.537, 0.537]], [0.616, [1.000, 0.537, 0.537]], [0.618, [1.000, 0.522, 0.522]], [0.620, [1.000, 0.522, 0.522]], [0.622, [1.000, 0.506, 0.506]], [0.624, [1.000, 0.506, 0.506]], [0.626, [1.000, 0.490, 0.490]], [0.628, [1.000, 0.490, 0.490]], [0.630, [1.000, 0.475, 0.475]], [0.632, [1.000, 0.475, 0.475]], [0.634, [1.000, 0.459, 0.459]], [0.636, [1.000, 0.459, 0.459]], [0.638, [1.000, 0.443, 0.443]], [0.640, [1.000, 0.443, 0.443]], [0.642, [1.000, 0.427, 0.427]], [0.644, [1.000, 0.427, 0.427]], [0.646, [1.000, 0.412, 0.412]], [0.648, [1.000, 0.412, 0.412]], [0.650, [1.000, 0.396, 0.396]], [0.652, [1.000, 0.396, 0.396]], [0.654, [1.000, 0.380, 0.380]], [0.656, [1.000, 0.380, 0.380]], [0.658, [1.000, 0.365, 0.365]], [0.659, [1.000, 0.365, 0.365]], [0.661, [1.000, 0.349, 0.349]], [0.663, [1.000, 0.349, 0.349]], [0.665, [1.000, 0.333, 0.333]], [0.667, [1.000, 0.333, 0.333]], [0.669, [1.000, 0.318, 0.318]], [0.671, [1.000, 0.318, 0.318]], [0.673, [1.000, 0.302, 0.302]], [0.675, [1.000, 0.302, 0.302]], [0.677, [1.000, 0.286, 0.286]], [0.679, [1.000, 0.286, 0.286]], [0.681, [1.000, 0.271, 0.271]], [0.683, [1.000, 0.271, 0.271]], [0.685, [1.000, 0.255, 0.255]], [0.687, [1.000, 0.255, 0.255]], [0.689, [1.000, 0.239, 0.239]], [0.691, [1.000, 0.239, 0.239]], [0.693, [1.000, 0.224, 0.224]], [0.695, [1.000, 0.224, 0.224]], [0.697, [1.000, 0.208, 0.208]], [0.699, [1.000, 0.208, 0.208]], [0.701, [1.000, 0.192, 0.192]], [0.703, [1.000, 0.192, 0.192]], [0.705, [1.000, 0.176, 0.176]], [0.706, [1.000, 0.176, 0.176]], [0.708, [1.000, 0.161, 0.161]], [0.710, [1.000, 0.161, 0.161]], [0.712, [1.000, 0.145, 0.145]], [0.714, [1.000, 0.145, 0.145]], [0.716, [1.000, 0.129, 0.129]], [0.718, [1.000, 0.129, 0.129]], [0.720, [1.000, 0.114, 0.114]], [0.722, [1.000, 0.114, 0.114]], [0.724, [1.000, 0.098, 0.098]], [0.726, [1.000, 0.098, 0.098]], [0.728, [1.000, 0.082, 0.082]], [0.730, [1.000, 0.082, 0.082]], [0.732, [1.000, 0.067, 0.067]], [0.734, [1.000, 0.067, 0.067]], [0.736, [1.000, 0.051, 0.051]], [0.738, [1.000, 0.051, 0.051]], [0.740, [1.000, 0.035, 0.035]], [0.742, [1.000, 0.035, 0.035]], [0.744, [1.000, 0.020, 0.020]], [0.746, [1.000, 0.020, 0.020]], [0.748, [1.000, 0.004, 0.004]], [0.750, [1.000, 0.004, 0.004]], [0.751, [0.994, 0.000, 0.000]], [0.753, [0.994, 0.000, 0.000]], [0.755, [0.986, 0.000, 0.000]], [0.757, [0.986, 0.000, 0.000]], [0.759, [0.978, 0.000, 0.000]], [0.761, [0.978, 0.000, 0.000]], [0.763, [0.971, 0.000, 0.000]], [0.765, [0.971, 0.000, 0.000]], [0.767, [0.963, 0.000, 0.000]], [0.769, [0.963, 0.000, 0.000]], [0.771, [0.955, 0.000, 0.000]], [0.773, [0.955, 0.000, 0.000]], [0.775, [0.947, 0.000, 0.000]], [0.777, [0.947, 0.000, 0.000]], [0.779, [0.939, 0.000, 0.000]], [0.781, [0.939, 0.000, 0.000]], [0.783, [0.931, 0.000, 0.000]], [0.785, [0.931, 0.000, 0.000]], [0.787, [0.924, 0.000, 0.000]], [0.789, [0.924, 0.000, 0.000]], [0.791, [0.916, 0.000, 0.000]], [0.793, [0.916, 0.000, 0.000]], [0.795, [0.908, 0.000, 0.000]], [0.796, [0.908, 0.000, 0.000]], [0.798, [0.900, 0.000, 0.000]], [0.800, [0.900, 0.000, 0.000]], [0.802, [0.892, 0.000, 0.000]], [0.804, [0.892, 0.000, 0.000]], [0.806, [0.884, 0.000, 0.000]], [0.808, [0.884, 0.000, 0.000]], [0.810, [0.876, 0.000, 0.000]], [0.812, [0.876, 0.000, 0.000]], [0.814, [0.869, 0.000, 0.000]], [0.816, [0.869, 0.000, 0.000]], [0.818, [0.861, 0.000, 0.000]], [0.820, [0.861, 0.000, 0.000]], [0.822, [0.853, 0.000, 0.000]], [0.824, [0.853, 0.000, 0.000]], [0.826, [0.845, 0.000, 0.000]], [0.828, [0.845, 0.000, 0.000]], [0.830, [0.837, 0.000, 0.000]], [0.832, [0.837, 0.000, 0.000]], [0.834, [0.829, 0.000, 0.000]], [0.836, [0.829, 0.000, 0.000]], [0.838, [0.822, 0.000, 0.000]], [0.840, [0.822, 0.000, 0.000]], [0.841, [0.814, 0.000, 0.000]], [0.843, [0.814, 0.000, 0.000]], [0.845, [0.806, 0.000, 0.000]], [0.847, [0.806, 0.000, 0.000]], [0.849, [0.798, 0.000, 0.000]], [0.851, [0.798, 0.000, 0.000]], [0.853, [0.790, 0.000, 0.000]], [0.855, [0.790, 0.000, 0.000]], [0.857, [0.782, 0.000, 0.000]], [0.859, [0.782, 0.000, 0.000]], [0.861, [0.775, 0.000, 0.000]], [0.863, [0.775, 0.000, 0.000]], [0.865, [0.767, 0.000, 0.000]], [0.867, [0.767, 0.000, 0.000]], [0.869, [0.759, 0.000, 0.000]], [0.871, [0.759, 0.000, 0.000]], [0.873, [0.751, 0.000, 0.000]], [0.875, [0.751, 0.000, 0.000]], [0.877, [0.743, 0.000, 0.000]], [0.879, [0.743, 0.000, 0.000]], [0.881, [0.735, 0.000, 0.000]], [0.883, [0.735, 0.000, 0.000]], [0.885, [0.727, 0.000, 0.000]], [0.886, [0.727, 0.000, 0.000]], [0.888, [0.720, 0.000, 0.000]], [0.890, [0.720, 0.000, 0.000]], [0.892, [0.712, 0.000, 0.000]], [0.894, [0.712, 0.000, 0.000]], [0.896, [0.704, 0.000, 0.000]], [0.898, [0.704, 0.000, 0.000]], [0.900, [0.696, 0.000, 0.000]], [0.902, [0.696, 0.000, 0.000]], [0.904, [0.688, 0.000, 0.000]], [0.906, [0.688, 0.000, 0.000]], [0.908, [0.680, 0.000, 0.000]], [0.910, [0.680, 0.000, 0.000]], [0.912, [0.673, 0.000, 0.000]], [0.914, [0.673, 0.000, 0.000]], [0.916, [0.665, 0.000, 0.000]], [0.918, [0.665, 0.000, 0.000]], [0.920, [0.657, 0.000, 0.000]], [0.922, [0.657, 0.000, 0.000]], [0.924, [0.649, 0.000, 0.000]], [0.926, [0.649, 0.000, 0.000]], [0.928, [0.641, 0.000, 0.000]], [0.930, [0.641, 0.000, 0.000]], [0.932, [0.633, 0.000, 0.000]], [0.933, [0.633, 0.000, 0.000]], [0.935, [0.625, 0.000, 0.000]], [0.937, [0.625, 0.000, 0.000]], [0.939, [0.618, 0.000, 0.000]], [0.941, [0.618, 0.000, 0.000]], [0.943, [0.610, 0.000, 0.000]], [0.945, [0.610, 0.000, 0.000]], [0.947, [0.602, 0.000, 0.000]], [0.949, [0.602, 0.000, 0.000]], [0.951, [0.594, 0.000, 0.000]], [0.953, [0.594, 0.000, 0.000]], [0.955, [0.586, 0.000, 0.000]], [0.957, [0.586, 0.000, 0.000]], [0.959, [0.578, 0.000, 0.000]], [0.961, [0.578, 0.000, 0.000]], [0.963, [0.571, 0.000, 0.000]], [0.965, [0.571, 0.000, 0.000]], [0.967, [0.563, 0.000, 0.000]], [0.969, [0.563, 0.000, 0.000]], [0.971, [0.555, 0.000, 0.000]], [0.973, [0.555, 0.000, 0.000]], [0.975, [0.547, 0.000, 0.000]], [0.977, [0.547, 0.000, 0.000]], [0.978, [0.539, 0.000, 0.000]], [0.980, [0.539, 0.000, 0.000]], [0.982, [0.531, 0.000, 0.000]], [0.984, [0.531, 0.000, 0.000]], [0.986, [0.524, 0.000, 0.000]], [0.988, [0.524, 0.000, 0.000]], [0.990, [0.516, 0.000, 0.000]], [0.992, [0.516, 0.000, 0.000]], [0.994, [0.508, 0.000, 0.000]], [0.996, [0.508, 0.000, 0.000]], [0.998, [0.500, 0.000, 0.000]], [1.000, [0.500, 0.000, 0.000]]];
H.colormap_Set1 = [[0.000, [0.894, 0.102, 0.110]], [0.002, [0.894, 0.102, 0.110]], [0.004, [0.873, 0.114, 0.129]], [0.006, [0.873, 0.114, 0.129]], [0.008, [0.852, 0.127, 0.148]], [0.010, [0.852, 0.127, 0.148]], [0.012, [0.830, 0.139, 0.167]], [0.014, [0.830, 0.139, 0.167]], [0.016, [0.809, 0.151, 0.187]], [0.018, [0.809, 0.151, 0.187]], [0.020, [0.788, 0.163, 0.206]], [0.022, [0.788, 0.163, 0.206]], [0.023, [0.766, 0.176, 0.225]], [0.025, [0.766, 0.176, 0.225]], [0.027, [0.745, 0.188, 0.244]], [0.029, [0.745, 0.188, 0.244]], [0.031, [0.724, 0.200, 0.263]], [0.033, [0.724, 0.200, 0.263]], [0.035, [0.703, 0.213, 0.283]], [0.037, [0.703, 0.213, 0.283]], [0.039, [0.681, 0.225, 0.302]], [0.041, [0.681, 0.225, 0.302]], [0.043, [0.660, 0.237, 0.321]], [0.045, [0.660, 0.237, 0.321]], [0.047, [0.639, 0.250, 0.340]], [0.049, [0.639, 0.250, 0.340]], [0.051, [0.617, 0.262, 0.359]], [0.053, [0.617, 0.262, 0.359]], [0.055, [0.596, 0.274, 0.379]], [0.057, [0.596, 0.274, 0.379]], [0.059, [0.575, 0.287, 0.398]], [0.061, [0.575, 0.287, 0.398]], [0.063, [0.554, 0.299, 0.417]], [0.065, [0.554, 0.299, 0.417]], [0.067, [0.532, 0.311, 0.436]], [0.068, [0.532, 0.311, 0.436]], [0.070, [0.511, 0.323, 0.455]], [0.072, [0.511, 0.323, 0.455]], [0.074, [0.490, 0.336, 0.474]], [0.076, [0.490, 0.336, 0.474]], [0.078, [0.468, 0.348, 0.494]], [0.080, [0.468, 0.348, 0.494]], [0.082, [0.447, 0.360, 0.513]], [0.084, [0.447, 0.360, 0.513]], [0.086, [0.426, 0.373, 0.532]], [0.088, [0.426, 0.373, 0.532]], [0.090, [0.405, 0.385, 0.551]], [0.092, [0.405, 0.385, 0.551]], [0.094, [0.383, 0.397, 0.570]], [0.096, [0.383, 0.397, 0.570]], [0.098, [0.362, 0.410, 0.590]], [0.100, [0.362, 0.410, 0.590]], [0.102, [0.341, 0.422, 0.609]], [0.104, [0.341, 0.422, 0.609]], [0.106, [0.319, 0.434, 0.628]], [0.108, [0.319, 0.434, 0.628]], [0.110, [0.298, 0.446, 0.647]], [0.112, [0.298, 0.446, 0.647]], [0.114, [0.277, 0.459, 0.666]], [0.115, [0.277, 0.459, 0.666]], [0.117, [0.256, 0.471, 0.686]], [0.119, [0.256, 0.471, 0.686]], [0.121, [0.234, 0.483, 0.705]], [0.123, [0.234, 0.483, 0.705]], [0.125, [0.216, 0.495, 0.720]], [0.127, [0.216, 0.495, 0.720]], [0.129, [0.219, 0.501, 0.706]], [0.131, [0.219, 0.501, 0.706]], [0.133, [0.221, 0.507, 0.693]], [0.135, [0.221, 0.507, 0.693]], [0.137, [0.224, 0.513, 0.679]], [0.139, [0.224, 0.513, 0.679]], [0.141, [0.227, 0.519, 0.666]], [0.143, [0.227, 0.519, 0.666]], [0.145, [0.230, 0.525, 0.652]], [0.147, [0.230, 0.525, 0.652]], [0.149, [0.232, 0.531, 0.639]], [0.151, [0.232, 0.531, 0.639]], [0.153, [0.235, 0.537, 0.625]], [0.155, [0.235, 0.537, 0.625]], [0.157, [0.238, 0.543, 0.612]], [0.159, [0.238, 0.543, 0.612]], [0.160, [0.240, 0.549, 0.598]], [0.162, [0.240, 0.549, 0.598]], [0.164, [0.243, 0.555, 0.585]], [0.166, [0.243, 0.555, 0.585]], [0.168, [0.246, 0.561, 0.571]], [0.170, [0.246, 0.561, 0.571]], [0.172, [0.249, 0.567, 0.557]], [0.174, [0.249, 0.567, 0.557]], [0.176, [0.251, 0.573, 0.544]], [0.178, [0.251, 0.573, 0.544]], [0.180, [0.254, 0.579, 0.530]], [0.182, [0.254, 0.579, 0.530]], [0.184, [0.257, 0.585, 0.517]], [0.186, [0.257, 0.585, 0.517]], [0.188, [0.259, 0.591, 0.503]], [0.190, [0.259, 0.591, 0.503]], [0.192, [0.262, 0.597, 0.490]], [0.194, [0.262, 0.597, 0.490]], [0.196, [0.265, 0.603, 0.476]], [0.198, [0.265, 0.603, 0.476]], [0.200, [0.267, 0.609, 0.463]], [0.202, [0.267, 0.609, 0.463]], [0.204, [0.270, 0.615, 0.449]], [0.205, [0.270, 0.615, 0.449]], [0.207, [0.273, 0.621, 0.436]], [0.209, [0.273, 0.621, 0.436]], [0.211, [0.276, 0.627, 0.422]], [0.213, [0.276, 0.627, 0.422]], [0.215, [0.278, 0.634, 0.409]], [0.217, [0.278, 0.634, 0.409]], [0.219, [0.281, 0.640, 0.395]], [0.221, [0.281, 0.640, 0.395]], [0.223, [0.284, 0.646, 0.382]], [0.225, [0.284, 0.646, 0.382]], [0.227, [0.286, 0.652, 0.368]], [0.229, [0.286, 0.652, 0.368]], [0.231, [0.289, 0.658, 0.354]], [0.233, [0.289, 0.658, 0.354]], [0.235, [0.292, 0.664, 0.341]], [0.237, [0.292, 0.664, 0.341]], [0.239, [0.295, 0.670, 0.327]], [0.241, [0.295, 0.670, 0.327]], [0.243, [0.297, 0.676, 0.314]], [0.245, [0.297, 0.676, 0.314]], [0.247, [0.300, 0.682, 0.300]], [0.249, [0.300, 0.682, 0.300]], [0.250, [0.304, 0.683, 0.293]], [0.252, [0.304, 0.683, 0.293]], [0.254, [0.313, 0.671, 0.304]], [0.256, [0.313, 0.671, 0.304]], [0.258, [0.323, 0.659, 0.315]], [0.260, [0.323, 0.659, 0.315]], [0.262, [0.332, 0.647, 0.326]], [0.264, [0.332, 0.647, 0.326]], [0.266, [0.341, 0.636, 0.337]], [0.268, [0.341, 0.636, 0.337]], [0.270, [0.350, 0.624, 0.348]], [0.272, [0.350, 0.624, 0.348]], [0.274, [0.360, 0.612, 0.359]], [0.276, [0.360, 0.612, 0.359]], [0.278, [0.369, 0.600, 0.370]], [0.280, [0.369, 0.600, 0.370]], [0.282, [0.378, 0.588, 0.381]], [0.284, [0.378, 0.588, 0.381]], [0.286, [0.387, 0.576, 0.391]], [0.288, [0.387, 0.576, 0.391]], [0.290, [0.397, 0.564, 0.402]], [0.292, [0.397, 0.564, 0.402]], [0.294, [0.406, 0.552, 0.413]], [0.295, [0.406, 0.552, 0.413]], [0.297, [0.415, 0.540, 0.424]], [0.299, [0.415, 0.540, 0.424]], [0.301, [0.424, 0.528, 0.435]], [0.303, [0.424, 0.528, 0.435]], [0.305, [0.433, 0.516, 0.446]], [0.307, [0.433, 0.516, 0.446]], [0.309, [0.443, 0.504, 0.457]], [0.311, [0.443, 0.504, 0.457]], [0.313, [0.452, 0.492, 0.468]], [0.315, [0.452, 0.492, 0.468]], [0.317, [0.461, 0.480, 0.479]], [0.319, [0.461, 0.480, 0.479]], [0.321, [0.470, 0.468, 0.490]], [0.323, [0.470, 0.468, 0.490]], [0.325, [0.480, 0.457, 0.501]], [0.327, [0.480, 0.457, 0.501]], [0.329, [0.489, 0.445, 0.512]], [0.331, [0.489, 0.445, 0.512]], [0.333, [0.498, 0.433, 0.523]], [0.335, [0.498, 0.433, 0.523]], [0.337, [0.507, 0.421, 0.534]], [0.339, [0.507, 0.421, 0.534]], [0.341, [0.516, 0.409, 0.545]], [0.342, [0.516, 0.409, 0.545]], [0.344, [0.526, 0.397, 0.556]], [0.346, [0.526, 0.397, 0.556]], [0.348, [0.535, 0.385, 0.567]], [0.350, [0.535, 0.385, 0.567]], [0.352, [0.544, 0.373, 0.578]], [0.354, [0.544, 0.373, 0.578]], [0.356, [0.553, 0.361, 0.589]], [0.358, [0.553, 0.361, 0.589]], [0.360, [0.563, 0.349, 0.600]], [0.362, [0.563, 0.349, 0.600]], [0.364, [0.572, 0.337, 0.610]], [0.366, [0.572, 0.337, 0.610]], [0.368, [0.581, 0.325, 0.621]], [0.370, [0.581, 0.325, 0.621]], [0.372, [0.590, 0.313, 0.632]], [0.374, [0.590, 0.313, 0.632]], [0.376, [0.601, 0.308, 0.632]], [0.378, [0.601, 0.308, 0.632]], [0.380, [0.614, 0.314, 0.612]], [0.382, [0.614, 0.314, 0.612]], [0.384, [0.626, 0.320, 0.592]], [0.386, [0.626, 0.320, 0.592]], [0.387, [0.639, 0.326, 0.572]], [0.389, [0.639, 0.326, 0.572]], [0.391, [0.652, 0.332, 0.551]], [0.393, [0.652, 0.332, 0.551]], [0.395, [0.664, 0.338, 0.531]], [0.397, [0.664, 0.338, 0.531]], [0.399, [0.677, 0.344, 0.511]], [0.401, [0.677, 0.344, 0.511]], [0.403, [0.690, 0.350, 0.491]], [0.405, [0.690, 0.350, 0.491]], [0.407, [0.702, 0.356, 0.471]], [0.409, [0.702, 0.356, 0.471]], [0.411, [0.715, 0.362, 0.451]], [0.413, [0.715, 0.362, 0.451]], [0.415, [0.728, 0.368, 0.431]], [0.417, [0.728, 0.368, 0.431]], [0.419, [0.740, 0.374, 0.411]], [0.421, [0.740, 0.374, 0.411]], [0.423, [0.753, 0.380, 0.391]], [0.425, [0.753, 0.380, 0.391]], [0.427, [0.766, 0.387, 0.371]], [0.429, [0.766, 0.387, 0.371]], [0.431, [0.778, 0.393, 0.351]], [0.432, [0.778, 0.393, 0.351]], [0.434, [0.791, 0.399, 0.331]], [0.436, [0.791, 0.399, 0.331]], [0.438, [0.804, 0.405, 0.311]], [0.440, [0.804, 0.405, 0.311]], [0.442, [0.816, 0.411, 0.291]], [0.444, [0.816, 0.411, 0.291]], [0.446, [0.829, 0.417, 0.271]], [0.448, [0.829, 0.417, 0.271]], [0.450, [0.842, 0.423, 0.251]], [0.452, [0.842, 0.423, 0.251]], [0.454, [0.854, 0.429, 0.231]], [0.456, [0.854, 0.429, 0.231]], [0.458, [0.867, 0.435, 0.211]], [0.460, [0.867, 0.435, 0.211]], [0.462, [0.880, 0.441, 0.191]], [0.464, [0.880, 0.441, 0.191]], [0.466, [0.892, 0.447, 0.170]], [0.468, [0.892, 0.447, 0.170]], [0.470, [0.905, 0.453, 0.150]], [0.472, [0.905, 0.453, 0.150]], [0.474, [0.918, 0.459, 0.130]], [0.476, [0.918, 0.459, 0.130]], [0.477, [0.930, 0.465, 0.110]], [0.479, [0.930, 0.465, 0.110]], [0.481, [0.943, 0.471, 0.090]], [0.483, [0.943, 0.471, 0.090]], [0.485, [0.956, 0.477, 0.070]], [0.487, [0.956, 0.477, 0.070]], [0.489, [0.968, 0.483, 0.050]], [0.491, [0.968, 0.483, 0.050]], [0.493, [0.981, 0.489, 0.030]], [0.495, [0.981, 0.489, 0.030]], [0.497, [0.994, 0.495, 0.010]], [0.499, [0.994, 0.495, 0.010]], [0.501, [1.000, 0.506, 0.003]], [0.503, [1.000, 0.506, 0.003]], [0.505, [1.000, 0.522, 0.009]], [0.507, [1.000, 0.522, 0.009]], [0.509, [1.000, 0.537, 0.016]], [0.511, [1.000, 0.537, 0.016]], [0.513, [1.000, 0.553, 0.022]], [0.515, [1.000, 0.553, 0.022]], [0.517, [1.000, 0.569, 0.028]], [0.519, [1.000, 0.569, 0.028]], [0.521, [1.000, 0.585, 0.035]], [0.523, [1.000, 0.585, 0.035]], [0.524, [1.000, 0.600, 0.041]], [0.526, [1.000, 0.600, 0.041]], [0.528, [1.000, 0.616, 0.047]], [0.530, [1.000, 0.616, 0.047]], [0.532, [1.000, 0.632, 0.053]], [0.534, [1.000, 0.632, 0.053]], [0.536, [1.000, 0.648, 0.060]], [0.538, [1.000, 0.648, 0.060]], [0.540, [1.000, 0.663, 0.066]], [0.542, [1.000, 0.663, 0.066]], [0.544, [1.000, 0.679, 0.072]], [0.546, [1.000, 0.679, 0.072]], [0.548, [1.000, 0.695, 0.078]], [0.550, [1.000, 0.695, 0.078]], [0.552, [1.000, 0.711, 0.085]], [0.554, [1.000, 0.711, 0.085]], [0.556, [1.000, 0.726, 0.091]], [0.558, [1.000, 0.726, 0.091]], [0.560, [1.000, 0.742, 0.097]], [0.562, [1.000, 0.742, 0.097]], [0.564, [1.000, 0.758, 0.104]], [0.566, [1.000, 0.758, 0.104]], [0.568, [1.000, 0.774, 0.110]], [0.569, [1.000, 0.774, 0.110]], [0.571, [1.000, 0.789, 0.116]], [0.573, [1.000, 0.789, 0.116]], [0.575, [1.000, 0.805, 0.122]], [0.577, [1.000, 0.805, 0.122]], [0.579, [1.000, 0.821, 0.129]], [0.581, [1.000, 0.821, 0.129]], [0.583, [1.000, 0.837, 0.135]], [0.585, [1.000, 0.837, 0.135]], [0.587, [1.000, 0.852, 0.141]], [0.589, [1.000, 0.852, 0.141]], [0.591, [1.000, 0.868, 0.147]], [0.593, [1.000, 0.868, 0.147]], [0.595, [1.000, 0.884, 0.154]], [0.597, [1.000, 0.884, 0.154]], [0.599, [1.000, 0.900, 0.160]], [0.601, [1.000, 0.900, 0.160]], [0.603, [1.000, 0.915, 0.166]], [0.605, [1.000, 0.915, 0.166]], [0.607, [1.000, 0.931, 0.173]], [0.609, [1.000, 0.931, 0.173]], [0.611, [1.000, 0.947, 0.179]], [0.613, [1.000, 0.947, 0.179]], [0.614, [1.000, 0.963, 0.185]], [0.616, [1.000, 0.963, 0.185]], [0.618, [1.000, 0.978, 0.191]], [0.620, [1.000, 0.978, 0.191]], [0.622, [1.000, 0.994, 0.198]], [0.624, [1.000, 0.994, 0.198]], [0.626, [0.993, 0.987, 0.199]], [0.628, [0.993, 0.987, 0.199]], [0.630, [0.982, 0.966, 0.198]], [0.632, [0.982, 0.966, 0.198]], [0.634, [0.971, 0.945, 0.196]], [0.636, [0.971, 0.945, 0.196]], [0.638, [0.960, 0.925, 0.195]], [0.640, [0.960, 0.925, 0.195]], [0.642, [0.949, 0.904, 0.194]], [0.644, [0.949, 0.904, 0.194]], [0.646, [0.938, 0.883, 0.192]], [0.648, [0.938, 0.883, 0.192]], [0.650, [0.927, 0.862, 0.191]], [0.652, [0.927, 0.862, 0.191]], [0.654, [0.917, 0.841, 0.190]], [0.656, [0.917, 0.841, 0.190]], [0.658, [0.906, 0.821, 0.188]], [0.659, [0.906, 0.821, 0.188]], [0.661, [0.895, 0.800, 0.187]], [0.663, [0.895, 0.800, 0.187]], [0.665, [0.884, 0.779, 0.186]], [0.667, [0.884, 0.779, 0.186]], [0.669, [0.873, 0.758, 0.184]], [0.671, [0.873, 0.758, 0.184]], [0.673, [0.862, 0.738, 0.183]], [0.675, [0.862, 0.738, 0.183]], [0.677, [0.851, 0.717, 0.182]], [0.679, [0.851, 0.717, 0.182]], [0.681, [0.840, 0.696, 0.180]], [0.683, [0.840, 0.696, 0.180]], [0.685, [0.829, 0.675, 0.179]], [0.687, [0.829, 0.675, 0.179]], [0.689, [0.818, 0.654, 0.178]], [0.691, [0.818, 0.654, 0.178]], [0.693, [0.807, 0.634, 0.176]], [0.695, [0.807, 0.634, 0.176]], [0.697, [0.796, 0.613, 0.175]], [0.699, [0.796, 0.613, 0.175]], [0.701, [0.785, 0.592, 0.173]], [0.703, [0.785, 0.592, 0.173]], [0.705, [0.774, 0.571, 0.172]], [0.706, [0.774, 0.571, 0.172]], [0.708, [0.763, 0.550, 0.171]], [0.710, [0.763, 0.550, 0.171]], [0.712, [0.752, 0.530, 0.169]], [0.714, [0.752, 0.530, 0.169]], [0.716, [0.741, 0.509, 0.168]], [0.718, [0.741, 0.509, 0.168]], [0.720, [0.730, 0.488, 0.167]], [0.722, [0.730, 0.488, 0.167]], [0.724, [0.719, 0.467, 0.165]], [0.726, [0.719, 0.467, 0.165]], [0.728, [0.708, 0.446, 0.164]], [0.730, [0.708, 0.446, 0.164]], [0.732, [0.698, 0.426, 0.163]], [0.734, [0.698, 0.426, 0.163]], [0.736, [0.687, 0.405, 0.161]], [0.738, [0.687, 0.405, 0.161]], [0.740, [0.676, 0.384, 0.160]], [0.742, [0.676, 0.384, 0.160]], [0.744, [0.665, 0.363, 0.159]], [0.746, [0.665, 0.363, 0.159]], [0.748, [0.654, 0.342, 0.157]], [0.750, [0.654, 0.342, 0.157]], [0.751, [0.658, 0.341, 0.171]], [0.753, [0.658, 0.341, 0.171]], [0.755, [0.668, 0.347, 0.189]], [0.757, [0.668, 0.347, 0.189]], [0.759, [0.678, 0.352, 0.208]], [0.761, [0.678, 0.352, 0.208]], [0.763, [0.688, 0.357, 0.227]], [0.765, [0.688, 0.357, 0.227]], [0.767, [0.698, 0.362, 0.245]], [0.769, [0.698, 0.362, 0.245]], [0.771, [0.708, 0.368, 0.264]], [0.773, [0.708, 0.368, 0.264]], [0.775, [0.718, 0.373, 0.282]], [0.777, [0.718, 0.373, 0.282]], [0.779, [0.728, 0.378, 0.301]], [0.781, [0.728, 0.378, 0.301]], [0.783, [0.738, 0.384, 0.319]], [0.785, [0.738, 0.384, 0.319]], [0.787, [0.748, 0.389, 0.338]], [0.789, [0.748, 0.389, 0.338]], [0.791, [0.758, 0.394, 0.357]], [0.793, [0.758, 0.394, 0.357]], [0.795, [0.768, 0.399, 0.375]], [0.796, [0.768, 0.399, 0.375]], [0.798, [0.778, 0.405, 0.394]], [0.800, [0.778, 0.405, 0.394]], [0.802, [0.788, 0.410, 0.412]], [0.804, [0.788, 0.410, 0.412]], [0.806, [0.798, 0.415, 0.431]], [0.808, [0.798, 0.415, 0.431]], [0.810, [0.808, 0.421, 0.449]], [0.812, [0.808, 0.421, 0.449]], [0.814, [0.818, 0.426, 0.468]], [0.816, [0.818, 0.426, 0.468]], [0.818, [0.828, 0.431, 0.487]], [0.820, [0.828, 0.431, 0.487]], [0.822, [0.838, 0.436, 0.505]], [0.824, [0.838, 0.436, 0.505]], [0.826, [0.848, 0.442, 0.524]], [0.828, [0.848, 0.442, 0.524]], [0.830, [0.858, 0.447, 0.542]], [0.832, [0.858, 0.447, 0.542]], [0.834, [0.868, 0.452, 0.561]], [0.836, [0.868, 0.452, 0.561]], [0.838, [0.878, 0.458, 0.580]], [0.840, [0.878, 0.458, 0.580]], [0.841, [0.888, 0.463, 0.598]], [0.843, [0.888, 0.463, 0.598]], [0.845, [0.898, 0.468, 0.617]], [0.847, [0.898, 0.468, 0.617]], [0.849, [0.908, 0.473, 0.635]], [0.851, [0.908, 0.473, 0.635]], [0.853, [0.918, 0.479, 0.654]], [0.855, [0.918, 0.479, 0.654]], [0.857, [0.928, 0.484, 0.672]], [0.859, [0.928, 0.484, 0.672]], [0.861, [0.937, 0.489, 0.691]], [0.863, [0.937, 0.489, 0.691]], [0.865, [0.947, 0.495, 0.710]], [0.867, [0.947, 0.495, 0.710]], [0.869, [0.957, 0.500, 0.728]], [0.871, [0.957, 0.500, 0.728]], [0.873, [0.967, 0.505, 0.747]], [0.875, [0.967, 0.505, 0.747]], [0.877, [0.959, 0.508, 0.745]], [0.879, [0.959, 0.508, 0.745]], [0.881, [0.947, 0.511, 0.740]], [0.883, [0.947, 0.511, 0.740]], [0.885, [0.935, 0.514, 0.736]], [0.886, [0.935, 0.514, 0.736]], [0.888, [0.924, 0.517, 0.731]], [0.890, [0.924, 0.517, 0.731]], [0.892, [0.912, 0.520, 0.726]], [0.894, [0.912, 0.520, 0.726]], [0.896, [0.901, 0.523, 0.722]], [0.898, [0.901, 0.523, 0.722]], [0.900, [0.889, 0.526, 0.717]], [0.902, [0.889, 0.526, 0.717]], [0.904, [0.878, 0.529, 0.712]], [0.906, [0.878, 0.529, 0.712]], [0.908, [0.866, 0.532, 0.708]], [0.910, [0.866, 0.532, 0.708]], [0.912, [0.854, 0.535, 0.703]], [0.914, [0.854, 0.535, 0.703]], [0.916, [0.843, 0.538, 0.698]], [0.918, [0.843, 0.538, 0.698]], [0.920, [0.831, 0.541, 0.694]], [0.922, [0.831, 0.541, 0.694]], [0.924, [0.820, 0.544, 0.689]], [0.926, [0.820, 0.544, 0.689]], [0.928, [0.808, 0.547, 0.684]], [0.930, [0.808, 0.547, 0.684]], [0.932, [0.797, 0.550, 0.679]], [0.933, [0.797, 0.550, 0.679]], [0.935, [0.785, 0.553, 0.675]], [0.937, [0.785, 0.553, 0.675]], [0.939, [0.773, 0.556, 0.670]], [0.941, [0.773, 0.556, 0.670]], [0.943, [0.762, 0.559, 0.665]], [0.945, [0.762, 0.559, 0.665]], [0.947, [0.750, 0.562, 0.661]], [0.949, [0.750, 0.562, 0.661]], [0.951, [0.739, 0.565, 0.656]], [0.953, [0.739, 0.565, 0.656]], [0.955, [0.727, 0.568, 0.651]], [0.957, [0.727, 0.568, 0.651]], [0.959, [0.716, 0.570, 0.647]], [0.961, [0.716, 0.570, 0.647]], [0.963, [0.704, 0.573, 0.642]], [0.965, [0.704, 0.573, 0.642]], [0.967, [0.693, 0.576, 0.637]], [0.969, [0.693, 0.576, 0.637]], [0.971, [0.681, 0.579, 0.633]], [0.973, [0.681, 0.579, 0.633]], [0.975, [0.669, 0.582, 0.628]], [0.977, [0.669, 0.582, 0.628]], [0.978, [0.658, 0.585, 0.623]], [0.980, [0.658, 0.585, 0.623]], [0.982, [0.646, 0.588, 0.619]], [0.984, [0.646, 0.588, 0.619]], [0.986, [0.635, 0.591, 0.614]], [0.988, [0.635, 0.591, 0.614]], [0.990, [0.623, 0.594, 0.609]], [0.992, [0.623, 0.594, 0.609]], [0.994, [0.612, 0.597, 0.605]], [0.996, [0.612, 0.597, 0.605]], [0.998, [0.600, 0.600, 0.600]], [1.000, [0.600, 0.600, 0.600]]];
H.colormap_Set2 = [[0.000, [0.400, 0.761, 0.647]], [0.002, [0.400, 0.761, 0.647]], [0.004, [0.416, 0.755, 0.640]], [0.006, [0.416, 0.755, 0.640]], [0.008, [0.432, 0.749, 0.633]], [0.010, [0.432, 0.749, 0.633]], [0.012, [0.448, 0.744, 0.625]], [0.014, [0.448, 0.744, 0.625]], [0.016, [0.465, 0.738, 0.618]], [0.018, [0.465, 0.738, 0.618]], [0.020, [0.481, 0.732, 0.611]], [0.022, [0.481, 0.732, 0.611]], [0.023, [0.497, 0.727, 0.604]], [0.025, [0.497, 0.727, 0.604]], [0.027, [0.513, 0.721, 0.597]], [0.029, [0.513, 0.721, 0.597]], [0.031, [0.529, 0.715, 0.589]], [0.033, [0.529, 0.715, 0.589]], [0.035, [0.545, 0.709, 0.582]], [0.037, [0.545, 0.709, 0.582]], [0.039, [0.561, 0.704, 0.575]], [0.041, [0.561, 0.704, 0.575]], [0.043, [0.578, 0.698, 0.568]], [0.045, [0.578, 0.698, 0.568]], [0.047, [0.594, 0.692, 0.561]], [0.049, [0.594, 0.692, 0.561]], [0.051, [0.610, 0.687, 0.553]], [0.053, [0.610, 0.687, 0.553]], [0.055, [0.626, 0.681, 0.546]], [0.057, [0.626, 0.681, 0.546]], [0.059, [0.642, 0.675, 0.539]], [0.061, [0.642, 0.675, 0.539]], [0.063, [0.658, 0.669, 0.532]], [0.065, [0.658, 0.669, 0.532]], [0.067, [0.675, 0.664, 0.524]], [0.068, [0.675, 0.664, 0.524]], [0.070, [0.691, 0.658, 0.517]], [0.072, [0.691, 0.658, 0.517]], [0.074, [0.707, 0.652, 0.510]], [0.076, [0.707, 0.652, 0.510]], [0.078, [0.723, 0.647, 0.503]], [0.080, [0.723, 0.647, 0.503]], [0.082, [0.739, 0.641, 0.496]], [0.084, [0.739, 0.641, 0.496]], [0.086, [0.755, 0.635, 0.488]], [0.088, [0.755, 0.635, 0.488]], [0.090, [0.771, 0.630, 0.481]], [0.092, [0.771, 0.630, 0.481]], [0.094, [0.788, 0.624, 0.474]], [0.096, [0.788, 0.624, 0.474]], [0.098, [0.804, 0.618, 0.467]], [0.100, [0.804, 0.618, 0.467]], [0.102, [0.820, 0.612, 0.460]], [0.104, [0.820, 0.612, 0.460]], [0.106, [0.836, 0.607, 0.452]], [0.108, [0.836, 0.607, 0.452]], [0.110, [0.852, 0.601, 0.445]], [0.112, [0.852, 0.601, 0.445]], [0.114, [0.868, 0.595, 0.438]], [0.115, [0.868, 0.595, 0.438]], [0.117, [0.884, 0.590, 0.431]], [0.119, [0.884, 0.590, 0.431]], [0.121, [0.901, 0.584, 0.423]], [0.123, [0.901, 0.584, 0.423]], [0.125, [0.917, 0.578, 0.416]], [0.127, [0.917, 0.578, 0.416]], [0.129, [0.933, 0.573, 0.409]], [0.131, [0.933, 0.573, 0.409]], [0.133, [0.949, 0.567, 0.402]], [0.135, [0.949, 0.567, 0.402]], [0.137, [0.965, 0.561, 0.395]], [0.139, [0.965, 0.561, 0.395]], [0.141, [0.981, 0.555, 0.387]], [0.143, [0.981, 0.555, 0.387]], [0.145, [0.981, 0.554, 0.391]], [0.147, [0.981, 0.554, 0.391]], [0.149, [0.969, 0.556, 0.402]], [0.151, [0.969, 0.556, 0.402]], [0.153, [0.958, 0.558, 0.413]], [0.155, [0.958, 0.558, 0.413]], [0.157, [0.946, 0.560, 0.425]], [0.159, [0.946, 0.560, 0.425]], [0.160, [0.934, 0.562, 0.436]], [0.162, [0.934, 0.562, 0.436]], [0.164, [0.922, 0.564, 0.447]], [0.166, [0.922, 0.564, 0.447]], [0.168, [0.910, 0.566, 0.459]], [0.170, [0.910, 0.566, 0.459]], [0.172, [0.898, 0.568, 0.470]], [0.174, [0.898, 0.568, 0.470]], [0.176, [0.886, 0.570, 0.481]], [0.178, [0.886, 0.570, 0.481]], [0.180, [0.874, 0.573, 0.493]], [0.182, [0.874, 0.573, 0.493]], [0.184, [0.862, 0.575, 0.504]], [0.186, [0.862, 0.575, 0.504]], [0.188, [0.850, 0.577, 0.515]], [0.190, [0.850, 0.577, 0.515]], [0.192, [0.838, 0.579, 0.526]], [0.194, [0.838, 0.579, 0.526]], [0.196, [0.826, 0.581, 0.538]], [0.198, [0.826, 0.581, 0.538]], [0.200, [0.814, 0.583, 0.549]], [0.202, [0.814, 0.583, 0.549]], [0.204, [0.802, 0.585, 0.560]], [0.205, [0.802, 0.585, 0.560]], [0.207, [0.790, 0.587, 0.572]], [0.209, [0.790, 0.587, 0.572]], [0.211, [0.778, 0.589, 0.583]], [0.213, [0.778, 0.589, 0.583]], [0.215, [0.766, 0.591, 0.594]], [0.217, [0.766, 0.591, 0.594]], [0.219, [0.754, 0.593, 0.606]], [0.221, [0.754, 0.593, 0.606]], [0.223, [0.742, 0.595, 0.617]], [0.225, [0.742, 0.595, 0.617]], [0.227, [0.730, 0.597, 0.628]], [0.229, [0.730, 0.597, 0.628]], [0.231, [0.719, 0.599, 0.639]], [0.233, [0.719, 0.599, 0.639]], [0.235, [0.707, 0.601, 0.651]], [0.237, [0.707, 0.601, 0.651]], [0.239, [0.695, 0.603, 0.662]], [0.241, [0.695, 0.603, 0.662]], [0.243, [0.683, 0.605, 0.673]], [0.245, [0.683, 0.605, 0.673]], [0.247, [0.671, 0.607, 0.685]], [0.249, [0.671, 0.607, 0.685]], [0.250, [0.659, 0.609, 0.696]], [0.252, [0.659, 0.609, 0.696]], [0.254, [0.647, 0.611, 0.707]], [0.256, [0.647, 0.611, 0.707]], [0.258, [0.635, 0.613, 0.719]], [0.260, [0.635, 0.613, 0.719]], [0.262, [0.623, 0.615, 0.730]], [0.264, [0.623, 0.615, 0.730]], [0.266, [0.611, 0.618, 0.741]], [0.268, [0.611, 0.618, 0.741]], [0.270, [0.599, 0.620, 0.752]], [0.272, [0.599, 0.620, 0.752]], [0.274, [0.587, 0.622, 0.764]], [0.276, [0.587, 0.622, 0.764]], [0.278, [0.575, 0.624, 0.775]], [0.280, [0.575, 0.624, 0.775]], [0.282, [0.563, 0.626, 0.786]], [0.284, [0.563, 0.626, 0.786]], [0.286, [0.554, 0.627, 0.796]], [0.288, [0.554, 0.627, 0.796]], [0.290, [0.564, 0.625, 0.795]], [0.292, [0.564, 0.625, 0.795]], [0.294, [0.574, 0.622, 0.794]], [0.295, [0.574, 0.622, 0.794]], [0.297, [0.583, 0.620, 0.793]], [0.299, [0.583, 0.620, 0.793]], [0.301, [0.593, 0.618, 0.793]], [0.303, [0.593, 0.618, 0.793]], [0.305, [0.603, 0.615, 0.792]], [0.307, [0.603, 0.615, 0.792]], [0.309, [0.612, 0.613, 0.791]], [0.311, [0.612, 0.613, 0.791]], [0.313, [0.622, 0.611, 0.790]], [0.315, [0.622, 0.611, 0.790]], [0.317, [0.632, 0.608, 0.789]], [0.319, [0.632, 0.608, 0.789]], [0.321, [0.642, 0.606, 0.788]], [0.323, [0.642, 0.606, 0.788]], [0.325, [0.651, 0.603, 0.787]], [0.327, [0.651, 0.603, 0.787]], [0.329, [0.661, 0.601, 0.786]], [0.331, [0.661, 0.601, 0.786]], [0.333, [0.671, 0.599, 0.786]], [0.335, [0.671, 0.599, 0.786]], [0.337, [0.680, 0.596, 0.785]], [0.339, [0.680, 0.596, 0.785]], [0.341, [0.690, 0.594, 0.784]], [0.342, [0.690, 0.594, 0.784]], [0.344, [0.700, 0.592, 0.783]], [0.346, [0.700, 0.592, 0.783]], [0.348, [0.709, 0.589, 0.782]], [0.350, [0.709, 0.589, 0.782]], [0.352, [0.719, 0.587, 0.781]], [0.354, [0.719, 0.587, 0.781]], [0.356, [0.729, 0.584, 0.780]], [0.358, [0.729, 0.584, 0.780]], [0.360, [0.738, 0.582, 0.780]], [0.362, [0.738, 0.582, 0.780]], [0.364, [0.748, 0.580, 0.779]], [0.366, [0.748, 0.580, 0.779]], [0.368, [0.758, 0.577, 0.778]], [0.370, [0.758, 0.577, 0.778]], [0.372, [0.767, 0.575, 0.777]], [0.374, [0.767, 0.575, 0.777]], [0.376, [0.777, 0.573, 0.776]], [0.378, [0.777, 0.573, 0.776]], [0.380, [0.787, 0.570, 0.775]], [0.382, [0.787, 0.570, 0.775]], [0.384, [0.797, 0.568, 0.774]], [0.386, [0.797, 0.568, 0.774]], [0.387, [0.806, 0.566, 0.774]], [0.389, [0.806, 0.566, 0.774]], [0.391, [0.816, 0.563, 0.773]], [0.393, [0.816, 0.563, 0.773]], [0.395, [0.826, 0.561, 0.772]], [0.397, [0.826, 0.561, 0.772]], [0.399, [0.835, 0.558, 0.771]], [0.401, [0.835, 0.558, 0.771]], [0.403, [0.845, 0.556, 0.770]], [0.405, [0.845, 0.556, 0.770]], [0.407, [0.855, 0.554, 0.769]], [0.409, [0.855, 0.554, 0.769]], [0.411, [0.864, 0.551, 0.768]], [0.413, [0.864, 0.551, 0.768]], [0.415, [0.874, 0.549, 0.768]], [0.417, [0.874, 0.549, 0.768]], [0.419, [0.884, 0.547, 0.767]], [0.421, [0.884, 0.547, 0.767]], [0.423, [0.893, 0.544, 0.766]], [0.425, [0.893, 0.544, 0.766]], [0.427, [0.903, 0.542, 0.765]], [0.429, [0.903, 0.542, 0.765]], [0.431, [0.901, 0.547, 0.756]], [0.432, [0.901, 0.547, 0.756]], [0.434, [0.894, 0.556, 0.744]], [0.436, [0.894, 0.556, 0.744]], [0.438, [0.887, 0.564, 0.732]], [0.440, [0.887, 0.564, 0.732]], [0.442, [0.880, 0.572, 0.720]], [0.444, [0.880, 0.572, 0.720]], [0.446, [0.873, 0.581, 0.708]], [0.448, [0.873, 0.581, 0.708]], [0.450, [0.866, 0.589, 0.696]], [0.452, [0.866, 0.589, 0.696]], [0.454, [0.859, 0.598, 0.684]], [0.456, [0.859, 0.598, 0.684]], [0.458, [0.852, 0.606, 0.673]], [0.460, [0.852, 0.606, 0.673]], [0.462, [0.845, 0.614, 0.661]], [0.464, [0.845, 0.614, 0.661]], [0.466, [0.838, 0.623, 0.649]], [0.468, [0.838, 0.623, 0.649]], [0.470, [0.831, 0.631, 0.637]], [0.472, [0.831, 0.631, 0.637]], [0.474, [0.824, 0.640, 0.625]], [0.476, [0.824, 0.640, 0.625]], [0.477, [0.817, 0.648, 0.613]], [0.479, [0.817, 0.648, 0.613]], [0.481, [0.810, 0.656, 0.601]], [0.483, [0.810, 0.656, 0.601]], [0.485, [0.803, 0.665, 0.589]], [0.487, [0.803, 0.665, 0.589]], [0.489, [0.796, 0.673, 0.577]], [0.491, [0.796, 0.673, 0.577]], [0.493, [0.789, 0.682, 0.565]], [0.495, [0.789, 0.682, 0.565]], [0.497, [0.782, 0.690, 0.553]], [0.499, [0.782, 0.690, 0.553]], [0.501, [0.775, 0.698, 0.541]], [0.503, [0.775, 0.698, 0.541]], [0.505, [0.768, 0.707, 0.529]], [0.507, [0.768, 0.707, 0.529]], [0.509, [0.761, 0.715, 0.517]], [0.511, [0.761, 0.715, 0.517]], [0.513, [0.754, 0.724, 0.505]], [0.515, [0.754, 0.724, 0.505]], [0.517, [0.747, 0.732, 0.493]], [0.519, [0.747, 0.732, 0.493]], [0.521, [0.740, 0.740, 0.481]], [0.523, [0.740, 0.740, 0.481]], [0.524, [0.733, 0.749, 0.469]], [0.526, [0.733, 0.749, 0.469]], [0.528, [0.726, 0.757, 0.457]], [0.530, [0.726, 0.757, 0.457]], [0.532, [0.719, 0.765, 0.445]], [0.534, [0.719, 0.765, 0.445]], [0.536, [0.712, 0.774, 0.434]], [0.538, [0.712, 0.774, 0.434]], [0.540, [0.705, 0.782, 0.422]], [0.542, [0.705, 0.782, 0.422]], [0.544, [0.698, 0.791, 0.410]], [0.546, [0.698, 0.791, 0.410]], [0.548, [0.691, 0.799, 0.398]], [0.550, [0.691, 0.799, 0.398]], [0.552, [0.684, 0.807, 0.386]], [0.554, [0.684, 0.807, 0.386]], [0.556, [0.677, 0.816, 0.374]], [0.558, [0.677, 0.816, 0.374]], [0.560, [0.670, 0.824, 0.362]], [0.562, [0.670, 0.824, 0.362]], [0.564, [0.663, 0.833, 0.350]], [0.566, [0.663, 0.833, 0.350]], [0.568, [0.656, 0.841, 0.338]], [0.569, [0.656, 0.841, 0.338]], [0.571, [0.654, 0.847, 0.328]], [0.573, [0.654, 0.847, 0.328]], [0.575, [0.663, 0.847, 0.324]], [0.577, [0.663, 0.847, 0.324]], [0.579, [0.673, 0.847, 0.320]], [0.581, [0.673, 0.847, 0.320]], [0.583, [0.682, 0.847, 0.316]], [0.585, [0.682, 0.847, 0.316]], [0.587, [0.692, 0.848, 0.312]], [0.589, [0.692, 0.848, 0.312]], [0.591, [0.702, 0.848, 0.308]], [0.593, [0.702, 0.848, 0.308]], [0.595, [0.711, 0.848, 0.304]], [0.597, [0.711, 0.848, 0.304]], [0.599, [0.721, 0.848, 0.300]], [0.601, [0.721, 0.848, 0.300]], [0.603, [0.730, 0.848, 0.296]], [0.605, [0.730, 0.848, 0.296]], [0.607, [0.740, 0.848, 0.292]], [0.609, [0.740, 0.848, 0.292]], [0.611, [0.750, 0.848, 0.288]], [0.613, [0.750, 0.848, 0.288]], [0.614, [0.759, 0.848, 0.284]], [0.616, [0.759, 0.848, 0.284]], [0.618, [0.769, 0.848, 0.280]], [0.620, [0.769, 0.848, 0.280]], [0.622, [0.778, 0.848, 0.276]], [0.624, [0.778, 0.848, 0.276]], [0.626, [0.788, 0.849, 0.273]], [0.628, [0.788, 0.849, 0.273]], [0.630, [0.797, 0.849, 0.269]], [0.632, [0.797, 0.849, 0.269]], [0.634, [0.807, 0.849, 0.265]], [0.636, [0.807, 0.849, 0.265]], [0.638, [0.817, 0.849, 0.261]], [0.640, [0.817, 0.849, 0.261]], [0.642, [0.826, 0.849, 0.257]], [0.644, [0.826, 0.849, 0.257]], [0.646, [0.836, 0.849, 0.253]], [0.648, [0.836, 0.849, 0.253]], [0.650, [0.845, 0.849, 0.249]], [0.652, [0.845, 0.849, 0.249]], [0.654, [0.855, 0.849, 0.245]], [0.656, [0.855, 0.849, 0.245]], [0.658, [0.864, 0.849, 0.241]], [0.659, [0.864, 0.849, 0.241]], [0.661, [0.874, 0.850, 0.237]], [0.663, [0.874, 0.850, 0.237]], [0.665, [0.884, 0.850, 0.233]], [0.667, [0.884, 0.850, 0.233]], [0.669, [0.893, 0.850, 0.229]], [0.671, [0.893, 0.850, 0.229]], [0.673, [0.903, 0.850, 0.225]], [0.675, [0.903, 0.850, 0.225]], [0.677, [0.912, 0.850, 0.221]], [0.679, [0.912, 0.850, 0.221]], [0.681, [0.922, 0.850, 0.217]], [0.683, [0.922, 0.850, 0.217]], [0.685, [0.932, 0.850, 0.213]], [0.687, [0.932, 0.850, 0.213]], [0.689, [0.941, 0.850, 0.209]], [0.691, [0.941, 0.850, 0.209]], [0.693, [0.951, 0.850, 0.205]], [0.695, [0.951, 0.850, 0.205]], [0.697, [0.960, 0.851, 0.201]], [0.699, [0.960, 0.851, 0.201]], [0.701, [0.970, 0.851, 0.197]], [0.703, [0.970, 0.851, 0.197]], [0.705, [0.979, 0.851, 0.193]], [0.706, [0.979, 0.851, 0.193]], [0.708, [0.989, 0.851, 0.189]], [0.710, [0.989, 0.851, 0.189]], [0.712, [0.999, 0.851, 0.185]], [0.714, [0.999, 0.851, 0.185]], [0.716, [0.998, 0.849, 0.194]], [0.718, [0.998, 0.849, 0.194]], [0.720, [0.995, 0.847, 0.205]], [0.722, [0.995, 0.847, 0.205]], [0.724, [0.992, 0.845, 0.215]], [0.726, [0.992, 0.845, 0.215]], [0.728, [0.989, 0.842, 0.226]], [0.730, [0.989, 0.842, 0.226]], [0.732, [0.986, 0.840, 0.237]], [0.734, [0.986, 0.840, 0.237]], [0.736, [0.984, 0.838, 0.248]], [0.738, [0.984, 0.838, 0.248]], [0.740, [0.981, 0.835, 0.259]], [0.742, [0.981, 0.835, 0.259]], [0.744, [0.978, 0.833, 0.270]], [0.746, [0.978, 0.833, 0.270]], [0.748, [0.975, 0.831, 0.281]], [0.750, [0.975, 0.831, 0.281]], [0.751, [0.972, 0.829, 0.291]], [0.753, [0.972, 0.829, 0.291]], [0.755, [0.970, 0.826, 0.302]], [0.757, [0.970, 0.826, 0.302]], [0.759, [0.967, 0.824, 0.313]], [0.761, [0.967, 0.824, 0.313]], [0.763, [0.964, 0.822, 0.324]], [0.765, [0.964, 0.822, 0.324]], [0.767, [0.961, 0.820, 0.335]], [0.769, [0.961, 0.820, 0.335]], [0.771, [0.958, 0.817, 0.346]], [0.773, [0.958, 0.817, 0.346]], [0.775, [0.956, 0.815, 0.357]], [0.777, [0.956, 0.815, 0.357]], [0.779, [0.953, 0.813, 0.368]], [0.781, [0.953, 0.813, 0.368]], [0.783, [0.950, 0.811, 0.378]], [0.785, [0.950, 0.811, 0.378]], [0.787, [0.947, 0.808, 0.389]], [0.789, [0.947, 0.808, 0.389]], [0.791, [0.944, 0.806, 0.400]], [0.793, [0.944, 0.806, 0.400]], [0.795, [0.942, 0.804, 0.411]], [0.796, [0.942, 0.804, 0.411]], [0.798, [0.939, 0.802, 0.422]], [0.800, [0.939, 0.802, 0.422]], [0.802, [0.936, 0.799, 0.433]], [0.804, [0.936, 0.799, 0.433]], [0.806, [0.933, 0.797, 0.444]], [0.808, [0.933, 0.797, 0.444]], [0.810, [0.930, 0.795, 0.455]], [0.812, [0.930, 0.795, 0.455]], [0.814, [0.928, 0.793, 0.465]], [0.816, [0.928, 0.793, 0.465]], [0.818, [0.925, 0.790, 0.476]], [0.820, [0.925, 0.790, 0.476]], [0.822, [0.922, 0.788, 0.487]], [0.824, [0.922, 0.788, 0.487]], [0.826, [0.919, 0.786, 0.498]], [0.828, [0.919, 0.786, 0.498]], [0.830, [0.916, 0.783, 0.509]], [0.832, [0.916, 0.783, 0.509]], [0.834, [0.914, 0.781, 0.520]], [0.836, [0.914, 0.781, 0.520]], [0.838, [0.911, 0.779, 0.531]], [0.840, [0.911, 0.779, 0.531]], [0.841, [0.908, 0.777, 0.542]], [0.843, [0.908, 0.777, 0.542]], [0.845, [0.905, 0.774, 0.552]], [0.847, [0.905, 0.774, 0.552]], [0.849, [0.902, 0.772, 0.563]], [0.851, [0.902, 0.772, 0.563]], [0.853, [0.900, 0.770, 0.574]], [0.855, [0.900, 0.770, 0.574]], [0.857, [0.896, 0.768, 0.582]], [0.859, [0.896, 0.768, 0.582]], [0.861, [0.890, 0.766, 0.585]], [0.863, [0.890, 0.766, 0.585]], [0.865, [0.885, 0.764, 0.588]], [0.867, [0.885, 0.764, 0.588]], [0.869, [0.880, 0.762, 0.592]], [0.871, [0.880, 0.762, 0.592]], [0.873, [0.874, 0.761, 0.595]], [0.875, [0.874, 0.761, 0.595]], [0.877, [0.869, 0.759, 0.599]], [0.879, [0.869, 0.759, 0.599]], [0.881, [0.863, 0.757, 0.602]], [0.883, [0.863, 0.757, 0.602]], [0.885, [0.858, 0.755, 0.605]], [0.886, [0.858, 0.755, 0.605]], [0.888, [0.853, 0.753, 0.609]], [0.890, [0.853, 0.753, 0.609]], [0.892, [0.847, 0.751, 0.612]], [0.894, [0.847, 0.751, 0.612]], [0.896, [0.842, 0.750, 0.615]], [0.898, [0.842, 0.750, 0.615]], [0.900, [0.837, 0.748, 0.619]], [0.902, [0.837, 0.748, 0.619]], [0.904, [0.831, 0.746, 0.622]], [0.906, [0.831, 0.746, 0.622]], [0.908, [0.826, 0.744, 0.625]], [0.910, [0.826, 0.744, 0.625]], [0.912, [0.820, 0.742, 0.629]], [0.914, [0.820, 0.742, 0.629]], [0.916, [0.815, 0.740, 0.632]], [0.918, [0.815, 0.740, 0.632]], [0.920, [0.810, 0.739, 0.635]], [0.922, [0.810, 0.739, 0.635]], [0.924, [0.804, 0.737, 0.639]], [0.926, [0.804, 0.737, 0.639]], [0.928, [0.799, 0.735, 0.642]], [0.930, [0.799, 0.735, 0.642]], [0.932, [0.793, 0.733, 0.645]], [0.933, [0.793, 0.733, 0.645]], [0.935, [0.788, 0.731, 0.649]], [0.937, [0.788, 0.731, 0.649]], [0.939, [0.783, 0.729, 0.652]], [0.941, [0.783, 0.729, 0.652]], [0.943, [0.777, 0.728, 0.655]], [0.945, [0.777, 0.728, 0.655]], [0.947, [0.772, 0.726, 0.659]], [0.949, [0.772, 0.726, 0.659]], [0.951, [0.767, 0.724, 0.662]], [0.953, [0.767, 0.724, 0.662]], [0.955, [0.761, 0.722, 0.665]], [0.957, [0.761, 0.722, 0.665]], [0.959, [0.756, 0.720, 0.669]], [0.961, [0.756, 0.720, 0.669]], [0.963, [0.750, 0.718, 0.672]], [0.965, [0.750, 0.718, 0.672]], [0.967, [0.745, 0.717, 0.675]], [0.969, [0.745, 0.717, 0.675]], [0.971, [0.740, 0.715, 0.679]], [0.973, [0.740, 0.715, 0.679]], [0.975, [0.734, 0.713, 0.682]], [0.977, [0.734, 0.713, 0.682]], [0.978, [0.729, 0.711, 0.685]], [0.980, [0.729, 0.711, 0.685]], [0.982, [0.723, 0.709, 0.689]], [0.984, [0.723, 0.709, 0.689]], [0.986, [0.718, 0.707, 0.692]], [0.988, [0.718, 0.707, 0.692]], [0.990, [0.713, 0.706, 0.695]], [0.992, [0.713, 0.706, 0.695]], [0.994, [0.707, 0.704, 0.699]], [0.996, [0.707, 0.704, 0.699]], [0.998, [0.702, 0.702, 0.702]], [1.000, [0.702, 0.702, 0.702]]];
H.colormap_Set3 = [[0.000, [0.553, 0.827, 0.780]], [0.002, [0.553, 0.827, 0.780]], [0.004, [0.572, 0.835, 0.777]], [0.006, [0.572, 0.835, 0.777]], [0.008, [0.592, 0.842, 0.774]], [0.010, [0.592, 0.842, 0.774]], [0.012, [0.611, 0.850, 0.770]], [0.014, [0.611, 0.850, 0.770]], [0.016, [0.630, 0.857, 0.767]], [0.018, [0.630, 0.857, 0.767]], [0.020, [0.649, 0.865, 0.763]], [0.022, [0.649, 0.865, 0.763]], [0.023, [0.669, 0.872, 0.760]], [0.025, [0.669, 0.872, 0.760]], [0.027, [0.688, 0.880, 0.757]], [0.029, [0.688, 0.880, 0.757]], [0.031, [0.707, 0.887, 0.753]], [0.033, [0.707, 0.887, 0.753]], [0.035, [0.727, 0.894, 0.750]], [0.037, [0.727, 0.894, 0.750]], [0.039, [0.746, 0.902, 0.747]], [0.041, [0.746, 0.902, 0.747]], [0.043, [0.765, 0.909, 0.743]], [0.045, [0.765, 0.909, 0.743]], [0.047, [0.784, 0.917, 0.740]], [0.049, [0.784, 0.917, 0.740]], [0.051, [0.804, 0.924, 0.736]], [0.053, [0.804, 0.924, 0.736]], [0.055, [0.823, 0.932, 0.733]], [0.057, [0.823, 0.932, 0.733]], [0.059, [0.842, 0.939, 0.730]], [0.061, [0.842, 0.939, 0.730]], [0.063, [0.861, 0.947, 0.726]], [0.065, [0.861, 0.947, 0.726]], [0.067, [0.881, 0.954, 0.723]], [0.068, [0.881, 0.954, 0.723]], [0.070, [0.900, 0.961, 0.719]], [0.072, [0.900, 0.961, 0.719]], [0.074, [0.919, 0.969, 0.716]], [0.076, [0.919, 0.969, 0.716]], [0.078, [0.939, 0.976, 0.713]], [0.080, [0.939, 0.976, 0.713]], [0.082, [0.958, 0.984, 0.709]], [0.084, [0.958, 0.984, 0.709]], [0.086, [0.977, 0.991, 0.706]], [0.088, [0.977, 0.991, 0.706]], [0.090, [0.996, 0.999, 0.703]], [0.092, [0.996, 0.999, 0.703]], [0.094, [0.991, 0.990, 0.707]], [0.096, [0.991, 0.990, 0.707]], [0.098, [0.980, 0.979, 0.714]], [0.100, [0.980, 0.979, 0.714]], [0.102, [0.969, 0.967, 0.721]], [0.104, [0.969, 0.967, 0.721]], [0.106, [0.958, 0.955, 0.727]], [0.108, [0.958, 0.955, 0.727]], [0.110, [0.947, 0.944, 0.734]], [0.112, [0.947, 0.944, 0.734]], [0.114, [0.936, 0.932, 0.740]], [0.115, [0.936, 0.932, 0.740]], [0.117, [0.925, 0.920, 0.747]], [0.119, [0.925, 0.920, 0.747]], [0.121, [0.914, 0.909, 0.754]], [0.123, [0.914, 0.909, 0.754]], [0.125, [0.903, 0.897, 0.760]], [0.127, [0.903, 0.897, 0.760]], [0.129, [0.892, 0.885, 0.767]], [0.131, [0.892, 0.885, 0.767]], [0.133, [0.881, 0.874, 0.773]], [0.135, [0.881, 0.874, 0.773]], [0.137, [0.870, 0.862, 0.780]], [0.139, [0.870, 0.862, 0.780]], [0.141, [0.859, 0.850, 0.787]], [0.143, [0.859, 0.850, 0.787]], [0.145, [0.848, 0.839, 0.793]], [0.147, [0.848, 0.839, 0.793]], [0.149, [0.837, 0.827, 0.800]], [0.151, [0.837, 0.827, 0.800]], [0.153, [0.826, 0.815, 0.806]], [0.155, [0.826, 0.815, 0.806]], [0.157, [0.815, 0.804, 0.813]], [0.159, [0.815, 0.804, 0.813]], [0.160, [0.804, 0.792, 0.820]], [0.162, [0.804, 0.792, 0.820]], [0.164, [0.793, 0.780, 0.826]], [0.166, [0.793, 0.780, 0.826]], [0.168, [0.782, 0.769, 0.833]], [0.170, [0.782, 0.769, 0.833]], [0.172, [0.771, 0.757, 0.839]], [0.174, [0.771, 0.757, 0.839]], [0.176, [0.760, 0.745, 0.846]], [0.178, [0.760, 0.745, 0.846]], [0.180, [0.749, 0.734, 0.853]], [0.182, [0.749, 0.734, 0.853]], [0.184, [0.752, 0.723, 0.844]], [0.186, [0.752, 0.723, 0.844]], [0.188, [0.762, 0.713, 0.826]], [0.190, [0.762, 0.713, 0.826]], [0.192, [0.772, 0.704, 0.809]], [0.194, [0.772, 0.704, 0.809]], [0.196, [0.783, 0.694, 0.791]], [0.198, [0.783, 0.694, 0.791]], [0.200, [0.793, 0.684, 0.773]], [0.202, [0.793, 0.684, 0.773]], [0.204, [0.803, 0.674, 0.756]], [0.205, [0.803, 0.674, 0.756]], [0.207, [0.814, 0.664, 0.738]], [0.209, [0.814, 0.664, 0.738]], [0.211, [0.824, 0.654, 0.721]], [0.213, [0.824, 0.654, 0.721]], [0.215, [0.834, 0.645, 0.703]], [0.217, [0.834, 0.645, 0.703]], [0.219, [0.845, 0.635, 0.685]], [0.221, [0.845, 0.635, 0.685]], [0.223, [0.855, 0.625, 0.668]], [0.225, [0.855, 0.625, 0.668]], [0.227, [0.865, 0.615, 0.650]], [0.229, [0.865, 0.615, 0.650]], [0.231, [0.875, 0.605, 0.633]], [0.233, [0.875, 0.605, 0.633]], [0.235, [0.886, 0.596, 0.615]], [0.237, [0.886, 0.596, 0.615]], [0.239, [0.896, 0.586, 0.597]], [0.241, [0.896, 0.586, 0.597]], [0.243, [0.906, 0.576, 0.580]], [0.245, [0.906, 0.576, 0.580]], [0.247, [0.917, 0.566, 0.562]], [0.249, [0.917, 0.566, 0.562]], [0.250, [0.927, 0.556, 0.545]], [0.252, [0.927, 0.556, 0.545]], [0.254, [0.937, 0.547, 0.527]], [0.256, [0.937, 0.547, 0.527]], [0.258, [0.948, 0.537, 0.509]], [0.260, [0.948, 0.537, 0.509]], [0.262, [0.958, 0.527, 0.492]], [0.264, [0.958, 0.527, 0.492]], [0.266, [0.968, 0.517, 0.474]], [0.268, [0.968, 0.517, 0.474]], [0.270, [0.979, 0.507, 0.457]], [0.272, [0.979, 0.507, 0.457]], [0.274, [0.975, 0.506, 0.455]], [0.276, [0.975, 0.506, 0.455]], [0.278, [0.954, 0.514, 0.471]], [0.280, [0.954, 0.514, 0.471]], [0.282, [0.933, 0.522, 0.487]], [0.284, [0.933, 0.522, 0.487]], [0.286, [0.912, 0.531, 0.504]], [0.288, [0.912, 0.531, 0.504]], [0.290, [0.892, 0.539, 0.520]], [0.292, [0.892, 0.539, 0.520]], [0.294, [0.871, 0.547, 0.537]], [0.295, [0.871, 0.547, 0.537]], [0.297, [0.850, 0.555, 0.553]], [0.299, [0.850, 0.555, 0.553]], [0.301, [0.829, 0.564, 0.569]], [0.303, [0.829, 0.564, 0.569]], [0.305, [0.808, 0.572, 0.586]], [0.307, [0.808, 0.572, 0.586]], [0.309, [0.788, 0.580, 0.602]], [0.311, [0.788, 0.580, 0.602]], [0.313, [0.767, 0.589, 0.619]], [0.315, [0.767, 0.589, 0.619]], [0.317, [0.746, 0.597, 0.635]], [0.319, [0.746, 0.597, 0.635]], [0.321, [0.725, 0.605, 0.651]], [0.323, [0.725, 0.605, 0.651]], [0.325, [0.704, 0.613, 0.668]], [0.327, [0.704, 0.613, 0.668]], [0.329, [0.684, 0.622, 0.684]], [0.331, [0.684, 0.622, 0.684]], [0.333, [0.663, 0.630, 0.701]], [0.335, [0.663, 0.630, 0.701]], [0.337, [0.642, 0.638, 0.717]], [0.339, [0.642, 0.638, 0.717]], [0.341, [0.621, 0.647, 0.733]], [0.342, [0.621, 0.647, 0.733]], [0.344, [0.600, 0.655, 0.750]], [0.346, [0.600, 0.655, 0.750]], [0.348, [0.580, 0.663, 0.766]], [0.350, [0.580, 0.663, 0.766]], [0.352, [0.559, 0.672, 0.783]], [0.354, [0.559, 0.672, 0.783]], [0.356, [0.538, 0.680, 0.799]], [0.358, [0.538, 0.680, 0.799]], [0.360, [0.517, 0.688, 0.816]], [0.362, [0.517, 0.688, 0.816]], [0.364, [0.508, 0.694, 0.822]], [0.366, [0.508, 0.694, 0.822]], [0.368, [0.529, 0.695, 0.803]], [0.370, [0.529, 0.695, 0.803]], [0.372, [0.550, 0.695, 0.784]], [0.374, [0.550, 0.695, 0.784]], [0.376, [0.571, 0.696, 0.765]], [0.378, [0.571, 0.696, 0.765]], [0.380, [0.592, 0.696, 0.746]], [0.382, [0.592, 0.696, 0.746]], [0.384, [0.613, 0.697, 0.727]], [0.386, [0.613, 0.697, 0.727]], [0.387, [0.635, 0.697, 0.708]], [0.389, [0.635, 0.697, 0.708]], [0.391, [0.656, 0.698, 0.688]], [0.393, [0.656, 0.698, 0.688]], [0.395, [0.677, 0.698, 0.669]], [0.397, [0.677, 0.698, 0.669]], [0.399, [0.698, 0.699, 0.650]], [0.401, [0.698, 0.699, 0.650]], [0.403, [0.719, 0.699, 0.631]], [0.405, [0.719, 0.699, 0.631]], [0.407, [0.740, 0.700, 0.612]], [0.409, [0.740, 0.700, 0.612]], [0.411, [0.761, 0.700, 0.593]], [0.413, [0.761, 0.700, 0.593]], [0.415, [0.783, 0.701, 0.574]], [0.417, [0.783, 0.701, 0.574]], [0.419, [0.804, 0.701, 0.555]], [0.421, [0.804, 0.701, 0.555]], [0.423, [0.825, 0.702, 0.536]], [0.425, [0.825, 0.702, 0.536]], [0.427, [0.846, 0.702, 0.516]], [0.429, [0.846, 0.702, 0.516]], [0.431, [0.867, 0.703, 0.497]], [0.432, [0.867, 0.703, 0.497]], [0.434, [0.888, 0.703, 0.478]], [0.436, [0.888, 0.703, 0.478]], [0.438, [0.909, 0.704, 0.459]], [0.440, [0.909, 0.704, 0.459]], [0.442, [0.931, 0.704, 0.440]], [0.444, [0.931, 0.704, 0.440]], [0.446, [0.952, 0.705, 0.421]], [0.448, [0.952, 0.705, 0.421]], [0.450, [0.973, 0.705, 0.402]], [0.452, [0.973, 0.705, 0.402]], [0.454, [0.991, 0.707, 0.384]], [0.456, [0.991, 0.707, 0.384]], [0.458, [0.979, 0.714, 0.386]], [0.460, [0.979, 0.714, 0.386]], [0.462, [0.966, 0.721, 0.387]], [0.464, [0.966, 0.721, 0.387]], [0.466, [0.953, 0.728, 0.388]], [0.468, [0.953, 0.728, 0.388]], [0.470, [0.941, 0.735, 0.389]], [0.472, [0.941, 0.735, 0.389]], [0.474, [0.928, 0.742, 0.390]], [0.476, [0.928, 0.742, 0.390]], [0.477, [0.916, 0.749, 0.392]], [0.479, [0.916, 0.749, 0.392]], [0.481, [0.903, 0.756, 0.393]], [0.483, [0.903, 0.756, 0.393]], [0.485, [0.891, 0.763, 0.394]], [0.487, [0.891, 0.763, 0.394]], [0.489, [0.878, 0.770, 0.395]], [0.491, [0.878, 0.770, 0.395]], [0.493, [0.866, 0.778, 0.396]], [0.495, [0.866, 0.778, 0.396]], [0.497, [0.853, 0.785, 0.397]], [0.499, [0.853, 0.785, 0.397]], [0.501, [0.841, 0.792, 0.399]], [0.503, [0.841, 0.792, 0.399]], [0.505, [0.828, 0.799, 0.400]], [0.507, [0.828, 0.799, 0.400]], [0.509, [0.816, 0.806, 0.401]], [0.511, [0.816, 0.806, 0.401]], [0.513, [0.803, 0.813, 0.402]], [0.515, [0.803, 0.813, 0.402]], [0.517, [0.791, 0.820, 0.403]], [0.519, [0.791, 0.820, 0.403]], [0.521, [0.778, 0.827, 0.405]], [0.523, [0.778, 0.827, 0.405]], [0.524, [0.766, 0.834, 0.406]], [0.526, [0.766, 0.834, 0.406]], [0.528, [0.753, 0.842, 0.407]], [0.530, [0.753, 0.842, 0.407]], [0.532, [0.741, 0.849, 0.408]], [0.534, [0.741, 0.849, 0.408]], [0.536, [0.728, 0.856, 0.409]], [0.538, [0.728, 0.856, 0.409]], [0.540, [0.716, 0.863, 0.410]], [0.542, [0.716, 0.863, 0.410]], [0.544, [0.703, 0.870, 0.412]], [0.546, [0.703, 0.870, 0.412]], [0.548, [0.713, 0.868, 0.431]], [0.550, [0.713, 0.868, 0.431]], [0.552, [0.726, 0.865, 0.452]], [0.554, [0.726, 0.865, 0.452]], [0.556, [0.738, 0.862, 0.473]], [0.558, [0.738, 0.862, 0.473]], [0.560, [0.750, 0.859, 0.494]], [0.562, [0.750, 0.859, 0.494]], [0.564, [0.763, 0.856, 0.515]], [0.566, [0.763, 0.856, 0.515]], [0.568, [0.775, 0.854, 0.536]], [0.569, [0.775, 0.854, 0.536]], [0.571, [0.787, 0.851, 0.557]], [0.573, [0.787, 0.851, 0.557]], [0.575, [0.800, 0.848, 0.578]], [0.577, [0.800, 0.848, 0.578]], [0.579, [0.812, 0.845, 0.599]], [0.581, [0.812, 0.845, 0.599]], [0.583, [0.824, 0.842, 0.620]], [0.585, [0.824, 0.842, 0.620]], [0.587, [0.837, 0.839, 0.641]], [0.589, [0.837, 0.839, 0.641]], [0.591, [0.849, 0.836, 0.662]], [0.593, [0.849, 0.836, 0.662]], [0.595, [0.861, 0.833, 0.683]], [0.597, [0.861, 0.833, 0.683]], [0.599, [0.874, 0.831, 0.704]], [0.601, [0.874, 0.831, 0.704]], [0.603, [0.886, 0.828, 0.725]], [0.605, [0.886, 0.828, 0.725]], [0.607, [0.898, 0.825, 0.745]], [0.609, [0.898, 0.825, 0.745]], [0.611, [0.911, 0.822, 0.766]], [0.613, [0.911, 0.822, 0.766]], [0.614, [0.923, 0.819, 0.787]], [0.616, [0.923, 0.819, 0.787]], [0.618, [0.935, 0.816, 0.808]], [0.620, [0.935, 0.816, 0.808]], [0.622, [0.948, 0.813, 0.829]], [0.624, [0.948, 0.813, 0.829]], [0.626, [0.960, 0.810, 0.850]], [0.628, [0.960, 0.810, 0.850]], [0.630, [0.973, 0.808, 0.871]], [0.632, [0.973, 0.808, 0.871]], [0.634, [0.985, 0.805, 0.892]], [0.636, [0.985, 0.805, 0.892]], [0.638, [0.984, 0.805, 0.897]], [0.640, [0.984, 0.805, 0.897]], [0.642, [0.978, 0.807, 0.895]], [0.644, [0.978, 0.807, 0.895]], [0.646, [0.972, 0.809, 0.893]], [0.648, [0.972, 0.809, 0.893]], [0.650, [0.966, 0.811, 0.890]], [0.652, [0.966, 0.811, 0.890]], [0.654, [0.960, 0.814, 0.888]], [0.656, [0.960, 0.814, 0.888]], [0.658, [0.954, 0.816, 0.886]], [0.659, [0.954, 0.816, 0.886]], [0.661, [0.948, 0.818, 0.884]], [0.663, [0.948, 0.818, 0.884]], [0.665, [0.942, 0.820, 0.882]], [0.667, [0.942, 0.820, 0.882]], [0.669, [0.937, 0.822, 0.880]], [0.671, [0.937, 0.822, 0.880]], [0.673, [0.931, 0.824, 0.878]], [0.675, [0.931, 0.824, 0.878]], [0.677, [0.925, 0.826, 0.876]], [0.679, [0.925, 0.826, 0.876]], [0.681, [0.919, 0.828, 0.874]], [0.683, [0.919, 0.828, 0.874]], [0.685, [0.913, 0.830, 0.872]], [0.687, [0.913, 0.830, 0.872]], [0.689, [0.907, 0.832, 0.870]], [0.691, [0.907, 0.832, 0.870]], [0.693, [0.901, 0.834, 0.868]], [0.695, [0.901, 0.834, 0.868]], [0.697, [0.895, 0.836, 0.866]], [0.699, [0.895, 0.836, 0.866]], [0.701, [0.889, 0.838, 0.864]], [0.703, [0.889, 0.838, 0.864]], [0.705, [0.883, 0.840, 0.862]], [0.706, [0.883, 0.840, 0.862]], [0.708, [0.877, 0.842, 0.860]], [0.710, [0.877, 0.842, 0.860]], [0.712, [0.871, 0.844, 0.858]], [0.714, [0.871, 0.844, 0.858]], [0.716, [0.866, 0.846, 0.856]], [0.718, [0.866, 0.846, 0.856]], [0.720, [0.860, 0.848, 0.854]], [0.722, [0.860, 0.848, 0.854]], [0.724, [0.854, 0.850, 0.852]], [0.726, [0.854, 0.850, 0.852]], [0.728, [0.848, 0.843, 0.848]], [0.730, [0.848, 0.843, 0.848]], [0.732, [0.843, 0.828, 0.844]], [0.734, [0.843, 0.828, 0.844]], [0.736, [0.838, 0.813, 0.839]], [0.738, [0.838, 0.813, 0.839]], [0.740, [0.834, 0.798, 0.834]], [0.742, [0.834, 0.798, 0.834]], [0.744, [0.829, 0.783, 0.829]], [0.746, [0.829, 0.783, 0.829]], [0.748, [0.824, 0.767, 0.825]], [0.750, [0.824, 0.767, 0.825]], [0.751, [0.819, 0.752, 0.820]], [0.753, [0.819, 0.752, 0.820]], [0.755, [0.814, 0.737, 0.815]], [0.757, [0.814, 0.737, 0.815]], [0.759, [0.809, 0.722, 0.811]], [0.761, [0.809, 0.722, 0.811]], [0.763, [0.804, 0.707, 0.806]], [0.765, [0.804, 0.707, 0.806]], [0.767, [0.799, 0.692, 0.801]], [0.769, [0.799, 0.692, 0.801]], [0.771, [0.794, 0.677, 0.796]], [0.773, [0.794, 0.677, 0.796]], [0.775, [0.789, 0.662, 0.792]], [0.777, [0.789, 0.662, 0.792]], [0.779, [0.785, 0.647, 0.787]], [0.781, [0.785, 0.647, 0.787]], [0.783, [0.780, 0.632, 0.782]], [0.785, [0.780, 0.632, 0.782]], [0.787, [0.775, 0.617, 0.777]], [0.789, [0.775, 0.617, 0.777]], [0.791, [0.770, 0.602, 0.773]], [0.793, [0.770, 0.602, 0.773]], [0.795, [0.765, 0.587, 0.768]], [0.796, [0.765, 0.587, 0.768]], [0.798, [0.760, 0.572, 0.763]], [0.800, [0.760, 0.572, 0.763]], [0.802, [0.755, 0.557, 0.758]], [0.804, [0.755, 0.557, 0.758]], [0.806, [0.750, 0.542, 0.754]], [0.808, [0.750, 0.542, 0.754]], [0.810, [0.745, 0.527, 0.749]], [0.812, [0.745, 0.527, 0.749]], [0.814, [0.740, 0.512, 0.744]], [0.816, [0.740, 0.512, 0.744]], [0.818, [0.738, 0.509, 0.742]], [0.820, [0.738, 0.509, 0.742]], [0.822, [0.741, 0.527, 0.743]], [0.824, [0.741, 0.527, 0.743]], [0.826, [0.744, 0.545, 0.744]], [0.828, [0.744, 0.545, 0.744]], [0.830, [0.746, 0.563, 0.746]], [0.832, [0.746, 0.563, 0.746]], [0.834, [0.749, 0.581, 0.747]], [0.836, [0.749, 0.581, 0.747]], [0.838, [0.752, 0.599, 0.748]], [0.840, [0.752, 0.599, 0.748]], [0.841, [0.754, 0.617, 0.750]], [0.843, [0.754, 0.617, 0.750]], [0.845, [0.757, 0.635, 0.751]], [0.847, [0.757, 0.635, 0.751]], [0.849, [0.760, 0.653, 0.752]], [0.851, [0.760, 0.653, 0.752]], [0.853, [0.763, 0.671, 0.754]], [0.855, [0.763, 0.671, 0.754]], [0.857, [0.765, 0.690, 0.755]], [0.859, [0.765, 0.690, 0.755]], [0.861, [0.768, 0.708, 0.757]], [0.863, [0.768, 0.708, 0.757]], [0.865, [0.771, 0.726, 0.758]], [0.867, [0.771, 0.726, 0.758]], [0.869, [0.773, 0.744, 0.759]], [0.871, [0.773, 0.744, 0.759]], [0.873, [0.776, 0.762, 0.761]], [0.875, [0.776, 0.762, 0.761]], [0.877, [0.779, 0.780, 0.762]], [0.879, [0.779, 0.780, 0.762]], [0.881, [0.782, 0.798, 0.763]], [0.883, [0.782, 0.798, 0.763]], [0.885, [0.784, 0.816, 0.765]], [0.886, [0.784, 0.816, 0.765]], [0.888, [0.787, 0.834, 0.766]], [0.890, [0.787, 0.834, 0.766]], [0.892, [0.790, 0.852, 0.767]], [0.894, [0.790, 0.852, 0.767]], [0.896, [0.792, 0.871, 0.769]], [0.898, [0.792, 0.871, 0.769]], [0.900, [0.795, 0.889, 0.770]], [0.902, [0.795, 0.889, 0.770]], [0.904, [0.798, 0.907, 0.771]], [0.906, [0.798, 0.907, 0.771]], [0.908, [0.802, 0.922, 0.770]], [0.910, [0.802, 0.922, 0.770]], [0.912, [0.810, 0.922, 0.755]], [0.914, [0.810, 0.922, 0.755]], [0.916, [0.819, 0.922, 0.741]], [0.918, [0.819, 0.922, 0.741]], [0.920, [0.827, 0.923, 0.726]], [0.922, [0.827, 0.923, 0.726]], [0.924, [0.836, 0.923, 0.712]], [0.926, [0.836, 0.923, 0.712]], [0.928, [0.845, 0.923, 0.697]], [0.930, [0.845, 0.923, 0.697]], [0.932, [0.853, 0.924, 0.683]], [0.933, [0.853, 0.924, 0.683]], [0.935, [0.862, 0.924, 0.668]], [0.937, [0.862, 0.924, 0.668]], [0.939, [0.871, 0.924, 0.654]], [0.941, [0.871, 0.924, 0.654]], [0.943, [0.879, 0.925, 0.639]], [0.945, [0.879, 0.925, 0.639]], [0.947, [0.888, 0.925, 0.624]], [0.949, [0.888, 0.925, 0.624]], [0.951, [0.896, 0.925, 0.610]], [0.953, [0.896, 0.925, 0.610]], [0.955, [0.905, 0.926, 0.595]], [0.957, [0.905, 0.926, 0.595]], [0.959, [0.914, 0.926, 0.581]], [0.961, [0.914, 0.926, 0.581]], [0.963, [0.922, 0.926, 0.566]], [0.965, [0.922, 0.926, 0.566]], [0.967, [0.931, 0.927, 0.552]], [0.969, [0.931, 0.927, 0.552]], [0.971, [0.940, 0.927, 0.537]], [0.973, [0.940, 0.927, 0.537]], [0.975, [0.948, 0.927, 0.523]], [0.977, [0.948, 0.927, 0.523]], [0.978, [0.957, 0.928, 0.508]], [0.980, [0.957, 0.928, 0.508]], [0.982, [0.965, 0.928, 0.493]], [0.984, [0.965, 0.928, 0.493]], [0.986, [0.974, 0.928, 0.479]], [0.988, [0.974, 0.928, 0.479]], [0.990, [0.983, 0.929, 0.464]], [0.992, [0.983, 0.929, 0.464]], [0.994, [0.991, 0.929, 0.450]], [0.996, [0.991, 0.929, 0.450]], [0.998, [1.000, 0.929, 0.435]], [1.000, [1.000, 0.929, 0.435]]];
H.colormap_sinebow = function(t) {
    const pi_1_3 = Math.PI / 3;
    const pi_2_3 = Math.PI * 2 / 3;
    let x;
    t = (0.5 - t) * Math.PI;
    let r = 255 * (x = Math.sin(t)) * x;
    let g = 255 * (x = Math.sin(t + pi_1_3)) * x;
    let b = 255 * (x = Math.sin(t + pi_2_3)) * x;
    let result = H.rgb_to_hex( { r: r, g: g, b: b } )
    return result;
}
H.colormap_solar = [[0.000,[0.20142510,0.07730778,0.09342024]],[0.004,[0.20623196,0.07906208,0.09541606]],[0.008,[0.21104289,0.08079536,0.09737846]],[0.012,[0.21585808,0.08250806,0.09930725]],[0.016,[0.22067771,0.08420059,0.10120221]],[0.020,[0.22550196,0.08587332,0.10306306]],[0.024,[0.23033109,0.08752655,0.10488946]],[0.027,[0.23516512,0.08916077,0.10668116]],[0.031,[0.24000415,0.09077639,0.10843785]],[0.035,[0.24484825,0.09237382,0.11015919]],[0.039,[0.24969748,0.09395347,0.11184482]],[0.043,[0.25455187,0.09551577,0.11349435]],[0.047,[0.25941144,0.09706115,0.11510738]],[0.051,[0.26427617,0.09859005,0.11668349]],[0.055,[0.26914605,0.10010293,0.11822223]],[0.059,[0.27402103,0.10160025,0.11972314]],[0.063,[0.27890104,0.10308249,0.12118573]],[0.067,[0.28378598,0.10455017,0.12260952]],[0.071,[0.28867573,0.10600381,0.12399399]],[0.075,[0.29357056,0.10744356,0.12533822]],[0.078,[0.29847081,0.10886948,0.12664112]],[0.082,[0.30337547,0.11028298,0.12790292]],[0.086,[0.30828432,0.11168467,0.12912301]],[0.090,[0.31319710,0.11307521,0.13030082]],[0.094,[0.31811356,0.11445529,0.13143572]],[0.098,[0.32303376,0.11582525,0.13252668]],[0.102,[0.32795844,0.11718479,0.13357181]],[0.106,[0.33288584,0.11853607,0.13457197]],[0.110,[0.33781557,0.11987996,0.13552651]],[0.114,[0.34274718,0.12121736,0.13643477]],[0.118,[0.34768177,0.12254761,0.13729412]],[0.122,[0.35261792,0.12387261,0.13810492]],[0.125,[0.35755446,0.12519406,0.13886724]],[0.129,[0.36249085,0.12651300,0.13958034]],[0.133,[0.36742880,0.12782819,0.14024032]],[0.137,[0.37236522,0.12914333,0.14084966]],[0.141,[0.37729940,0.13045972,0.14140772]],[0.145,[0.38223282,0.13177638,0.14191047]],[0.149,[0.38716275,0.13309673,0.14235997]],[0.153,[0.39208806,0.13442254,0.14275598]],[0.157,[0.39701028,0.13575283,0.14309390]],[0.161,[0.40192579,0.13709203,0.14337733]],[0.165,[0.40683496,0.13844041,0.14360330]],[0.169,[0.41173657,0.13979990,0.14377140]],[0.173,[0.41662860,0.14117334,0.14388269]],[0.176,[0.42151155,0.14256088,0.14393348]],[0.180,[0.42638186,0.14396701,0.14392769]],[0.184,[0.43124082,0.14539110,0.14385986]],[0.188,[0.43608432,0.14683821,0.14373521]],[0.192,[0.44091334,0.14830805,0.14354849]],[0.196,[0.44572406,0.14980539,0.14330472]],[0.200,[0.45051699,0.15133045,0.14299936]],[0.204,[0.45528867,0.15288755,0.14263694]],[0.208,[0.46003871,0.15447786,0.14221489]],[0.212,[0.46476457,0.15610469,0.14173594]],[0.216,[0.46946477,0.15777026,0.14120030]],[0.220,[0.47413775,0.15947682,0.14060852]],[0.224,[0.47878116,0.16122735,0.13996360]],[0.227,[0.48339404,0.16302340,0.13926468]],[0.231,[0.48797401,0.16486782,0.13851553]],[0.235,[0.49251957,0.16676254,0.13771755]],[0.239,[0.49702929,0.16870932,0.13687220]],[0.243,[0.50150134,0.17071019,0.13598285]],[0.247,[0.50593446,0.17276654,0.13505133]],[0.251,[0.51032726,0.17487977,0.13408048]],[0.255,[0.51467850,0.17705099,0.13307310]],[0.259,[0.51898712,0.17928107,0.13203202]],[0.263,[0.52325216,0.18157061,0.13096024]],[0.267,[0.52747291,0.18391991,0.12986024]],[0.271,[0.53164858,0.18632919,0.12873602]],[0.275,[0.53577881,0.18879820,0.12758962]],[0.278,[0.53986330,0.19132655,0.12642369]],[0.282,[0.54390168,0.19391371,0.12524274]],[0.286,[0.54789413,0.19655879,0.12404724]],[0.290,[0.55184060,0.19926082,0.12284163]],[0.294,[0.55574136,0.20201864,0.12162768]],[0.298,[0.55959678,0.20483097,0.12040676]],[0.302,[0.56340718,0.20769632,0.11918392]],[0.306,[0.56717321,0.21061334,0.11795693]],[0.310,[0.57089535,0.21358017,0.11673318]],[0.314,[0.57457433,0.21659553,0.11550868]],[0.318,[0.57821088,0.21965735,0.11429034]],[0.322,[0.58180567,0.22276439,0.11307453]],[0.325,[0.58535963,0.22591444,0.11186793]],[0.329,[0.58887335,0.22910650,0.11066571]],[0.333,[0.59234801,0.23233801,0.10947623]],[0.337,[0.59578402,0.23560836,0.10829302]],[0.341,[0.59918265,0.23891505,0.10712340]],[0.345,[0.60254440,0.24225721,0.10596380]],[0.349,[0.60587015,0.24563324,0.10481580]],[0.353,[0.60916104,0.24904116,0.10368321]],[0.357,[0.61241730,0.25248057,0.10256140]],[0.361,[0.61564022,0.25594930,0.10145541]],[0.365,[0.61883047,0.25944629,0.10036479]],[0.369,[0.62198835,0.26297099,0.09928701]],[0.373,[0.62511509,0.26652152,0.09822607]],[0.376,[0.62821147,0.27009672,0.09718275]],[0.380,[0.63127759,0.27369633,0.09615407]],[0.384,[0.63431410,0.27731940,0.09514063]],[0.388,[0.63732259,0.28096373,0.09414821]],[0.392,[0.64030290,0.28462948,0.09317288]],[0.396,[0.64325545,0.28831605,0.09221436]],[0.400,[0.64618079,0.29202264,0.09127322]],[0.404,[0.64907986,0.29574805,0.09035191]],[0.408,[0.65195349,0.29949124,0.08945208]],[0.412,[0.65480148,0.30325240,0.08857116]],[0.416,[0.65762433,0.30703090,0.08770973]],[0.420,[0.66042248,0.31082618,0.08686839]],[0.424,[0.66319638,0.31463768,0.08604774]],[0.427,[0.66594650,0.31846486,0.08524854]],[0.431,[0.66867401,0.32230640,0.08447432]],[0.435,[0.67137847,0.32616277,0.08372242]],[0.439,[0.67406025,0.33003358,0.08299350]],[0.443,[0.67671970,0.33391841,0.08228821]],[0.447,[0.67935717,0.33781692,0.08160721]],[0.451,[0.68197297,0.34172875,0.08095120]],[0.455,[0.68456742,0.34565360,0.08032086]],[0.459,[0.68714081,0.34959116,0.07971690]],[0.463,[0.68969343,0.35354117,0.07914004]],[0.467,[0.69222553,0.35750336,0.07859099]],[0.471,[0.69473738,0.36147750,0.07807048]],[0.475,[0.69722923,0.36546336,0.07757926]],[0.478,[0.69970130,0.36946075,0.07711805]],[0.482,[0.70215381,0.37346948,0.07668761]],[0.486,[0.70458697,0.37748937,0.07628867]],[0.490,[0.70700099,0.38152026,0.07592197]],[0.494,[0.70939604,0.38556200,0.07558825]],[0.498,[0.71177231,0.38961447,0.07528823]],[0.502,[0.71412996,0.39367754,0.07502264]],[0.506,[0.71646916,0.39775109,0.07479218]],[0.510,[0.71879006,0.40183503,0.07459753]],[0.514,[0.72109279,0.40592925,0.07443938]],[0.518,[0.72337749,0.41003369,0.07431837]],[0.522,[0.72564429,0.41414826,0.07423513]],[0.525,[0.72789329,0.41827289,0.07419027]],[0.529,[0.73012462,0.42240753,0.07418436]],[0.533,[0.73233838,0.42655212,0.07421793]],[0.537,[0.73453539,0.43070603,0.07429320]],[0.541,[0.73671566,0.43486930,0.07441039]],[0.545,[0.73887875,0.43904233,0.07456863]],[0.549,[0.74102472,0.44322510,0.07476829]],[0.553,[0.74315365,0.44741758,0.07500970]],[0.557,[0.74526561,0.45161977,0.07529317]],[0.561,[0.74736066,0.45583163,0.07561893]],[0.565,[0.74943885,0.46005318,0.07598718]],[0.569,[0.75150145,0.46428349,0.07640057]],[0.573,[0.75354824,0.46852277,0.07685852]],[0.576,[0.75557843,0.47277168,0.07735934]],[0.580,[0.75759206,0.47703020,0.07790305]],[0.584,[0.75958916,0.48129836,0.07848957]],[0.588,[0.76156976,0.48557617,0.07911883]],[0.592,[0.76353516,0.48986274,0.07979299]],[0.596,[0.76548558,0.49415795,0.08051211]],[0.600,[0.76741969,0.49846282,0.08127340]],[0.604,[0.76933749,0.50277737,0.08207660]],[0.608,[0.77123899,0.50710162,0.08292137]],[0.612,[0.77312499,0.51143507,0.08380866]],[0.616,[0.77499716,0.51577662,0.08474070]],[0.620,[0.77685317,0.52012793,0.08571310]],[0.624,[0.77869299,0.52448904,0.08672541]],[0.627,[0.78051662,0.52885998,0.08777712]],[0.631,[0.78232613,0.53323943,0.08887079]],[0.635,[0.78412113,0.53762770,0.09000513]],[0.639,[0.78590001,0.54202590,0.09117718]],[0.643,[0.78766275,0.54643407,0.09238637]],[0.647,[0.78941038,0.55085158,0.09363351]],[0.651,[0.79114495,0.55527718,0.09492064]],[0.655,[0.79286342,0.55971286,0.09624296]],[0.659,[0.79456574,0.56415868,0.09759984]],[0.663,[0.79625293,0.56861405,0.09899190]],[0.667,[0.79792746,0.57307748,0.10042146]],[0.671,[0.79958585,0.57755118,0.10188351]],[0.675,[0.80122804,0.58203522,0.10337740]],[0.678,[0.80285607,0.58652840,0.10490482]],[0.682,[0.80447074,0.59103029,0.10646587]],[0.686,[0.80606916,0.59554268,0.10805666]],[0.690,[0.80765128,0.60006563,0.10967654]],[0.694,[0.80922129,0.60459671,0.11132925]],[0.698,[0.81077606,0.60913783,0.11301075]],[0.702,[0.81231442,0.61368970,0.11471930]],[0.706,[0.81383814,0.61825132,0.11645603]],[0.710,[0.81534926,0.62282161,0.11822217]],[0.714,[0.81684385,0.62740283,0.12001338]],[0.718,[0.81832183,0.63199507,0.12182907]],[0.722,[0.81978904,0.63659511,0.12367382]],[0.725,[0.82123975,0.64120619,0.12554190]],[0.729,[0.82267367,0.64582852,0.12743261]],[0.733,[0.82409542,0.65045959,0.12934922]],[0.737,[0.82550201,0.65510109,0.13128867]],[0.741,[0.82689162,0.65975407,0.13324900]],[0.745,[0.82826808,0.66441648,0.13523271]],[0.749,[0.82963023,0.66908900,0.13723832]],[0.753,[0.83097514,0.67377325,0.13926317]],[0.757,[0.83230641,0.67846735,0.14130944]],[0.761,[0.83362367,0.68317156,0.14337634]],[0.765,[0.83492340,0.68788775,0.14546096]],[0.769,[0.83620945,0.69261395,0.14756554]],[0.773,[0.83748125,0.69735055,0.14968918]],[0.776,[0.83873517,0.70209940,0.15182914]],[0.780,[0.83997589,0.70685819,0.15398802]],[0.784,[0.84120150,0.71162792,0.15616420]],[0.788,[0.84240886,0.71641021,0.15835539]],[0.792,[0.84360400,0.72120210,0.16056488]],[0.796,[0.84478260,0.72600578,0.16278970]],[0.800,[0.84594250,0.73082232,0.16502834]],[0.804,[0.84709169,0.73564789,0.16728499]],[0.808,[0.84822227,0.74048637,0.16955487]],[0.812,[0.84933549,0.74533717,0.17183845]],[0.816,[0.85043640,0.75019794,0.17413811]],[0.820,[0.85151780,0.75507211,0.17644978]],[0.824,[0.85258411,0.75995766,0.17877549]],[0.827,[0.85363511,0.76485473,0.18111487]],[0.831,[0.85466602,0.76976556,0.18346530]],[0.835,[0.85568466,0.77468659,0.18583039]],[0.839,[0.85668433,0.77962093,0.18820665]],[0.843,[0.85766547,0.78456840,0.19059412]],[0.847,[0.85863334,0.78952669,0.19299505]],[0.851,[0.85958005,0.79449933,0.19540561]],[0.855,[0.86051189,0.79948359,0.19782848]],[0.859,[0.86142577,0.80448085,0.20026210]],[0.863,[0.86231873,0.80949244,0.20270505]],[0.867,[0.86319909,0.81451477,0.20516075]],[0.871,[0.86405703,0.81955212,0.20762486]],[0.875,[0.86489859,0.82460193,0.21009982]],[0.878,[0.86572175,0.82966508,0.21258465]],[0.882,[0.86652274,0.83474320,0.21507772]],[0.886,[0.86731030,0.83983262,0.21758244]],[0.890,[0.86807398,0.84493777,0.22009455]],[0.894,[0.86882094,0.85005567,0.22261679]],[0.898,[0.86954753,0.85518787,0.22514765]],[0.902,[0.87025185,0.86033516,0.22768636]],[0.906,[0.87094035,0.86549493,0.23023528]],[0.910,[0.87160329,0.87067115,0.23279074]],[0.914,[0.87225041,0.87585991,0.23535627]],[0.918,[0.87287351,0.88106452,0.23792884]],[0.922,[0.87347555,0.88628382,0.24050952]],[0.925,[0.87405765,0.89151737,0.24309865]],[0.929,[0.87461345,0.89676767,0.24569404]],[0.933,[0.87515332,0.90203072,0.24829921]],[0.937,[0.87566489,0.90731129,0.25090998]],[0.941,[0.87615800,0.91260563,0.25352966]],[0.945,[0.87662518,0.91791659,0.25615577]],[0.949,[0.87706899,0.92324319,0.25878919]],[0.953,[0.87749036,0.92858511,0.26143025]],[0.957,[0.87788347,0.93394450,0.26407712]],[0.961,[0.87825750,0.93931797,0.26673276]],[0.965,[0.87859995,0.94471013,0.26939327]],[0.969,[0.87892352,0.95011633,0.27206270]],[0.973,[0.87921601,0.95554099,0.27473731]],[0.976,[0.87948513,0.96098132,0.27741955]],[0.980,[0.87972594,0.96643910,0.28010799]],[0.984,[0.87993889,0.97191415,0.28280287]],[0.988,[0.88012616,0.97740568,0.28550491]],[0.992,[0.88028113,0.98291600,0.28821226]],[0.996,[0.88041294,0.98844193,0.29092770]],[1.000,[0.88050801,0.99398812,0.29364740]]]
H.colormap_Spectral = [[0.000, [0.620, 0.004, 0.259]], [0.002, [0.620, 0.004, 0.259]], [0.004, [0.628, 0.013, 0.261]], [0.006, [0.628, 0.013, 0.261]], [0.008, [0.637, 0.023, 0.263]], [0.010, [0.637, 0.023, 0.263]], [0.012, [0.645, 0.032, 0.265]], [0.014, [0.645, 0.032, 0.265]], [0.016, [0.653, 0.041, 0.267]], [0.018, [0.653, 0.041, 0.267]], [0.020, [0.662, 0.051, 0.269]], [0.022, [0.662, 0.051, 0.269]], [0.023, [0.670, 0.060, 0.271]], [0.025, [0.670, 0.060, 0.271]], [0.027, [0.679, 0.070, 0.273]], [0.029, [0.679, 0.070, 0.273]], [0.031, [0.687, 0.079, 0.275]], [0.033, [0.687, 0.079, 0.275]], [0.035, [0.696, 0.088, 0.277]], [0.037, [0.696, 0.088, 0.277]], [0.039, [0.704, 0.098, 0.279]], [0.041, [0.704, 0.098, 0.279]], [0.043, [0.713, 0.107, 0.281]], [0.045, [0.713, 0.107, 0.281]], [0.047, [0.721, 0.116, 0.283]], [0.049, [0.721, 0.116, 0.283]], [0.051, [0.730, 0.126, 0.285]], [0.053, [0.730, 0.126, 0.285]], [0.055, [0.738, 0.135, 0.287]], [0.057, [0.738, 0.135, 0.287]], [0.059, [0.746, 0.145, 0.289]], [0.061, [0.746, 0.145, 0.289]], [0.063, [0.755, 0.154, 0.291]], [0.065, [0.755, 0.154, 0.291]], [0.067, [0.763, 0.163, 0.293]], [0.068, [0.763, 0.163, 0.293]], [0.070, [0.772, 0.173, 0.295]], [0.072, [0.772, 0.173, 0.295]], [0.074, [0.780, 0.182, 0.297]], [0.076, [0.780, 0.182, 0.297]], [0.078, [0.789, 0.192, 0.299]], [0.080, [0.789, 0.192, 0.299]], [0.082, [0.797, 0.201, 0.301]], [0.084, [0.797, 0.201, 0.301]], [0.086, [0.806, 0.210, 0.303]], [0.088, [0.806, 0.210, 0.303]], [0.090, [0.814, 0.220, 0.305]], [0.092, [0.814, 0.220, 0.305]], [0.094, [0.823, 0.229, 0.307]], [0.096, [0.823, 0.229, 0.307]], [0.098, [0.831, 0.238, 0.309]], [0.100, [0.831, 0.238, 0.309]], [0.102, [0.838, 0.247, 0.309]], [0.104, [0.838, 0.247, 0.309]], [0.106, [0.842, 0.254, 0.307]], [0.108, [0.842, 0.254, 0.307]], [0.110, [0.847, 0.261, 0.305]], [0.112, [0.847, 0.261, 0.305]], [0.114, [0.852, 0.268, 0.303]], [0.115, [0.852, 0.268, 0.303]], [0.117, [0.857, 0.276, 0.301]], [0.119, [0.857, 0.276, 0.301]], [0.121, [0.862, 0.283, 0.300]], [0.123, [0.862, 0.283, 0.300]], [0.125, [0.866, 0.290, 0.298]], [0.127, [0.866, 0.290, 0.298]], [0.129, [0.871, 0.297, 0.296]], [0.131, [0.871, 0.297, 0.296]], [0.133, [0.876, 0.305, 0.294]], [0.135, [0.876, 0.305, 0.294]], [0.137, [0.881, 0.312, 0.292]], [0.139, [0.881, 0.312, 0.292]], [0.141, [0.885, 0.319, 0.290]], [0.143, [0.885, 0.319, 0.290]], [0.145, [0.890, 0.326, 0.289]], [0.147, [0.890, 0.326, 0.289]], [0.149, [0.895, 0.333, 0.287]], [0.151, [0.895, 0.333, 0.287]], [0.153, [0.900, 0.341, 0.285]], [0.155, [0.900, 0.341, 0.285]], [0.157, [0.904, 0.348, 0.283]], [0.159, [0.904, 0.348, 0.283]], [0.160, [0.909, 0.355, 0.281]], [0.162, [0.909, 0.355, 0.281]], [0.164, [0.914, 0.362, 0.279]], [0.166, [0.914, 0.362, 0.279]], [0.168, [0.919, 0.370, 0.278]], [0.170, [0.919, 0.370, 0.278]], [0.172, [0.923, 0.377, 0.276]], [0.174, [0.923, 0.377, 0.276]], [0.176, [0.928, 0.384, 0.274]], [0.178, [0.928, 0.384, 0.274]], [0.180, [0.933, 0.391, 0.272]], [0.182, [0.933, 0.391, 0.272]], [0.184, [0.938, 0.399, 0.270]], [0.186, [0.938, 0.399, 0.270]], [0.188, [0.943, 0.406, 0.268]], [0.190, [0.943, 0.406, 0.268]], [0.192, [0.947, 0.413, 0.266]], [0.194, [0.947, 0.413, 0.266]], [0.196, [0.952, 0.420, 0.265]], [0.198, [0.952, 0.420, 0.265]], [0.200, [0.957, 0.427, 0.263]], [0.202, [0.957, 0.427, 0.263]], [0.204, [0.958, 0.437, 0.267]], [0.205, [0.958, 0.437, 0.267]], [0.207, [0.960, 0.447, 0.272]], [0.209, [0.960, 0.447, 0.272]], [0.211, [0.961, 0.457, 0.277]], [0.213, [0.961, 0.457, 0.277]], [0.215, [0.962, 0.467, 0.281]], [0.217, [0.962, 0.467, 0.281]], [0.219, [0.964, 0.477, 0.286]], [0.221, [0.964, 0.477, 0.286]], [0.223, [0.965, 0.487, 0.290]], [0.225, [0.965, 0.487, 0.290]], [0.227, [0.967, 0.497, 0.295]], [0.229, [0.967, 0.497, 0.295]], [0.231, [0.968, 0.507, 0.300]], [0.233, [0.968, 0.507, 0.300]], [0.235, [0.969, 0.517, 0.304]], [0.237, [0.969, 0.517, 0.304]], [0.239, [0.971, 0.527, 0.309]], [0.241, [0.971, 0.527, 0.309]], [0.243, [0.972, 0.537, 0.313]], [0.245, [0.972, 0.537, 0.313]], [0.247, [0.973, 0.547, 0.318]], [0.249, [0.973, 0.547, 0.318]], [0.250, [0.975, 0.557, 0.323]], [0.252, [0.975, 0.557, 0.323]], [0.254, [0.976, 0.567, 0.327]], [0.256, [0.976, 0.567, 0.327]], [0.258, [0.978, 0.577, 0.332]], [0.260, [0.978, 0.577, 0.332]], [0.262, [0.979, 0.587, 0.337]], [0.264, [0.979, 0.587, 0.337]], [0.266, [0.980, 0.597, 0.341]], [0.268, [0.980, 0.597, 0.341]], [0.270, [0.982, 0.607, 0.346]], [0.272, [0.982, 0.607, 0.346]], [0.274, [0.983, 0.617, 0.350]], [0.276, [0.983, 0.617, 0.350]], [0.278, [0.985, 0.627, 0.355]], [0.280, [0.985, 0.627, 0.355]], [0.282, [0.986, 0.637, 0.360]], [0.284, [0.986, 0.637, 0.360]], [0.286, [0.987, 0.647, 0.364]], [0.288, [0.987, 0.647, 0.364]], [0.290, [0.989, 0.657, 0.369]], [0.292, [0.989, 0.657, 0.369]], [0.294, [0.990, 0.667, 0.373]], [0.295, [0.990, 0.667, 0.373]], [0.297, [0.991, 0.677, 0.378]], [0.299, [0.991, 0.677, 0.378]], [0.301, [0.992, 0.686, 0.384]], [0.303, [0.992, 0.686, 0.384]], [0.305, [0.992, 0.694, 0.390]], [0.307, [0.992, 0.694, 0.390]], [0.309, [0.993, 0.702, 0.397]], [0.311, [0.993, 0.702, 0.397]], [0.313, [0.993, 0.709, 0.403]], [0.315, [0.993, 0.709, 0.403]], [0.317, [0.993, 0.717, 0.409]], [0.319, [0.993, 0.717, 0.409]], [0.321, [0.993, 0.725, 0.416]], [0.323, [0.993, 0.725, 0.416]], [0.325, [0.993, 0.732, 0.422]], [0.327, [0.993, 0.732, 0.422]], [0.329, [0.993, 0.740, 0.429]], [0.331, [0.993, 0.740, 0.429]], [0.333, [0.993, 0.748, 0.435]], [0.335, [0.993, 0.748, 0.435]], [0.337, [0.994, 0.755, 0.442]], [0.339, [0.994, 0.755, 0.442]], [0.341, [0.994, 0.763, 0.448]], [0.342, [0.994, 0.763, 0.448]], [0.344, [0.994, 0.771, 0.455]], [0.346, [0.994, 0.771, 0.455]], [0.348, [0.994, 0.778, 0.461]], [0.350, [0.994, 0.778, 0.461]], [0.352, [0.994, 0.786, 0.468]], [0.354, [0.994, 0.786, 0.468]], [0.356, [0.994, 0.794, 0.474]], [0.358, [0.994, 0.794, 0.474]], [0.360, [0.995, 0.802, 0.481]], [0.362, [0.995, 0.802, 0.481]], [0.364, [0.995, 0.809, 0.487]], [0.366, [0.995, 0.809, 0.487]], [0.368, [0.995, 0.817, 0.493]], [0.370, [0.995, 0.817, 0.493]], [0.372, [0.995, 0.825, 0.500]], [0.374, [0.995, 0.825, 0.500]], [0.376, [0.995, 0.832, 0.506]], [0.378, [0.995, 0.832, 0.506]], [0.380, [0.995, 0.840, 0.513]], [0.382, [0.995, 0.840, 0.513]], [0.384, [0.995, 0.848, 0.519]], [0.386, [0.995, 0.848, 0.519]], [0.387, [0.996, 0.855, 0.526]], [0.389, [0.996, 0.855, 0.526]], [0.391, [0.996, 0.863, 0.532]], [0.393, [0.996, 0.863, 0.532]], [0.395, [0.996, 0.871, 0.539]], [0.397, [0.996, 0.871, 0.539]], [0.399, [0.996, 0.878, 0.545]], [0.401, [0.996, 0.878, 0.545]], [0.403, [0.996, 0.883, 0.553]], [0.405, [0.996, 0.883, 0.553]], [0.407, [0.996, 0.888, 0.561]], [0.409, [0.996, 0.888, 0.561]], [0.411, [0.997, 0.893, 0.569]], [0.413, [0.997, 0.893, 0.569]], [0.415, [0.997, 0.898, 0.577]], [0.417, [0.997, 0.898, 0.577]], [0.419, [0.997, 0.902, 0.585]], [0.421, [0.997, 0.902, 0.585]], [0.423, [0.997, 0.907, 0.593]], [0.425, [0.997, 0.907, 0.593]], [0.427, [0.997, 0.912, 0.601]], [0.429, [0.997, 0.912, 0.601]], [0.431, [0.997, 0.917, 0.609]], [0.432, [0.997, 0.917, 0.609]], [0.434, [0.997, 0.921, 0.617]], [0.436, [0.997, 0.921, 0.617]], [0.438, [0.998, 0.926, 0.625]], [0.440, [0.998, 0.926, 0.625]], [0.442, [0.998, 0.931, 0.633]], [0.444, [0.998, 0.931, 0.633]], [0.446, [0.998, 0.936, 0.641]], [0.448, [0.998, 0.936, 0.641]], [0.450, [0.998, 0.940, 0.649]], [0.452, [0.998, 0.940, 0.649]], [0.454, [0.998, 0.945, 0.657]], [0.456, [0.998, 0.945, 0.657]], [0.458, [0.998, 0.950, 0.665]], [0.460, [0.998, 0.950, 0.665]], [0.462, [0.999, 0.955, 0.673]], [0.464, [0.999, 0.955, 0.673]], [0.466, [0.999, 0.959, 0.681]], [0.468, [0.999, 0.959, 0.681]], [0.470, [0.999, 0.964, 0.689]], [0.472, [0.999, 0.964, 0.689]], [0.474, [0.999, 0.969, 0.697]], [0.476, [0.999, 0.969, 0.697]], [0.477, [0.999, 0.974, 0.705]], [0.479, [0.999, 0.974, 0.705]], [0.481, [0.999, 0.979, 0.713]], [0.483, [0.999, 0.979, 0.713]], [0.485, [0.999, 0.983, 0.721]], [0.487, [0.999, 0.983, 0.721]], [0.489, [1.000, 0.988, 0.729]], [0.491, [1.000, 0.988, 0.729]], [0.493, [1.000, 0.993, 0.737]], [0.495, [1.000, 0.993, 0.737]], [0.497, [1.000, 0.998, 0.745]], [0.499, [1.000, 0.998, 0.745]], [0.501, [0.998, 0.999, 0.746]], [0.503, [0.998, 0.999, 0.746]], [0.505, [0.994, 0.998, 0.740]], [0.507, [0.994, 0.998, 0.740]], [0.509, [0.990, 0.996, 0.734]], [0.511, [0.990, 0.996, 0.734]], [0.513, [0.987, 0.995, 0.728]], [0.515, [0.987, 0.995, 0.728]], [0.517, [0.983, 0.993, 0.722]], [0.519, [0.983, 0.993, 0.722]], [0.521, [0.979, 0.992, 0.716]], [0.523, [0.979, 0.992, 0.716]], [0.524, [0.975, 0.990, 0.710]], [0.526, [0.975, 0.990, 0.710]], [0.528, [0.971, 0.988, 0.704]], [0.530, [0.971, 0.988, 0.704]], [0.532, [0.967, 0.987, 0.698]], [0.534, [0.967, 0.987, 0.698]], [0.536, [0.963, 0.985, 0.692]], [0.538, [0.963, 0.985, 0.692]], [0.540, [0.960, 0.984, 0.686]], [0.542, [0.960, 0.984, 0.686]], [0.544, [0.956, 0.982, 0.680]], [0.546, [0.956, 0.982, 0.680]], [0.548, [0.952, 0.981, 0.674]], [0.550, [0.952, 0.981, 0.674]], [0.552, [0.948, 0.979, 0.668]], [0.554, [0.948, 0.979, 0.668]], [0.556, [0.944, 0.978, 0.662]], [0.558, [0.944, 0.978, 0.662]], [0.560, [0.940, 0.976, 0.656]], [0.562, [0.940, 0.976, 0.656]], [0.564, [0.937, 0.975, 0.650]], [0.566, [0.937, 0.975, 0.650]], [0.568, [0.933, 0.973, 0.644]], [0.569, [0.933, 0.973, 0.644]], [0.571, [0.929, 0.972, 0.638]], [0.573, [0.929, 0.972, 0.638]], [0.575, [0.925, 0.970, 0.632]], [0.577, [0.925, 0.970, 0.632]], [0.579, [0.921, 0.968, 0.626]], [0.581, [0.921, 0.968, 0.626]], [0.583, [0.917, 0.967, 0.620]], [0.585, [0.917, 0.967, 0.620]], [0.587, [0.913, 0.965, 0.614]], [0.589, [0.913, 0.965, 0.614]], [0.591, [0.910, 0.964, 0.608]], [0.593, [0.910, 0.964, 0.608]], [0.595, [0.906, 0.962, 0.602]], [0.597, [0.906, 0.962, 0.602]], [0.599, [0.902, 0.961, 0.596]], [0.601, [0.902, 0.961, 0.596]], [0.603, [0.893, 0.957, 0.598]], [0.605, [0.893, 0.957, 0.598]], [0.607, [0.884, 0.953, 0.600]], [0.609, [0.884, 0.953, 0.600]], [0.611, [0.875, 0.950, 0.602]], [0.613, [0.875, 0.950, 0.602]], [0.614, [0.866, 0.946, 0.603]], [0.616, [0.866, 0.946, 0.603]], [0.618, [0.857, 0.942, 0.605]], [0.620, [0.857, 0.942, 0.605]], [0.622, [0.848, 0.939, 0.607]], [0.624, [0.848, 0.939, 0.607]], [0.626, [0.838, 0.935, 0.609]], [0.628, [0.838, 0.935, 0.609]], [0.630, [0.829, 0.931, 0.611]], [0.632, [0.829, 0.931, 0.611]], [0.634, [0.820, 0.928, 0.613]], [0.636, [0.820, 0.928, 0.613]], [0.638, [0.811, 0.924, 0.615]], [0.640, [0.811, 0.924, 0.615]], [0.642, [0.802, 0.920, 0.616]], [0.644, [0.802, 0.920, 0.616]], [0.646, [0.793, 0.916, 0.618]], [0.648, [0.793, 0.916, 0.618]], [0.650, [0.784, 0.913, 0.620]], [0.652, [0.784, 0.913, 0.620]], [0.654, [0.775, 0.909, 0.622]], [0.656, [0.775, 0.909, 0.622]], [0.658, [0.766, 0.905, 0.624]], [0.659, [0.766, 0.905, 0.624]], [0.661, [0.757, 0.902, 0.626]], [0.663, [0.757, 0.902, 0.626]], [0.665, [0.748, 0.898, 0.627]], [0.667, [0.748, 0.898, 0.627]], [0.669, [0.739, 0.894, 0.629]], [0.671, [0.739, 0.894, 0.629]], [0.673, [0.730, 0.891, 0.631]], [0.675, [0.730, 0.891, 0.631]], [0.677, [0.720, 0.887, 0.633]], [0.679, [0.720, 0.887, 0.633]], [0.681, [0.711, 0.883, 0.635]], [0.683, [0.711, 0.883, 0.635]], [0.685, [0.702, 0.880, 0.637]], [0.687, [0.702, 0.880, 0.637]], [0.689, [0.693, 0.876, 0.639]], [0.691, [0.693, 0.876, 0.639]], [0.693, [0.684, 0.872, 0.640]], [0.695, [0.684, 0.872, 0.640]], [0.697, [0.675, 0.869, 0.642]], [0.699, [0.675, 0.869, 0.642]], [0.701, [0.665, 0.865, 0.643]], [0.703, [0.665, 0.865, 0.643]], [0.705, [0.655, 0.860, 0.643]], [0.706, [0.655, 0.860, 0.643]], [0.708, [0.644, 0.856, 0.644]], [0.710, [0.644, 0.856, 0.644]], [0.712, [0.633, 0.852, 0.644]], [0.714, [0.633, 0.852, 0.644]], [0.716, [0.623, 0.848, 0.644]], [0.718, [0.623, 0.848, 0.644]], [0.720, [0.612, 0.844, 0.644]], [0.722, [0.612, 0.844, 0.644]], [0.724, [0.602, 0.840, 0.644]], [0.726, [0.602, 0.840, 0.644]], [0.728, [0.591, 0.836, 0.644]], [0.730, [0.591, 0.836, 0.644]], [0.732, [0.580, 0.831, 0.644]], [0.734, [0.580, 0.831, 0.644]], [0.736, [0.570, 0.827, 0.645]], [0.738, [0.570, 0.827, 0.645]], [0.740, [0.559, 0.823, 0.645]], [0.742, [0.559, 0.823, 0.645]], [0.744, [0.549, 0.819, 0.645]], [0.746, [0.549, 0.819, 0.645]], [0.748, [0.538, 0.815, 0.645]], [0.750, [0.538, 0.815, 0.645]], [0.751, [0.527, 0.811, 0.645]], [0.753, [0.527, 0.811, 0.645]], [0.755, [0.517, 0.806, 0.645]], [0.757, [0.517, 0.806, 0.645]], [0.759, [0.506, 0.802, 0.646]], [0.761, [0.506, 0.802, 0.646]], [0.763, [0.496, 0.798, 0.646]], [0.765, [0.496, 0.798, 0.646]], [0.767, [0.485, 0.794, 0.646]], [0.769, [0.485, 0.794, 0.646]], [0.771, [0.474, 0.790, 0.646]], [0.773, [0.474, 0.790, 0.646]], [0.775, [0.464, 0.786, 0.646]], [0.777, [0.464, 0.786, 0.646]], [0.779, [0.453, 0.782, 0.646]], [0.781, [0.453, 0.782, 0.646]], [0.783, [0.442, 0.777, 0.646]], [0.785, [0.442, 0.777, 0.646]], [0.787, [0.432, 0.773, 0.647]], [0.789, [0.432, 0.773, 0.647]], [0.791, [0.421, 0.769, 0.647]], [0.793, [0.421, 0.769, 0.647]], [0.795, [0.411, 0.765, 0.647]], [0.796, [0.411, 0.765, 0.647]], [0.798, [0.400, 0.761, 0.647]], [0.800, [0.400, 0.761, 0.647]], [0.802, [0.392, 0.752, 0.651]], [0.804, [0.392, 0.752, 0.651]], [0.806, [0.384, 0.743, 0.654]], [0.808, [0.384, 0.743, 0.654]], [0.810, [0.376, 0.734, 0.658]], [0.812, [0.376, 0.734, 0.658]], [0.814, [0.368, 0.725, 0.662]], [0.816, [0.368, 0.725, 0.662]], [0.818, [0.360, 0.716, 0.666]], [0.820, [0.360, 0.716, 0.666]], [0.822, [0.352, 0.707, 0.669]], [0.824, [0.352, 0.707, 0.669]], [0.826, [0.344, 0.698, 0.673]], [0.828, [0.344, 0.698, 0.673]], [0.830, [0.336, 0.689, 0.677]], [0.832, [0.336, 0.689, 0.677]], [0.834, [0.328, 0.681, 0.680]], [0.836, [0.328, 0.681, 0.680]], [0.838, [0.320, 0.672, 0.684]], [0.840, [0.320, 0.672, 0.684]], [0.841, [0.312, 0.663, 0.688]], [0.843, [0.312, 0.663, 0.688]], [0.845, [0.304, 0.654, 0.691]], [0.847, [0.304, 0.654, 0.691]], [0.849, [0.296, 0.645, 0.695]], [0.851, [0.296, 0.645, 0.695]], [0.853, [0.288, 0.636, 0.699]], [0.855, [0.288, 0.636, 0.699]], [0.857, [0.280, 0.627, 0.702]], [0.859, [0.280, 0.627, 0.702]], [0.861, [0.272, 0.618, 0.706]], [0.863, [0.272, 0.618, 0.706]], [0.865, [0.264, 0.609, 0.710]], [0.867, [0.264, 0.609, 0.710]], [0.869, [0.256, 0.600, 0.713]], [0.871, [0.256, 0.600, 0.713]], [0.873, [0.248, 0.591, 0.717]], [0.875, [0.248, 0.591, 0.717]], [0.877, [0.240, 0.582, 0.721]], [0.879, [0.240, 0.582, 0.721]], [0.881, [0.232, 0.573, 0.725]], [0.883, [0.232, 0.573, 0.725]], [0.885, [0.224, 0.565, 0.728]], [0.886, [0.224, 0.565, 0.728]], [0.888, [0.216, 0.556, 0.732]], [0.890, [0.216, 0.556, 0.732]], [0.892, [0.208, 0.547, 0.736]], [0.894, [0.208, 0.547, 0.736]], [0.896, [0.200, 0.538, 0.739]], [0.898, [0.200, 0.538, 0.739]], [0.900, [0.199, 0.529, 0.739]], [0.902, [0.199, 0.529, 0.739]], [0.904, [0.206, 0.520, 0.735]], [0.906, [0.206, 0.520, 0.735]], [0.908, [0.213, 0.511, 0.731]], [0.910, [0.213, 0.511, 0.731]], [0.912, [0.220, 0.503, 0.727]], [0.914, [0.220, 0.503, 0.727]], [0.916, [0.227, 0.494, 0.722]], [0.918, [0.227, 0.494, 0.722]], [0.920, [0.233, 0.485, 0.718]], [0.922, [0.233, 0.485, 0.718]], [0.924, [0.240, 0.476, 0.714]], [0.926, [0.240, 0.476, 0.714]], [0.928, [0.247, 0.468, 0.710]], [0.930, [0.247, 0.468, 0.710]], [0.932, [0.254, 0.459, 0.706]], [0.933, [0.254, 0.459, 0.706]], [0.935, [0.260, 0.450, 0.702]], [0.937, [0.260, 0.450, 0.702]], [0.939, [0.267, 0.441, 0.698]], [0.941, [0.267, 0.441, 0.698]], [0.943, [0.274, 0.433, 0.693]], [0.945, [0.274, 0.433, 0.693]], [0.947, [0.281, 0.424, 0.689]], [0.949, [0.281, 0.424, 0.689]], [0.951, [0.287, 0.415, 0.685]], [0.953, [0.287, 0.415, 0.685]], [0.955, [0.294, 0.406, 0.681]], [0.957, [0.294, 0.406, 0.681]], [0.959, [0.301, 0.397, 0.677]], [0.961, [0.301, 0.397, 0.677]], [0.963, [0.308, 0.389, 0.673]], [0.965, [0.308, 0.389, 0.673]], [0.967, [0.314, 0.380, 0.669]], [0.969, [0.314, 0.380, 0.669]], [0.971, [0.321, 0.371, 0.664]], [0.973, [0.321, 0.371, 0.664]], [0.975, [0.328, 0.362, 0.660]], [0.977, [0.328, 0.362, 0.660]], [0.978, [0.335, 0.354, 0.656]], [0.980, [0.335, 0.354, 0.656]], [0.982, [0.342, 0.345, 0.652]], [0.984, [0.342, 0.345, 0.652]], [0.986, [0.348, 0.336, 0.648]], [0.988, [0.348, 0.336, 0.648]], [0.990, [0.355, 0.327, 0.644]], [0.992, [0.355, 0.327, 0.644]], [0.994, [0.362, 0.319, 0.639]], [0.996, [0.362, 0.319, 0.639]], [0.998, [0.369, 0.310, 0.635]], [1.000, [0.369, 0.310, 0.635]]];
H.colormap_speed = [[0.000,[0.99962532,0.99137112,0.80410124]],[0.004,[0.99693130,0.98658659,0.79581965]],[0.008,[0.99425336,0.98181358,0.78753178]],[0.012,[0.99158968,0.97705259,0.77923744]],[0.016,[0.98893848,0.97230412,0.77093649]],[0.020,[0.98629803,0.96756863,0.76262887]],[0.024,[0.98366662,0.96284660,0.75431452]],[0.027,[0.98104259,0.95813849,0.74599345]],[0.031,[0.97842373,0.95344486,0.73766705]],[0.035,[0.97580917,0.94876601,0.72933356]],[0.039,[0.97319768,0.94410230,0.72099216]],[0.043,[0.97058766,0.93945419,0.71264291]],[0.047,[0.96797753,0.93482212,0.70428588]],[0.051,[0.96536576,0.93020653,0.69592114]],[0.055,[0.96275088,0.92560786,0.68754852]],[0.059,[0.96013179,0.92102646,0.67916692]],[0.063,[0.95750683,0.91646282,0.67077672]],[0.067,[0.95487445,0.91191742,0.66237802]],[0.071,[0.95223308,0.90739072,0.65397092]],[0.075,[0.94958118,0.90288322,0.64555550]],[0.078,[0.94691718,0.89839541,0.63713184]],[0.082,[0.94424022,0.89392765,0.62869796]],[0.086,[0.94154864,0.88948047,0.62025400]],[0.090,[0.93884038,0.88505451,0.61180142]],[0.094,[0.93611377,0.88065031,0.60334038]],[0.098,[0.93336714,0.87626844,0.59487104]],[0.102,[0.93059881,0.87190949,0.58639360]],[0.106,[0.92780705,0.86757406,0.57790823]],[0.110,[0.92499010,0.86326276,0.56941517]],[0.114,[0.92214698,0.85897609,0.56091165]],[0.118,[0.91927530,0.85471481,0.55239974]],[0.122,[0.91637286,0.85047967,0.54388105]],[0.125,[0.91343769,0.84627138,0.53535605]],[0.129,[0.91046780,0.84209066,0.52682531]],[0.133,[0.90746117,0.83793825,0.51828947]],[0.137,[0.90441569,0.83381493,0.50974926]],[0.141,[0.90132924,0.82972148,0.50120551]],[0.145,[0.89819963,0.82565871,0.49265916]],[0.149,[0.89502462,0.82162744,0.48411130]],[0.153,[0.89180194,0.81762851,0.47556314]],[0.157,[0.88852927,0.81366275,0.46701603]],[0.161,[0.88520428,0.80973103,0.45847151]],[0.165,[0.88182459,0.80583419,0.44993127]],[0.169,[0.87838781,0.80197310,0.44139720]],[0.173,[0.87489155,0.79814860,0.43287135]],[0.176,[0.87133343,0.79436152,0.42435598]],[0.180,[0.86771108,0.79061266,0.41585355]],[0.184,[0.86402220,0.78690280,0.40736670]],[0.188,[0.86026452,0.78323268,0.39889826]],[0.192,[0.85643585,0.77960299,0.39045126]],[0.196,[0.85253410,0.77601436,0.38202889]],[0.200,[0.84855731,0.77246735,0.37363449]],[0.204,[0.84450364,0.76896245,0.36527157]],[0.208,[0.84037142,0.76550008,0.35694373]],[0.212,[0.83615916,0.76208053,0.34865469]],[0.216,[0.83186554,0.75870402,0.34040823]],[0.220,[0.82748950,0.75537065,0.33220817]],[0.224,[0.82303017,0.75208041,0.32405836]],[0.227,[0.81848682,0.74883326,0.31596178]],[0.231,[0.81385901,0.74562899,0.30792214]],[0.235,[0.80914682,0.74246709,0.29994435]],[0.239,[0.80435041,0.73934706,0.29203197]],[0.243,[0.79947022,0.73626828,0.28418840]],[0.247,[0.79450691,0.73323004,0.27641686]],[0.251,[0.78946140,0.73023149,0.26872033]],[0.255,[0.78433484,0.72727172,0.26110160]],[0.259,[0.77912853,0.72434970,0.25356307]],[0.263,[0.77384408,0.72146431,0.24610720]],[0.267,[0.76848332,0.71861432,0.23873620]],[0.271,[0.76304813,0.71579850,0.23145177]],[0.275,[0.75754052,0.71301555,0.22425532]],[0.278,[0.75196261,0.71026417,0.21714799]],[0.282,[0.74631660,0.70754299,0.21013070]],[0.286,[0.74060474,0.70485066,0.20320411]],[0.290,[0.73482974,0.70218562,0.19636930]],[0.294,[0.72899368,0.69954660,0.18962605]],[0.298,[0.72309885,0.69693228,0.18297431]],[0.302,[0.71714753,0.69434130,0.17641399]],[0.306,[0.71114201,0.69177235,0.16994487]],[0.310,[0.70508453,0.68922412,0.16356662]],[0.314,[0.69897728,0.68669535,0.15727889]],[0.318,[0.69282238,0.68418481,0.15108128]],[0.322,[0.68662205,0.68169124,0.14497353]],[0.325,[0.68037867,0.67921331,0.13895556]],[0.329,[0.67409362,0.67675013,0.13302663]],[0.333,[0.66776872,0.67430062,0.12718656]],[0.337,[0.66140573,0.67186375,0.12143540]],[0.341,[0.65500629,0.66943851,0.11577336]],[0.345,[0.64857199,0.66702394,0.11020095]],[0.349,[0.64210433,0.66461911,0.10471901]],[0.353,[0.63560473,0.66222315,0.09932877]],[0.357,[0.62907452,0.65983518,0.09403193]],[0.361,[0.62251497,0.65745441,0.08883077]],[0.365,[0.61592727,0.65508003,0.08372822]],[0.369,[0.60931267,0.65271125,0.07872800]],[0.373,[0.60267232,0.65034731,0.07383470]],[0.376,[0.59600693,0.64798759,0.06905401]],[0.380,[0.58931743,0.64563142,0.06439288]],[0.384,[0.58260468,0.64327815,0.05985969]],[0.388,[0.57586950,0.64092715,0.05546448]],[0.392,[0.56911267,0.63857780,0.05121917]],[0.396,[0.56233489,0.63622950,0.04713774]],[0.400,[0.55553684,0.63388168,0.04323651]],[0.404,[0.54871918,0.63153377,0.03952488]],[0.408,[0.54188249,0.62918522,0.03612051]],[0.412,[0.53502735,0.62683550,0.03311400]],[0.416,[0.52815431,0.62448406,0.03049096]],[0.420,[0.52126388,0.62213041,0.02823776]],[0.424,[0.51435656,0.61977401,0.02634145]],[0.427,[0.50743284,0.61741438,0.02478977]],[0.431,[0.50049318,0.61505101,0.02357107]],[0.435,[0.49353805,0.61268341,0.02267429]],[0.439,[0.48656773,0.61031113,0.02208919]],[0.443,[0.47958278,0.60793365,0.02180565]],[0.447,[0.47258366,0.60555050,0.02181419]],[0.451,[0.46557081,0.60316118,0.02210580]],[0.455,[0.45854471,0.60076521,0.02267188]],[0.459,[0.45150585,0.59836210,0.02350422]],[0.463,[0.44445471,0.59595137,0.02459500]],[0.467,[0.43739183,0.59353253,0.02593670]],[0.471,[0.43031775,0.59110510,0.02752213]],[0.475,[0.42323306,0.58866858,0.02934437]],[0.478,[0.41613836,0.58622247,0.03139676]],[0.482,[0.40903431,0.58376629,0.03367283]],[0.486,[0.40192160,0.58129953,0.03616635]],[0.490,[0.39480098,0.57882170,0.03887120]],[0.494,[0.38767326,0.57633228,0.04174672]],[0.498,[0.38053866,0.57383092,0.04468567]],[0.502,[0.37339864,0.57131697,0.04768050]],[0.506,[0.36625424,0.56878993,0.05071836]],[0.510,[0.35910650,0.56624928,0.05378828]],[0.514,[0.35195658,0.56369452,0.05688086]],[0.518,[0.34480568,0.56112513,0.05998797]],[0.522,[0.33765509,0.55854062,0.06310264]],[0.525,[0.33050620,0.55594049,0.06621880]],[0.529,[0.32336047,0.55332424,0.06933118]],[0.533,[0.31621948,0.55069139,0.07243519]],[0.537,[0.30908460,0.54804150,0.07552722]],[0.541,[0.30195743,0.54537413,0.07860394]],[0.545,[0.29484032,0.54268874,0.08166129]],[0.549,[0.28773525,0.53998488,0.08469633]],[0.553,[0.28064430,0.53726212,0.08770643]],[0.557,[0.27356965,0.53452006,0.09068917]],[0.561,[0.26651361,0.53175830,0.09364228]],[0.565,[0.25947856,0.52897647,0.09656369]],[0.569,[0.25246703,0.52617424,0.09945144]],[0.573,[0.24548136,0.52335131,0.10230412]],[0.576,[0.23852458,0.52050736,0.10511948]],[0.580,[0.23159967,0.51764210,0.10789570]],[0.584,[0.22470961,0.51475531,0.11063114]],[0.588,[0.21785748,0.51184679,0.11332427]],[0.592,[0.21104652,0.50891636,0.11597358]],[0.596,[0.20428009,0.50596389,0.11857764]],[0.600,[0.19756167,0.50298929,0.12113505]],[0.604,[0.19089503,0.49999248,0.12364426]],[0.608,[0.18428396,0.49697343,0.12610400]],[0.612,[0.17773240,0.49393216,0.12851305]],[0.616,[0.17124448,0.49086871,0.13087024]],[0.620,[0.16482456,0.48778316,0.13317442]],[0.624,[0.15847719,0.48467561,0.13542453]],[0.627,[0.15220721,0.48154623,0.13761954]],[0.631,[0.14601973,0.47839518,0.13975846]],[0.635,[0.13992049,0.47522266,0.14183978]],[0.639,[0.13391510,0.47202893,0.14386292]],[0.643,[0.12800964,0.46881425,0.14582732]],[0.647,[0.12221076,0.46557892,0.14773227]],[0.651,[0.11652565,0.46232325,0.14957707]],[0.655,[0.11096207,0.45904759,0.15136111]],[0.659,[0.10552844,0.45575227,0.15308384]],[0.663,[0.10023389,0.45243770,0.15474474]],[0.667,[0.09508832,0.44910425,0.15634337]],[0.671,[0.09010251,0.44575233,0.15787909]],[0.675,[0.08528802,0.44238240,0.15935107]],[0.678,[0.08065728,0.43899485,0.16075975]],[0.682,[0.07622371,0.43559013,0.16210488]],[0.686,[0.07200158,0.43216868,0.16338628]],[0.690,[0.06800589,0.42873094,0.16460379]],[0.694,[0.06425218,0.42527736,0.16575730]],[0.698,[0.06075626,0.42180841,0.16684671]],[0.702,[0.05753382,0.41832454,0.16787201]],[0.706,[0.05459993,0.41482619,0.16883316]],[0.710,[0.05196846,0.41131384,0.16973019]],[0.714,[0.04965139,0.40778792,0.17056314]],[0.718,[0.04765813,0.40424888,0.17133208]],[0.722,[0.04599481,0.40069717,0.17203710]],[0.725,[0.04466372,0.39713324,0.17267831]],[0.729,[0.04366274,0.39355751,0.17325577]],[0.733,[0.04298497,0.38997047,0.17376937]],[0.737,[0.04262018,0.38637248,0.17421963]],[0.741,[0.04255352,0.38276397,0.17460669]],[0.745,[0.04276673,0.37914535,0.17493074]],[0.749,[0.04323878,0.37551702,0.17519196]],[0.753,[0.04394675,0.37187939,0.17539051]],[0.757,[0.04486662,0.36823283,0.17552659]],[0.761,[0.04597406,0.36457776,0.17560040]],[0.765,[0.04724506,0.36091453,0.17561211]],[0.769,[0.04865644,0.35724353,0.17556193]],[0.773,[0.05018627,0.35356513,0.17545005]],[0.776,[0.05181408,0.34987969,0.17527666]],[0.780,[0.05352104,0.34618758,0.17504196]],[0.784,[0.05528998,0.34248913,0.17474614]],[0.788,[0.05710539,0.33878471,0.17438940]],[0.792,[0.05895335,0.33507466,0.17397193]],[0.796,[0.06082143,0.33135932,0.17349393]],[0.800,[0.06269859,0.32763902,0.17295560]],[0.804,[0.06457505,0.32391411,0.17235714]],[0.808,[0.06644218,0.32018490,0.17169874]],[0.812,[0.06829236,0.31645172,0.17098061]],[0.816,[0.07011887,0.31271491,0.17020297]],[0.820,[0.07191583,0.30897477,0.16936603]],[0.824,[0.07367740,0.30523170,0.16846982]],[0.827,[0.07539909,0.30148601,0.16751459]],[0.831,[0.07707731,0.29773796,0.16650073]],[0.835,[0.07870853,0.29398786,0.16542850]],[0.839,[0.08028966,0.29023603,0.16429815]],[0.843,[0.08181798,0.28648275,0.16310997]],[0.847,[0.08329110,0.28272833,0.16186426]],[0.851,[0.08470696,0.27897306,0.16056134]],[0.855,[0.08606372,0.27521722,0.15920155]],[0.859,[0.08735983,0.27146109,0.15778524]],[0.863,[0.08859393,0.26770495,0.15631280]],[0.867,[0.08976486,0.26394904,0.15478462]],[0.871,[0.09087165,0.26019363,0.15320113]],[0.875,[0.09191348,0.25643894,0.15156278]],[0.878,[0.09288704,0.25268563,0.14986937]],[0.882,[0.09379283,0.24893377,0.14812169]],[0.886,[0.09463164,0.24518338,0.14632057]],[0.890,[0.09540319,0.24143464,0.14446653]],[0.894,[0.09610733,0.23768772,0.14256015]],[0.898,[0.09674403,0.23394277,0.14060198]],[0.902,[0.09731337,0.23019990,0.13859263]],[0.906,[0.09781527,0.22645927,0.13653262]],[0.910,[0.09824359,0.22272214,0.13442135]],[0.914,[0.09860476,0.21898749,0.13226069]],[0.918,[0.09889926,0.21525533,0.13005125]],[0.922,[0.09912769,0.21152567,0.12779367]],[0.925,[0.09929071,0.20779846,0.12548854]],[0.929,[0.09938537,0.20407438,0.12313591]],[0.933,[0.09940988,0.20035390,0.12073611]],[0.937,[0.09937074,0.19663577,0.11829057]],[0.941,[0.09926900,0.19291982,0.11579981]],[0.945,[0.09910575,0.18920581,0.11326433]],[0.949,[0.09887273,0.18549555,0.11068374]],[0.953,[0.09857703,0.18178753,0.10805922]],[0.957,[0.09822270,0.17808082,0.10539142]],[0.961,[0.09781114,0.17437504,0.10268064]],[0.965,[0.09733238,0.17067237,0.09992671]],[0.969,[0.09679537,0.16697070,0.09713043]],[0.973,[0.09620477,0.16326879,0.09429209]],[0.976,[0.09555840,0.15956697,0.09141177]],[0.980,[0.09484852,0.15586693,0.08848984]],[0.984,[0.09408911,0.15216506,0.08552629]],[0.988,[0.09328192,0.14846061,0.08252095]],[0.992,[0.09241015,0.14475747,0.07947497]],[0.996,[0.09149314,0.14105046,0.07638733]],[1.000,[0.09053276,0.13733861,0.07325761]]]
H.colormap_spring = [[0.000, [1.000, 0.000, 1.000]], [0.002, [1.000, 0.000, 1.000]], [0.004, [1.000, 0.004, 0.996]], [0.006, [1.000, 0.004, 0.996]], [0.008, [1.000, 0.008, 0.992]], [0.010, [1.000, 0.008, 0.992]], [0.012, [1.000, 0.012, 0.988]], [0.014, [1.000, 0.012, 0.988]], [0.016, [1.000, 0.016, 0.984]], [0.018, [1.000, 0.016, 0.984]], [0.020, [1.000, 0.020, 0.980]], [0.022, [1.000, 0.020, 0.980]], [0.023, [1.000, 0.024, 0.976]], [0.025, [1.000, 0.024, 0.976]], [0.027, [1.000, 0.027, 0.973]], [0.029, [1.000, 0.027, 0.973]], [0.031, [1.000, 0.031, 0.969]], [0.033, [1.000, 0.031, 0.969]], [0.035, [1.000, 0.035, 0.965]], [0.037, [1.000, 0.035, 0.965]], [0.039, [1.000, 0.039, 0.961]], [0.041, [1.000, 0.039, 0.961]], [0.043, [1.000, 0.043, 0.957]], [0.045, [1.000, 0.043, 0.957]], [0.047, [1.000, 0.047, 0.953]], [0.049, [1.000, 0.047, 0.953]], [0.051, [1.000, 0.051, 0.949]], [0.053, [1.000, 0.051, 0.949]], [0.055, [1.000, 0.055, 0.945]], [0.057, [1.000, 0.055, 0.945]], [0.059, [1.000, 0.059, 0.941]], [0.061, [1.000, 0.059, 0.941]], [0.063, [1.000, 0.063, 0.937]], [0.065, [1.000, 0.063, 0.937]], [0.067, [1.000, 0.067, 0.933]], [0.068, [1.000, 0.067, 0.933]], [0.070, [1.000, 0.071, 0.929]], [0.072, [1.000, 0.071, 0.929]], [0.074, [1.000, 0.075, 0.925]], [0.076, [1.000, 0.075, 0.925]], [0.078, [1.000, 0.078, 0.922]], [0.080, [1.000, 0.078, 0.922]], [0.082, [1.000, 0.082, 0.918]], [0.084, [1.000, 0.082, 0.918]], [0.086, [1.000, 0.086, 0.914]], [0.088, [1.000, 0.086, 0.914]], [0.090, [1.000, 0.090, 0.910]], [0.092, [1.000, 0.090, 0.910]], [0.094, [1.000, 0.094, 0.906]], [0.096, [1.000, 0.094, 0.906]], [0.098, [1.000, 0.098, 0.902]], [0.100, [1.000, 0.098, 0.902]], [0.102, [1.000, 0.102, 0.898]], [0.104, [1.000, 0.102, 0.898]], [0.106, [1.000, 0.106, 0.894]], [0.108, [1.000, 0.106, 0.894]], [0.110, [1.000, 0.110, 0.890]], [0.112, [1.000, 0.110, 0.890]], [0.114, [1.000, 0.114, 0.886]], [0.115, [1.000, 0.114, 0.886]], [0.117, [1.000, 0.118, 0.882]], [0.119, [1.000, 0.118, 0.882]], [0.121, [1.000, 0.122, 0.878]], [0.123, [1.000, 0.122, 0.878]], [0.125, [1.000, 0.125, 0.875]], [0.127, [1.000, 0.125, 0.875]], [0.129, [1.000, 0.129, 0.871]], [0.131, [1.000, 0.129, 0.871]], [0.133, [1.000, 0.133, 0.867]], [0.135, [1.000, 0.133, 0.867]], [0.137, [1.000, 0.137, 0.863]], [0.139, [1.000, 0.137, 0.863]], [0.141, [1.000, 0.141, 0.859]], [0.143, [1.000, 0.141, 0.859]], [0.145, [1.000, 0.145, 0.855]], [0.147, [1.000, 0.145, 0.855]], [0.149, [1.000, 0.149, 0.851]], [0.151, [1.000, 0.149, 0.851]], [0.153, [1.000, 0.153, 0.847]], [0.155, [1.000, 0.153, 0.847]], [0.157, [1.000, 0.157, 0.843]], [0.159, [1.000, 0.157, 0.843]], [0.160, [1.000, 0.161, 0.839]], [0.162, [1.000, 0.161, 0.839]], [0.164, [1.000, 0.165, 0.835]], [0.166, [1.000, 0.165, 0.835]], [0.168, [1.000, 0.169, 0.831]], [0.170, [1.000, 0.169, 0.831]], [0.172, [1.000, 0.173, 0.827]], [0.174, [1.000, 0.173, 0.827]], [0.176, [1.000, 0.176, 0.824]], [0.178, [1.000, 0.176, 0.824]], [0.180, [1.000, 0.180, 0.820]], [0.182, [1.000, 0.180, 0.820]], [0.184, [1.000, 0.184, 0.816]], [0.186, [1.000, 0.184, 0.816]], [0.188, [1.000, 0.188, 0.812]], [0.190, [1.000, 0.188, 0.812]], [0.192, [1.000, 0.192, 0.808]], [0.194, [1.000, 0.192, 0.808]], [0.196, [1.000, 0.196, 0.804]], [0.198, [1.000, 0.196, 0.804]], [0.200, [1.000, 0.200, 0.800]], [0.202, [1.000, 0.200, 0.800]], [0.204, [1.000, 0.204, 0.796]], [0.205, [1.000, 0.204, 0.796]], [0.207, [1.000, 0.208, 0.792]], [0.209, [1.000, 0.208, 0.792]], [0.211, [1.000, 0.212, 0.788]], [0.213, [1.000, 0.212, 0.788]], [0.215, [1.000, 0.216, 0.784]], [0.217, [1.000, 0.216, 0.784]], [0.219, [1.000, 0.220, 0.780]], [0.221, [1.000, 0.220, 0.780]], [0.223, [1.000, 0.224, 0.776]], [0.225, [1.000, 0.224, 0.776]], [0.227, [1.000, 0.227, 0.773]], [0.229, [1.000, 0.227, 0.773]], [0.231, [1.000, 0.231, 0.769]], [0.233, [1.000, 0.231, 0.769]], [0.235, [1.000, 0.235, 0.765]], [0.237, [1.000, 0.235, 0.765]], [0.239, [1.000, 0.239, 0.761]], [0.241, [1.000, 0.239, 0.761]], [0.243, [1.000, 0.243, 0.757]], [0.245, [1.000, 0.243, 0.757]], [0.247, [1.000, 0.247, 0.753]], [0.249, [1.000, 0.247, 0.753]], [0.250, [1.000, 0.251, 0.749]], [0.252, [1.000, 0.251, 0.749]], [0.254, [1.000, 0.255, 0.745]], [0.256, [1.000, 0.255, 0.745]], [0.258, [1.000, 0.259, 0.741]], [0.260, [1.000, 0.259, 0.741]], [0.262, [1.000, 0.263, 0.737]], [0.264, [1.000, 0.263, 0.737]], [0.266, [1.000, 0.267, 0.733]], [0.268, [1.000, 0.267, 0.733]], [0.270, [1.000, 0.271, 0.729]], [0.272, [1.000, 0.271, 0.729]], [0.274, [1.000, 0.275, 0.725]], [0.276, [1.000, 0.275, 0.725]], [0.278, [1.000, 0.278, 0.722]], [0.280, [1.000, 0.278, 0.722]], [0.282, [1.000, 0.282, 0.718]], [0.284, [1.000, 0.282, 0.718]], [0.286, [1.000, 0.286, 0.714]], [0.288, [1.000, 0.286, 0.714]], [0.290, [1.000, 0.290, 0.710]], [0.292, [1.000, 0.290, 0.710]], [0.294, [1.000, 0.294, 0.706]], [0.295, [1.000, 0.294, 0.706]], [0.297, [1.000, 0.298, 0.702]], [0.299, [1.000, 0.298, 0.702]], [0.301, [1.000, 0.302, 0.698]], [0.303, [1.000, 0.302, 0.698]], [0.305, [1.000, 0.306, 0.694]], [0.307, [1.000, 0.306, 0.694]], [0.309, [1.000, 0.310, 0.690]], [0.311, [1.000, 0.310, 0.690]], [0.313, [1.000, 0.314, 0.686]], [0.315, [1.000, 0.314, 0.686]], [0.317, [1.000, 0.318, 0.682]], [0.319, [1.000, 0.318, 0.682]], [0.321, [1.000, 0.322, 0.678]], [0.323, [1.000, 0.322, 0.678]], [0.325, [1.000, 0.325, 0.675]], [0.327, [1.000, 0.325, 0.675]], [0.329, [1.000, 0.329, 0.671]], [0.331, [1.000, 0.329, 0.671]], [0.333, [1.000, 0.333, 0.667]], [0.335, [1.000, 0.333, 0.667]], [0.337, [1.000, 0.337, 0.663]], [0.339, [1.000, 0.337, 0.663]], [0.341, [1.000, 0.341, 0.659]], [0.342, [1.000, 0.341, 0.659]], [0.344, [1.000, 0.345, 0.655]], [0.346, [1.000, 0.345, 0.655]], [0.348, [1.000, 0.349, 0.651]], [0.350, [1.000, 0.349, 0.651]], [0.352, [1.000, 0.353, 0.647]], [0.354, [1.000, 0.353, 0.647]], [0.356, [1.000, 0.357, 0.643]], [0.358, [1.000, 0.357, 0.643]], [0.360, [1.000, 0.361, 0.639]], [0.362, [1.000, 0.361, 0.639]], [0.364, [1.000, 0.365, 0.635]], [0.366, [1.000, 0.365, 0.635]], [0.368, [1.000, 0.369, 0.631]], [0.370, [1.000, 0.369, 0.631]], [0.372, [1.000, 0.373, 0.627]], [0.374, [1.000, 0.373, 0.627]], [0.376, [1.000, 0.376, 0.624]], [0.378, [1.000, 0.376, 0.624]], [0.380, [1.000, 0.380, 0.620]], [0.382, [1.000, 0.380, 0.620]], [0.384, [1.000, 0.384, 0.616]], [0.386, [1.000, 0.384, 0.616]], [0.387, [1.000, 0.388, 0.612]], [0.389, [1.000, 0.388, 0.612]], [0.391, [1.000, 0.392, 0.608]], [0.393, [1.000, 0.392, 0.608]], [0.395, [1.000, 0.396, 0.604]], [0.397, [1.000, 0.396, 0.604]], [0.399, [1.000, 0.400, 0.600]], [0.401, [1.000, 0.400, 0.600]], [0.403, [1.000, 0.404, 0.596]], [0.405, [1.000, 0.404, 0.596]], [0.407, [1.000, 0.408, 0.592]], [0.409, [1.000, 0.408, 0.592]], [0.411, [1.000, 0.412, 0.588]], [0.413, [1.000, 0.412, 0.588]], [0.415, [1.000, 0.416, 0.584]], [0.417, [1.000, 0.416, 0.584]], [0.419, [1.000, 0.420, 0.580]], [0.421, [1.000, 0.420, 0.580]], [0.423, [1.000, 0.424, 0.576]], [0.425, [1.000, 0.424, 0.576]], [0.427, [1.000, 0.427, 0.573]], [0.429, [1.000, 0.427, 0.573]], [0.431, [1.000, 0.431, 0.569]], [0.432, [1.000, 0.431, 0.569]], [0.434, [1.000, 0.435, 0.565]], [0.436, [1.000, 0.435, 0.565]], [0.438, [1.000, 0.439, 0.561]], [0.440, [1.000, 0.439, 0.561]], [0.442, [1.000, 0.443, 0.557]], [0.444, [1.000, 0.443, 0.557]], [0.446, [1.000, 0.447, 0.553]], [0.448, [1.000, 0.447, 0.553]], [0.450, [1.000, 0.451, 0.549]], [0.452, [1.000, 0.451, 0.549]], [0.454, [1.000, 0.455, 0.545]], [0.456, [1.000, 0.455, 0.545]], [0.458, [1.000, 0.459, 0.541]], [0.460, [1.000, 0.459, 0.541]], [0.462, [1.000, 0.463, 0.537]], [0.464, [1.000, 0.463, 0.537]], [0.466, [1.000, 0.467, 0.533]], [0.468, [1.000, 0.467, 0.533]], [0.470, [1.000, 0.471, 0.529]], [0.472, [1.000, 0.471, 0.529]], [0.474, [1.000, 0.475, 0.525]], [0.476, [1.000, 0.475, 0.525]], [0.477, [1.000, 0.478, 0.522]], [0.479, [1.000, 0.478, 0.522]], [0.481, [1.000, 0.482, 0.518]], [0.483, [1.000, 0.482, 0.518]], [0.485, [1.000, 0.486, 0.514]], [0.487, [1.000, 0.486, 0.514]], [0.489, [1.000, 0.490, 0.510]], [0.491, [1.000, 0.490, 0.510]], [0.493, [1.000, 0.494, 0.506]], [0.495, [1.000, 0.494, 0.506]], [0.497, [1.000, 0.498, 0.502]], [0.499, [1.000, 0.498, 0.502]], [0.501, [1.000, 0.502, 0.498]], [0.503, [1.000, 0.502, 0.498]], [0.505, [1.000, 0.506, 0.494]], [0.507, [1.000, 0.506, 0.494]], [0.509, [1.000, 0.510, 0.490]], [0.511, [1.000, 0.510, 0.490]], [0.513, [1.000, 0.514, 0.486]], [0.515, [1.000, 0.514, 0.486]], [0.517, [1.000, 0.518, 0.482]], [0.519, [1.000, 0.518, 0.482]], [0.521, [1.000, 0.522, 0.478]], [0.523, [1.000, 0.522, 0.478]], [0.524, [1.000, 0.525, 0.475]], [0.526, [1.000, 0.525, 0.475]], [0.528, [1.000, 0.529, 0.471]], [0.530, [1.000, 0.529, 0.471]], [0.532, [1.000, 0.533, 0.467]], [0.534, [1.000, 0.533, 0.467]], [0.536, [1.000, 0.537, 0.463]], [0.538, [1.000, 0.537, 0.463]], [0.540, [1.000, 0.541, 0.459]], [0.542, [1.000, 0.541, 0.459]], [0.544, [1.000, 0.545, 0.455]], [0.546, [1.000, 0.545, 0.455]], [0.548, [1.000, 0.549, 0.451]], [0.550, [1.000, 0.549, 0.451]], [0.552, [1.000, 0.553, 0.447]], [0.554, [1.000, 0.553, 0.447]], [0.556, [1.000, 0.557, 0.443]], [0.558, [1.000, 0.557, 0.443]], [0.560, [1.000, 0.561, 0.439]], [0.562, [1.000, 0.561, 0.439]], [0.564, [1.000, 0.565, 0.435]], [0.566, [1.000, 0.565, 0.435]], [0.568, [1.000, 0.569, 0.431]], [0.569, [1.000, 0.569, 0.431]], [0.571, [1.000, 0.573, 0.427]], [0.573, [1.000, 0.573, 0.427]], [0.575, [1.000, 0.576, 0.424]], [0.577, [1.000, 0.576, 0.424]], [0.579, [1.000, 0.580, 0.420]], [0.581, [1.000, 0.580, 0.420]], [0.583, [1.000, 0.584, 0.416]], [0.585, [1.000, 0.584, 0.416]], [0.587, [1.000, 0.588, 0.412]], [0.589, [1.000, 0.588, 0.412]], [0.591, [1.000, 0.592, 0.408]], [0.593, [1.000, 0.592, 0.408]], [0.595, [1.000, 0.596, 0.404]], [0.597, [1.000, 0.596, 0.404]], [0.599, [1.000, 0.600, 0.400]], [0.601, [1.000, 0.600, 0.400]], [0.603, [1.000, 0.604, 0.396]], [0.605, [1.000, 0.604, 0.396]], [0.607, [1.000, 0.608, 0.392]], [0.609, [1.000, 0.608, 0.392]], [0.611, [1.000, 0.612, 0.388]], [0.613, [1.000, 0.612, 0.388]], [0.614, [1.000, 0.616, 0.384]], [0.616, [1.000, 0.616, 0.384]], [0.618, [1.000, 0.620, 0.380]], [0.620, [1.000, 0.620, 0.380]], [0.622, [1.000, 0.624, 0.376]], [0.624, [1.000, 0.624, 0.376]], [0.626, [1.000, 0.627, 0.373]], [0.628, [1.000, 0.627, 0.373]], [0.630, [1.000, 0.631, 0.369]], [0.632, [1.000, 0.631, 0.369]], [0.634, [1.000, 0.635, 0.365]], [0.636, [1.000, 0.635, 0.365]], [0.638, [1.000, 0.639, 0.361]], [0.640, [1.000, 0.639, 0.361]], [0.642, [1.000, 0.643, 0.357]], [0.644, [1.000, 0.643, 0.357]], [0.646, [1.000, 0.647, 0.353]], [0.648, [1.000, 0.647, 0.353]], [0.650, [1.000, 0.651, 0.349]], [0.652, [1.000, 0.651, 0.349]], [0.654, [1.000, 0.655, 0.345]], [0.656, [1.000, 0.655, 0.345]], [0.658, [1.000, 0.659, 0.341]], [0.659, [1.000, 0.659, 0.341]], [0.661, [1.000, 0.663, 0.337]], [0.663, [1.000, 0.663, 0.337]], [0.665, [1.000, 0.667, 0.333]], [0.667, [1.000, 0.667, 0.333]], [0.669, [1.000, 0.671, 0.329]], [0.671, [1.000, 0.671, 0.329]], [0.673, [1.000, 0.675, 0.325]], [0.675, [1.000, 0.675, 0.325]], [0.677, [1.000, 0.678, 0.322]], [0.679, [1.000, 0.678, 0.322]], [0.681, [1.000, 0.682, 0.318]], [0.683, [1.000, 0.682, 0.318]], [0.685, [1.000, 0.686, 0.314]], [0.687, [1.000, 0.686, 0.314]], [0.689, [1.000, 0.690, 0.310]], [0.691, [1.000, 0.690, 0.310]], [0.693, [1.000, 0.694, 0.306]], [0.695, [1.000, 0.694, 0.306]], [0.697, [1.000, 0.698, 0.302]], [0.699, [1.000, 0.698, 0.302]], [0.701, [1.000, 0.702, 0.298]], [0.703, [1.000, 0.702, 0.298]], [0.705, [1.000, 0.706, 0.294]], [0.706, [1.000, 0.706, 0.294]], [0.708, [1.000, 0.710, 0.290]], [0.710, [1.000, 0.710, 0.290]], [0.712, [1.000, 0.714, 0.286]], [0.714, [1.000, 0.714, 0.286]], [0.716, [1.000, 0.718, 0.282]], [0.718, [1.000, 0.718, 0.282]], [0.720, [1.000, 0.722, 0.278]], [0.722, [1.000, 0.722, 0.278]], [0.724, [1.000, 0.725, 0.275]], [0.726, [1.000, 0.725, 0.275]], [0.728, [1.000, 0.729, 0.271]], [0.730, [1.000, 0.729, 0.271]], [0.732, [1.000, 0.733, 0.267]], [0.734, [1.000, 0.733, 0.267]], [0.736, [1.000, 0.737, 0.263]], [0.738, [1.000, 0.737, 0.263]], [0.740, [1.000, 0.741, 0.259]], [0.742, [1.000, 0.741, 0.259]], [0.744, [1.000, 0.745, 0.255]], [0.746, [1.000, 0.745, 0.255]], [0.748, [1.000, 0.749, 0.251]], [0.750, [1.000, 0.749, 0.251]], [0.751, [1.000, 0.753, 0.247]], [0.753, [1.000, 0.753, 0.247]], [0.755, [1.000, 0.757, 0.243]], [0.757, [1.000, 0.757, 0.243]], [0.759, [1.000, 0.761, 0.239]], [0.761, [1.000, 0.761, 0.239]], [0.763, [1.000, 0.765, 0.235]], [0.765, [1.000, 0.765, 0.235]], [0.767, [1.000, 0.769, 0.231]], [0.769, [1.000, 0.769, 0.231]], [0.771, [1.000, 0.773, 0.227]], [0.773, [1.000, 0.773, 0.227]], [0.775, [1.000, 0.776, 0.224]], [0.777, [1.000, 0.776, 0.224]], [0.779, [1.000, 0.780, 0.220]], [0.781, [1.000, 0.780, 0.220]], [0.783, [1.000, 0.784, 0.216]], [0.785, [1.000, 0.784, 0.216]], [0.787, [1.000, 0.788, 0.212]], [0.789, [1.000, 0.788, 0.212]], [0.791, [1.000, 0.792, 0.208]], [0.793, [1.000, 0.792, 0.208]], [0.795, [1.000, 0.796, 0.204]], [0.796, [1.000, 0.796, 0.204]], [0.798, [1.000, 0.800, 0.200]], [0.800, [1.000, 0.800, 0.200]], [0.802, [1.000, 0.804, 0.196]], [0.804, [1.000, 0.804, 0.196]], [0.806, [1.000, 0.808, 0.192]], [0.808, [1.000, 0.808, 0.192]], [0.810, [1.000, 0.812, 0.188]], [0.812, [1.000, 0.812, 0.188]], [0.814, [1.000, 0.816, 0.184]], [0.816, [1.000, 0.816, 0.184]], [0.818, [1.000, 0.820, 0.180]], [0.820, [1.000, 0.820, 0.180]], [0.822, [1.000, 0.824, 0.176]], [0.824, [1.000, 0.824, 0.176]], [0.826, [1.000, 0.827, 0.173]], [0.828, [1.000, 0.827, 0.173]], [0.830, [1.000, 0.831, 0.169]], [0.832, [1.000, 0.831, 0.169]], [0.834, [1.000, 0.835, 0.165]], [0.836, [1.000, 0.835, 0.165]], [0.838, [1.000, 0.839, 0.161]], [0.840, [1.000, 0.839, 0.161]], [0.841, [1.000, 0.843, 0.157]], [0.843, [1.000, 0.843, 0.157]], [0.845, [1.000, 0.847, 0.153]], [0.847, [1.000, 0.847, 0.153]], [0.849, [1.000, 0.851, 0.149]], [0.851, [1.000, 0.851, 0.149]], [0.853, [1.000, 0.855, 0.145]], [0.855, [1.000, 0.855, 0.145]], [0.857, [1.000, 0.859, 0.141]], [0.859, [1.000, 0.859, 0.141]], [0.861, [1.000, 0.863, 0.137]], [0.863, [1.000, 0.863, 0.137]], [0.865, [1.000, 0.867, 0.133]], [0.867, [1.000, 0.867, 0.133]], [0.869, [1.000, 0.871, 0.129]], [0.871, [1.000, 0.871, 0.129]], [0.873, [1.000, 0.875, 0.125]], [0.875, [1.000, 0.875, 0.125]], [0.877, [1.000, 0.878, 0.122]], [0.879, [1.000, 0.878, 0.122]], [0.881, [1.000, 0.882, 0.118]], [0.883, [1.000, 0.882, 0.118]], [0.885, [1.000, 0.886, 0.114]], [0.886, [1.000, 0.886, 0.114]], [0.888, [1.000, 0.890, 0.110]], [0.890, [1.000, 0.890, 0.110]], [0.892, [1.000, 0.894, 0.106]], [0.894, [1.000, 0.894, 0.106]], [0.896, [1.000, 0.898, 0.102]], [0.898, [1.000, 0.898, 0.102]], [0.900, [1.000, 0.902, 0.098]], [0.902, [1.000, 0.902, 0.098]], [0.904, [1.000, 0.906, 0.094]], [0.906, [1.000, 0.906, 0.094]], [0.908, [1.000, 0.910, 0.090]], [0.910, [1.000, 0.910, 0.090]], [0.912, [1.000, 0.914, 0.086]], [0.914, [1.000, 0.914, 0.086]], [0.916, [1.000, 0.918, 0.082]], [0.918, [1.000, 0.918, 0.082]], [0.920, [1.000, 0.922, 0.078]], [0.922, [1.000, 0.922, 0.078]], [0.924, [1.000, 0.925, 0.075]], [0.926, [1.000, 0.925, 0.075]], [0.928, [1.000, 0.929, 0.071]], [0.930, [1.000, 0.929, 0.071]], [0.932, [1.000, 0.933, 0.067]], [0.933, [1.000, 0.933, 0.067]], [0.935, [1.000, 0.937, 0.063]], [0.937, [1.000, 0.937, 0.063]], [0.939, [1.000, 0.941, 0.059]], [0.941, [1.000, 0.941, 0.059]], [0.943, [1.000, 0.945, 0.055]], [0.945, [1.000, 0.945, 0.055]], [0.947, [1.000, 0.949, 0.051]], [0.949, [1.000, 0.949, 0.051]], [0.951, [1.000, 0.953, 0.047]], [0.953, [1.000, 0.953, 0.047]], [0.955, [1.000, 0.957, 0.043]], [0.957, [1.000, 0.957, 0.043]], [0.959, [1.000, 0.961, 0.039]], [0.961, [1.000, 0.961, 0.039]], [0.963, [1.000, 0.965, 0.035]], [0.965, [1.000, 0.965, 0.035]], [0.967, [1.000, 0.969, 0.031]], [0.969, [1.000, 0.969, 0.031]], [0.971, [1.000, 0.973, 0.027]], [0.973, [1.000, 0.973, 0.027]], [0.975, [1.000, 0.976, 0.024]], [0.977, [1.000, 0.976, 0.024]], [0.978, [1.000, 0.980, 0.020]], [0.980, [1.000, 0.980, 0.020]], [0.982, [1.000, 0.984, 0.016]], [0.984, [1.000, 0.984, 0.016]], [0.986, [1.000, 0.988, 0.012]], [0.988, [1.000, 0.988, 0.012]], [0.990, [1.000, 0.992, 0.008]], [0.992, [1.000, 0.992, 0.008]], [0.994, [1.000, 0.996, 0.004]], [0.996, [1.000, 0.996, 0.004]], [0.998, [1.000, 1.000, 0.000]], [1.000, [1.000, 1.000, 0.000]]];
H.colormap_summer = [[0.000, [0.000, 0.500, 0.400]], [0.002, [0.000, 0.500, 0.400]], [0.004, [0.004, 0.502, 0.400]], [0.006, [0.004, 0.502, 0.400]], [0.008, [0.008, 0.504, 0.400]], [0.010, [0.008, 0.504, 0.400]], [0.012, [0.012, 0.506, 0.400]], [0.014, [0.012, 0.506, 0.400]], [0.016, [0.016, 0.508, 0.400]], [0.018, [0.016, 0.508, 0.400]], [0.020, [0.020, 0.510, 0.400]], [0.022, [0.020, 0.510, 0.400]], [0.023, [0.024, 0.512, 0.400]], [0.025, [0.024, 0.512, 0.400]], [0.027, [0.027, 0.514, 0.400]], [0.029, [0.027, 0.514, 0.400]], [0.031, [0.031, 0.516, 0.400]], [0.033, [0.031, 0.516, 0.400]], [0.035, [0.035, 0.518, 0.400]], [0.037, [0.035, 0.518, 0.400]], [0.039, [0.039, 0.520, 0.400]], [0.041, [0.039, 0.520, 0.400]], [0.043, [0.043, 0.522, 0.400]], [0.045, [0.043, 0.522, 0.400]], [0.047, [0.047, 0.524, 0.400]], [0.049, [0.047, 0.524, 0.400]], [0.051, [0.051, 0.525, 0.400]], [0.053, [0.051, 0.525, 0.400]], [0.055, [0.055, 0.527, 0.400]], [0.057, [0.055, 0.527, 0.400]], [0.059, [0.059, 0.529, 0.400]], [0.061, [0.059, 0.529, 0.400]], [0.063, [0.063, 0.531, 0.400]], [0.065, [0.063, 0.531, 0.400]], [0.067, [0.067, 0.533, 0.400]], [0.068, [0.067, 0.533, 0.400]], [0.070, [0.071, 0.535, 0.400]], [0.072, [0.071, 0.535, 0.400]], [0.074, [0.075, 0.537, 0.400]], [0.076, [0.075, 0.537, 0.400]], [0.078, [0.078, 0.539, 0.400]], [0.080, [0.078, 0.539, 0.400]], [0.082, [0.082, 0.541, 0.400]], [0.084, [0.082, 0.541, 0.400]], [0.086, [0.086, 0.543, 0.400]], [0.088, [0.086, 0.543, 0.400]], [0.090, [0.090, 0.545, 0.400]], [0.092, [0.090, 0.545, 0.400]], [0.094, [0.094, 0.547, 0.400]], [0.096, [0.094, 0.547, 0.400]], [0.098, [0.098, 0.549, 0.400]], [0.100, [0.098, 0.549, 0.400]], [0.102, [0.102, 0.551, 0.400]], [0.104, [0.102, 0.551, 0.400]], [0.106, [0.106, 0.553, 0.400]], [0.108, [0.106, 0.553, 0.400]], [0.110, [0.110, 0.555, 0.400]], [0.112, [0.110, 0.555, 0.400]], [0.114, [0.114, 0.557, 0.400]], [0.115, [0.114, 0.557, 0.400]], [0.117, [0.118, 0.559, 0.400]], [0.119, [0.118, 0.559, 0.400]], [0.121, [0.122, 0.561, 0.400]], [0.123, [0.122, 0.561, 0.400]], [0.125, [0.125, 0.563, 0.400]], [0.127, [0.125, 0.563, 0.400]], [0.129, [0.129, 0.565, 0.400]], [0.131, [0.129, 0.565, 0.400]], [0.133, [0.133, 0.567, 0.400]], [0.135, [0.133, 0.567, 0.400]], [0.137, [0.137, 0.569, 0.400]], [0.139, [0.137, 0.569, 0.400]], [0.141, [0.141, 0.571, 0.400]], [0.143, [0.141, 0.571, 0.400]], [0.145, [0.145, 0.573, 0.400]], [0.147, [0.145, 0.573, 0.400]], [0.149, [0.149, 0.575, 0.400]], [0.151, [0.149, 0.575, 0.400]], [0.153, [0.153, 0.576, 0.400]], [0.155, [0.153, 0.576, 0.400]], [0.157, [0.157, 0.578, 0.400]], [0.159, [0.157, 0.578, 0.400]], [0.160, [0.161, 0.580, 0.400]], [0.162, [0.161, 0.580, 0.400]], [0.164, [0.165, 0.582, 0.400]], [0.166, [0.165, 0.582, 0.400]], [0.168, [0.169, 0.584, 0.400]], [0.170, [0.169, 0.584, 0.400]], [0.172, [0.173, 0.586, 0.400]], [0.174, [0.173, 0.586, 0.400]], [0.176, [0.176, 0.588, 0.400]], [0.178, [0.176, 0.588, 0.400]], [0.180, [0.180, 0.590, 0.400]], [0.182, [0.180, 0.590, 0.400]], [0.184, [0.184, 0.592, 0.400]], [0.186, [0.184, 0.592, 0.400]], [0.188, [0.188, 0.594, 0.400]], [0.190, [0.188, 0.594, 0.400]], [0.192, [0.192, 0.596, 0.400]], [0.194, [0.192, 0.596, 0.400]], [0.196, [0.196, 0.598, 0.400]], [0.198, [0.196, 0.598, 0.400]], [0.200, [0.200, 0.600, 0.400]], [0.202, [0.200, 0.600, 0.400]], [0.204, [0.204, 0.602, 0.400]], [0.205, [0.204, 0.602, 0.400]], [0.207, [0.208, 0.604, 0.400]], [0.209, [0.208, 0.604, 0.400]], [0.211, [0.212, 0.606, 0.400]], [0.213, [0.212, 0.606, 0.400]], [0.215, [0.216, 0.608, 0.400]], [0.217, [0.216, 0.608, 0.400]], [0.219, [0.220, 0.610, 0.400]], [0.221, [0.220, 0.610, 0.400]], [0.223, [0.224, 0.612, 0.400]], [0.225, [0.224, 0.612, 0.400]], [0.227, [0.227, 0.614, 0.400]], [0.229, [0.227, 0.614, 0.400]], [0.231, [0.231, 0.616, 0.400]], [0.233, [0.231, 0.616, 0.400]], [0.235, [0.235, 0.618, 0.400]], [0.237, [0.235, 0.618, 0.400]], [0.239, [0.239, 0.620, 0.400]], [0.241, [0.239, 0.620, 0.400]], [0.243, [0.243, 0.622, 0.400]], [0.245, [0.243, 0.622, 0.400]], [0.247, [0.247, 0.624, 0.400]], [0.249, [0.247, 0.624, 0.400]], [0.250, [0.251, 0.625, 0.400]], [0.252, [0.251, 0.625, 0.400]], [0.254, [0.255, 0.627, 0.400]], [0.256, [0.255, 0.627, 0.400]], [0.258, [0.259, 0.629, 0.400]], [0.260, [0.259, 0.629, 0.400]], [0.262, [0.263, 0.631, 0.400]], [0.264, [0.263, 0.631, 0.400]], [0.266, [0.267, 0.633, 0.400]], [0.268, [0.267, 0.633, 0.400]], [0.270, [0.271, 0.635, 0.400]], [0.272, [0.271, 0.635, 0.400]], [0.274, [0.275, 0.637, 0.400]], [0.276, [0.275, 0.637, 0.400]], [0.278, [0.278, 0.639, 0.400]], [0.280, [0.278, 0.639, 0.400]], [0.282, [0.282, 0.641, 0.400]], [0.284, [0.282, 0.641, 0.400]], [0.286, [0.286, 0.643, 0.400]], [0.288, [0.286, 0.643, 0.400]], [0.290, [0.290, 0.645, 0.400]], [0.292, [0.290, 0.645, 0.400]], [0.294, [0.294, 0.647, 0.400]], [0.295, [0.294, 0.647, 0.400]], [0.297, [0.298, 0.649, 0.400]], [0.299, [0.298, 0.649, 0.400]], [0.301, [0.302, 0.651, 0.400]], [0.303, [0.302, 0.651, 0.400]], [0.305, [0.306, 0.653, 0.400]], [0.307, [0.306, 0.653, 0.400]], [0.309, [0.310, 0.655, 0.400]], [0.311, [0.310, 0.655, 0.400]], [0.313, [0.314, 0.657, 0.400]], [0.315, [0.314, 0.657, 0.400]], [0.317, [0.318, 0.659, 0.400]], [0.319, [0.318, 0.659, 0.400]], [0.321, [0.322, 0.661, 0.400]], [0.323, [0.322, 0.661, 0.400]], [0.325, [0.325, 0.663, 0.400]], [0.327, [0.325, 0.663, 0.400]], [0.329, [0.329, 0.665, 0.400]], [0.331, [0.329, 0.665, 0.400]], [0.333, [0.333, 0.667, 0.400]], [0.335, [0.333, 0.667, 0.400]], [0.337, [0.337, 0.669, 0.400]], [0.339, [0.337, 0.669, 0.400]], [0.341, [0.341, 0.671, 0.400]], [0.342, [0.341, 0.671, 0.400]], [0.344, [0.345, 0.673, 0.400]], [0.346, [0.345, 0.673, 0.400]], [0.348, [0.349, 0.675, 0.400]], [0.350, [0.349, 0.675, 0.400]], [0.352, [0.353, 0.676, 0.400]], [0.354, [0.353, 0.676, 0.400]], [0.356, [0.357, 0.678, 0.400]], [0.358, [0.357, 0.678, 0.400]], [0.360, [0.361, 0.680, 0.400]], [0.362, [0.361, 0.680, 0.400]], [0.364, [0.365, 0.682, 0.400]], [0.366, [0.365, 0.682, 0.400]], [0.368, [0.369, 0.684, 0.400]], [0.370, [0.369, 0.684, 0.400]], [0.372, [0.373, 0.686, 0.400]], [0.374, [0.373, 0.686, 0.400]], [0.376, [0.376, 0.688, 0.400]], [0.378, [0.376, 0.688, 0.400]], [0.380, [0.380, 0.690, 0.400]], [0.382, [0.380, 0.690, 0.400]], [0.384, [0.384, 0.692, 0.400]], [0.386, [0.384, 0.692, 0.400]], [0.387, [0.388, 0.694, 0.400]], [0.389, [0.388, 0.694, 0.400]], [0.391, [0.392, 0.696, 0.400]], [0.393, [0.392, 0.696, 0.400]], [0.395, [0.396, 0.698, 0.400]], [0.397, [0.396, 0.698, 0.400]], [0.399, [0.400, 0.700, 0.400]], [0.401, [0.400, 0.700, 0.400]], [0.403, [0.404, 0.702, 0.400]], [0.405, [0.404, 0.702, 0.400]], [0.407, [0.408, 0.704, 0.400]], [0.409, [0.408, 0.704, 0.400]], [0.411, [0.412, 0.706, 0.400]], [0.413, [0.412, 0.706, 0.400]], [0.415, [0.416, 0.708, 0.400]], [0.417, [0.416, 0.708, 0.400]], [0.419, [0.420, 0.710, 0.400]], [0.421, [0.420, 0.710, 0.400]], [0.423, [0.424, 0.712, 0.400]], [0.425, [0.424, 0.712, 0.400]], [0.427, [0.427, 0.714, 0.400]], [0.429, [0.427, 0.714, 0.400]], [0.431, [0.431, 0.716, 0.400]], [0.432, [0.431, 0.716, 0.400]], [0.434, [0.435, 0.718, 0.400]], [0.436, [0.435, 0.718, 0.400]], [0.438, [0.439, 0.720, 0.400]], [0.440, [0.439, 0.720, 0.400]], [0.442, [0.443, 0.722, 0.400]], [0.444, [0.443, 0.722, 0.400]], [0.446, [0.447, 0.724, 0.400]], [0.448, [0.447, 0.724, 0.400]], [0.450, [0.451, 0.725, 0.400]], [0.452, [0.451, 0.725, 0.400]], [0.454, [0.455, 0.727, 0.400]], [0.456, [0.455, 0.727, 0.400]], [0.458, [0.459, 0.729, 0.400]], [0.460, [0.459, 0.729, 0.400]], [0.462, [0.463, 0.731, 0.400]], [0.464, [0.463, 0.731, 0.400]], [0.466, [0.467, 0.733, 0.400]], [0.468, [0.467, 0.733, 0.400]], [0.470, [0.471, 0.735, 0.400]], [0.472, [0.471, 0.735, 0.400]], [0.474, [0.475, 0.737, 0.400]], [0.476, [0.475, 0.737, 0.400]], [0.477, [0.478, 0.739, 0.400]], [0.479, [0.478, 0.739, 0.400]], [0.481, [0.482, 0.741, 0.400]], [0.483, [0.482, 0.741, 0.400]], [0.485, [0.486, 0.743, 0.400]], [0.487, [0.486, 0.743, 0.400]], [0.489, [0.490, 0.745, 0.400]], [0.491, [0.490, 0.745, 0.400]], [0.493, [0.494, 0.747, 0.400]], [0.495, [0.494, 0.747, 0.400]], [0.497, [0.498, 0.749, 0.400]], [0.499, [0.498, 0.749, 0.400]], [0.501, [0.502, 0.751, 0.400]], [0.503, [0.502, 0.751, 0.400]], [0.505, [0.506, 0.753, 0.400]], [0.507, [0.506, 0.753, 0.400]], [0.509, [0.510, 0.755, 0.400]], [0.511, [0.510, 0.755, 0.400]], [0.513, [0.514, 0.757, 0.400]], [0.515, [0.514, 0.757, 0.400]], [0.517, [0.518, 0.759, 0.400]], [0.519, [0.518, 0.759, 0.400]], [0.521, [0.522, 0.761, 0.400]], [0.523, [0.522, 0.761, 0.400]], [0.524, [0.525, 0.763, 0.400]], [0.526, [0.525, 0.763, 0.400]], [0.528, [0.529, 0.765, 0.400]], [0.530, [0.529, 0.765, 0.400]], [0.532, [0.533, 0.767, 0.400]], [0.534, [0.533, 0.767, 0.400]], [0.536, [0.537, 0.769, 0.400]], [0.538, [0.537, 0.769, 0.400]], [0.540, [0.541, 0.771, 0.400]], [0.542, [0.541, 0.771, 0.400]], [0.544, [0.545, 0.773, 0.400]], [0.546, [0.545, 0.773, 0.400]], [0.548, [0.549, 0.775, 0.400]], [0.550, [0.549, 0.775, 0.400]], [0.552, [0.553, 0.776, 0.400]], [0.554, [0.553, 0.776, 0.400]], [0.556, [0.557, 0.778, 0.400]], [0.558, [0.557, 0.778, 0.400]], [0.560, [0.561, 0.780, 0.400]], [0.562, [0.561, 0.780, 0.400]], [0.564, [0.565, 0.782, 0.400]], [0.566, [0.565, 0.782, 0.400]], [0.568, [0.569, 0.784, 0.400]], [0.569, [0.569, 0.784, 0.400]], [0.571, [0.573, 0.786, 0.400]], [0.573, [0.573, 0.786, 0.400]], [0.575, [0.576, 0.788, 0.400]], [0.577, [0.576, 0.788, 0.400]], [0.579, [0.580, 0.790, 0.400]], [0.581, [0.580, 0.790, 0.400]], [0.583, [0.584, 0.792, 0.400]], [0.585, [0.584, 0.792, 0.400]], [0.587, [0.588, 0.794, 0.400]], [0.589, [0.588, 0.794, 0.400]], [0.591, [0.592, 0.796, 0.400]], [0.593, [0.592, 0.796, 0.400]], [0.595, [0.596, 0.798, 0.400]], [0.597, [0.596, 0.798, 0.400]], [0.599, [0.600, 0.800, 0.400]], [0.601, [0.600, 0.800, 0.400]], [0.603, [0.604, 0.802, 0.400]], [0.605, [0.604, 0.802, 0.400]], [0.607, [0.608, 0.804, 0.400]], [0.609, [0.608, 0.804, 0.400]], [0.611, [0.612, 0.806, 0.400]], [0.613, [0.612, 0.806, 0.400]], [0.614, [0.616, 0.808, 0.400]], [0.616, [0.616, 0.808, 0.400]], [0.618, [0.620, 0.810, 0.400]], [0.620, [0.620, 0.810, 0.400]], [0.622, [0.624, 0.812, 0.400]], [0.624, [0.624, 0.812, 0.400]], [0.626, [0.627, 0.814, 0.400]], [0.628, [0.627, 0.814, 0.400]], [0.630, [0.631, 0.816, 0.400]], [0.632, [0.631, 0.816, 0.400]], [0.634, [0.635, 0.818, 0.400]], [0.636, [0.635, 0.818, 0.400]], [0.638, [0.639, 0.820, 0.400]], [0.640, [0.639, 0.820, 0.400]], [0.642, [0.643, 0.822, 0.400]], [0.644, [0.643, 0.822, 0.400]], [0.646, [0.647, 0.824, 0.400]], [0.648, [0.647, 0.824, 0.400]], [0.650, [0.651, 0.825, 0.400]], [0.652, [0.651, 0.825, 0.400]], [0.654, [0.655, 0.827, 0.400]], [0.656, [0.655, 0.827, 0.400]], [0.658, [0.659, 0.829, 0.400]], [0.659, [0.659, 0.829, 0.400]], [0.661, [0.663, 0.831, 0.400]], [0.663, [0.663, 0.831, 0.400]], [0.665, [0.667, 0.833, 0.400]], [0.667, [0.667, 0.833, 0.400]], [0.669, [0.671, 0.835, 0.400]], [0.671, [0.671, 0.835, 0.400]], [0.673, [0.675, 0.837, 0.400]], [0.675, [0.675, 0.837, 0.400]], [0.677, [0.678, 0.839, 0.400]], [0.679, [0.678, 0.839, 0.400]], [0.681, [0.682, 0.841, 0.400]], [0.683, [0.682, 0.841, 0.400]], [0.685, [0.686, 0.843, 0.400]], [0.687, [0.686, 0.843, 0.400]], [0.689, [0.690, 0.845, 0.400]], [0.691, [0.690, 0.845, 0.400]], [0.693, [0.694, 0.847, 0.400]], [0.695, [0.694, 0.847, 0.400]], [0.697, [0.698, 0.849, 0.400]], [0.699, [0.698, 0.849, 0.400]], [0.701, [0.702, 0.851, 0.400]], [0.703, [0.702, 0.851, 0.400]], [0.705, [0.706, 0.853, 0.400]], [0.706, [0.706, 0.853, 0.400]], [0.708, [0.710, 0.855, 0.400]], [0.710, [0.710, 0.855, 0.400]], [0.712, [0.714, 0.857, 0.400]], [0.714, [0.714, 0.857, 0.400]], [0.716, [0.718, 0.859, 0.400]], [0.718, [0.718, 0.859, 0.400]], [0.720, [0.722, 0.861, 0.400]], [0.722, [0.722, 0.861, 0.400]], [0.724, [0.725, 0.863, 0.400]], [0.726, [0.725, 0.863, 0.400]], [0.728, [0.729, 0.865, 0.400]], [0.730, [0.729, 0.865, 0.400]], [0.732, [0.733, 0.867, 0.400]], [0.734, [0.733, 0.867, 0.400]], [0.736, [0.737, 0.869, 0.400]], [0.738, [0.737, 0.869, 0.400]], [0.740, [0.741, 0.871, 0.400]], [0.742, [0.741, 0.871, 0.400]], [0.744, [0.745, 0.873, 0.400]], [0.746, [0.745, 0.873, 0.400]], [0.748, [0.749, 0.875, 0.400]], [0.750, [0.749, 0.875, 0.400]], [0.751, [0.753, 0.876, 0.400]], [0.753, [0.753, 0.876, 0.400]], [0.755, [0.757, 0.878, 0.400]], [0.757, [0.757, 0.878, 0.400]], [0.759, [0.761, 0.880, 0.400]], [0.761, [0.761, 0.880, 0.400]], [0.763, [0.765, 0.882, 0.400]], [0.765, [0.765, 0.882, 0.400]], [0.767, [0.769, 0.884, 0.400]], [0.769, [0.769, 0.884, 0.400]], [0.771, [0.773, 0.886, 0.400]], [0.773, [0.773, 0.886, 0.400]], [0.775, [0.776, 0.888, 0.400]], [0.777, [0.776, 0.888, 0.400]], [0.779, [0.780, 0.890, 0.400]], [0.781, [0.780, 0.890, 0.400]], [0.783, [0.784, 0.892, 0.400]], [0.785, [0.784, 0.892, 0.400]], [0.787, [0.788, 0.894, 0.400]], [0.789, [0.788, 0.894, 0.400]], [0.791, [0.792, 0.896, 0.400]], [0.793, [0.792, 0.896, 0.400]], [0.795, [0.796, 0.898, 0.400]], [0.796, [0.796, 0.898, 0.400]], [0.798, [0.800, 0.900, 0.400]], [0.800, [0.800, 0.900, 0.400]], [0.802, [0.804, 0.902, 0.400]], [0.804, [0.804, 0.902, 0.400]], [0.806, [0.808, 0.904, 0.400]], [0.808, [0.808, 0.904, 0.400]], [0.810, [0.812, 0.906, 0.400]], [0.812, [0.812, 0.906, 0.400]], [0.814, [0.816, 0.908, 0.400]], [0.816, [0.816, 0.908, 0.400]], [0.818, [0.820, 0.910, 0.400]], [0.820, [0.820, 0.910, 0.400]], [0.822, [0.824, 0.912, 0.400]], [0.824, [0.824, 0.912, 0.400]], [0.826, [0.827, 0.914, 0.400]], [0.828, [0.827, 0.914, 0.400]], [0.830, [0.831, 0.916, 0.400]], [0.832, [0.831, 0.916, 0.400]], [0.834, [0.835, 0.918, 0.400]], [0.836, [0.835, 0.918, 0.400]], [0.838, [0.839, 0.920, 0.400]], [0.840, [0.839, 0.920, 0.400]], [0.841, [0.843, 0.922, 0.400]], [0.843, [0.843, 0.922, 0.400]], [0.845, [0.847, 0.924, 0.400]], [0.847, [0.847, 0.924, 0.400]], [0.849, [0.851, 0.925, 0.400]], [0.851, [0.851, 0.925, 0.400]], [0.853, [0.855, 0.927, 0.400]], [0.855, [0.855, 0.927, 0.400]], [0.857, [0.859, 0.929, 0.400]], [0.859, [0.859, 0.929, 0.400]], [0.861, [0.863, 0.931, 0.400]], [0.863, [0.863, 0.931, 0.400]], [0.865, [0.867, 0.933, 0.400]], [0.867, [0.867, 0.933, 0.400]], [0.869, [0.871, 0.935, 0.400]], [0.871, [0.871, 0.935, 0.400]], [0.873, [0.875, 0.937, 0.400]], [0.875, [0.875, 0.937, 0.400]], [0.877, [0.878, 0.939, 0.400]], [0.879, [0.878, 0.939, 0.400]], [0.881, [0.882, 0.941, 0.400]], [0.883, [0.882, 0.941, 0.400]], [0.885, [0.886, 0.943, 0.400]], [0.886, [0.886, 0.943, 0.400]], [0.888, [0.890, 0.945, 0.400]], [0.890, [0.890, 0.945, 0.400]], [0.892, [0.894, 0.947, 0.400]], [0.894, [0.894, 0.947, 0.400]], [0.896, [0.898, 0.949, 0.400]], [0.898, [0.898, 0.949, 0.400]], [0.900, [0.902, 0.951, 0.400]], [0.902, [0.902, 0.951, 0.400]], [0.904, [0.906, 0.953, 0.400]], [0.906, [0.906, 0.953, 0.400]], [0.908, [0.910, 0.955, 0.400]], [0.910, [0.910, 0.955, 0.400]], [0.912, [0.914, 0.957, 0.400]], [0.914, [0.914, 0.957, 0.400]], [0.916, [0.918, 0.959, 0.400]], [0.918, [0.918, 0.959, 0.400]], [0.920, [0.922, 0.961, 0.400]], [0.922, [0.922, 0.961, 0.400]], [0.924, [0.925, 0.963, 0.400]], [0.926, [0.925, 0.963, 0.400]], [0.928, [0.929, 0.965, 0.400]], [0.930, [0.929, 0.965, 0.400]], [0.932, [0.933, 0.967, 0.400]], [0.933, [0.933, 0.967, 0.400]], [0.935, [0.937, 0.969, 0.400]], [0.937, [0.937, 0.969, 0.400]], [0.939, [0.941, 0.971, 0.400]], [0.941, [0.941, 0.971, 0.400]], [0.943, [0.945, 0.973, 0.400]], [0.945, [0.945, 0.973, 0.400]], [0.947, [0.949, 0.975, 0.400]], [0.949, [0.949, 0.975, 0.400]], [0.951, [0.953, 0.976, 0.400]], [0.953, [0.953, 0.976, 0.400]], [0.955, [0.957, 0.978, 0.400]], [0.957, [0.957, 0.978, 0.400]], [0.959, [0.961, 0.980, 0.400]], [0.961, [0.961, 0.980, 0.400]], [0.963, [0.965, 0.982, 0.400]], [0.965, [0.965, 0.982, 0.400]], [0.967, [0.969, 0.984, 0.400]], [0.969, [0.969, 0.984, 0.400]], [0.971, [0.973, 0.986, 0.400]], [0.973, [0.973, 0.986, 0.400]], [0.975, [0.976, 0.988, 0.400]], [0.977, [0.976, 0.988, 0.400]], [0.978, [0.980, 0.990, 0.400]], [0.980, [0.980, 0.990, 0.400]], [0.982, [0.984, 0.992, 0.400]], [0.984, [0.984, 0.992, 0.400]], [0.986, [0.988, 0.994, 0.400]], [0.988, [0.988, 0.994, 0.400]], [0.990, [0.992, 0.996, 0.400]], [0.992, [0.992, 0.996, 0.400]], [0.994, [0.996, 0.998, 0.400]], [0.996, [0.996, 0.998, 0.400]], [0.998, [1.000, 1.000, 0.400]], [1.000, [1.000, 1.000, 0.400]]];
H.colormap_tab_10 = function() {
const colors = H.color_utils.color_cut; 
let result  = colors("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf")
return result
}
H.colormap_tab_20 = function() {
const colors = H.color_utils.color_cut; 
let result  = colors("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5")
return result
}
H.colormap_tab_20b = function() {
const colors = H.color_utils.color_cut; 
let result  = colors("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6")
return result
}
H.colormap_tab_20c = function() {
const colors = H.color_utils.color_cut; 
let result  = colors("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9")
return result
}
H.colormap_tableau_10 = function() {
const colors = H.color_utils.color_cut; 
let result  = colors("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab")
return result
}
H.colormap_tarn = [[0.000,[0.08982325,0.13868842,0.05339635]],[0.004,[0.09490477,0.14563734,0.05489582]],[0.008,[0.09996821,0.15254519,0.05635425]],[0.012,[0.10499326,0.15942600,0.05767944]],[0.016,[0.10998449,0.16628159,0.05888157]],[0.020,[0.11493261,0.17311999,0.05990900]],[0.024,[0.11984714,0.17994006,0.06079329]],[0.027,[0.12472996,0.18674399,0.06153300]],[0.031,[0.12958052,0.19353493,0.06211474]],[0.035,[0.13439965,0.20031516,0.06253114]],[0.039,[0.13919291,0.20708455,0.06279849]],[0.043,[0.14395541,0.21384773,0.06288008]],[0.047,[0.14873489,0.22059147,0.06284099]],[0.051,[0.15354985,0.22731578,0.06260142]],[0.055,[0.15840997,0.23402033,0.06214048]],[0.059,[0.16332939,0.24070336,0.06143905]],[0.063,[0.16833254,0.24736040,0.06047333]],[0.067,[0.17345165,0.25398401,0.05924078]],[0.071,[0.17872901,0.26056537,0.05769399]],[0.075,[0.18422269,0.26709143,0.05577103]],[0.078,[0.19004426,0.27353353,0.05343902]],[0.082,[0.19640129,0.27983832,0.05059092]],[0.086,[0.20381810,0.28585825,0.04734796]],[0.090,[0.21348036,0.29121377,0.04542336]],[0.094,[0.22463793,0.29599857,0.04791968]],[0.098,[0.23570788,0.30072431,0.05139928]],[0.102,[0.24666450,0.30542152,0.05513668]],[0.106,[0.25754614,0.31008815,0.05896504]],[0.110,[0.26835860,0.31472868,0.06282165]],[0.114,[0.27912756,0.31933996,0.06667247]],[0.118,[0.28983582,0.32393180,0.07050981]],[0.122,[0.30049842,0.32850322,0.07432551]],[0.125,[0.31115532,0.33304389,0.07810232]],[0.129,[0.32180344,0.33755735,0.08184305]],[0.133,[0.33243330,0.34204951,0.08555281]],[0.137,[0.34307692,0.34651103,0.08922112]],[0.141,[0.35372994,0.35094531,0.09285241]],[0.145,[0.36438944,0.35535527,0.09645120]],[0.149,[0.37504531,0.35974672,0.10002561]],[0.153,[0.38571002,0.36411663,0.10357350]],[0.157,[0.39638580,0.36846575,0.10709737]],[0.161,[0.40712132,0.37277521,0.11058261]],[0.165,[0.41787585,0.37706291,0.11404723]],[0.169,[0.42864234,0.38133326,0.11749747]],[0.173,[0.43944338,0.38557779,0.12092759]],[0.176,[0.45029629,0.38978965,0.12433441]],[0.180,[0.46115812,0.39398909,0.12773745]],[0.184,[0.47205639,0.39816486,0.13112811]],[0.188,[0.48302100,0.40230382,0.13449638]],[0.192,[0.49399870,0.40643169,0.13786650]],[0.196,[0.50504435,0.41052328,0.14121775]],[0.200,[0.51613055,0.41459232,0.14456382]],[0.204,[0.52722269,0.41865685,0.14792270]],[0.208,[0.53842317,0.42266673,0.15124918]],[0.212,[0.54967353,0.42665090,0.15458115]],[0.216,[0.56089246,0.43064948,0.15802203]],[0.220,[0.57218887,0.43460880,0.16149075]],[0.224,[0.58356027,0.43852998,0.16499466]],[0.227,[0.59491417,0.44246109,0.16862367]],[0.231,[0.60634750,0.44635282,0.17229300]],[0.235,[0.61783222,0.45021969,0.17603931]],[0.239,[0.62930726,0.45409473,0.17993225]],[0.243,[0.64084879,0.45793764,0.18391011]],[0.247,[0.65244782,0.46175301,0.18799528]],[0.251,[0.66408401,0.46555192,0.19222251]],[0.255,[0.67570771,0.46936243,0.19665733]],[0.259,[0.68736197,0.47316068,0.20127862]],[0.263,[0.69903812,0.47695098,0.20612594]],[0.267,[0.71074693,0.48072509,0.21124676]],[0.271,[0.72242305,0.48452183,0.21671231]],[0.275,[0.73409883,0.48831785,0.22260239]],[0.278,[0.74561263,0.49220841,0.22912939]],[0.282,[0.75699509,0.49616933,0.23642369]],[0.286,[0.76801782,0.50033097,0.24490577]],[0.290,[0.77834330,0.50489138,0.25511459]],[0.294,[0.78729378,0.51027084,0.26766042]],[0.298,[0.79418385,0.51694368,0.28215131]],[0.302,[0.79947561,0.52467377,0.29702558]],[0.306,[0.80390100,0.53300244,0.31152670]],[0.310,[0.80782750,0.54168110,0.32559245]],[0.314,[0.81151888,0.55053373,0.33922642]],[0.318,[0.81495654,0.55954976,0.35272609]],[0.322,[0.81842005,0.56854707,0.36617655]],[0.325,[0.82188710,0.57753959,0.37962321]],[0.329,[0.82535241,0.58653205,0.39308133]],[0.333,[0.82881960,0.59552446,0.40655417]],[0.337,[0.83228935,0.60451863,0.42004383]],[0.341,[0.83576589,0.61351468,0.43354639]],[0.345,[0.83925294,0.62251292,0.44706049]],[0.349,[0.84274900,0.63151594,0.46059286]],[0.353,[0.84625932,0.64052335,0.47413918]],[0.357,[0.84978294,0.64953745,0.48770485]],[0.361,[0.85332432,0.65855817,0.50128681]],[0.365,[0.85688193,0.66758786,0.51489244]],[0.369,[0.86045922,0.67662707,0.52851750]],[0.373,[0.86406242,0.68567509,0.54215552]],[0.376,[0.86768748,0.69473534,0.55581598]],[0.380,[0.87134336,0.70380610,0.56948812]],[0.384,[0.87502692,0.71289035,0.58317978]],[0.388,[0.87874173,0.72198849,0.59688842]],[0.392,[0.88249292,0.73110038,0.61060914]],[0.396,[0.88627808,0.74022863,0.62434840]],[0.400,[0.89010253,0.74937304,0.63810099]],[0.404,[0.89396964,0.75853417,0.65186460]],[0.408,[0.89787843,0.76771407,0.66564345]],[0.412,[0.90183261,0.77691316,0.67943472]],[0.416,[0.90583809,0.78613117,0.69323232]],[0.420,[0.90989363,0.79537024,0.70704081]],[0.424,[0.91400183,0.80463119,0.72085900]],[0.427,[0.91816674,0.81391443,0.73468362]],[0.431,[0.92239374,0.82321994,0.74850946]],[0.435,[0.92663298,0.83256491,0.76241192]],[0.439,[0.93095879,0.84192944,0.77626639]],[0.443,[0.93533081,0.85132760,0.79013463]],[0.447,[0.93976662,0.86075529,0.80399402]],[0.451,[0.94428524,0.87020770,0.81781947]],[0.455,[0.94885643,0.87969330,0.83165329]],[0.459,[0.95351325,0.88919846,0.84544179]],[0.463,[0.95821830,0.89872277,0.85921667]],[0.467,[0.96296811,0.90824081,0.87293371]],[0.471,[0.96773697,0.91770618,0.88652861]],[0.475,[0.97244705,0.92704215,0.89992510]],[0.478,[0.97695775,0.93612347,0.91300997]],[0.482,[0.98109368,0.94475036,0.92556071]],[0.486,[0.98461879,0.95264958,0.93726978]],[0.490,[0.98720376,0.95949943,0.94781880]],[0.494,[0.98854178,0.96494304,0.95680492]],[0.498,[0.98840139,0.96864404,0.96379987]],[0.502,[0.98841626,0.97005010,0.96460788]],[0.506,[0.98824820,0.96919498,0.95908498]],[0.510,[0.98622021,0.96644971,0.95130224]],[0.514,[0.98253173,0.96203078,0.94162224]],[0.518,[0.97749532,0.95625062,0.93039822]],[0.522,[0.97145126,0.94945275,0.91803863]],[0.525,[0.96473288,0.94196019,0.90484108]],[0.529,[0.95760298,0.93403643,0.89110716]],[0.533,[0.95025402,0.92587470,0.87705975]],[0.537,[0.94282039,0.91760366,0.86280947]],[0.541,[0.93538021,0.90930009,0.84843693]],[0.545,[0.92797315,0.90100542,0.83400227]],[0.549,[0.92061624,0.89273976,0.81954911]],[0.553,[0.91332819,0.88451285,0.80503849]],[0.557,[0.90610497,0.87632711,0.79051411]],[0.561,[0.89887225,0.86820960,0.77602449]],[0.565,[0.89136050,0.86025936,0.76169363]],[0.569,[0.88349478,0.85250761,0.74751417]],[0.573,[0.87513484,0.84500119,0.73359690]],[0.576,[0.86603621,0.83781396,0.72022292]],[0.580,[0.85606282,0.83097835,0.70762828]],[0.584,[0.84508506,0.82450411,0.69625405]],[0.588,[0.83312378,0.81833937,0.68652392]],[0.592,[0.82055763,0.81233520,0.67831827]],[0.596,[0.80772299,0.80638014,0.67131535]],[0.600,[0.79474615,0.80043731,0.66532524]],[0.604,[0.78182346,0.79445937,0.65998309]],[0.608,[0.76900439,0.78844241,0.65510427]],[0.612,[0.75629813,0.78239189,0.65057943]],[0.616,[0.74371667,0.77631072,0.64631856]],[0.620,[0.73128649,0.77019625,0.64223643]],[0.624,[0.71898505,0.76406041,0.63829084]],[0.627,[0.70681423,0.75790645,0.63443449]],[0.631,[0.69477425,0.75173754,0.63062828]],[0.635,[0.68285371,0.74555868,0.62685967]],[0.639,[0.67100115,0.73938366,0.62317364]],[0.643,[0.65926579,0.73320387,0.61946507]],[0.647,[0.64763623,0.72702409,0.61572139]],[0.651,[0.63603628,0.72086134,0.61203732]],[0.655,[0.62450809,0.71470824,0.60832343]],[0.659,[0.61304885,0.70856683,0.60455917]],[0.663,[0.60158923,0.70244970,0.60084896]],[0.667,[0.59019877,0.69634451,0.59706288]],[0.671,[0.57879422,0.69026836,0.59329740]],[0.675,[0.56738440,0.68421946,0.58952207]],[0.678,[0.55597590,0.67819549,0.58572241]],[0.682,[0.54454523,0.67219914,0.58193100]],[0.686,[0.53302850,0.66624719,0.57815186]],[0.690,[0.52161188,0.66028602,0.57434510]],[0.694,[0.51004619,0.65438016,0.57058923]],[0.698,[0.49854622,0.64846801,0.56685224]],[0.702,[0.48692129,0.64260047,0.56315037]],[0.706,[0.47531759,0.63673420,0.55948331]],[0.710,[0.46358841,0.63090450,0.55588104]],[0.714,[0.45179374,0.62509332,0.55232872]],[0.718,[0.43997814,0.61928640,0.54882728]],[0.722,[0.42801765,0.61351178,0.54538895]],[0.725,[0.41606132,0.60772874,0.54201261]],[0.729,[0.40398572,0.60196389,0.53871303]],[0.733,[0.39174752,0.59622263,0.53549982]],[0.737,[0.37953963,0.59045770,0.53235627]],[0.741,[0.36719805,0.58470262,0.52929954]],[0.745,[0.35471690,0.57895402,0.52633241]],[0.749,[0.34219915,0.57318590,0.52345302]],[0.753,[0.32963216,0.56739783,0.52066436]],[0.757,[0.31695394,0.56159827,0.51797396]],[0.761,[0.30418488,0.55577908,0.51538146]],[0.765,[0.29135802,0.54993029,0.51288660]],[0.769,[0.27862101,0.54402379,0.51047703]],[0.773,[0.26587678,0.53807460,0.50816356]],[0.776,[0.25317280,0.53207309,0.50594193]],[0.780,[0.24058017,0.52600842,0.50379589]],[0.784,[0.22817317,0.51987103,0.50171152]],[0.788,[0.21603576,0.51365215,0.49967323]],[0.792,[0.20425533,0.50734418,0.49767093]],[0.796,[0.19294558,0.50094025,0.49567431]],[0.800,[0.18221591,0.49443607,0.49365769]],[0.804,[0.17217200,0.48782966,0.49159737]],[0.808,[0.16291220,0.48112178,0.48946618]],[0.812,[0.15451672,0.47431563,0.48724140]],[0.816,[0.14704251,0.46741670,0.48490290]],[0.820,[0.14051131,0.46043384,0.48242718]],[0.824,[0.13492175,0.45337481,0.47981020]],[0.827,[0.13027973,0.44624551,0.47704268]],[0.831,[0.12659398,0.43904969,0.47411663]],[0.835,[0.12368439,0.43180746,0.47102749]],[0.839,[0.12146466,0.42452594,0.46778920]],[0.843,[0.11984035,0.41721229,0.46441236]],[0.847,[0.11846092,0.40989260,0.46096160]],[0.851,[0.11687550,0.40260225,0.45751601]],[0.855,[0.11510079,0.39533859,0.45408051]],[0.859,[0.11314131,0.38810053,0.45065582]],[0.863,[0.11102214,0.38088349,0.44725323]],[0.867,[0.10875111,0.37368542,0.44387601]],[0.871,[0.10632629,0.36650571,0.44052302]],[0.875,[0.10375372,0.35934241,0.43719632]],[0.878,[0.10103960,0.35219343,0.43389800]],[0.882,[0.09820785,0.34505359,0.43063902]],[0.886,[0.09524887,0.33792315,0.42741365]],[0.890,[0.09216708,0.33079999,0.42422257]],[0.894,[0.08898720,0.32367832,0.42107731]],[0.898,[0.08570499,0.31655725,0.41797371]],[0.902,[0.08232862,0.30943366,0.41491384]],[0.906,[0.07888092,0.30230164,0.41190796]],[0.910,[0.07535426,0.29516069,0.40894831]],[0.914,[0.07178216,0.28800271,0.40605067]],[0.918,[0.06815855,0.28082697,0.40320547]],[0.922,[0.06448899,0.27363105,0.40040602]],[0.925,[0.06082018,0.26640356,0.39767748]],[0.929,[0.05716124,0.25914070,0.39501703]],[0.933,[0.05351467,0.25184143,0.39240687]],[0.937,[0.04993187,0.24449351,0.38986974]],[0.941,[0.04643877,0.23709129,0.38739992]],[0.945,[0.04308214,0.22962476,0.38500438]],[0.949,[0.03988193,0.22208958,0.38266485]],[0.953,[0.03696588,0.21447111,0.38039516]],[0.957,[0.03503963,0.20673822,0.37799481]],[0.961,[0.03478422,0.19886790,0.37514707]],[0.965,[0.03605446,0.19087649,0.37173941]],[0.969,[0.03860378,0.18279118,0.36766974]],[0.973,[0.04204158,0.17464848,0.36286398]],[0.976,[0.04580769,0.16648682,0.35729350]],[0.980,[0.04953047,0.15833912,0.35097833]],[0.984,[0.05294795,0.15022878,0.34397801]],[0.988,[0.05589747,0.14216900,0.33637845]],[0.992,[0.05832364,0.13415888,0.32827153]],[0.996,[0.06018930,0.12619420,0.31975390]],[1.000,[0.06152267,0.11826705,0.31087939]]]
H.colormap_temperature = [[0.000,[0.01555601,0.13824425,0.20181089]],[0.004,[0.01620184,0.14105074,0.20897651]],[0.008,[0.01685649,0.14382701,0.21623868]],[0.012,[0.01752640,0.14657173,0.22359970]],[0.016,[0.01821872,0.14928346,0.23106187]],[0.020,[0.01894138,0.15196073,0.23862748]],[0.024,[0.01969968,0.15460145,0.24630497]],[0.027,[0.02050332,0.15720378,0.25409711]],[0.031,[0.02136721,0.15976645,0.26199915]],[0.035,[0.02230341,0.16228755,0.27001321]],[0.039,[0.02332520,0.16476505,0.27814139]],[0.043,[0.02444728,0.16719678,0.28638573]],[0.047,[0.02568582,0.16958042,0.29474817]],[0.051,[0.02705867,0.17191350,0.30323056]],[0.055,[0.02858553,0.17419338,0.31183463]],[0.059,[0.03028808,0.17641726,0.32056191]],[0.063,[0.03219022,0.17858215,0.32941369]],[0.067,[0.03431826,0.18068487,0.33839101]],[0.071,[0.03670118,0.18272205,0.34749451]],[0.075,[0.03937082,0.18469014,0.35672441]],[0.078,[0.04230474,0.18658537,0.36608039]],[0.082,[0.04544128,0.18840380,0.37556146]],[0.086,[0.04879889,0.19014130,0.38516584]],[0.090,[0.05238565,0.19179358,0.39489082]],[0.094,[0.05620897,0.19335621,0.40473254]],[0.098,[0.06027561,0.19482469,0.41468582]],[0.102,[0.06459519,0.19618775,0.42477146]],[0.106,[0.06917294,0.19744583,0.43495728]],[0.110,[0.07401398,0.19859437,0.44523225]],[0.114,[0.07912633,0.19962514,0.45559656]],[0.118,[0.08452075,0.20052842,0.46605087]],[0.122,[0.09019392,0.20130794,0.47654788]],[0.125,[0.09616431,0.20194725,0.48710445]],[0.129,[0.10242540,0.20245202,0.49766462]],[0.133,[0.10899443,0.20280889,0.50822709]],[0.137,[0.11585974,0.20302735,0.51872453]],[0.141,[0.12304243,0.20309380,0.52914838]],[0.145,[0.13052767,0.20302178,0.53942012]],[0.149,[0.13830991,0.20281956,0.54947678]],[0.153,[0.14637971,0.20250018,0.55924613]],[0.157,[0.15471863,0.20208507,0.56864226]],[0.161,[0.16329705,0.20160546,0.57756769]],[0.165,[0.17207282,0.20110273,0.58591838]],[0.169,[0.18099176,0.20062705,0.59359182]],[0.173,[0.18999022,0.20023416,0.60049707]],[0.176,[0.19899974,0.19998029,0.60656515]],[0.180,[0.20795298,0.19991643,0.61175706]],[0.184,[0.21678952,0.20008303,0.61606739]],[0.188,[0.22546043,0.20050671,0.61952279]],[0.192,[0.23393063,0.20119920,0.62217608]],[0.196,[0.24217907,0.20215872,0.62409793]],[0.200,[0.25019713,0.20337273,0.62536824]],[0.204,[0.25798611,0.20482134,0.62606879]],[0.208,[0.26555442,0.20648047,0.62627797]],[0.212,[0.27291504,0.20832446,0.62606758]],[0.216,[0.28008339,0.21032792,0.62550133]],[0.220,[0.28706751,0.21246914,0.62464200]],[0.224,[0.29388514,0.21472543,0.62353802]],[0.227,[0.30055772,0.21707565,0.62222519]],[0.231,[0.30708438,0.21950598,0.62075550]],[0.235,[0.31349163,0.22199831,0.61914522]],[0.239,[0.31977984,0.22454204,0.61743434]],[0.243,[0.32596955,0.22712412,0.61563293]],[0.247,[0.33205791,0.22973736,0.61377715]],[0.251,[0.33806601,0.23237153,0.61186606]],[0.255,[0.34399174,0.23502151,0.60992807]],[0.259,[0.34984607,0.23768089,0.60796949]],[0.263,[0.35563846,0.24034440,0.60599535]],[0.267,[0.36136863,0.24300892,0.60402414]],[0.271,[0.36704345,0.24567078,0.60206076]],[0.275,[0.37267088,0.24832670,0.60010594]],[0.278,[0.37825480,0.25097436,0.59816563]],[0.282,[0.38379608,0.25361228,0.59624988]],[0.286,[0.38929883,0.25623877,0.59436180]],[0.290,[0.39476910,0.25885207,0.59249964]],[0.294,[0.40020989,0.26145107,0.59066609]],[0.298,[0.40562409,0.26403484,0.58886331]],[0.302,[0.41101442,0.26660262,0.58709291]],[0.306,[0.41638322,0.26915383,0.58535660]],[0.310,[0.42173132,0.27168825,0.58365836]],[0.314,[0.42706343,0.27420503,0.58199410]],[0.318,[0.43238181,0.27670380,0.58036393]],[0.322,[0.43768862,0.27918426,0.57876764]],[0.325,[0.44298597,0.28164615,0.57720480]],[0.329,[0.44827587,0.28408925,0.57567472]],[0.333,[0.45356026,0.28651338,0.57417648]],[0.337,[0.45884104,0.28891838,0.57270899]],[0.341,[0.46412001,0.29130410,0.57127095]],[0.345,[0.46939893,0.29367044,0.56986090]],[0.349,[0.47467951,0.29601729,0.56847725]],[0.353,[0.47996336,0.29834456,0.56711823]],[0.357,[0.48525207,0.30065217,0.56578195]],[0.361,[0.49054716,0.30294008,0.56446640]],[0.365,[0.49585007,0.30520822,0.56316946]],[0.369,[0.50116221,0.30745656,0.56188888]],[0.373,[0.50648491,0.30968508,0.56062233]],[0.376,[0.51181943,0.31189376,0.55936737]],[0.380,[0.51716699,0.31408263,0.55812148]],[0.384,[0.52252871,0.31625172,0.55688205]],[0.388,[0.52790567,0.31840106,0.55564642]],[0.392,[0.53329886,0.32053073,0.55441182]],[0.396,[0.53870920,0.32264084,0.55317546]],[0.400,[0.54413753,0.32473150,0.55193448]],[0.404,[0.54958461,0.32680287,0.55068596]],[0.408,[0.55505113,0.32885514,0.54942696]],[0.412,[0.56053768,0.33088852,0.54815451]],[0.416,[0.56604476,0.33290327,0.54686563]],[0.420,[0.57157236,0.33489987,0.54555812]],[0.424,[0.57712131,0.33687845,0.54422801]],[0.427,[0.58269186,0.33883938,0.54287227]],[0.431,[0.58828416,0.34078308,0.54148789]],[0.435,[0.59389827,0.34271002,0.54007187]],[0.439,[0.59953415,0.34462069,0.53862124]],[0.443,[0.60519167,0.34651565,0.53713308]],[0.447,[0.61087061,0.34839552,0.53560450]],[0.451,[0.61657065,0.35026093,0.53403268]],[0.455,[0.62229138,0.35211260,0.53241484]],[0.459,[0.62803229,0.35395127,0.53074831]],[0.463,[0.63379279,0.35577776,0.52903045]],[0.467,[0.63957219,0.35759292,0.52725878]],[0.471,[0.64536975,0.35939765,0.52543076]],[0.475,[0.65118470,0.36119285,0.52354391]],[0.478,[0.65701610,0.36297956,0.52159597]],[0.482,[0.66286293,0.36475881,0.51958481]],[0.486,[0.66872410,0.36653173,0.51750839]],[0.490,[0.67459845,0.36829947,0.51536480]],[0.494,[0.68048472,0.37006325,0.51315222]],[0.498,[0.68638162,0.37182432,0.51086898]],[0.502,[0.69228775,0.37358401,0.50851352]],[0.506,[0.69820166,0.37534367,0.50608439]],[0.510,[0.70412186,0.37710473,0.50358028]],[0.514,[0.71004688,0.37886859,0.50099965]],[0.518,[0.71597525,0.38063670,0.49834106]],[0.522,[0.72190503,0.38241075,0.49560410]],[0.525,[0.72783443,0.38419239,0.49278795]],[0.529,[0.73376164,0.38598330,0.48989190]],[0.533,[0.73968475,0.38778523,0.48691538]],[0.537,[0.74560180,0.38960001,0.48385794]],[0.541,[0.75151077,0.39142951,0.48071927]],[0.545,[0.75740957,0.39327566,0.47749914]],[0.549,[0.76329604,0.39514048,0.47419750]],[0.553,[0.76916794,0.39702603,0.47081439]],[0.557,[0.77502298,0.39893446,0.46735000]],[0.561,[0.78085877,0.40086800,0.46380463]],[0.565,[0.78667286,0.40282892,0.46017874]],[0.569,[0.79246271,0.40481960,0.45647292]],[0.573,[0.79822569,0.40684249,0.45268792]],[0.576,[0.80395908,0.40890011,0.44882462]],[0.580,[0.80966007,0.41099506,0.44488409]],[0.584,[0.81532584,0.41313001,0.44086720]],[0.588,[0.82095338,0.41530771,0.43677537]],[0.592,[0.82653946,0.41753108,0.43261066]],[0.596,[0.83208085,0.41980305,0.42837489]],[0.600,[0.83757423,0.42212661,0.42407011]],[0.604,[0.84301618,0.42450482,0.41969860]],[0.608,[0.84840316,0.42694082,0.41526288]],[0.612,[0.85373155,0.42943780,0.41076573]],[0.616,[0.85899760,0.43199897,0.40621024]],[0.620,[0.86419750,0.43462760,0.40159975]],[0.624,[0.86932733,0.43732696,0.39693796]],[0.627,[0.87438311,0.44010033,0.39222887]],[0.631,[0.87936081,0.44295096,0.38747682]],[0.635,[0.88425632,0.44588207,0.38268654]],[0.639,[0.88906554,0.44889681,0.37786308]],[0.643,[0.89378437,0.45199824,0.37301160]],[0.647,[0.89840867,0.45518929,0.36813827]],[0.651,[0.90293439,0.45847274,0.36324942]],[0.655,[0.90735756,0.46185117,0.35835166]],[0.659,[0.91167433,0.46532694,0.35345197]],[0.663,[0.91588100,0.46890217,0.34855767]],[0.667,[0.91997406,0.47257868,0.34367638]],[0.671,[0.92395023,0.47635796,0.33881601]],[0.675,[0.92780648,0.48024117,0.33398471]],[0.678,[0.93154008,0.48422909,0.32919080]],[0.682,[0.93514863,0.48832213,0.32444275]],[0.686,[0.93863008,0.49252027,0.31974912]],[0.690,[0.94198274,0.49682311,0.31511847]],[0.694,[0.94520535,0.50122981,0.31055931]],[0.698,[0.94829701,0.50573917,0.30608003]],[0.702,[0.95125725,0.51034957,0.30168887]],[0.706,[0.95408600,0.51505906,0.29739377]],[0.710,[0.95678355,0.51986536,0.29320240]],[0.714,[0.95935057,0.52476587,0.28912206]],[0.718,[0.96178805,0.52975777,0.28515964]],[0.722,[0.96409730,0.53483802,0.28132156]],[0.725,[0.96627986,0.54000343,0.27761379]],[0.729,[0.96833750,0.54525070,0.27404177]],[0.733,[0.97027215,0.55057645,0.27061043]],[0.737,[0.97208896,0.55597442,0.26733231]],[0.741,[0.97378824,0.56144311,0.26420514]],[0.745,[0.97537225,0.56697917,0.26123210]],[0.749,[0.97684333,0.57257930,0.25841610]],[0.753,[0.97820376,0.57824032,0.25575953]],[0.757,[0.97945570,0.58395922,0.25326432]],[0.761,[0.98060120,0.58973318,0.25093197]],[0.765,[0.98164451,0.59555764,0.24876746]],[0.769,[0.98259580,0.60142353,0.24678389]],[0.773,[0.98344841,0.60733543,0.24496692]],[0.776,[0.98420378,0.61329131,0.24331643]],[0.780,[0.98486309,0.61928934,0.24183204]],[0.784,[0.98543359,0.62532321,0.24052074]],[0.788,[0.98592661,0.63138392,0.23939250]],[0.792,[0.98632908,0.63748058,0.23842850]],[0.796,[0.98664126,0.64361223,0.23762727]],[0.800,[0.98687430,0.64977022,0.23699778]],[0.804,[0.98703872,0.65594684,0.23654600]],[0.808,[0.98711602,0.66215449,0.23625164]],[0.812,[0.98710548,0.66839291,0.23611251]],[0.816,[0.98704522,0.67463615,0.23615516]],[0.820,[0.98690081,0.68090692,0.23634896]],[0.824,[0.98666929,0.68720645,0.23669008]],[0.827,[0.98639295,0.69350720,0.23720252]],[0.831,[0.98603581,0.69983201,0.23785913]],[0.835,[0.98559369,0.70618283,0.23865535]],[0.839,[0.98511668,0.71252856,0.23961378]],[0.843,[0.98455154,0.71890163,0.24070275]],[0.847,[0.98392192,0.72528731,0.24193050]],[0.851,[0.98324116,0.73167761,0.24329811]],[0.855,[0.98246864,0.73809600,0.24478540]],[0.859,[0.98166755,0.74450581,0.24641186]],[0.863,[0.98078113,0.75093941,0.24815276]],[0.867,[0.97983772,0.75738047,0.25001371]],[0.871,[0.97883927,0.76382790,0.25199054]],[0.875,[0.97775747,0.77029690,0.25407166]],[0.878,[0.97664794,0.77675738,0.25626641]],[0.882,[0.97543570,0.78324913,0.25855344]],[0.886,[0.97421070,0.78972470,0.26094721]],[0.890,[0.97288357,0.79623051,0.26342620]],[0.894,[0.97152974,0.80272764,0.26599948]],[0.898,[0.97008613,0.80924798,0.26865290]],[0.902,[0.96860571,0.81576486,0.27138993]],[0.906,[0.96704307,0.82230061,0.27420073]],[0.910,[0.96543772,0.82883583,0.27708584]],[0.914,[0.96375242,0.83538829,0.28003763]],[0.918,[0.96202315,0.84194079,0.28305544]],[0.922,[0.96021049,0.84851164,0.28613254]],[0.925,[0.95835763,0.85508072,0.28926815]],[0.929,[0.95641175,0.86167196,0.29245571]],[0.933,[0.95443484,0.86825730,0.29569479]],[0.937,[0.95234871,0.87487125,0.29897882]],[0.941,[0.95024646,0.88147281,0.30230776]],[0.945,[0.94801413,0.88811109,0.30567520]],[0.949,[0.94578198,0.89473018,0.30908112]],[0.953,[0.94341986,0.90138491,0.31252002]],[0.957,[0.94102862,0.90803285,0.31599064]],[0.961,[0.93853313,0.91470475,0.31948933]],[0.965,[0.93597111,0.92138481,0.32301384]],[0.969,[0.93333760,0.92807483,0.32656155]],[0.973,[0.93059157,0.93479051,0.33012998]],[0.976,[0.92781425,0.94149986,0.33371683]],[0.980,[0.92488992,0.94824702,0.33731997]],[0.984,[0.92194114,0.95498491,0.34093705]],[0.988,[0.91886139,0.96175325,0.34456630]],[0.992,[0.91569318,0.96853549,0.34820569]],[0.996,[0.91244907,0.97532669,0.35185336]],[1.000,[0.90904184,0.98215741,0.35550781]]]
H.colormap_terrain = [[0.000, [0.200, 0.200, 0.600]], [0.002, [0.200, 0.200, 0.600]], [0.004, [0.195, 0.210, 0.610]], [0.006, [0.195, 0.210, 0.610]], [0.008, [0.190, 0.221, 0.621]], [0.010, [0.190, 0.221, 0.621]], [0.012, [0.184, 0.231, 0.631]], [0.014, [0.184, 0.231, 0.631]], [0.016, [0.179, 0.242, 0.642]], [0.018, [0.179, 0.242, 0.642]], [0.020, [0.174, 0.252, 0.652]], [0.022, [0.174, 0.252, 0.652]], [0.023, [0.169, 0.263, 0.663]], [0.025, [0.169, 0.263, 0.663]], [0.027, [0.163, 0.273, 0.673]], [0.029, [0.163, 0.273, 0.673]], [0.031, [0.158, 0.284, 0.684]], [0.033, [0.158, 0.284, 0.684]], [0.035, [0.153, 0.294, 0.694]], [0.037, [0.153, 0.294, 0.694]], [0.039, [0.148, 0.305, 0.705]], [0.041, [0.148, 0.305, 0.705]], [0.043, [0.142, 0.315, 0.715]], [0.045, [0.142, 0.315, 0.715]], [0.047, [0.137, 0.325, 0.725]], [0.049, [0.137, 0.325, 0.725]], [0.051, [0.132, 0.336, 0.736]], [0.053, [0.132, 0.336, 0.736]], [0.055, [0.127, 0.346, 0.746]], [0.057, [0.127, 0.346, 0.746]], [0.059, [0.122, 0.357, 0.757]], [0.061, [0.122, 0.357, 0.757]], [0.063, [0.116, 0.367, 0.767]], [0.065, [0.116, 0.367, 0.767]], [0.067, [0.111, 0.378, 0.778]], [0.068, [0.111, 0.378, 0.778]], [0.070, [0.106, 0.388, 0.788]], [0.072, [0.106, 0.388, 0.788]], [0.074, [0.101, 0.399, 0.799]], [0.076, [0.101, 0.399, 0.799]], [0.078, [0.095, 0.409, 0.809]], [0.080, [0.095, 0.409, 0.809]], [0.082, [0.090, 0.420, 0.820]], [0.084, [0.090, 0.420, 0.820]], [0.086, [0.085, 0.430, 0.830]], [0.088, [0.085, 0.430, 0.830]], [0.090, [0.080, 0.441, 0.841]], [0.092, [0.080, 0.441, 0.841]], [0.094, [0.075, 0.451, 0.851]], [0.096, [0.075, 0.451, 0.851]], [0.098, [0.069, 0.461, 0.861]], [0.100, [0.069, 0.461, 0.861]], [0.102, [0.064, 0.472, 0.872]], [0.104, [0.064, 0.472, 0.872]], [0.106, [0.059, 0.482, 0.882]], [0.108, [0.059, 0.482, 0.882]], [0.110, [0.054, 0.493, 0.893]], [0.112, [0.054, 0.493, 0.893]], [0.114, [0.048, 0.503, 0.903]], [0.115, [0.048, 0.503, 0.903]], [0.117, [0.043, 0.514, 0.914]], [0.119, [0.043, 0.514, 0.914]], [0.121, [0.038, 0.524, 0.924]], [0.123, [0.038, 0.524, 0.924]], [0.125, [0.033, 0.535, 0.935]], [0.127, [0.033, 0.535, 0.935]], [0.129, [0.027, 0.545, 0.945]], [0.131, [0.027, 0.545, 0.945]], [0.133, [0.022, 0.556, 0.956]], [0.135, [0.022, 0.556, 0.956]], [0.137, [0.017, 0.566, 0.966]], [0.139, [0.017, 0.566, 0.966]], [0.141, [0.012, 0.576, 0.976]], [0.143, [0.012, 0.576, 0.976]], [0.145, [0.007, 0.587, 0.987]], [0.147, [0.007, 0.587, 0.987]], [0.149, [0.001, 0.597, 0.997]], [0.151, [0.001, 0.597, 0.997]], [0.153, [0.000, 0.606, 0.982]], [0.155, [0.000, 0.606, 0.982]], [0.157, [0.000, 0.614, 0.959]], [0.159, [0.000, 0.614, 0.959]], [0.160, [0.000, 0.622, 0.935]], [0.162, [0.000, 0.622, 0.935]], [0.164, [0.000, 0.629, 0.912]], [0.166, [0.000, 0.629, 0.912]], [0.168, [0.000, 0.637, 0.888]], [0.170, [0.000, 0.637, 0.888]], [0.172, [0.000, 0.645, 0.865]], [0.174, [0.000, 0.645, 0.865]], [0.176, [0.000, 0.653, 0.841]], [0.178, [0.000, 0.653, 0.841]], [0.180, [0.000, 0.661, 0.818]], [0.182, [0.000, 0.661, 0.818]], [0.184, [0.000, 0.669, 0.794]], [0.186, [0.000, 0.669, 0.794]], [0.188, [0.000, 0.676, 0.771]], [0.190, [0.000, 0.676, 0.771]], [0.192, [0.000, 0.684, 0.747]], [0.194, [0.000, 0.684, 0.747]], [0.196, [0.000, 0.692, 0.724]], [0.198, [0.000, 0.692, 0.724]], [0.200, [0.000, 0.700, 0.700]], [0.202, [0.000, 0.700, 0.700]], [0.204, [0.000, 0.708, 0.676]], [0.205, [0.000, 0.708, 0.676]], [0.207, [0.000, 0.716, 0.653]], [0.209, [0.000, 0.716, 0.653]], [0.211, [0.000, 0.724, 0.629]], [0.213, [0.000, 0.724, 0.629]], [0.215, [0.000, 0.731, 0.606]], [0.217, [0.000, 0.731, 0.606]], [0.219, [0.000, 0.739, 0.582]], [0.221, [0.000, 0.739, 0.582]], [0.223, [0.000, 0.747, 0.559]], [0.225, [0.000, 0.747, 0.559]], [0.227, [0.000, 0.755, 0.535]], [0.229, [0.000, 0.755, 0.535]], [0.231, [0.000, 0.763, 0.512]], [0.233, [0.000, 0.763, 0.512]], [0.235, [0.000, 0.771, 0.488]], [0.237, [0.000, 0.771, 0.488]], [0.239, [0.000, 0.778, 0.465]], [0.241, [0.000, 0.778, 0.465]], [0.243, [0.000, 0.786, 0.441]], [0.245, [0.000, 0.786, 0.441]], [0.247, [0.000, 0.794, 0.418]], [0.249, [0.000, 0.794, 0.418]], [0.250, [0.004, 0.801, 0.401]], [0.252, [0.004, 0.801, 0.401]], [0.254, [0.020, 0.804, 0.404]], [0.256, [0.020, 0.804, 0.404]], [0.258, [0.035, 0.807, 0.407]], [0.260, [0.035, 0.807, 0.407]], [0.262, [0.051, 0.810, 0.410]], [0.264, [0.051, 0.810, 0.410]], [0.266, [0.067, 0.813, 0.413]], [0.268, [0.067, 0.813, 0.413]], [0.270, [0.082, 0.816, 0.416]], [0.272, [0.082, 0.816, 0.416]], [0.274, [0.098, 0.820, 0.420]], [0.276, [0.098, 0.820, 0.420]], [0.278, [0.114, 0.823, 0.423]], [0.280, [0.114, 0.823, 0.423]], [0.282, [0.129, 0.826, 0.426]], [0.284, [0.129, 0.826, 0.426]], [0.286, [0.145, 0.829, 0.429]], [0.288, [0.145, 0.829, 0.429]], [0.290, [0.161, 0.832, 0.432]], [0.292, [0.161, 0.832, 0.432]], [0.294, [0.176, 0.835, 0.435]], [0.295, [0.176, 0.835, 0.435]], [0.297, [0.192, 0.838, 0.438]], [0.299, [0.192, 0.838, 0.438]], [0.301, [0.208, 0.842, 0.442]], [0.303, [0.208, 0.842, 0.442]], [0.305, [0.224, 0.845, 0.445]], [0.307, [0.224, 0.845, 0.445]], [0.309, [0.239, 0.848, 0.448]], [0.311, [0.239, 0.848, 0.448]], [0.313, [0.255, 0.851, 0.451]], [0.315, [0.255, 0.851, 0.451]], [0.317, [0.271, 0.854, 0.454]], [0.319, [0.271, 0.854, 0.454]], [0.321, [0.286, 0.857, 0.457]], [0.323, [0.286, 0.857, 0.457]], [0.325, [0.302, 0.860, 0.460]], [0.327, [0.302, 0.860, 0.460]], [0.329, [0.318, 0.864, 0.464]], [0.331, [0.318, 0.864, 0.464]], [0.333, [0.333, 0.867, 0.467]], [0.335, [0.333, 0.867, 0.467]], [0.337, [0.349, 0.870, 0.470]], [0.339, [0.349, 0.870, 0.470]], [0.341, [0.365, 0.873, 0.473]], [0.342, [0.365, 0.873, 0.473]], [0.344, [0.380, 0.876, 0.476]], [0.346, [0.380, 0.876, 0.476]], [0.348, [0.396, 0.879, 0.479]], [0.350, [0.396, 0.879, 0.479]], [0.352, [0.412, 0.882, 0.482]], [0.354, [0.412, 0.882, 0.482]], [0.356, [0.427, 0.885, 0.485]], [0.358, [0.427, 0.885, 0.485]], [0.360, [0.443, 0.889, 0.489]], [0.362, [0.443, 0.889, 0.489]], [0.364, [0.459, 0.892, 0.492]], [0.366, [0.459, 0.892, 0.492]], [0.368, [0.475, 0.895, 0.495]], [0.370, [0.475, 0.895, 0.495]], [0.372, [0.490, 0.898, 0.498]], [0.374, [0.490, 0.898, 0.498]], [0.376, [0.506, 0.901, 0.501]], [0.378, [0.506, 0.901, 0.501]], [0.380, [0.522, 0.904, 0.504]], [0.382, [0.522, 0.904, 0.504]], [0.384, [0.537, 0.907, 0.507]], [0.386, [0.537, 0.907, 0.507]], [0.387, [0.553, 0.911, 0.511]], [0.389, [0.553, 0.911, 0.511]], [0.391, [0.569, 0.914, 0.514]], [0.393, [0.569, 0.914, 0.514]], [0.395, [0.584, 0.917, 0.517]], [0.397, [0.584, 0.917, 0.517]], [0.399, [0.600, 0.920, 0.520]], [0.401, [0.600, 0.920, 0.520]], [0.403, [0.616, 0.923, 0.523]], [0.405, [0.616, 0.923, 0.523]], [0.407, [0.631, 0.926, 0.526]], [0.409, [0.631, 0.926, 0.526]], [0.411, [0.647, 0.929, 0.529]], [0.413, [0.647, 0.929, 0.529]], [0.415, [0.663, 0.933, 0.533]], [0.417, [0.663, 0.933, 0.533]], [0.419, [0.678, 0.936, 0.536]], [0.421, [0.678, 0.936, 0.536]], [0.423, [0.694, 0.939, 0.539]], [0.425, [0.694, 0.939, 0.539]], [0.427, [0.710, 0.942, 0.542]], [0.429, [0.710, 0.942, 0.542]], [0.431, [0.725, 0.945, 0.545]], [0.432, [0.725, 0.945, 0.545]], [0.434, [0.741, 0.948, 0.548]], [0.436, [0.741, 0.948, 0.548]], [0.438, [0.757, 0.951, 0.551]], [0.440, [0.757, 0.951, 0.551]], [0.442, [0.773, 0.955, 0.555]], [0.444, [0.773, 0.955, 0.555]], [0.446, [0.788, 0.958, 0.558]], [0.448, [0.788, 0.958, 0.558]], [0.450, [0.804, 0.961, 0.561]], [0.452, [0.804, 0.961, 0.561]], [0.454, [0.820, 0.964, 0.564]], [0.456, [0.820, 0.964, 0.564]], [0.458, [0.835, 0.967, 0.567]], [0.460, [0.835, 0.967, 0.567]], [0.462, [0.851, 0.970, 0.570]], [0.464, [0.851, 0.970, 0.570]], [0.466, [0.867, 0.973, 0.573]], [0.468, [0.867, 0.973, 0.573]], [0.470, [0.882, 0.976, 0.576]], [0.472, [0.882, 0.976, 0.576]], [0.474, [0.898, 0.980, 0.580]], [0.476, [0.898, 0.980, 0.580]], [0.477, [0.914, 0.983, 0.583]], [0.479, [0.914, 0.983, 0.583]], [0.481, [0.929, 0.986, 0.586]], [0.483, [0.929, 0.986, 0.586]], [0.485, [0.945, 0.989, 0.589]], [0.487, [0.945, 0.989, 0.589]], [0.489, [0.961, 0.992, 0.592]], [0.491, [0.961, 0.992, 0.592]], [0.493, [0.976, 0.995, 0.595]], [0.495, [0.976, 0.995, 0.595]], [0.497, [0.992, 0.998, 0.598]], [0.499, [0.992, 0.998, 0.598]], [0.501, [0.996, 0.995, 0.598]], [0.503, [0.996, 0.995, 0.598]], [0.505, [0.988, 0.985, 0.594]], [0.507, [0.988, 0.985, 0.594]], [0.509, [0.980, 0.975, 0.589]], [0.511, [0.980, 0.975, 0.589]], [0.513, [0.973, 0.965, 0.585]], [0.515, [0.973, 0.965, 0.585]], [0.517, [0.965, 0.955, 0.581]], [0.519, [0.965, 0.955, 0.581]], [0.521, [0.957, 0.945, 0.577]], [0.523, [0.957, 0.945, 0.577]], [0.524, [0.949, 0.935, 0.572]], [0.526, [0.949, 0.935, 0.572]], [0.528, [0.941, 0.925, 0.568]], [0.530, [0.941, 0.925, 0.568]], [0.532, [0.933, 0.915, 0.564]], [0.534, [0.933, 0.915, 0.564]], [0.536, [0.925, 0.905, 0.560]], [0.538, [0.925, 0.905, 0.560]], [0.540, [0.918, 0.895, 0.556]], [0.542, [0.918, 0.895, 0.556]], [0.544, [0.910, 0.885, 0.551]], [0.546, [0.910, 0.885, 0.551]], [0.548, [0.902, 0.875, 0.547]], [0.550, [0.902, 0.875, 0.547]], [0.552, [0.894, 0.864, 0.543]], [0.554, [0.894, 0.864, 0.543]], [0.556, [0.886, 0.854, 0.539]], [0.558, [0.886, 0.854, 0.539]], [0.560, [0.878, 0.844, 0.534]], [0.562, [0.878, 0.844, 0.534]], [0.564, [0.871, 0.834, 0.530]], [0.566, [0.871, 0.834, 0.530]], [0.568, [0.863, 0.824, 0.526]], [0.569, [0.863, 0.824, 0.526]], [0.571, [0.855, 0.814, 0.522]], [0.573, [0.855, 0.814, 0.522]], [0.575, [0.847, 0.804, 0.517]], [0.577, [0.847, 0.804, 0.517]], [0.579, [0.839, 0.794, 0.513]], [0.581, [0.839, 0.794, 0.513]], [0.583, [0.831, 0.784, 0.509]], [0.585, [0.831, 0.784, 0.509]], [0.587, [0.824, 0.774, 0.505]], [0.589, [0.824, 0.774, 0.505]], [0.591, [0.816, 0.764, 0.500]], [0.593, [0.816, 0.764, 0.500]], [0.595, [0.808, 0.754, 0.496]], [0.597, [0.808, 0.754, 0.496]], [0.599, [0.800, 0.744, 0.492]], [0.601, [0.800, 0.744, 0.492]], [0.603, [0.792, 0.734, 0.488]], [0.605, [0.792, 0.734, 0.488]], [0.607, [0.784, 0.724, 0.484]], [0.609, [0.784, 0.724, 0.484]], [0.611, [0.776, 0.714, 0.479]], [0.613, [0.776, 0.714, 0.479]], [0.614, [0.769, 0.704, 0.475]], [0.616, [0.769, 0.704, 0.475]], [0.618, [0.761, 0.694, 0.471]], [0.620, [0.761, 0.694, 0.471]], [0.622, [0.753, 0.684, 0.467]], [0.624, [0.753, 0.684, 0.467]], [0.626, [0.745, 0.674, 0.462]], [0.628, [0.745, 0.674, 0.462]], [0.630, [0.737, 0.664, 0.458]], [0.632, [0.737, 0.664, 0.458]], [0.634, [0.729, 0.654, 0.454]], [0.636, [0.729, 0.654, 0.454]], [0.638, [0.722, 0.644, 0.450]], [0.640, [0.722, 0.644, 0.450]], [0.642, [0.714, 0.634, 0.445]], [0.644, [0.714, 0.634, 0.445]], [0.646, [0.706, 0.624, 0.441]], [0.648, [0.706, 0.624, 0.441]], [0.650, [0.698, 0.613, 0.437]], [0.652, [0.698, 0.613, 0.437]], [0.654, [0.690, 0.603, 0.433]], [0.656, [0.690, 0.603, 0.433]], [0.658, [0.682, 0.593, 0.428]], [0.659, [0.682, 0.593, 0.428]], [0.661, [0.675, 0.583, 0.424]], [0.663, [0.675, 0.583, 0.424]], [0.665, [0.667, 0.573, 0.420]], [0.667, [0.667, 0.573, 0.420]], [0.669, [0.659, 0.563, 0.416]], [0.671, [0.659, 0.563, 0.416]], [0.673, [0.651, 0.553, 0.412]], [0.675, [0.651, 0.553, 0.412]], [0.677, [0.643, 0.543, 0.407]], [0.679, [0.643, 0.543, 0.407]], [0.681, [0.635, 0.533, 0.403]], [0.683, [0.635, 0.533, 0.403]], [0.685, [0.627, 0.523, 0.399]], [0.687, [0.627, 0.523, 0.399]], [0.689, [0.620, 0.513, 0.395]], [0.691, [0.620, 0.513, 0.395]], [0.693, [0.612, 0.503, 0.390]], [0.695, [0.612, 0.503, 0.390]], [0.697, [0.604, 0.493, 0.386]], [0.699, [0.604, 0.493, 0.386]], [0.701, [0.596, 0.483, 0.382]], [0.703, [0.596, 0.483, 0.382]], [0.705, [0.588, 0.473, 0.378]], [0.706, [0.588, 0.473, 0.378]], [0.708, [0.580, 0.463, 0.373]], [0.710, [0.580, 0.463, 0.373]], [0.712, [0.573, 0.453, 0.369]], [0.714, [0.573, 0.453, 0.369]], [0.716, [0.565, 0.443, 0.365]], [0.718, [0.565, 0.443, 0.365]], [0.720, [0.557, 0.433, 0.361]], [0.722, [0.557, 0.433, 0.361]], [0.724, [0.549, 0.423, 0.356]], [0.726, [0.549, 0.423, 0.356]], [0.728, [0.541, 0.413, 0.352]], [0.730, [0.541, 0.413, 0.352]], [0.732, [0.533, 0.403, 0.348]], [0.734, [0.533, 0.403, 0.348]], [0.736, [0.525, 0.393, 0.344]], [0.738, [0.525, 0.393, 0.344]], [0.740, [0.518, 0.383, 0.340]], [0.742, [0.518, 0.383, 0.340]], [0.744, [0.510, 0.373, 0.335]], [0.746, [0.510, 0.373, 0.335]], [0.748, [0.502, 0.363, 0.331]], [0.750, [0.502, 0.363, 0.331]], [0.751, [0.506, 0.368, 0.338]], [0.753, [0.506, 0.368, 0.338]], [0.755, [0.514, 0.378, 0.348]], [0.757, [0.514, 0.378, 0.348]], [0.759, [0.522, 0.388, 0.359]], [0.761, [0.522, 0.388, 0.359]], [0.763, [0.529, 0.398, 0.369]], [0.765, [0.529, 0.398, 0.369]], [0.767, [0.537, 0.408, 0.380]], [0.769, [0.537, 0.408, 0.380]], [0.771, [0.545, 0.418, 0.390]], [0.773, [0.545, 0.418, 0.390]], [0.775, [0.553, 0.428, 0.401]], [0.777, [0.553, 0.428, 0.401]], [0.779, [0.561, 0.438, 0.411]], [0.781, [0.561, 0.438, 0.411]], [0.783, [0.569, 0.448, 0.422]], [0.785, [0.569, 0.448, 0.422]], [0.787, [0.576, 0.458, 0.432]], [0.789, [0.576, 0.458, 0.432]], [0.791, [0.584, 0.468, 0.443]], [0.793, [0.584, 0.468, 0.443]], [0.795, [0.592, 0.478, 0.453]], [0.796, [0.592, 0.478, 0.453]], [0.798, [0.600, 0.488, 0.464]], [0.800, [0.600, 0.488, 0.464]], [0.802, [0.608, 0.498, 0.475]], [0.804, [0.608, 0.498, 0.475]], [0.806, [0.616, 0.508, 0.485]], [0.808, [0.616, 0.508, 0.485]], [0.810, [0.624, 0.518, 0.496]], [0.812, [0.624, 0.518, 0.496]], [0.814, [0.631, 0.528, 0.506]], [0.816, [0.631, 0.528, 0.506]], [0.818, [0.639, 0.538, 0.517]], [0.820, [0.639, 0.538, 0.517]], [0.822, [0.647, 0.548, 0.527]], [0.824, [0.647, 0.548, 0.527]], [0.826, [0.655, 0.558, 0.538]], [0.828, [0.655, 0.558, 0.538]], [0.830, [0.663, 0.568, 0.548]], [0.832, [0.663, 0.568, 0.548]], [0.834, [0.671, 0.578, 0.559]], [0.836, [0.671, 0.578, 0.559]], [0.838, [0.678, 0.588, 0.569]], [0.840, [0.678, 0.588, 0.569]], [0.841, [0.686, 0.598, 0.580]], [0.843, [0.686, 0.598, 0.580]], [0.845, [0.694, 0.608, 0.590]], [0.847, [0.694, 0.608, 0.590]], [0.849, [0.702, 0.619, 0.601]], [0.851, [0.702, 0.619, 0.601]], [0.853, [0.710, 0.629, 0.611]], [0.855, [0.710, 0.629, 0.611]], [0.857, [0.718, 0.639, 0.622]], [0.859, [0.718, 0.639, 0.622]], [0.861, [0.725, 0.649, 0.632]], [0.863, [0.725, 0.649, 0.632]], [0.865, [0.733, 0.659, 0.643]], [0.867, [0.733, 0.659, 0.643]], [0.869, [0.741, 0.669, 0.653]], [0.871, [0.741, 0.669, 0.653]], [0.873, [0.749, 0.679, 0.664]], [0.875, [0.749, 0.679, 0.664]], [0.877, [0.757, 0.689, 0.674]], [0.879, [0.757, 0.689, 0.674]], [0.881, [0.765, 0.699, 0.685]], [0.883, [0.765, 0.699, 0.685]], [0.885, [0.773, 0.709, 0.695]], [0.886, [0.773, 0.709, 0.695]], [0.888, [0.780, 0.719, 0.706]], [0.890, [0.780, 0.719, 0.706]], [0.892, [0.788, 0.729, 0.716]], [0.894, [0.788, 0.729, 0.716]], [0.896, [0.796, 0.739, 0.727]], [0.898, [0.796, 0.739, 0.727]], [0.900, [0.804, 0.749, 0.737]], [0.902, [0.804, 0.749, 0.737]], [0.904, [0.812, 0.759, 0.748]], [0.906, [0.812, 0.759, 0.748]], [0.908, [0.820, 0.769, 0.758]], [0.910, [0.820, 0.769, 0.758]], [0.912, [0.827, 0.779, 0.769]], [0.914, [0.827, 0.779, 0.769]], [0.916, [0.835, 0.789, 0.779]], [0.918, [0.835, 0.789, 0.779]], [0.920, [0.843, 0.799, 0.790]], [0.922, [0.843, 0.799, 0.790]], [0.924, [0.851, 0.809, 0.800]], [0.926, [0.851, 0.809, 0.800]], [0.928, [0.859, 0.819, 0.811]], [0.930, [0.859, 0.819, 0.811]], [0.932, [0.867, 0.829, 0.821]], [0.933, [0.867, 0.829, 0.821]], [0.935, [0.875, 0.839, 0.832]], [0.937, [0.875, 0.839, 0.832]], [0.939, [0.882, 0.849, 0.842]], [0.941, [0.882, 0.849, 0.842]], [0.943, [0.890, 0.859, 0.853]], [0.945, [0.890, 0.859, 0.853]], [0.947, [0.898, 0.869, 0.863]], [0.949, [0.898, 0.869, 0.863]], [0.951, [0.906, 0.880, 0.874]], [0.953, [0.906, 0.880, 0.874]], [0.955, [0.914, 0.890, 0.884]], [0.957, [0.914, 0.890, 0.884]], [0.959, [0.922, 0.900, 0.895]], [0.961, [0.922, 0.900, 0.895]], [0.963, [0.929, 0.910, 0.905]], [0.965, [0.929, 0.910, 0.905]], [0.967, [0.937, 0.920, 0.916]], [0.969, [0.937, 0.920, 0.916]], [0.971, [0.945, 0.930, 0.926]], [0.973, [0.945, 0.930, 0.926]], [0.975, [0.953, 0.940, 0.937]], [0.977, [0.953, 0.940, 0.937]], [0.978, [0.961, 0.950, 0.947]], [0.980, [0.961, 0.950, 0.947]], [0.982, [0.969, 0.960, 0.958]], [0.984, [0.969, 0.960, 0.958]], [0.986, [0.976, 0.970, 0.968]], [0.988, [0.976, 0.970, 0.968]], [0.990, [0.984, 0.980, 0.979]], [0.992, [0.984, 0.980, 0.979]], [0.994, [0.992, 0.990, 0.989]], [0.996, [0.992, 0.990, 0.989]], [0.998, [1.000, 1.000, 1.000]], [1.000, [1.000, 1.000, 1.000]]];
H.colormap_thermal = [[0.000,[0.01555601,0.13824425,0.20181089]],[0.004,[0.01620184,0.14105074,0.20897651]],[0.008,[0.01685649,0.14382701,0.21623868]],[0.012,[0.01752640,0.14657173,0.22359970]],[0.016,[0.01821872,0.14928346,0.23106187]],[0.020,[0.01894138,0.15196073,0.23862748]],[0.024,[0.01969968,0.15460145,0.24630497]],[0.027,[0.02050332,0.15720378,0.25409711]],[0.031,[0.02136721,0.15976645,0.26199915]],[0.035,[0.02230341,0.16228755,0.27001321]],[0.039,[0.02332520,0.16476505,0.27814139]],[0.043,[0.02444728,0.16719678,0.28638573]],[0.047,[0.02568582,0.16958042,0.29474817]],[0.051,[0.02705867,0.17191350,0.30323056]],[0.055,[0.02858553,0.17419338,0.31183463]],[0.059,[0.03028808,0.17641726,0.32056191]],[0.063,[0.03219022,0.17858215,0.32941369]],[0.067,[0.03431826,0.18068487,0.33839101]],[0.071,[0.03670118,0.18272205,0.34749451]],[0.075,[0.03937082,0.18469014,0.35672441]],[0.078,[0.04230474,0.18658537,0.36608039]],[0.082,[0.04544128,0.18840380,0.37556146]],[0.086,[0.04879889,0.19014130,0.38516584]],[0.090,[0.05238565,0.19179358,0.39489082]],[0.094,[0.05620897,0.19335621,0.40473254]],[0.098,[0.06027561,0.19482469,0.41468582]],[0.102,[0.06459519,0.19618775,0.42477146]],[0.106,[0.06917294,0.19744583,0.43495728]],[0.110,[0.07401398,0.19859437,0.44523225]],[0.114,[0.07912633,0.19962514,0.45559656]],[0.118,[0.08452075,0.20052842,0.46605087]],[0.122,[0.09019392,0.20130794,0.47654788]],[0.125,[0.09616431,0.20194725,0.48710445]],[0.129,[0.10242540,0.20245202,0.49766462]],[0.133,[0.10899443,0.20280889,0.50822709]],[0.137,[0.11585974,0.20302735,0.51872453]],[0.141,[0.12304243,0.20309380,0.52914838]],[0.145,[0.13052767,0.20302178,0.53942012]],[0.149,[0.13830991,0.20281956,0.54947678]],[0.153,[0.14637971,0.20250018,0.55924613]],[0.157,[0.15471863,0.20208507,0.56864226]],[0.161,[0.16329705,0.20160546,0.57756769]],[0.165,[0.17207282,0.20110273,0.58591838]],[0.169,[0.18099176,0.20062705,0.59359182]],[0.173,[0.18999022,0.20023416,0.60049707]],[0.176,[0.19899974,0.19998029,0.60656515]],[0.180,[0.20795298,0.19991643,0.61175706]],[0.184,[0.21678952,0.20008303,0.61606739]],[0.188,[0.22546043,0.20050671,0.61952279]],[0.192,[0.23393063,0.20119920,0.62217608]],[0.196,[0.24217907,0.20215872,0.62409793]],[0.200,[0.25019713,0.20337273,0.62536824]],[0.204,[0.25798611,0.20482134,0.62606879]],[0.208,[0.26555442,0.20648047,0.62627797]],[0.212,[0.27291504,0.20832446,0.62606758]],[0.216,[0.28008339,0.21032792,0.62550133]],[0.220,[0.28706751,0.21246914,0.62464200]],[0.224,[0.29388514,0.21472543,0.62353802]],[0.227,[0.30055772,0.21707565,0.62222519]],[0.231,[0.30708438,0.21950598,0.62075550]],[0.235,[0.31349163,0.22199831,0.61914522]],[0.239,[0.31977984,0.22454204,0.61743434]],[0.243,[0.32596955,0.22712412,0.61563293]],[0.247,[0.33205791,0.22973736,0.61377715]],[0.251,[0.33806601,0.23237153,0.61186606]],[0.255,[0.34399174,0.23502151,0.60992807]],[0.259,[0.34984607,0.23768089,0.60796949]],[0.263,[0.35563846,0.24034440,0.60599535]],[0.267,[0.36136863,0.24300892,0.60402414]],[0.271,[0.36704345,0.24567078,0.60206076]],[0.275,[0.37267088,0.24832670,0.60010594]],[0.278,[0.37825480,0.25097436,0.59816563]],[0.282,[0.38379608,0.25361228,0.59624988]],[0.286,[0.38929883,0.25623877,0.59436180]],[0.290,[0.39476910,0.25885207,0.59249964]],[0.294,[0.40020989,0.26145107,0.59066609]],[0.298,[0.40562409,0.26403484,0.58886331]],[0.302,[0.41101442,0.26660262,0.58709291]],[0.306,[0.41638322,0.26915383,0.58535660]],[0.310,[0.42173132,0.27168825,0.58365836]],[0.314,[0.42706343,0.27420503,0.58199410]],[0.318,[0.43238181,0.27670380,0.58036393]],[0.322,[0.43768862,0.27918426,0.57876764]],[0.325,[0.44298597,0.28164615,0.57720480]],[0.329,[0.44827587,0.28408925,0.57567472]],[0.333,[0.45356026,0.28651338,0.57417648]],[0.337,[0.45884104,0.28891838,0.57270899]],[0.341,[0.46412001,0.29130410,0.57127095]],[0.345,[0.46939893,0.29367044,0.56986090]],[0.349,[0.47467951,0.29601729,0.56847725]],[0.353,[0.47996336,0.29834456,0.56711823]],[0.357,[0.48525207,0.30065217,0.56578195]],[0.361,[0.49054716,0.30294008,0.56446640]],[0.365,[0.49585007,0.30520822,0.56316946]],[0.369,[0.50116221,0.30745656,0.56188888]],[0.373,[0.50648491,0.30968508,0.56062233]],[0.376,[0.51181943,0.31189376,0.55936737]],[0.380,[0.51716699,0.31408263,0.55812148]],[0.384,[0.52252871,0.31625172,0.55688205]],[0.388,[0.52790567,0.31840106,0.55564642]],[0.392,[0.53329886,0.32053073,0.55441182]],[0.396,[0.53870920,0.32264084,0.55317546]],[0.400,[0.54413753,0.32473150,0.55193448]],[0.404,[0.54958461,0.32680287,0.55068596]],[0.408,[0.55505113,0.32885514,0.54942696]],[0.412,[0.56053768,0.33088852,0.54815451]],[0.416,[0.56604476,0.33290327,0.54686563]],[0.420,[0.57157236,0.33489987,0.54555812]],[0.424,[0.57712131,0.33687845,0.54422801]],[0.427,[0.58269186,0.33883938,0.54287227]],[0.431,[0.58828416,0.34078308,0.54148789]],[0.435,[0.59389827,0.34271002,0.54007187]],[0.439,[0.59953415,0.34462069,0.53862124]],[0.443,[0.60519167,0.34651565,0.53713308]],[0.447,[0.61087061,0.34839552,0.53560450]],[0.451,[0.61657065,0.35026093,0.53403268]],[0.455,[0.62229138,0.35211260,0.53241484]],[0.459,[0.62803229,0.35395127,0.53074831]],[0.463,[0.63379279,0.35577776,0.52903045]],[0.467,[0.63957219,0.35759292,0.52725878]],[0.471,[0.64536975,0.35939765,0.52543076]],[0.475,[0.65118470,0.36119285,0.52354391]],[0.478,[0.65701610,0.36297956,0.52159597]],[0.482,[0.66286293,0.36475881,0.51958481]],[0.486,[0.66872410,0.36653173,0.51750839]],[0.490,[0.67459845,0.36829947,0.51536480]],[0.494,[0.68048472,0.37006325,0.51315222]],[0.498,[0.68638162,0.37182432,0.51086898]],[0.502,[0.69228775,0.37358401,0.50851352]],[0.506,[0.69820166,0.37534367,0.50608439]],[0.510,[0.70412186,0.37710473,0.50358028]],[0.514,[0.71004688,0.37886859,0.50099965]],[0.518,[0.71597525,0.38063670,0.49834106]],[0.522,[0.72190503,0.38241075,0.49560410]],[0.525,[0.72783443,0.38419239,0.49278795]],[0.529,[0.73376164,0.38598330,0.48989190]],[0.533,[0.73968475,0.38778523,0.48691538]],[0.537,[0.74560180,0.38960001,0.48385794]],[0.541,[0.75151077,0.39142951,0.48071927]],[0.545,[0.75740957,0.39327566,0.47749914]],[0.549,[0.76329604,0.39514048,0.47419750]],[0.553,[0.76916794,0.39702603,0.47081439]],[0.557,[0.77502298,0.39893446,0.46735000]],[0.561,[0.78085877,0.40086800,0.46380463]],[0.565,[0.78667286,0.40282892,0.46017874]],[0.569,[0.79246271,0.40481960,0.45647292]],[0.573,[0.79822569,0.40684249,0.45268792]],[0.576,[0.80395908,0.40890011,0.44882462]],[0.580,[0.80966007,0.41099506,0.44488409]],[0.584,[0.81532584,0.41313001,0.44086720]],[0.588,[0.82095338,0.41530771,0.43677537]],[0.592,[0.82653946,0.41753108,0.43261066]],[0.596,[0.83208085,0.41980305,0.42837489]],[0.600,[0.83757423,0.42212661,0.42407011]],[0.604,[0.84301618,0.42450482,0.41969860]],[0.608,[0.84840316,0.42694082,0.41526288]],[0.612,[0.85373155,0.42943780,0.41076573]],[0.616,[0.85899760,0.43199897,0.40621024]],[0.620,[0.86419750,0.43462760,0.40159975]],[0.624,[0.86932733,0.43732696,0.39693796]],[0.627,[0.87438311,0.44010033,0.39222887]],[0.631,[0.87936081,0.44295096,0.38747682]],[0.635,[0.88425632,0.44588207,0.38268654]],[0.639,[0.88906554,0.44889681,0.37786308]],[0.643,[0.89378437,0.45199824,0.37301160]],[0.647,[0.89840867,0.45518929,0.36813827]],[0.651,[0.90293439,0.45847274,0.36324942]],[0.655,[0.90735756,0.46185117,0.35835166]],[0.659,[0.91167433,0.46532694,0.35345197]],[0.663,[0.91588100,0.46890217,0.34855767]],[0.667,[0.91997406,0.47257868,0.34367638]],[0.671,[0.92395023,0.47635796,0.33881601]],[0.675,[0.92780648,0.48024117,0.33398471]],[0.678,[0.93154008,0.48422909,0.32919080]],[0.682,[0.93514863,0.48832213,0.32444275]],[0.686,[0.93863008,0.49252027,0.31974912]],[0.690,[0.94198274,0.49682311,0.31511847]],[0.694,[0.94520535,0.50122981,0.31055931]],[0.698,[0.94829701,0.50573917,0.30608003]],[0.702,[0.95125725,0.51034957,0.30168887]],[0.706,[0.95408600,0.51505906,0.29739377]],[0.710,[0.95678355,0.51986536,0.29320240]],[0.714,[0.95935057,0.52476587,0.28912206]],[0.718,[0.96178805,0.52975777,0.28515964]],[0.722,[0.96409730,0.53483802,0.28132156]],[0.725,[0.96627986,0.54000343,0.27761379]],[0.729,[0.96833750,0.54525070,0.27404177]],[0.733,[0.97027215,0.55057645,0.27061043]],[0.737,[0.97208896,0.55597442,0.26733231]],[0.741,[0.97378824,0.56144311,0.26420514]],[0.745,[0.97537225,0.56697917,0.26123210]],[0.749,[0.97684333,0.57257930,0.25841610]],[0.753,[0.97820376,0.57824032,0.25575953]],[0.757,[0.97945570,0.58395922,0.25326432]],[0.761,[0.98060120,0.58973318,0.25093197]],[0.765,[0.98164451,0.59555764,0.24876746]],[0.769,[0.98259580,0.60142353,0.24678389]],[0.773,[0.98344841,0.60733543,0.24496692]],[0.776,[0.98420378,0.61329131,0.24331643]],[0.780,[0.98486309,0.61928934,0.24183204]],[0.784,[0.98543359,0.62532321,0.24052074]],[0.788,[0.98592661,0.63138392,0.23939250]],[0.792,[0.98632908,0.63748058,0.23842850]],[0.796,[0.98664126,0.64361223,0.23762727]],[0.800,[0.98687430,0.64977022,0.23699778]],[0.804,[0.98703872,0.65594684,0.23654600]],[0.808,[0.98711602,0.66215449,0.23625164]],[0.812,[0.98710548,0.66839291,0.23611251]],[0.816,[0.98704522,0.67463615,0.23615516]],[0.820,[0.98690081,0.68090692,0.23634896]],[0.824,[0.98666929,0.68720645,0.23669008]],[0.827,[0.98639295,0.69350720,0.23720252]],[0.831,[0.98603581,0.69983201,0.23785913]],[0.835,[0.98559369,0.70618283,0.23865535]],[0.839,[0.98511668,0.71252856,0.23961378]],[0.843,[0.98455154,0.71890163,0.24070275]],[0.847,[0.98392192,0.72528731,0.24193050]],[0.851,[0.98324116,0.73167761,0.24329811]],[0.855,[0.98246864,0.73809600,0.24478540]],[0.859,[0.98166755,0.74450581,0.24641186]],[0.863,[0.98078113,0.75093941,0.24815276]],[0.867,[0.97983772,0.75738047,0.25001371]],[0.871,[0.97883927,0.76382790,0.25199054]],[0.875,[0.97775747,0.77029690,0.25407166]],[0.878,[0.97664794,0.77675738,0.25626641]],[0.882,[0.97543570,0.78324913,0.25855344]],[0.886,[0.97421070,0.78972470,0.26094721]],[0.890,[0.97288357,0.79623051,0.26342620]],[0.894,[0.97152974,0.80272764,0.26599948]],[0.898,[0.97008613,0.80924798,0.26865290]],[0.902,[0.96860571,0.81576486,0.27138993]],[0.906,[0.96704307,0.82230061,0.27420073]],[0.910,[0.96543772,0.82883583,0.27708584]],[0.914,[0.96375242,0.83538829,0.28003763]],[0.918,[0.96202315,0.84194079,0.28305544]],[0.922,[0.96021049,0.84851164,0.28613254]],[0.925,[0.95835763,0.85508072,0.28926815]],[0.929,[0.95641175,0.86167196,0.29245571]],[0.933,[0.95443484,0.86825730,0.29569479]],[0.937,[0.95234871,0.87487125,0.29897882]],[0.941,[0.95024646,0.88147281,0.30230776]],[0.945,[0.94801413,0.88811109,0.30567520]],[0.949,[0.94578198,0.89473018,0.30908112]],[0.953,[0.94341986,0.90138491,0.31252002]],[0.957,[0.94102862,0.90803285,0.31599064]],[0.961,[0.93853313,0.91470475,0.31948933]],[0.965,[0.93597111,0.92138481,0.32301384]],[0.969,[0.93333760,0.92807483,0.32656155]],[0.973,[0.93059157,0.93479051,0.33012998]],[0.976,[0.92781425,0.94149986,0.33371683]],[0.980,[0.92488992,0.94824702,0.33731997]],[0.984,[0.92194114,0.95498491,0.34093705]],[0.988,[0.91886139,0.96175325,0.34456630]],[0.992,[0.91569318,0.96853549,0.34820569]],[0.996,[0.91244907,0.97532669,0.35185336]],[1.000,[0.90904184,0.98215741,0.35550781]]]
H.colormap_tol_12 = function() {
const colors = H.color_utils.color_cut; 
let result  = colors("3322886699cc88ccee44aa99117733999933ddcc77661100cc6677aa4466882255aa4499")
return result
}
H.colormap_topo = [[0.000,[0.15610197,0.10260825,0.17272157]],[0.004,[0.16148781,0.10863318,0.18344165]],[0.008,[0.16681176,0.11459941,0.19425947]],[0.012,[0.17207033,0.12051292,0.20518607]],[0.016,[0.17725957,0.12637929,0.21623094]],[0.020,[0.18237518,0.13220381,0.22740210]],[0.024,[0.18741252,0.13799155,0.23870629]],[0.027,[0.19236658,0.14374739,0.25014898]],[0.031,[0.19723196,0.14947616,0.26173441]],[0.035,[0.20200284,0.15518269,0.27346550]],[0.039,[0.20667286,0.16087193,0.28534375]],[0.043,[0.21123508,0.16654905,0.29736908]],[0.047,[0.21568192,0.17221954,0.30953956]],[0.051,[0.22000279,0.17788891,0.32185935]],[0.055,[0.22418213,0.18356266,0.33434315]],[0.059,[0.22821552,0.18924937,0.34695853]],[0.063,[0.23209137,0.19495728,0.35969247]],[0.067,[0.23577916,0.20069365,0.37258104]],[0.071,[0.23927601,0.20647121,0.38556163]],[0.075,[0.24254746,0.21230118,0.39865318]],[0.078,[0.24558180,0.21819916,0.41179552]],[0.082,[0.24833066,0.22418177,0.42500332]],[0.086,[0.25077214,0.23027012,0.43820368]],[0.090,[0.25286600,0.23648829,0.45134461]],[0.094,[0.25456757,0.24286438,0.46435576]],[0.098,[0.25583228,0.24943005,0.47713997]],[0.102,[0.25661512,0.25621955,0.48957708]],[0.106,[0.25687291,0.26326808,0.50152514]],[0.110,[0.25660517,0.27060089,0.51279636]],[0.114,[0.25582540,0.27823281,0.52321900]],[0.118,[0.25459786,0.28615608,0.53263702]],[0.122,[0.25303784,0.29433557,0.54094998]],[0.125,[0.25128177,0.30271674,0.54814227]],[0.129,[0.24946824,0.31123536,0.55427663]],[0.133,[0.24771570,0.31982991,0.55947045]],[0.137,[0.24611215,0.32844959,0.56386485]],[0.141,[0.24472203,0.33705469,0.56760298]],[0.145,[0.24357904,0.34561997,0.57081275]],[0.149,[0.24269783,0.35413056,0.57360160]],[0.153,[0.24209470,0.36257399,0.57606540]],[0.157,[0.24175956,0.37094938,0.57827294]],[0.161,[0.24168970,0.37925483,0.58028581]],[0.165,[0.24187844,0.38749100,0.58215425]],[0.169,[0.24230913,0.39566275,0.58391314]],[0.173,[0.24296954,0.40377384,0.58559395]],[0.176,[0.24384618,0.41182872,0.58722185]],[0.180,[0.24492561,0.41983198,0.58881765]],[0.184,[0.24619263,0.42778886,0.59039677]],[0.188,[0.24763144,0.43570484,0.59197068]],[0.192,[0.24922752,0.44358493,0.59354913]],[0.196,[0.25096657,0.45143404,0.59513951]],[0.200,[0.25283469,0.45925694,0.59674727]],[0.204,[0.25481847,0.46705822,0.59837617]],[0.208,[0.25690514,0.47484228,0.60002857]],[0.212,[0.25908258,0.48261330,0.60170558]],[0.216,[0.26133970,0.49037520,0.60340742]],[0.220,[0.26366598,0.49813174,0.60513310]],[0.224,[0.26605166,0.50588653,0.60688050]],[0.227,[0.26848824,0.51364284,0.60864705]],[0.231,[0.27096833,0.52140372,0.61042947]],[0.235,[0.27348573,0.52917194,0.61222386]],[0.239,[0.27603547,0.53695005,0.61402574]],[0.243,[0.27861393,0.54474030,0.61583014]],[0.247,[0.28121892,0.55254470,0.61763160]],[0.251,[0.28384971,0.56036495,0.61942427]],[0.255,[0.28650717,0.56820249,0.62120191]],[0.259,[0.28919353,0.57605855,0.62295759]],[0.263,[0.29191327,0.58393389,0.62468468]],[0.267,[0.29467261,0.59182898,0.62637622]],[0.271,[0.29747971,0.59974400,0.62802499]],[0.275,[0.30034472,0.60767877,0.62962366]],[0.278,[0.30327995,0.61563273,0.63116484]],[0.282,[0.30629992,0.62360498,0.63264111]],[0.286,[0.30942143,0.63159422,0.63404509]],[0.290,[0.31266369,0.63959874,0.63536950]],[0.294,[0.31604829,0.64761640,0.63660727]],[0.298,[0.31959934,0.65564462,0.63775156]],[0.302,[0.32334339,0.66368034,0.63879587]],[0.306,[0.32730951,0.67171999,0.63973418]],[0.310,[0.33152913,0.67975951,0.64056102]],[0.314,[0.33603510,0.68779458,0.64126960]],[0.318,[0.34086403,0.69581978,0.64185693]],[0.322,[0.34605405,0.70382918,0.64232058]],[0.325,[0.35164460,0.71181627,0.64265896]],[0.329,[0.35767625,0.71977391,0.64287199]],[0.333,[0.36418945,0.72769490,0.64295573]],[0.337,[0.37122661,0.73557007,0.64291896]],[0.341,[0.37882784,0.74339025,0.64276831]],[0.345,[0.38703226,0.75114621,0.64250555]],[0.349,[0.39587503,0.75882703,0.64215083]],[0.353,[0.40538835,0.76642231,0.64171516]],[0.357,[0.41559684,0.77392103,0.64122273]],[0.361,[0.42651956,0.78131247,0.64069607]],[0.365,[0.43816347,0.78858638,0.64016943]],[0.369,[0.45052876,0.79573333,0.63967426]],[0.373,[0.46359865,0.80274561,0.63925487]],[0.376,[0.47734697,0.80961729,0.63895382]],[0.380,[0.49173307,0.81634505,0.63881848]],[0.384,[0.50670501,0.82292834,0.63889632]],[0.388,[0.52219973,0.82936979,0.63923462]],[0.392,[0.53814812,0.83567489,0.63987637]],[0.396,[0.55447837,0.84185159,0.64085880]],[0.400,[0.57111152,0.84791128,0.64221712]],[0.404,[0.58798410,0.85386466,0.64397109]],[0.408,[0.60501947,0.85972701,0.64614391]],[0.412,[0.62216818,0.86550998,0.64874031]],[0.416,[0.63937570,0.87122773,0.65176583]],[0.420,[0.65659293,0.87689477,0.65522105]],[0.424,[0.67379331,0.88252137,0.65909617]],[0.427,[0.69094781,0.88811911,0.66338232]],[0.431,[0.70803409,0.89369855,0.66806789]],[0.435,[0.72503584,0.89926913,0.67313935]],[0.439,[0.74194210,0.90483916,0.67858190]],[0.443,[0.75874656,0.91041576,0.68438007]],[0.447,[0.77544679,0.91600497,0.69051825]],[0.451,[0.79204369,0.92161178,0.69698104]],[0.455,[0.80854079,0.92724016,0.70375359]],[0.459,[0.82494386,0.93289321,0.71082186]],[0.463,[0.84124229,0.93857930,0.71817346]],[0.467,[0.85745594,0.94429655,0.72579485]],[0.471,[0.87359867,0.95004456,0.73367476]],[0.475,[0.88965121,0.95583441,0.74180237]],[0.478,[0.90565146,0.96165671,0.75016880]],[0.482,[0.92158503,0.96752052,0.75876468]],[0.486,[0.93747992,0.97341911,0.76758435]],[0.490,[0.95332337,0.97936076,0.77661978]],[0.494,[0.96914884,0.98533575,0.78586971]],[0.498,[0.98493745,0.99135452,0.79532716]],[0.502,[0.05237511,0.14525462,0.07751950]],[0.506,[0.05622629,0.15234575,0.08040279]],[0.510,[0.06007072,0.15939637,0.08324827]],[0.514,[0.06385206,0.16642325,0.08599652]],[0.518,[0.06756460,0.17343110,0.08864073]],[0.522,[0.07121410,0.18042164,0.09118655]],[0.525,[0.07479860,0.18739816,0.09363114]],[0.529,[0.07832197,0.19436234,0.09597820]],[0.533,[0.08178250,0.20131697,0.09822506]],[0.537,[0.08518219,0.20826378,0.10037331]],[0.541,[0.08852454,0.21520401,0.10242633]],[0.545,[0.09181014,0.22213942,0.10438413]],[0.549,[0.09503810,0.22907199,0.10624494]],[0.553,[0.09821011,0.23600297,0.10801001]],[0.557,[0.10132866,0.24293335,0.10968159]],[0.561,[0.10439345,0.24986464,0.11125853]],[0.565,[0.10744783,0.25679111,0.11274372]],[0.569,[0.11062607,0.26369461,0.11409975]],[0.573,[0.11395317,0.27057436,0.11528963]],[0.576,[0.11747681,0.27742505,0.11629085]],[0.580,[0.12130010,0.28423168,0.11709414]],[0.584,[0.12553408,0.29097848,0.11766788]],[0.588,[0.13038764,0.29763234,0.11799100]],[0.592,[0.13617751,0.30413991,0.11804163]],[0.596,[0.14348152,0.31039310,0.11790504]],[0.600,[0.15305228,0.31621942,0.11806584]],[0.604,[0.16474430,0.32155411,0.11958332]],[0.608,[0.17712240,0.32660517,0.12283830]],[0.612,[0.18931867,0.33155435,0.12732714]],[0.616,[0.20114702,0.33646935,0.13258092]],[0.620,[0.21262011,0.34137178,0.13832571]],[0.624,[0.22378149,0.34627031,0.14440020]],[0.627,[0.23468265,0.35116678,0.15071199]],[0.631,[0.24536540,0.35606194,0.15720205]],[0.635,[0.25586109,0.36095689,0.16382800]],[0.639,[0.26625406,0.36584647,0.17036466]],[0.643,[0.27663759,0.37072029,0.17660426]],[0.647,[0.28701208,0.37558154,0.18254481]],[0.651,[0.29737987,0.38043317,0.18817550]],[0.655,[0.30773857,0.38527825,0.19350612]],[0.659,[0.31808832,0.39011939,0.19853932]],[0.663,[0.32842958,0.39495890,0.20327880]],[0.667,[0.33876365,0.39979860,0.20772976]],[0.671,[0.34909207,0.40463998,0.21189883]],[0.675,[0.35941640,0.40948431,0.21579404]],[0.678,[0.36973929,0.41433228,0.21942418]],[0.682,[0.38006295,0.41918451,0.22279906]],[0.686,[0.39038976,0.42404141,0.22592908]],[0.690,[0.40072228,0.42890314,0.22882490]],[0.694,[0.41106294,0.43376980,0.23149737]],[0.698,[0.42141413,0.43864138,0.23395723]],[0.702,[0.43177769,0.44351795,0.23621536]],[0.706,[0.44215546,0.44839956,0.23828226]],[0.710,[0.45254917,0.45328622,0.24016796]],[0.714,[0.46296178,0.45817773,0.24187666]],[0.718,[0.47339641,0.46307389,0.24340974]],[0.722,[0.48385124,0.46797538,0.24478701]],[0.725,[0.49432803,0.47288222,0.24601478]],[0.729,[0.50483300,0.47779364,0.24707865]],[0.733,[0.51536133,0.48271099,0.24800744]],[0.737,[0.52591779,0.48763374,0.24879206]],[0.741,[0.53650285,0.49256227,0.24943844]],[0.745,[0.54711680,0.49749693,0.24995444]],[0.749,[0.55776361,0.50243728,0.25033203]],[0.753,[0.56844027,0.50738469,0.25058622]],[0.757,[0.57915179,0.51233825,0.25070781]],[0.761,[0.58989771,0.51729869,0.25070197]],[0.765,[0.60067806,0.52226643,0.25057588]],[0.769,[0.61149778,0.52724088,0.25031168]],[0.773,[0.62235332,0.53222333,0.24993117]],[0.776,[0.63326785,0.53720503,0.24940344]],[0.780,[0.64424923,0.54217708,0.24883903]],[0.784,[0.65532359,0.54712832,0.24821545]],[0.788,[0.66646636,0.55206786,0.24759595]],[0.792,[0.67770362,0.55698469,0.24695070]],[0.796,[0.68903816,0.56187637,0.24630407]],[0.800,[0.70047119,0.56674037,0.24569912]],[0.804,[0.71201263,0.57156936,0.24518736]],[0.808,[0.72369295,0.57634447,0.24483645]],[0.812,[0.73551687,0.58105048,0.24491639]],[0.816,[0.74752580,0.58562968,0.24620130]],[0.820,[0.75774995,0.59085035,0.25479056]],[0.824,[0.76358250,0.59815404,0.26950603]],[0.827,[0.76850081,0.60596567,0.28413397]],[0.831,[0.77310691,0.61396838,0.29855349]],[0.835,[0.77756525,0.62207514,0.31277420]],[0.839,[0.78192236,0.63025910,0.32685977]],[0.843,[0.78620540,0.63850515,0.34084798]],[0.847,[0.79044260,0.64679979,0.35474363]],[0.851,[0.79465746,0.65513264,0.36854635]],[0.855,[0.79883378,0.66350963,0.38231623]],[0.859,[0.80300880,0.67191619,0.39601182]],[0.863,[0.80715310,0.68036381,0.40970465]],[0.867,[0.81130410,0.68883867,0.42334606]],[0.871,[0.81546028,0.69734200,0.43695373]],[0.875,[0.81960586,0.70588020,0.45056669]],[0.878,[0.82375688,0.71444806,0.46416914]],[0.882,[0.82791974,0.72304408,0.47776020]],[0.886,[0.83209136,0.73167012,0.49135525]],[0.890,[0.83625343,0.74033178,0.50501236]],[0.894,[0.84044455,0.74901631,0.51867978]],[0.898,[0.84466481,0.75772480,0.53236330]],[0.902,[0.84891777,0.76645726,0.54606212]],[0.906,[0.85321235,0.77521210,0.55976559]],[0.910,[0.85754417,0.78399184,0.57348750]],[0.914,[0.86191461,0.79279718,0.58723093]],[0.918,[0.86632509,0.80162882,0.60099888]],[0.922,[0.87078207,0.81048598,0.61478521]],[0.925,[0.87529288,0.81936773,0.62858241]],[0.929,[0.87984960,0.82827745,0.64241060]],[0.933,[0.88446007,0.83721404,0.65626141]],[0.937,[0.88913181,0.84617657,0.67012733]],[0.941,[0.89385581,0.85516857,0.68403072]],[0.945,[0.89865449,0.86418517,0.69793746]],[0.949,[0.90351039,0.87323208,0.71188559]],[0.953,[0.90844483,0.88230484,0.72584328]],[0.957,[0.91345262,0.89140591,0.73982684]],[0.961,[0.91853538,0.90053589,0.75384054]],[0.965,[0.92370190,0.90969368,0.76787582]],[0.969,[0.92895974,0.91887852,0.78192640]],[0.973,[0.93431212,0.92809073,0.79599410]],[0.976,[0.93976490,0.93733003,0.81007590]],[0.980,[0.94531853,0.94659739,0.82417899]],[0.984,[0.95098018,0.95589227,0.83829786]],[0.988,[0.95675604,0.96521443,0.85242849]],[0.992,[0.96265181,0.97456383,0.86656713]],[0.996,[0.96866473,0.98394223,0.88072606]],[1.000,[0.97478922,0.99335194,0.89492284]]]
H.colormap_turbid = [[0.000,[0.91282478,0.96390535,0.67234889]],[0.004,[0.91055414,0.95928721,0.66639076]],[0.008,[0.90828616,0.95468053,0.66046911]],[0.012,[0.90604523,0.95007831,0.65455386]],[0.016,[0.90381505,0.94548499,0.64866493]],[0.020,[0.90160377,0.94089809,0.64279232]],[0.024,[0.89941005,0.93631784,0.63693766]],[0.027,[0.89722833,0.93174568,0.63110756]],[0.031,[0.89506967,0.92717824,0.62528881]],[0.035,[0.89291737,0.92262023,0.61950119]],[0.039,[0.89079231,0.91806535,0.61372008]],[0.043,[0.88866925,0.91352092,0.60797504]],[0.047,[0.88657626,0.90897841,0.60223338]],[0.051,[0.88448221,0.90444699,0.59653114]],[0.055,[0.88241971,0.89991665,0.59083084]],[0.059,[0.88035438,0.89539770,0.58517178]],[0.063,[0.87832071,0.89087940,0.57951484]],[0.067,[0.87628373,0.88637239,0.57389949]],[0.071,[0.87427719,0.88186601,0.56828799]],[0.075,[0.87226814,0.87737042,0.56271705]],[0.078,[0.87028696,0.87287588,0.55715317]],[0.082,[0.86830532,0.86839123,0.55162751]],[0.086,[0.86634766,0.86390849,0.54611354]],[0.090,[0.86439284,0.85943430,0.54063422]],[0.094,[0.86245682,0.85496335,0.53517252]],[0.098,[0.86052811,0.85049922,0.52974081]],[0.102,[0.85861179,0.84604008,0.52433384]],[0.106,[0.85670839,0.84158560,0.51895122]],[0.110,[0.85480977,0.83713834,0.51360152]],[0.114,[0.85293078,0.83269316,0.50826969]],[0.118,[0.85105061,0.82825693,0.50297708]],[0.122,[0.84919219,0.82382169,0.49770079]],[0.125,[0.84733547,0.81939415,0.49246112]],[0.129,[0.84548938,0.81497108,0.48724941]],[0.133,[0.84365489,0.81055198,0.48206501]],[0.137,[0.84181974,0.80614103,0.47691997]],[0.141,[0.84000532,0.80173047,0.47179418]],[0.145,[0.83819092,0.79732754,0.46670762]],[0.149,[0.83638303,0.79292976,0.46165442]],[0.153,[0.83458779,0.78853475,0.45662933]],[0.157,[0.83279191,0.78414721,0.45164484]],[0.161,[0.83100631,0.77976299,0.44669145]],[0.165,[0.82922751,0.77538321,0.44177277]],[0.169,[0.82744797,0.77101054,0.43689575]],[0.173,[0.82567856,0.76664076,0.43205146]],[0.176,[0.82391360,0.76227586,0.42724530]],[0.180,[0.82214756,0.75791781,0.42248232]],[0.184,[0.82038791,0.75356362,0.41775687]],[0.188,[0.81863351,0.74921355,0.41307053]],[0.192,[0.81687743,0.74487018,0.40842935]],[0.196,[0.81512083,0.74053296,0.40383288]],[0.200,[0.81337300,0.73619803,0.39927478]],[0.204,[0.81162258,0.73186978,0.39476429]],[0.208,[0.80986949,0.72754816,0.39030199]],[0.212,[0.80811614,0.72323206,0.38588678]],[0.216,[0.80636635,0.71891976,0.38151687]],[0.220,[0.80461256,0.71461427,0.37719818]],[0.224,[0.80285453,0.71031558,0.37293152]],[0.227,[0.80109199,0.70602372,0.36871773]],[0.231,[0.79933001,0.70173640,0.36455459]],[0.235,[0.79756350,0.69745568,0.36044607]],[0.239,[0.79579060,0.69318226,0.35639404]],[0.243,[0.79401088,0.68891625,0.35239953]],[0.247,[0.79222382,0.68465779,0.34846360]],[0.251,[0.79042938,0.68040682,0.34458712]],[0.255,[0.78862994,0.67616218,0.34076995]],[0.259,[0.78682085,0.67192585,0.33701518]],[0.263,[0.78500150,0.66769808,0.33332391]],[0.267,[0.78317122,0.66347909,0.32969726]],[0.271,[0.78132930,0.65926917,0.32613634]],[0.275,[0.77947503,0.65506860,0.32264222]],[0.278,[0.77760765,0.65087769,0.31921599]],[0.282,[0.77572638,0.64669677,0.31585869]],[0.286,[0.77383044,0.64252620,0.31257131]],[0.290,[0.77191901,0.63836635,0.30935480]],[0.294,[0.76999192,0.63421728,0.30620996]],[0.298,[0.76804758,0.63007976,0.30313777]],[0.302,[0.76608507,0.62595425,0.30013896]],[0.306,[0.76410360,0.62184117,0.29721414]],[0.310,[0.76210238,0.61774092,0.29436388]],[0.314,[0.76008063,0.61365394,0.29158862]],[0.318,[0.75803761,0.60958066,0.28888871]],[0.322,[0.75597255,0.60552149,0.28626438]],[0.325,[0.75388476,0.60147688,0.28371577]],[0.329,[0.75177354,0.59744726,0.28124289]],[0.333,[0.74963858,0.59343284,0.27884576]],[0.337,[0.74747902,0.58943418,0.27652413]],[0.341,[0.74529416,0.58545174,0.27427764]],[0.345,[0.74308341,0.58148594,0.27210583]],[0.349,[0.74084627,0.57753717,0.27000813]],[0.353,[0.73858224,0.57360580,0.26798385]],[0.357,[0.73629088,0.56969220,0.26603220]],[0.361,[0.73397181,0.56579673,0.26415228]],[0.365,[0.73162465,0.56191971,0.26234308]],[0.369,[0.72924911,0.55806146,0.26060351]],[0.373,[0.72684491,0.55422228,0.25893238]],[0.376,[0.72441200,0.55040235,0.25732861]],[0.380,[0.72195034,0.54660183,0.25579110]],[0.384,[0.71945941,0.54282119,0.25431803]],[0.388,[0.71693910,0.53906066,0.25290789]],[0.392,[0.71438933,0.53532044,0.25155916]],[0.396,[0.71181008,0.53160072,0.25027024]],[0.400,[0.70920134,0.52790167,0.24903951]],[0.404,[0.70656328,0.52422334,0.24786557]],[0.408,[0.70389601,0.52056583,0.24674692]],[0.412,[0.70119936,0.51692942,0.24568138]],[0.416,[0.69847345,0.51331421,0.24466721]],[0.420,[0.69571840,0.50972028,0.24370267]],[0.424,[0.69293438,0.50614772,0.24278601]],[0.427,[0.69012170,0.50259645,0.24191594]],[0.431,[0.68728046,0.49906659,0.24109054]],[0.435,[0.68441077,0.49555825,0.24030777]],[0.439,[0.68151283,0.49207145,0.23956590]],[0.443,[0.67858688,0.48860620,0.23886320]],[0.447,[0.67563323,0.48516242,0.23819834]],[0.451,[0.67265213,0.48174012,0.23756970]],[0.455,[0.66964372,0.47833936,0.23697519]],[0.459,[0.66660826,0.47496011,0.23641317]],[0.463,[0.66354603,0.47160233,0.23588203]],[0.467,[0.66045737,0.46826591,0.23538076]],[0.471,[0.65734248,0.46495086,0.23490744]],[0.475,[0.65420161,0.46165715,0.23446031]],[0.478,[0.65103503,0.45838472,0.23403788]],[0.482,[0.64784305,0.45513348,0.23363888]],[0.486,[0.64462596,0.45190333,0.23326220]],[0.490,[0.64138399,0.44869425,0.23290586]],[0.494,[0.63811743,0.44550616,0.23256847]],[0.498,[0.63482655,0.44233896,0.23224868]],[0.502,[0.63151166,0.43919252,0.23194585]],[0.506,[0.62817301,0.43606678,0.23165793]],[0.510,[0.62481089,0.43296166,0.23138362]],[0.514,[0.62142558,0.42987703,0.23112168]],[0.518,[0.61801735,0.42681274,0.23087155]],[0.522,[0.61458651,0.42376873,0.23063131]],[0.525,[0.61113333,0.42074485,0.23039975]],[0.529,[0.60765812,0.41774097,0.23017579]],[0.533,[0.60416113,0.41475694,0.22995876]],[0.537,[0.60064269,0.41179264,0.22974695]],[0.541,[0.59710311,0.40884791,0.22953924]],[0.545,[0.59354267,0.40592259,0.22933476]],[0.549,[0.58996167,0.40301651,0.22913257]],[0.553,[0.58636045,0.40012951,0.22893126]],[0.557,[0.58273935,0.39726139,0.22872981]],[0.561,[0.57909864,0.39441197,0.22852751]],[0.565,[0.57543869,0.39158106,0.22832317]],[0.569,[0.57175986,0.38876844,0.22811569]],[0.573,[0.56806249,0.38597389,0.22790415]],[0.576,[0.56434690,0.38319720,0.22768784]],[0.580,[0.56061350,0.38043812,0.22746557]],[0.584,[0.55686267,0.37769641,0.22723646]],[0.588,[0.55309477,0.37497182,0.22699970]],[0.592,[0.54931021,0.37226407,0.22675441]],[0.596,[0.54550938,0.36957290,0.22649972]],[0.600,[0.54169271,0.36689801,0.22623484]],[0.604,[0.53786062,0.36423912,0.22595888]],[0.608,[0.53401354,0.36159592,0.22567117]],[0.612,[0.53015188,0.35896810,0.22537099]],[0.616,[0.52627611,0.35635533,0.22505754]],[0.620,[0.52238672,0.35375727,0.22473004]],[0.624,[0.51848410,0.35117361,0.22438803]],[0.627,[0.51456871,0.34860400,0.22403092]],[0.631,[0.51064114,0.34604804,0.22365772]],[0.635,[0.50670179,0.34350541,0.22326812]],[0.639,[0.50275108,0.34097574,0.22286173]],[0.643,[0.49878951,0.33845868,0.22243799]],[0.647,[0.49481775,0.33595376,0.22199587]],[0.651,[0.49083610,0.33346069,0.22153554]],[0.655,[0.48684501,0.33097908,0.22105660]],[0.659,[0.48284504,0.32850852,0.22055847]],[0.663,[0.47883684,0.32604855,0.22004041]],[0.667,[0.47482065,0.32359888,0.21950271]],[0.671,[0.47079694,0.32115912,0.21894510]],[0.675,[0.46676627,0.31872884,0.21836709]],[0.678,[0.46272931,0.31630755,0.21776801]],[0.682,[0.45868623,0.31389501,0.21714835]],[0.686,[0.45463748,0.31149081,0.21650795]],[0.690,[0.45058349,0.30909459,0.21584668]],[0.694,[0.44652517,0.30670574,0.21516346]],[0.698,[0.44246248,0.30432409,0.21445918]],[0.702,[0.43839585,0.30194926,0.21373378]],[0.706,[0.43432568,0.29958089,0.21298723]],[0.710,[0.43025255,0.29721853,0.21221915]],[0.714,[0.42617698,0.29486174,0.21142931]],[0.718,[0.42209904,0.29251032,0.21061836]],[0.722,[0.41801909,0.29016391,0.20978634]],[0.725,[0.41393747,0.28782216,0.20893331]],[0.729,[0.40985466,0.28548469,0.20805916]],[0.733,[0.40577124,0.28315104,0.20716350]],[0.737,[0.40168716,0.28082104,0.20624715]],[0.741,[0.39760271,0.27849439,0.20531022]],[0.745,[0.39351818,0.27617075,0.20435286]],[0.749,[0.38943387,0.27384983,0.20337522]],[0.753,[0.38535015,0.27153126,0.20237724]],[0.757,[0.38126750,0.26921464,0.20135875]],[0.761,[0.37718583,0.26689984,0.20032050]],[0.765,[0.37310537,0.26458658,0.19926266]],[0.769,[0.36902633,0.26227457,0.19818543]],[0.773,[0.36494892,0.25996354,0.19708898]],[0.776,[0.36087335,0.25765321,0.19597352]],[0.780,[0.35679980,0.25534333,0.19483924]],[0.784,[0.35272881,0.25303348,0.19368584]],[0.788,[0.34866019,0.25072355,0.19251403]],[0.792,[0.34459409,0.24841331,0.19132403]],[0.796,[0.34053064,0.24610252,0.19011606]],[0.800,[0.33646999,0.24379093,0.18889033]],[0.804,[0.33241225,0.24147832,0.18764703]],[0.808,[0.32835756,0.23916444,0.18638636]],[0.812,[0.32430601,0.23684907,0.18510854]],[0.816,[0.32025770,0.23453198,0.18381375]],[0.820,[0.31621274,0.23221296,0.18250219]],[0.824,[0.31217135,0.22989172,0.18117386]],[0.827,[0.30813351,0.22756808,0.17982907]],[0.831,[0.30409923,0.22524186,0.17846811]],[0.835,[0.30006855,0.22291285,0.17709115]],[0.839,[0.29604153,0.22058085,0.17569837]],[0.843,[0.29201822,0.21824565,0.17428995]],[0.847,[0.28799865,0.21590704,0.17286605]],[0.851,[0.28398286,0.21356481,0.17142682]],[0.855,[0.27997087,0.21121876,0.16997243]],[0.859,[0.27596271,0.20886870,0.16850302]],[0.863,[0.27195838,0.20651441,0.16701873]],[0.867,[0.26795789,0.20415569,0.16551970]],[0.871,[0.26396126,0.20179233,0.16400606]],[0.875,[0.25996846,0.19942415,0.16247792]],[0.878,[0.25597950,0.19705092,0.16093541]],[0.882,[0.25199437,0.19467245,0.15937863]],[0.886,[0.24801304,0.19228853,0.15780767]],[0.890,[0.24403549,0.18989895,0.15622264]],[0.894,[0.24006169,0.18750349,0.15462360]],[0.898,[0.23609162,0.18510196,0.15301064]],[0.902,[0.23212523,0.18269412,0.15138382]],[0.906,[0.22816249,0.18027976,0.14974320]],[0.910,[0.22420335,0.17785866,0.14808882]],[0.914,[0.22024776,0.17543059,0.14642072]],[0.918,[0.21629568,0.17299532,0.14473894]],[0.922,[0.21234703,0.17055262,0.14304348]],[0.925,[0.20840178,0.16810225,0.14133436]],[0.929,[0.20445985,0.16564396,0.13961158]],[0.933,[0.20052118,0.16317750,0.13787511]],[0.937,[0.19658570,0.16070261,0.13612494]],[0.941,[0.19265334,0.15821903,0.13436103]],[0.945,[0.18872403,0.15572648,0.13258333]],[0.949,[0.18479769,0.15322469,0.13079179]],[0.953,[0.18087425,0.15071336,0.12898633]],[0.957,[0.17695362,0.14819220,0.12716687]],[0.961,[0.17303574,0.14566089,0.12533331]],[0.965,[0.16912051,0.14311912,0.12348554]],[0.969,[0.16520787,0.14056654,0.12162345]],[0.973,[0.16129774,0.13800281,0.11974689]],[0.976,[0.15739005,0.13542757,0.11785572]],[0.980,[0.15348472,0.13284043,0.11594979]],[0.984,[0.14958171,0.13024099,0.11402893]],[0.988,[0.14568096,0.12762883,0.11209297]],[0.992,[0.14178245,0.12500350,0.11014172]],[0.996,[0.13788616,0.12236452,0.10817502]],[1.000,[0.13399213,0.11971138,0.10619267]]]
H.colormap_turbidity = [[0.000,[0.13399213,0.11971138,0.10619267]],[0.004,[0.13788616,0.12236452,0.10817502]],[0.008,[0.14178245,0.12500350,0.11014172]],[0.012,[0.14568096,0.12762883,0.11209297]],[0.016,[0.14958171,0.13024099,0.11402893]],[0.020,[0.15348472,0.13284043,0.11594979]],[0.024,[0.15739005,0.13542757,0.11785572]],[0.027,[0.16129774,0.13800281,0.11974689]],[0.031,[0.16520787,0.14056654,0.12162345]],[0.035,[0.16912051,0.14311912,0.12348554]],[0.039,[0.17303574,0.14566089,0.12533331]],[0.043,[0.17695362,0.14819220,0.12716687]],[0.047,[0.18087425,0.15071336,0.12898633]],[0.051,[0.18479769,0.15322469,0.13079179]],[0.055,[0.18872403,0.15572648,0.13258333]],[0.059,[0.19265334,0.15821903,0.13436103]],[0.063,[0.19658570,0.16070261,0.13612494]],[0.067,[0.20052118,0.16317750,0.13787511]],[0.071,[0.20445985,0.16564396,0.13961158]],[0.075,[0.20840178,0.16810225,0.14133436]],[0.078,[0.21234703,0.17055262,0.14304348]],[0.082,[0.21629568,0.17299532,0.14473894]],[0.086,[0.22024776,0.17543059,0.14642072]],[0.090,[0.22420335,0.17785866,0.14808882]],[0.094,[0.22816249,0.18027976,0.14974320]],[0.098,[0.23212523,0.18269412,0.15138382]],[0.102,[0.23609162,0.18510196,0.15301064]],[0.106,[0.24006169,0.18750349,0.15462360]],[0.110,[0.24403549,0.18989895,0.15622264]],[0.114,[0.24801304,0.19228853,0.15780767]],[0.118,[0.25199437,0.19467245,0.15937863]],[0.122,[0.25597950,0.19705092,0.16093541]],[0.125,[0.25996846,0.19942415,0.16247792]],[0.129,[0.26396126,0.20179233,0.16400606]],[0.133,[0.26795789,0.20415569,0.16551970]],[0.137,[0.27195838,0.20651441,0.16701873]],[0.141,[0.27596271,0.20886870,0.16850302]],[0.145,[0.27997087,0.21121876,0.16997243]],[0.149,[0.28398286,0.21356481,0.17142682]],[0.153,[0.28799865,0.21590704,0.17286605]],[0.157,[0.29201822,0.21824565,0.17428995]],[0.161,[0.29604153,0.22058085,0.17569837]],[0.165,[0.30006855,0.22291285,0.17709115]],[0.169,[0.30409923,0.22524186,0.17846811]],[0.173,[0.30813351,0.22756808,0.17982907]],[0.176,[0.31217135,0.22989172,0.18117386]],[0.180,[0.31621274,0.23221296,0.18250219]],[0.184,[0.32025770,0.23453198,0.18381375]],[0.188,[0.32430601,0.23684907,0.18510854]],[0.192,[0.32835756,0.23916444,0.18638636]],[0.196,[0.33241225,0.24147832,0.18764703]],[0.200,[0.33646999,0.24379093,0.18889033]],[0.204,[0.34053064,0.24610252,0.19011606]],[0.208,[0.34459409,0.24841331,0.19132403]],[0.212,[0.34866019,0.25072355,0.19251403]],[0.216,[0.35272881,0.25303348,0.19368584]],[0.220,[0.35679980,0.25534333,0.19483924]],[0.224,[0.36087335,0.25765321,0.19597352]],[0.227,[0.36494892,0.25996354,0.19708898]],[0.231,[0.36902633,0.26227457,0.19818543]],[0.235,[0.37310537,0.26458658,0.19926266]],[0.239,[0.37718583,0.26689984,0.20032050]],[0.243,[0.38126750,0.26921464,0.20135875]],[0.247,[0.38535015,0.27153126,0.20237724]],[0.251,[0.38943387,0.27384983,0.20337522]],[0.255,[0.39351818,0.27617075,0.20435286]],[0.259,[0.39760271,0.27849439,0.20531022]],[0.263,[0.40168716,0.28082104,0.20624715]],[0.267,[0.40577124,0.28315104,0.20716350]],[0.271,[0.40985466,0.28548469,0.20805916]],[0.275,[0.41393747,0.28782216,0.20893331]],[0.278,[0.41801909,0.29016391,0.20978634]],[0.282,[0.42209904,0.29251032,0.21061836]],[0.286,[0.42617698,0.29486174,0.21142931]],[0.290,[0.43025255,0.29721853,0.21221915]],[0.294,[0.43432568,0.29958089,0.21298723]],[0.298,[0.43839585,0.30194926,0.21373378]],[0.302,[0.44246248,0.30432409,0.21445918]],[0.306,[0.44652517,0.30670574,0.21516346]],[0.310,[0.45058349,0.30909459,0.21584668]],[0.314,[0.45463748,0.31149081,0.21650795]],[0.318,[0.45868623,0.31389501,0.21714835]],[0.322,[0.46272931,0.31630755,0.21776801]],[0.325,[0.46676627,0.31872884,0.21836709]],[0.329,[0.47079694,0.32115912,0.21894510]],[0.333,[0.47482065,0.32359888,0.21950271]],[0.337,[0.47883684,0.32604855,0.22004041]],[0.341,[0.48284504,0.32850852,0.22055847]],[0.345,[0.48684501,0.33097908,0.22105660]],[0.349,[0.49083610,0.33346069,0.22153554]],[0.353,[0.49481775,0.33595376,0.22199587]],[0.357,[0.49878951,0.33845868,0.22243799]],[0.361,[0.50275108,0.34097574,0.22286173]],[0.365,[0.50670179,0.34350541,0.22326812]],[0.369,[0.51064114,0.34604804,0.22365772]],[0.373,[0.51456871,0.34860400,0.22403092]],[0.376,[0.51848410,0.35117361,0.22438803]],[0.380,[0.52238672,0.35375727,0.22473004]],[0.384,[0.52627611,0.35635533,0.22505754]],[0.388,[0.53015188,0.35896810,0.22537099]],[0.392,[0.53401354,0.36159592,0.22567117]],[0.396,[0.53786062,0.36423912,0.22595888]],[0.400,[0.54169271,0.36689801,0.22623484]],[0.404,[0.54550938,0.36957290,0.22649972]],[0.408,[0.54931021,0.37226407,0.22675441]],[0.412,[0.55309477,0.37497182,0.22699970]],[0.416,[0.55686267,0.37769641,0.22723646]],[0.420,[0.56061350,0.38043812,0.22746557]],[0.424,[0.56434690,0.38319720,0.22768784]],[0.427,[0.56806249,0.38597389,0.22790415]],[0.431,[0.57175986,0.38876844,0.22811569]],[0.435,[0.57543869,0.39158106,0.22832317]],[0.439,[0.57909864,0.39441197,0.22852751]],[0.443,[0.58273935,0.39726139,0.22872981]],[0.447,[0.58636045,0.40012951,0.22893126]],[0.451,[0.58996167,0.40301651,0.22913257]],[0.455,[0.59354267,0.40592259,0.22933476]],[0.459,[0.59710311,0.40884791,0.22953924]],[0.463,[0.60064269,0.41179264,0.22974695]],[0.467,[0.60416113,0.41475694,0.22995876]],[0.471,[0.60765812,0.41774097,0.23017579]],[0.475,[0.61113333,0.42074485,0.23039975]],[0.478,[0.61458651,0.42376873,0.23063131]],[0.482,[0.61801735,0.42681274,0.23087155]],[0.486,[0.62142558,0.42987703,0.23112168]],[0.490,[0.62481089,0.43296166,0.23138362]],[0.494,[0.62817301,0.43606678,0.23165793]],[0.498,[0.63151166,0.43919252,0.23194585]],[0.502,[0.63482655,0.44233896,0.23224868]],[0.506,[0.63811743,0.44550616,0.23256847]],[0.510,[0.64138399,0.44869425,0.23290586]],[0.514,[0.64462596,0.45190333,0.23326220]],[0.518,[0.64784305,0.45513348,0.23363888]],[0.522,[0.65103503,0.45838472,0.23403788]],[0.525,[0.65420161,0.46165715,0.23446031]],[0.529,[0.65734248,0.46495086,0.23490744]],[0.533,[0.66045737,0.46826591,0.23538076]],[0.537,[0.66354603,0.47160233,0.23588203]],[0.541,[0.66660826,0.47496011,0.23641317]],[0.545,[0.66964372,0.47833936,0.23697519]],[0.549,[0.67265213,0.48174012,0.23756970]],[0.553,[0.67563323,0.48516242,0.23819834]],[0.557,[0.67858688,0.48860620,0.23886320]],[0.561,[0.68151283,0.49207145,0.23956590]],[0.565,[0.68441077,0.49555825,0.24030777]],[0.569,[0.68728046,0.49906659,0.24109054]],[0.573,[0.69012170,0.50259645,0.24191594]],[0.576,[0.69293438,0.50614772,0.24278601]],[0.580,[0.69571840,0.50972028,0.24370267]],[0.584,[0.69847345,0.51331421,0.24466721]],[0.588,[0.70119936,0.51692942,0.24568138]],[0.592,[0.70389601,0.52056583,0.24674692]],[0.596,[0.70656328,0.52422334,0.24786557]],[0.600,[0.70920134,0.52790167,0.24903951]],[0.604,[0.71181008,0.53160072,0.25027024]],[0.608,[0.71438933,0.53532044,0.25155916]],[0.612,[0.71693910,0.53906066,0.25290789]],[0.616,[0.71945941,0.54282119,0.25431803]],[0.620,[0.72195034,0.54660183,0.25579110]],[0.624,[0.72441200,0.55040235,0.25732861]],[0.627,[0.72684491,0.55422228,0.25893238]],[0.631,[0.72924911,0.55806146,0.26060351]],[0.635,[0.73162465,0.56191971,0.26234308]],[0.639,[0.73397181,0.56579673,0.26415228]],[0.643,[0.73629088,0.56969220,0.26603220]],[0.647,[0.73858224,0.57360580,0.26798385]],[0.651,[0.74084627,0.57753717,0.27000813]],[0.655,[0.74308341,0.58148594,0.27210583]],[0.659,[0.74529416,0.58545174,0.27427764]],[0.663,[0.74747902,0.58943418,0.27652413]],[0.667,[0.74963858,0.59343284,0.27884576]],[0.671,[0.75177354,0.59744726,0.28124289]],[0.675,[0.75388476,0.60147688,0.28371577]],[0.678,[0.75597255,0.60552149,0.28626438]],[0.682,[0.75803761,0.60958066,0.28888871]],[0.686,[0.76008063,0.61365394,0.29158862]],[0.690,[0.76210238,0.61774092,0.29436388]],[0.694,[0.76410360,0.62184117,0.29721414]],[0.698,[0.76608507,0.62595425,0.30013896]],[0.702,[0.76804758,0.63007976,0.30313777]],[0.706,[0.76999192,0.63421728,0.30620996]],[0.710,[0.77191901,0.63836635,0.30935480]],[0.714,[0.77383044,0.64252620,0.31257131]],[0.718,[0.77572638,0.64669677,0.31585869]],[0.722,[0.77760765,0.65087769,0.31921599]],[0.725,[0.77947503,0.65506860,0.32264222]],[0.729,[0.78132930,0.65926917,0.32613634]],[0.733,[0.78317122,0.66347909,0.32969726]],[0.737,[0.78500150,0.66769808,0.33332391]],[0.741,[0.78682085,0.67192585,0.33701518]],[0.745,[0.78862994,0.67616218,0.34076995]],[0.749,[0.79042938,0.68040682,0.34458712]],[0.753,[0.79222382,0.68465779,0.34846360]],[0.757,[0.79401088,0.68891625,0.35239953]],[0.761,[0.79579060,0.69318226,0.35639404]],[0.765,[0.79756350,0.69745568,0.36044607]],[0.769,[0.79933001,0.70173640,0.36455459]],[0.773,[0.80109199,0.70602372,0.36871773]],[0.776,[0.80285453,0.71031558,0.37293152]],[0.780,[0.80461256,0.71461427,0.37719818]],[0.784,[0.80636635,0.71891976,0.38151687]],[0.788,[0.80811614,0.72323206,0.38588678]],[0.792,[0.80986949,0.72754816,0.39030199]],[0.796,[0.81162258,0.73186978,0.39476429]],[0.800,[0.81337300,0.73619803,0.39927478]],[0.804,[0.81512083,0.74053296,0.40383288]],[0.808,[0.81687743,0.74487018,0.40842935]],[0.812,[0.81863351,0.74921355,0.41307053]],[0.816,[0.82038791,0.75356362,0.41775687]],[0.820,[0.82214756,0.75791781,0.42248232]],[0.824,[0.82391360,0.76227586,0.42724530]],[0.827,[0.82567856,0.76664076,0.43205146]],[0.831,[0.82744797,0.77101054,0.43689575]],[0.835,[0.82922751,0.77538321,0.44177277]],[0.839,[0.83100631,0.77976299,0.44669145]],[0.843,[0.83279191,0.78414721,0.45164484]],[0.847,[0.83458779,0.78853475,0.45662933]],[0.851,[0.83638303,0.79292976,0.46165442]],[0.855,[0.83819092,0.79732754,0.46670762]],[0.859,[0.84000532,0.80173047,0.47179418]],[0.863,[0.84181974,0.80614103,0.47691997]],[0.867,[0.84365489,0.81055198,0.48206501]],[0.871,[0.84548938,0.81497108,0.48724941]],[0.875,[0.84733547,0.81939415,0.49246112]],[0.878,[0.84919219,0.82382169,0.49770079]],[0.882,[0.85105061,0.82825693,0.50297708]],[0.886,[0.85293078,0.83269316,0.50826969]],[0.890,[0.85480977,0.83713834,0.51360152]],[0.894,[0.85670839,0.84158560,0.51895122]],[0.898,[0.85861179,0.84604008,0.52433384]],[0.902,[0.86052811,0.85049922,0.52974081]],[0.906,[0.86245682,0.85496335,0.53517252]],[0.910,[0.86439284,0.85943430,0.54063422]],[0.914,[0.86634766,0.86390849,0.54611354]],[0.918,[0.86830532,0.86839123,0.55162751]],[0.922,[0.87028696,0.87287588,0.55715317]],[0.925,[0.87226814,0.87737042,0.56271705]],[0.929,[0.87427719,0.88186601,0.56828799]],[0.933,[0.87628373,0.88637239,0.57389949]],[0.937,[0.87832071,0.89087940,0.57951484]],[0.941,[0.88035438,0.89539770,0.58517178]],[0.945,[0.88241971,0.89991665,0.59083084]],[0.949,[0.88448221,0.90444699,0.59653114]],[0.953,[0.88657626,0.90897841,0.60223338]],[0.957,[0.88866925,0.91352092,0.60797504]],[0.961,[0.89079231,0.91806535,0.61372008]],[0.965,[0.89291737,0.92262023,0.61950119]],[0.969,[0.89506967,0.92717824,0.62528881]],[0.973,[0.89722833,0.93174568,0.63110756]],[0.976,[0.89941005,0.93631784,0.63693766]],[0.980,[0.90160377,0.94089809,0.64279232]],[0.984,[0.90381505,0.94548499,0.64866493]],[0.988,[0.90604523,0.95007831,0.65455386]],[0.992,[0.90828616,0.95468053,0.66046911]],[0.996,[0.91055414,0.95928721,0.66639076]],[1.000,[0.91282478,0.96390535,0.67234889]]]
H.colormap_turbo = function(t) {
    t = Math.max(0, Math.min(1, t));
    let r = Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05)))))));
    let g = Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56)))))));
    let b = Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66)))))));
    let result = H.rgb_to_hex( { r: r, g: g, b: b } )
    return result;
}
H.colormap_velocity_blue = [[0.000,[0.06597739,0.12386005,0.24948116]],[0.004,[0.06865758,0.12663250,0.25557624]],[0.008,[0.07132312,0.12939515,0.26166391]],[0.012,[0.07396584,0.13214058,0.26779480]],[0.016,[0.07658629,0.13486916,0.27396904]],[0.020,[0.07919242,0.13758843,0.28014206]],[0.024,[0.08176925,0.14028419,0.28640499]],[0.027,[0.08433407,0.14297318,0.29265629]],[0.031,[0.08687299,0.14564215,0.29898019]],[0.035,[0.08939564,0.14830082,0.30531941]],[0.039,[0.09189721,0.15094484,0.31170300]],[0.043,[0.09437767,0.15357460,0.31813071]],[0.047,[0.09684032,0.15619402,0.32458157]],[0.051,[0.09927797,0.15879644,0.33109756]],[0.055,[0.10169939,0.16139154,0.33762358]],[0.059,[0.10409298,0.16396840,0.34422672]],[0.063,[0.10647003,0.16653949,0.35083602]],[0.067,[0.10881765,0.16909286,0.35752405]],[0.071,[0.11114624,0.17164030,0.36422476]],[0.075,[0.11344526,0.17417268,0.37099405]],[0.078,[0.11572015,0.17669703,0.37779407]],[0.082,[0.11796711,0.17921142,0.38463932]],[0.086,[0.12018172,0.18171361,0.39154591]],[0.090,[0.12237222,0.18421369,0.39845983]],[0.094,[0.12451836,0.18669519,0.40547913]],[0.098,[0.12663654,0.18917624,0.41250469]],[0.102,[0.12871435,0.19164859,0.41958831]],[0.106,[0.13074695,0.19411179,0.42673806]],[0.110,[0.13274084,0.19657524,0.43390608]],[0.114,[0.13468282,0.19903239,0.44113668]],[0.118,[0.13656674,0.20148370,0.44843501]],[0.122,[0.13839602,0.20393744,0.45576220]],[0.125,[0.14016368,0.20639447,0.46312314]],[0.129,[0.14185409,0.20885126,0.47055044]],[0.133,[0.14345986,0.21131167,0.47803591]],[0.137,[0.14497642,0.21378230,0.48555700]],[0.141,[0.14639100,0.21626634,0.49311434]],[0.145,[0.14768864,0.21876800,0.50070638]],[0.149,[0.14885173,0.22129285,0.50832846]],[0.153,[0.14985965,0.22384818,0.51597154]],[0.157,[0.15068840,0.22644340,0.52362079]],[0.161,[0.15131023,0.22909058,0.53125369]],[0.165,[0.15168425,0.23180303,0.53885457]],[0.169,[0.15175702,0.23459819,0.54640144]],[0.173,[0.15150762,0.23750367,0.55379602]],[0.176,[0.15085272,0.24054407,0.56100954]],[0.180,[0.14977800,0.24375297,0.56790391]],[0.184,[0.14824130,0.24715977,0.57437788]],[0.188,[0.14626774,0.25078506,0.58029534]],[0.192,[0.14393556,0.25462901,0.58555075]],[0.196,[0.14135408,0.25866955,0.59010335]],[0.200,[0.13864079,0.26286871,0.59397852]],[0.204,[0.13589174,0.26718438,0.59724867]],[0.208,[0.13319563,0.27157423,0.60000635]],[0.212,[0.13058114,0.27601030,0.60234289]],[0.216,[0.12806719,0.28047115,0.60433583]],[0.220,[0.12569199,0.28493491,0.60605594]],[0.224,[0.12343537,0.28939604,0.60755039]],[0.227,[0.12131237,0.29384382,0.60886431]],[0.231,[0.11933140,0.29827105,0.61003449]],[0.235,[0.11747335,0.30267840,0.61108156]],[0.239,[0.11574105,0.30706267,0.61202824]],[0.243,[0.11415261,0.31141804,0.61290024]],[0.247,[0.11269166,0.31574724,0.61370617]],[0.251,[0.11135538,0.32005035,0.61445721]],[0.255,[0.11014377,0.32432716,0.61516380]],[0.259,[0.10905648,0.32857778,0.61583463]],[0.263,[0.10809281,0.33280260,0.61647697]],[0.267,[0.10725185,0.33700217,0.61709693]],[0.271,[0.10653241,0.34117717,0.61769964]],[0.275,[0.10593314,0.34532836,0.61828945]],[0.278,[0.10545250,0.34945656,0.61887003]],[0.282,[0.10508879,0.35356261,0.61944452]],[0.286,[0.10484013,0.35764738,0.62001559]],[0.290,[0.10470452,0.36171173,0.62058554]],[0.294,[0.10467981,0.36575652,0.62115635]],[0.298,[0.10476371,0.36978259,0.62172971]],[0.302,[0.10495382,0.37379076,0.62230709]],[0.306,[0.10524762,0.37778184,0.62288978]],[0.310,[0.10564252,0.38175660,0.62347886]],[0.314,[0.10613580,0.38571579,0.62407531]],[0.318,[0.10672471,0.38966014,0.62467996]],[0.322,[0.10740642,0.39359035,0.62529352]],[0.325,[0.10817806,0.39750711,0.62591662]],[0.329,[0.10903675,0.40141105,0.62654981]],[0.333,[0.10998202,0.40530231,0.62719516]],[0.337,[0.11100819,0.40918206,0.62785128]],[0.341,[0.11211222,0.41305092,0.62851837]],[0.345,[0.11329127,0.41690943,0.62919672]],[0.349,[0.11454253,0.42075813,0.62988653]],[0.353,[0.11586327,0.42459754,0.63058799]],[0.357,[0.11725083,0.42842816,0.63130122]],[0.361,[0.11870260,0.43225046,0.63202632]],[0.365,[0.12021702,0.43606470,0.63276403]],[0.369,[0.12179033,0.43987161,0.63351340]],[0.373,[0.12342020,0.44367161,0.63427436]],[0.376,[0.12510445,0.44746510,0.63504690]],[0.380,[0.12684102,0.45125247,0.63583095]],[0.384,[0.12862799,0.45503408,0.63662642]],[0.388,[0.13046351,0.45881028,0.63743320]],[0.392,[0.13234563,0.46258148,0.63825092]],[0.396,[0.13427263,0.46634802,0.63907929]],[0.400,[0.13624311,0.47011020,0.63991816]],[0.404,[0.13825578,0.47386832,0.64076733]],[0.408,[0.14030945,0.47762263,0.64162657]],[0.412,[0.14240307,0.48137341,0.64249562]],[0.416,[0.14453572,0.48512091,0.64337422]],[0.420,[0.14670608,0.48886546,0.64426159]],[0.424,[0.14891319,0.49260737,0.64515709]],[0.427,[0.15115711,0.49634669,0.64606096]],[0.431,[0.15343746,0.50008362,0.64697283]],[0.435,[0.15575396,0.50381833,0.64789234]],[0.439,[0.15810648,0.50755096,0.64881909]],[0.443,[0.16049500,0.51128167,0.64975267]],[0.447,[0.16291965,0.51501059,0.65069263]],[0.451,[0.16538066,0.51873781,0.65163850]],[0.455,[0.16787709,0.52246378,0.65258827]],[0.459,[0.17041079,0.52618823,0.65354289]],[0.463,[0.17298246,0.52991124,0.65450185]],[0.467,[0.17559291,0.53363281,0.65546464]],[0.471,[0.17824310,0.53735298,0.65643069]],[0.475,[0.18093416,0.54107173,0.65739946]],[0.478,[0.18366735,0.54478903,0.65837034]],[0.482,[0.18644408,0.54850484,0.65934275]],[0.486,[0.18926596,0.55221906,0.66031605]],[0.490,[0.19213472,0.55593160,0.66128961]],[0.494,[0.19505228,0.55964231,0.66226278]],[0.498,[0.19802076,0.56335105,0.66323489]],[0.502,[0.20104242,0.56705760,0.66420528]],[0.506,[0.20411976,0.57076173,0.66517325]],[0.510,[0.20725543,0.57446319,0.66613812]],[0.514,[0.21045232,0.57816165,0.66709920]],[0.518,[0.21371350,0.58185676,0.66805579]],[0.522,[0.21704227,0.58554813,0.66900720]],[0.525,[0.22044214,0.58923531,0.66995277]],[0.529,[0.22391686,0.59291779,0.67089183]],[0.533,[0.22747037,0.59659503,0.67182375]],[0.537,[0.23110686,0.60026640,0.67274791]],[0.541,[0.23483073,0.60393124,0.67366376]],[0.545,[0.23864660,0.60758879,0.67457077]],[0.549,[0.24255928,0.61123826,0.67546847]],[0.553,[0.24657379,0.61487875,0.67635647]],[0.557,[0.25069532,0.61850931,0.67723446]],[0.561,[0.25492963,0.62212933,0.67809791]],[0.565,[0.25928228,0.62573723,0.67895065]],[0.569,[0.26375886,0.62933183,0.67979274]],[0.573,[0.26836502,0.63291182,0.68062438]],[0.576,[0.27310635,0.63647586,0.68144595]],[0.580,[0.27799067,0.64002284,0.68225204]],[0.584,[0.28302187,0.64355084,0.68304906]],[0.588,[0.28820489,0.64705829,0.68383831]],[0.592,[0.29354581,0.65054365,0.68461866]],[0.596,[0.29905039,0.65400523,0.68538993]],[0.600,[0.30471967,0.65744127,0.68615859]],[0.604,[0.31055832,0.66085014,0.68692427]],[0.608,[0.31656915,0.66423017,0.68768878]],[0.612,[0.32274951,0.66757995,0.68845924]],[0.616,[0.32910283,0.67089793,0.68923459]],[0.620,[0.33562308,0.67418311,0.69002275]],[0.624,[0.34230732,0.67743451,0.69082687]],[0.627,[0.34914976,0.68065146,0.69165158]],[0.631,[0.35614127,0.68383379,0.69250293]],[0.635,[0.36327369,0.68698145,0.69338491]],[0.639,[0.37053484,0.69009497,0.69430340]],[0.643,[0.37791226,0.69317522,0.69526327]],[0.647,[0.38539385,0.69622324,0.69626827]],[0.651,[0.39296332,0.69924082,0.69732400]],[0.655,[0.40060940,0.70222938,0.69843223]],[0.659,[0.40831594,0.70519122,0.69959724]],[0.663,[0.41607015,0.70812840,0.70082090]],[0.667,[0.42386201,0.71104276,0.70210342]],[0.671,[0.43167256,0.71393771,0.70344961]],[0.675,[0.43949947,0.71681422,0.70485557]],[0.678,[0.44732849,0.71967527,0.70632366]],[0.682,[0.45514951,0.72252334,0.70785413]],[0.686,[0.46296115,0.72535947,0.70944335]],[0.690,[0.47075349,0.72818626,0.71109189]],[0.694,[0.47851694,0.73100635,0.71280025]],[0.698,[0.48625412,0.73382019,0.71456376]],[0.702,[0.49396102,0.73662941,0.71638100]],[0.706,[0.50163106,0.73943622,0.71825179]],[0.710,[0.50925965,0.74224248,0.72017521]],[0.714,[0.51685029,0.74504841,0.72214731]],[0.718,[0.52440134,0.74785523,0.72416643]],[0.722,[0.53191155,0.75066408,0.72623094]],[0.725,[0.53938005,0.75347600,0.72833923]],[0.729,[0.54680444,0.75629239,0.73049037]],[0.733,[0.55418394,0.75911426,0.73268299]],[0.737,[0.56152150,0.76194178,0.73491438]],[0.741,[0.56881727,0.76477570,0.73718308]],[0.745,[0.57607152,0.76761672,0.73948764]],[0.749,[0.58328469,0.77046550,0.74182668]],[0.753,[0.59045730,0.77332263,0.74419886]],[0.757,[0.59758995,0.77618869,0.74660289]],[0.761,[0.60468333,0.77906419,0.74903750]],[0.765,[0.61173817,0.78194964,0.75150151]],[0.769,[0.61875522,0.78484550,0.75399375]],[0.773,[0.62573528,0.78775220,0.75651310]],[0.776,[0.63267915,0.79067016,0.75905849]],[0.780,[0.63958763,0.79359978,0.76162887]],[0.784,[0.64646151,0.79654145,0.76422323]],[0.788,[0.65330160,0.79949552,0.76684059]],[0.792,[0.66010867,0.80246236,0.76948001]],[0.796,[0.66688348,0.80544232,0.77214056]],[0.800,[0.67362676,0.80843573,0.77482134]],[0.804,[0.68033922,0.81144292,0.77752145]],[0.808,[0.68702155,0.81446423,0.78024002]],[0.812,[0.69367439,0.81749998,0.78297620]],[0.816,[0.70029750,0.82055075,0.78572944]],[0.820,[0.70689165,0.82361681,0.78849881]],[0.824,[0.71345823,0.82669826,0.79128316]],[0.827,[0.71999780,0.82979542,0.79408159]],[0.831,[0.72651088,0.83290861,0.79689320]],[0.835,[0.73299796,0.83603816,0.79971707]],[0.839,[0.73945951,0.83918440,0.80255223]],[0.843,[0.74589598,0.84234767,0.80539770]],[0.847,[0.75230780,0.84552831,0.80825242]],[0.851,[0.75869517,0.84872673,0.81111536]],[0.855,[0.76505775,0.85194348,0.81398568]],[0.859,[0.77139709,0.85517859,0.81686163]],[0.863,[0.77771359,0.85843239,0.81974187]],[0.867,[0.78400765,0.86170526,0.82262493]],[0.871,[0.79027967,0.86499755,0.82550921]],[0.875,[0.79653012,0.86830960,0.82839299]],[0.878,[0.80275950,0.87164177,0.83127437]],[0.882,[0.80896806,0.87499448,0.83415141]],[0.886,[0.81515670,0.87836796,0.83702171]],[0.890,[0.82132643,0.88176244,0.83988264]],[0.894,[0.82747812,0.88517819,0.84273144]],[0.898,[0.83361281,0.88861542,0.84556510]],[0.902,[0.83973174,0.89207431,0.84838033]],[0.906,[0.84583638,0.89555495,0.85117353]],[0.910,[0.85192854,0.89905734,0.85394079]],[0.914,[0.85801043,0.90258135,0.85667786]],[0.918,[0.86408444,0.90612679,0.85938032]],[0.922,[0.87015339,0.90969330,0.86204351]],[0.925,[0.87622047,0.91328040,0.86466260]],[0.929,[0.88228934,0.91688740,0.86723268]],[0.933,[0.88836402,0.92051348,0.86974885]],[0.937,[0.89444909,0.92415756,0.87220619]],[0.941,[0.90054949,0.92781839,0.87459995]],[0.945,[0.90666975,0.93149475,0.87692634]],[0.949,[0.91281478,0.93518523,0.87918186]],[0.953,[0.91898934,0.93888836,0.88136368]],[0.957,[0.92519787,0.94260271,0.88346979]],[0.961,[0.93144429,0.94632694,0.88549899]],[0.965,[0.93773184,0.95005986,0.88745092]],[0.969,[0.94406341,0.95380038,0.88932539]],[0.973,[0.95044015,0.95754793,0.89112376]],[0.976,[0.95686223,0.96130226,0.89284794]],[0.980,[0.96332900,0.96506343,0.89449990]],[0.984,[0.96983887,0.96883187,0.89608183]],[0.988,[0.97638938,0.97260834,0.89759591]],[0.992,[0.98297732,0.97639393,0.89904421]],[0.996,[0.98959887,0.98019003,0.90042859]],[1.000,[0.99624974,0.98399826,0.90175064]]]
H.colormap_velocity_green = [[0.000,[0.09053276,0.13733861,0.07325761]],[0.004,[0.09149314,0.14105046,0.07638733]],[0.008,[0.09241015,0.14475747,0.07947497]],[0.012,[0.09328192,0.14846061,0.08252095]],[0.016,[0.09408911,0.15216506,0.08552629]],[0.020,[0.09484852,0.15586693,0.08848984]],[0.024,[0.09555840,0.15956697,0.09141177]],[0.027,[0.09620477,0.16326879,0.09429209]],[0.031,[0.09679537,0.16697070,0.09713043]],[0.035,[0.09733238,0.17067237,0.09992671]],[0.039,[0.09781114,0.17437504,0.10268064]],[0.043,[0.09822270,0.17808082,0.10539142]],[0.047,[0.09857703,0.18178753,0.10805922]],[0.051,[0.09887273,0.18549555,0.11068374]],[0.055,[0.09910575,0.18920581,0.11326433]],[0.059,[0.09926900,0.19291982,0.11579981]],[0.063,[0.09937074,0.19663577,0.11829057]],[0.067,[0.09940988,0.20035390,0.12073611]],[0.071,[0.09938537,0.20407438,0.12313591]],[0.075,[0.09929071,0.20779846,0.12548854]],[0.078,[0.09912769,0.21152567,0.12779367]],[0.082,[0.09889926,0.21525533,0.13005125]],[0.086,[0.09860476,0.21898749,0.13226069]],[0.090,[0.09824359,0.22272214,0.13442135]],[0.094,[0.09781527,0.22645927,0.13653262]],[0.098,[0.09731337,0.23019990,0.13859263]],[0.102,[0.09674403,0.23394277,0.14060198]],[0.106,[0.09610733,0.23768772,0.14256015]],[0.110,[0.09540319,0.24143464,0.14446653]],[0.114,[0.09463164,0.24518338,0.14632057]],[0.118,[0.09379283,0.24893377,0.14812169]],[0.122,[0.09288704,0.25268563,0.14986937]],[0.125,[0.09191348,0.25643894,0.15156278]],[0.129,[0.09087165,0.26019363,0.15320113]],[0.133,[0.08976486,0.26394904,0.15478462]],[0.137,[0.08859393,0.26770495,0.15631280]],[0.141,[0.08735983,0.27146109,0.15778524]],[0.145,[0.08606372,0.27521722,0.15920155]],[0.149,[0.08470696,0.27897306,0.16056134]],[0.153,[0.08329110,0.28272833,0.16186426]],[0.157,[0.08181798,0.28648275,0.16310997]],[0.161,[0.08028966,0.29023603,0.16429815]],[0.165,[0.07870853,0.29398786,0.16542850]],[0.169,[0.07707731,0.29773796,0.16650073]],[0.173,[0.07539909,0.30148601,0.16751459]],[0.176,[0.07367740,0.30523170,0.16846982]],[0.180,[0.07191583,0.30897477,0.16936603]],[0.184,[0.07011887,0.31271491,0.17020297]],[0.188,[0.06829236,0.31645172,0.17098061]],[0.192,[0.06644218,0.32018490,0.17169874]],[0.196,[0.06457505,0.32391411,0.17235714]],[0.200,[0.06269859,0.32763902,0.17295560]],[0.204,[0.06082143,0.33135932,0.17349393]],[0.208,[0.05895335,0.33507466,0.17397193]],[0.212,[0.05710539,0.33878471,0.17438940]],[0.216,[0.05528998,0.34248913,0.17474614]],[0.220,[0.05352104,0.34618758,0.17504196]],[0.224,[0.05181408,0.34987969,0.17527666]],[0.227,[0.05018627,0.35356513,0.17545005]],[0.231,[0.04865644,0.35724353,0.17556193]],[0.235,[0.04724506,0.36091453,0.17561211]],[0.239,[0.04597406,0.36457776,0.17560040]],[0.243,[0.04486662,0.36823283,0.17552659]],[0.247,[0.04394675,0.37187939,0.17539051]],[0.251,[0.04323878,0.37551702,0.17519196]],[0.255,[0.04276673,0.37914535,0.17493074]],[0.259,[0.04255352,0.38276397,0.17460669]],[0.263,[0.04262018,0.38637248,0.17421963]],[0.267,[0.04298497,0.38997047,0.17376937]],[0.271,[0.04366274,0.39355751,0.17325577]],[0.275,[0.04466372,0.39713324,0.17267831]],[0.278,[0.04599481,0.40069717,0.17203710]],[0.282,[0.04765813,0.40424888,0.17133208]],[0.286,[0.04965139,0.40778792,0.17056314]],[0.290,[0.05196846,0.41131384,0.16973019]],[0.294,[0.05459993,0.41482619,0.16883316]],[0.298,[0.05753382,0.41832454,0.16787201]],[0.302,[0.06075626,0.42180841,0.16684671]],[0.306,[0.06425218,0.42527736,0.16575730]],[0.310,[0.06800589,0.42873094,0.16460379]],[0.314,[0.07200158,0.43216868,0.16338628]],[0.318,[0.07622371,0.43559013,0.16210488]],[0.322,[0.08065728,0.43899485,0.16075975]],[0.325,[0.08528802,0.44238240,0.15935107]],[0.329,[0.09010251,0.44575233,0.15787909]],[0.333,[0.09508832,0.44910425,0.15634337]],[0.337,[0.10023389,0.45243770,0.15474474]],[0.341,[0.10552844,0.45575227,0.15308384]],[0.345,[0.11096207,0.45904759,0.15136111]],[0.349,[0.11652565,0.46232325,0.14957707]],[0.353,[0.12221076,0.46557892,0.14773227]],[0.357,[0.12800964,0.46881425,0.14582732]],[0.361,[0.13391510,0.47202893,0.14386292]],[0.365,[0.13992049,0.47522266,0.14183978]],[0.369,[0.14601973,0.47839518,0.13975846]],[0.373,[0.15220721,0.48154623,0.13761954]],[0.376,[0.15847719,0.48467561,0.13542453]],[0.380,[0.16482456,0.48778316,0.13317442]],[0.384,[0.17124448,0.49086871,0.13087024]],[0.388,[0.17773240,0.49393216,0.12851305]],[0.392,[0.18428396,0.49697343,0.12610400]],[0.396,[0.19089503,0.49999248,0.12364426]],[0.400,[0.19756167,0.50298929,0.12113505]],[0.404,[0.20428009,0.50596389,0.11857764]],[0.408,[0.21104652,0.50891636,0.11597358]],[0.412,[0.21785748,0.51184679,0.11332427]],[0.416,[0.22470961,0.51475531,0.11063114]],[0.420,[0.23159967,0.51764210,0.10789570]],[0.424,[0.23852458,0.52050736,0.10511948]],[0.427,[0.24548136,0.52335131,0.10230412]],[0.431,[0.25246703,0.52617424,0.09945144]],[0.435,[0.25947856,0.52897647,0.09656369]],[0.439,[0.26651361,0.53175830,0.09364228]],[0.443,[0.27356965,0.53452006,0.09068917]],[0.447,[0.28064430,0.53726212,0.08770643]],[0.451,[0.28773525,0.53998488,0.08469633]],[0.455,[0.29484032,0.54268874,0.08166129]],[0.459,[0.30195743,0.54537413,0.07860394]],[0.463,[0.30908460,0.54804150,0.07552722]],[0.467,[0.31621948,0.55069139,0.07243519]],[0.471,[0.32336047,0.55332424,0.06933118]],[0.475,[0.33050620,0.55594049,0.06621880]],[0.478,[0.33765509,0.55854062,0.06310264]],[0.482,[0.34480568,0.56112513,0.05998797]],[0.486,[0.35195658,0.56369452,0.05688086]],[0.490,[0.35910650,0.56624928,0.05378828]],[0.494,[0.36625424,0.56878993,0.05071836]],[0.498,[0.37339864,0.57131697,0.04768050]],[0.502,[0.38053866,0.57383092,0.04468567]],[0.506,[0.38767326,0.57633228,0.04174672]],[0.510,[0.39480098,0.57882170,0.03887120]],[0.514,[0.40192160,0.58129953,0.03616635]],[0.518,[0.40903431,0.58376629,0.03367283]],[0.522,[0.41613836,0.58622247,0.03139676]],[0.525,[0.42323306,0.58866858,0.02934437]],[0.529,[0.43031775,0.59110510,0.02752213]],[0.533,[0.43739183,0.59353253,0.02593670]],[0.537,[0.44445471,0.59595137,0.02459500]],[0.541,[0.45150585,0.59836210,0.02350422]],[0.545,[0.45854471,0.60076521,0.02267188]],[0.549,[0.46557081,0.60316118,0.02210580]],[0.553,[0.47258366,0.60555050,0.02181419]],[0.557,[0.47958278,0.60793365,0.02180565]],[0.561,[0.48656773,0.61031113,0.02208919]],[0.565,[0.49353805,0.61268341,0.02267429]],[0.569,[0.50049318,0.61505101,0.02357107]],[0.573,[0.50743284,0.61741438,0.02478977]],[0.576,[0.51435656,0.61977401,0.02634145]],[0.580,[0.52126388,0.62213041,0.02823776]],[0.584,[0.52815431,0.62448406,0.03049096]],[0.588,[0.53502735,0.62683550,0.03311400]],[0.592,[0.54188249,0.62918522,0.03612051]],[0.596,[0.54871918,0.63153377,0.03952488]],[0.600,[0.55553684,0.63388168,0.04323651]],[0.604,[0.56233489,0.63622950,0.04713774]],[0.608,[0.56911267,0.63857780,0.05121917]],[0.612,[0.57586950,0.64092715,0.05546448]],[0.616,[0.58260468,0.64327815,0.05985969]],[0.620,[0.58931743,0.64563142,0.06439288]],[0.624,[0.59600693,0.64798759,0.06905401]],[0.627,[0.60267232,0.65034731,0.07383470]],[0.631,[0.60931267,0.65271125,0.07872800]],[0.635,[0.61592727,0.65508003,0.08372822]],[0.639,[0.62251497,0.65745441,0.08883077]],[0.643,[0.62907452,0.65983518,0.09403193]],[0.647,[0.63560473,0.66222315,0.09932877]],[0.651,[0.64210433,0.66461911,0.10471901]],[0.655,[0.64857199,0.66702394,0.11020095]],[0.659,[0.65500629,0.66943851,0.11577336]],[0.663,[0.66140573,0.67186375,0.12143540]],[0.667,[0.66776872,0.67430062,0.12718656]],[0.671,[0.67409362,0.67675013,0.13302663]],[0.675,[0.68037867,0.67921331,0.13895556]],[0.678,[0.68662205,0.68169124,0.14497353]],[0.682,[0.69282238,0.68418481,0.15108128]],[0.686,[0.69897728,0.68669535,0.15727889]],[0.690,[0.70508453,0.68922412,0.16356662]],[0.694,[0.71114201,0.69177235,0.16994487]],[0.698,[0.71714753,0.69434130,0.17641399]],[0.702,[0.72309885,0.69693228,0.18297431]],[0.706,[0.72899368,0.69954660,0.18962605]],[0.710,[0.73482974,0.70218562,0.19636930]],[0.714,[0.74060474,0.70485066,0.20320411]],[0.718,[0.74631660,0.70754299,0.21013070]],[0.722,[0.75196261,0.71026417,0.21714799]],[0.725,[0.75754052,0.71301555,0.22425532]],[0.729,[0.76304813,0.71579850,0.23145177]],[0.733,[0.76848332,0.71861432,0.23873620]],[0.737,[0.77384408,0.72146431,0.24610720]],[0.741,[0.77912853,0.72434970,0.25356307]],[0.745,[0.78433484,0.72727172,0.26110160]],[0.749,[0.78946140,0.73023149,0.26872033]],[0.753,[0.79450691,0.73323004,0.27641686]],[0.757,[0.79947022,0.73626828,0.28418840]],[0.761,[0.80435041,0.73934706,0.29203197]],[0.765,[0.80914682,0.74246709,0.29994435]],[0.769,[0.81385901,0.74562899,0.30792214]],[0.773,[0.81848682,0.74883326,0.31596178]],[0.776,[0.82303017,0.75208041,0.32405836]],[0.780,[0.82748950,0.75537065,0.33220817]],[0.784,[0.83186554,0.75870402,0.34040823]],[0.788,[0.83615916,0.76208053,0.34865469]],[0.792,[0.84037142,0.76550008,0.35694373]],[0.796,[0.84450364,0.76896245,0.36527157]],[0.800,[0.84855731,0.77246735,0.37363449]],[0.804,[0.85253410,0.77601436,0.38202889]],[0.808,[0.85643585,0.77960299,0.39045126]],[0.812,[0.86026452,0.78323268,0.39889826]],[0.816,[0.86402220,0.78690280,0.40736670]],[0.820,[0.86771108,0.79061266,0.41585355]],[0.824,[0.87133343,0.79436152,0.42435598]],[0.827,[0.87489155,0.79814860,0.43287135]],[0.831,[0.87838781,0.80197310,0.44139720]],[0.835,[0.88182459,0.80583419,0.44993127]],[0.839,[0.88520428,0.80973103,0.45847151]],[0.843,[0.88852927,0.81366275,0.46701603]],[0.847,[0.89180194,0.81762851,0.47556314]],[0.851,[0.89502462,0.82162744,0.48411130]],[0.855,[0.89819963,0.82565871,0.49265916]],[0.859,[0.90132924,0.82972148,0.50120551]],[0.863,[0.90441569,0.83381493,0.50974926]],[0.867,[0.90746117,0.83793825,0.51828947]],[0.871,[0.91046780,0.84209066,0.52682531]],[0.875,[0.91343769,0.84627138,0.53535605]],[0.878,[0.91637286,0.85047967,0.54388105]],[0.882,[0.91927530,0.85471481,0.55239974]],[0.886,[0.92214698,0.85897609,0.56091165]],[0.890,[0.92499010,0.86326276,0.56941517]],[0.894,[0.92780705,0.86757406,0.57790823]],[0.898,[0.93059881,0.87190949,0.58639360]],[0.902,[0.93336714,0.87626844,0.59487104]],[0.906,[0.93611377,0.88065031,0.60334038]],[0.910,[0.93884038,0.88505451,0.61180142]],[0.914,[0.94154864,0.88948047,0.62025400]],[0.918,[0.94424022,0.89392765,0.62869796]],[0.922,[0.94691718,0.89839541,0.63713184]],[0.925,[0.94958118,0.90288322,0.64555550]],[0.929,[0.95223308,0.90739072,0.65397092]],[0.933,[0.95487445,0.91191742,0.66237802]],[0.937,[0.95750683,0.91646282,0.67077672]],[0.941,[0.96013179,0.92102646,0.67916692]],[0.945,[0.96275088,0.92560786,0.68754852]],[0.949,[0.96536576,0.93020653,0.69592114]],[0.953,[0.96797753,0.93482212,0.70428588]],[0.957,[0.97058766,0.93945419,0.71264291]],[0.961,[0.97319768,0.94410230,0.72099216]],[0.965,[0.97580917,0.94876601,0.72933356]],[0.969,[0.97842373,0.95344486,0.73766705]],[0.973,[0.98104259,0.95813849,0.74599345]],[0.976,[0.98366662,0.96284660,0.75431452]],[0.980,[0.98629803,0.96756863,0.76262887]],[0.984,[0.98893848,0.97230412,0.77093649]],[0.988,[0.99158968,0.97705259,0.77923744]],[0.992,[0.99425336,0.98181358,0.78753178]],[0.996,[0.99693130,0.98658659,0.79581965]],[1.000,[0.99962532,0.99137112,0.80410124]]]
H.colormap_viridis = function() {
    const colors = H.color_utils.color_cut;
    const ramp = H.color_utils.ramp;
    let result = ramp(colors("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));
    return result;    
}
H.colormap_viridis2 = [[0.000,[0.26700400,0.00487400,0.32941500]],[0.004,[0.26851000,0.00960500,0.33542700]],[0.008,[0.26994400,0.01462500,0.34137900]],[0.012,[0.27130500,0.01994200,0.34726900]],[0.016,[0.27259400,0.02556300,0.35309300]],[0.020,[0.27380900,0.03149700,0.35885300]],[0.024,[0.27495200,0.03775200,0.36454300]],[0.027,[0.27602200,0.04416700,0.37016400]],[0.031,[0.27701800,0.05034400,0.37571500]],[0.035,[0.27794100,0.05632400,0.38119100]],[0.039,[0.27879100,0.06214500,0.38659200]],[0.043,[0.27956600,0.06783600,0.39191700]],[0.047,[0.28026700,0.07341700,0.39716300]],[0.051,[0.28089400,0.07890700,0.40232900]],[0.055,[0.28144600,0.08432000,0.40741400]],[0.059,[0.28192400,0.08966600,0.41241500]],[0.063,[0.28232700,0.09495500,0.41733100]],[0.067,[0.28265600,0.10019600,0.42216000]],[0.071,[0.28291000,0.10539300,0.42690200]],[0.075,[0.28309100,0.11055300,0.43155400]],[0.078,[0.28319700,0.11568000,0.43611500]],[0.082,[0.28322900,0.12077700,0.44058400]],[0.086,[0.28318700,0.12584800,0.44496000]],[0.090,[0.28307200,0.13089500,0.44924100]],[0.094,[0.28288400,0.13592000,0.45342700]],[0.098,[0.28262300,0.14092600,0.45751700]],[0.102,[0.28229000,0.14591200,0.46151000]],[0.106,[0.28188700,0.15088100,0.46540500]],[0.110,[0.28141200,0.15583400,0.46920100]],[0.114,[0.28086800,0.16077100,0.47289900]],[0.118,[0.28025500,0.16569300,0.47649800]],[0.122,[0.27957400,0.17059900,0.47999700]],[0.125,[0.27882600,0.17549000,0.48339700]],[0.129,[0.27801200,0.18036700,0.48669700]],[0.133,[0.27713400,0.18522800,0.48989800]],[0.137,[0.27619400,0.19007400,0.49300100]],[0.141,[0.27519100,0.19490500,0.49600500]],[0.145,[0.27412800,0.19972100,0.49891100]],[0.149,[0.27300600,0.20452000,0.50172100]],[0.153,[0.27182800,0.20930300,0.50443400]],[0.157,[0.27059500,0.21406900,0.50705200]],[0.161,[0.26930800,0.21881800,0.50957700]],[0.165,[0.26796800,0.22354900,0.51200800]],[0.169,[0.26658000,0.22826200,0.51434900]],[0.173,[0.26514500,0.23295600,0.51659900]],[0.176,[0.26366300,0.23763100,0.51876200]],[0.180,[0.26213800,0.24228600,0.52083700]],[0.184,[0.26057100,0.24692200,0.52282800]],[0.188,[0.25896500,0.25153700,0.52473600]],[0.192,[0.25732200,0.25613000,0.52656300]],[0.196,[0.25564500,0.26070300,0.52831200]],[0.200,[0.25393500,0.26525400,0.52998300]],[0.204,[0.25219400,0.26978300,0.53157900]],[0.208,[0.25042500,0.27429000,0.53310300]],[0.212,[0.24862900,0.27877500,0.53455600]],[0.216,[0.24681100,0.28323700,0.53594100]],[0.220,[0.24497200,0.28767500,0.53726000]],[0.224,[0.24311300,0.29209200,0.53851600]],[0.227,[0.24123700,0.29648500,0.53970900]],[0.231,[0.23934600,0.30085500,0.54084400]],[0.235,[0.23744100,0.30520200,0.54192100]],[0.239,[0.23552600,0.30952700,0.54294400]],[0.243,[0.23360300,0.31382800,0.54391400]],[0.247,[0.23167400,0.31810600,0.54483400]],[0.251,[0.22973900,0.32236100,0.54570600]],[0.255,[0.22780200,0.32659400,0.54653200]],[0.259,[0.22586300,0.33080500,0.54731400]],[0.263,[0.22392500,0.33499400,0.54805300]],[0.267,[0.22198900,0.33916100,0.54875200]],[0.271,[0.22005700,0.34330700,0.54941300]],[0.275,[0.21813000,0.34743200,0.55003800]],[0.278,[0.21621000,0.35153500,0.55062700]],[0.282,[0.21429800,0.35561900,0.55118400]],[0.286,[0.21239500,0.35968300,0.55171000]],[0.290,[0.21050300,0.36372700,0.55220600]],[0.294,[0.20862300,0.36775200,0.55267500]],[0.298,[0.20675600,0.37175800,0.55311700]],[0.302,[0.20490300,0.37574600,0.55353300]],[0.306,[0.20306300,0.37971600,0.55392500]],[0.310,[0.20123900,0.38367000,0.55429400]],[0.314,[0.19943000,0.38760700,0.55464200]],[0.318,[0.19763600,0.39152800,0.55496900]],[0.322,[0.19586000,0.39543300,0.55527600]],[0.325,[0.19410000,0.39932300,0.55556500]],[0.329,[0.19235700,0.40319900,0.55583600]],[0.333,[0.19063100,0.40706100,0.55608900]],[0.337,[0.18892300,0.41091000,0.55632600]],[0.341,[0.18723100,0.41474600,0.55654700]],[0.345,[0.18555600,0.41857000,0.55675300]],[0.349,[0.18389800,0.42238300,0.55694400]],[0.353,[0.18225600,0.42618400,0.55712000]],[0.357,[0.18062900,0.42997500,0.55728200]],[0.361,[0.17901900,0.43375600,0.55743000]],[0.365,[0.17742300,0.43752700,0.55756500]],[0.369,[0.17584100,0.44129000,0.55768500]],[0.373,[0.17427400,0.44504400,0.55779200]],[0.376,[0.17271900,0.44879100,0.55788500]],[0.380,[0.17117600,0.45253000,0.55796500]],[0.384,[0.16964600,0.45626200,0.55803000]],[0.388,[0.16812600,0.45998800,0.55808200]],[0.392,[0.16661700,0.46370800,0.55811900]],[0.396,[0.16511700,0.46742300,0.55814100]],[0.400,[0.16362500,0.47113300,0.55814800]],[0.404,[0.16214200,0.47483800,0.55814000]],[0.408,[0.16066500,0.47854000,0.55811500]],[0.412,[0.15919400,0.48223700,0.55807300]],[0.416,[0.15772900,0.48593200,0.55801300]],[0.420,[0.15627000,0.48962400,0.55793600]],[0.424,[0.15481500,0.49331300,0.55784000]],[0.427,[0.15336400,0.49700000,0.55772400]],[0.431,[0.15191800,0.50068500,0.55758700]],[0.435,[0.15047600,0.50436900,0.55743000]],[0.439,[0.14903900,0.50805100,0.55725000]],[0.443,[0.14760700,0.51173300,0.55704900]],[0.447,[0.14618000,0.51541300,0.55682300]],[0.451,[0.14475900,0.51909300,0.55657200]],[0.455,[0.14334300,0.52277300,0.55629500]],[0.459,[0.14193500,0.52645300,0.55599100]],[0.463,[0.14053600,0.53013200,0.55565900]],[0.467,[0.13914700,0.53381200,0.55529800]],[0.471,[0.13777000,0.53749200,0.55490600]],[0.475,[0.13640800,0.54117300,0.55448300]],[0.478,[0.13506600,0.54485300,0.55402900]],[0.482,[0.13374300,0.54853500,0.55354100]],[0.486,[0.13244400,0.55221600,0.55301800]],[0.490,[0.13117200,0.55589900,0.55245900]],[0.494,[0.12993300,0.55958200,0.55186400]],[0.498,[0.12872900,0.56326500,0.55122900]],[0.502,[0.12756800,0.56694900,0.55055600]],[0.506,[0.12645300,0.57063300,0.54984100]],[0.510,[0.12539400,0.57431800,0.54908600]],[0.514,[0.12439500,0.57800200,0.54828700]],[0.518,[0.12346300,0.58168700,0.54744500]],[0.522,[0.12260600,0.58537100,0.54655700]],[0.525,[0.12183100,0.58905500,0.54562300]],[0.529,[0.12114800,0.59273900,0.54464100]],[0.533,[0.12056500,0.59642200,0.54361100]],[0.537,[0.12009200,0.60010400,0.54253000]],[0.541,[0.11973800,0.60378500,0.54140000]],[0.545,[0.11951200,0.60746400,0.54021800]],[0.549,[0.11942300,0.61114100,0.53898200]],[0.553,[0.11948300,0.61481700,0.53769200]],[0.557,[0.11969900,0.61849000,0.53634700]],[0.561,[0.12008100,0.62216100,0.53494600]],[0.565,[0.12063800,0.62582800,0.53348800]],[0.569,[0.12138000,0.62949200,0.53197300]],[0.573,[0.12231200,0.63315300,0.53039800]],[0.576,[0.12344400,0.63680900,0.52876300]],[0.580,[0.12478000,0.64046100,0.52706800]],[0.584,[0.12632600,0.64410700,0.52531100]],[0.588,[0.12808700,0.64774900,0.52349100]],[0.592,[0.13006700,0.65138400,0.52160800]],[0.596,[0.13226800,0.65501400,0.51966100]],[0.600,[0.13469200,0.65863600,0.51764900]],[0.604,[0.13733900,0.66225200,0.51557100]],[0.608,[0.14021000,0.66585900,0.51342700]],[0.612,[0.14330300,0.66945900,0.51121500]],[0.616,[0.14661600,0.67305000,0.50893600]],[0.620,[0.15014800,0.67663100,0.50658900]],[0.624,[0.15389400,0.68020300,0.50417200]],[0.627,[0.15785100,0.68376500,0.50168600]],[0.631,[0.16201600,0.68731600,0.49912900]],[0.635,[0.16638300,0.69085600,0.49650200]],[0.639,[0.17094800,0.69438400,0.49380300]],[0.643,[0.17570700,0.69790000,0.49103300]],[0.647,[0.18065300,0.70140200,0.48818900]],[0.651,[0.18578300,0.70489100,0.48527300]],[0.655,[0.19109000,0.70836600,0.48228400]],[0.659,[0.19657100,0.71182700,0.47922100]],[0.663,[0.20221900,0.71527200,0.47608400]],[0.667,[0.20803000,0.71870100,0.47287300]],[0.671,[0.21400000,0.72211400,0.46958800]],[0.675,[0.22012400,0.72550900,0.46622600]],[0.678,[0.22639700,0.72888800,0.46278900]],[0.682,[0.23281500,0.73224700,0.45927700]],[0.686,[0.23937400,0.73558800,0.45568800]],[0.690,[0.24607000,0.73891000,0.45202400]],[0.694,[0.25289900,0.74221100,0.44828400]],[0.698,[0.25985700,0.74549200,0.44446700]],[0.702,[0.26694100,0.74875100,0.44057300]],[0.706,[0.27414900,0.75198800,0.43660100]],[0.710,[0.28147700,0.75520300,0.43255200]],[0.714,[0.28892100,0.75839400,0.42842600]],[0.718,[0.29647900,0.76156100,0.42422300]],[0.722,[0.30414800,0.76470400,0.41994300]],[0.725,[0.31192500,0.76782200,0.41558600]],[0.729,[0.31980900,0.77091400,0.41115200]],[0.733,[0.32779600,0.77398000,0.40664000]],[0.737,[0.33588500,0.77701800,0.40204900]],[0.741,[0.34407400,0.78002900,0.39738100]],[0.745,[0.35236000,0.78301100,0.39263600]],[0.749,[0.36074100,0.78596400,0.38781400]],[0.753,[0.36921400,0.78888800,0.38291400]],[0.757,[0.37777900,0.79178100,0.37793900]],[0.761,[0.38643300,0.79464400,0.37288600]],[0.765,[0.39517400,0.79747500,0.36775700]],[0.769,[0.40400100,0.80027500,0.36255200]],[0.773,[0.41291300,0.80304100,0.35726900]],[0.776,[0.42190800,0.80577400,0.35191000]],[0.780,[0.43098300,0.80847300,0.34647600]],[0.784,[0.44013700,0.81113800,0.34096700]],[0.788,[0.44936800,0.81376800,0.33538400]],[0.792,[0.45867400,0.81636300,0.32972700]],[0.796,[0.46805300,0.81892100,0.32399800]],[0.800,[0.47750400,0.82144400,0.31819500]],[0.804,[0.48702600,0.82392900,0.31232100]],[0.808,[0.49661500,0.82637600,0.30637700]],[0.812,[0.50627100,0.82878600,0.30036200]],[0.816,[0.51599200,0.83115800,0.29427900]],[0.820,[0.52577600,0.83349100,0.28812700]],[0.824,[0.53562100,0.83578500,0.28190800]],[0.827,[0.54552400,0.83803900,0.27562600]],[0.831,[0.55548400,0.84025400,0.26928100]],[0.835,[0.56549800,0.84243000,0.26287700]],[0.839,[0.57556300,0.84456600,0.25641500]],[0.843,[0.58567800,0.84666100,0.24989700]],[0.847,[0.59583900,0.84871700,0.24332900]],[0.851,[0.60604500,0.85073300,0.23671200]],[0.855,[0.61629300,0.85270900,0.23005200]],[0.859,[0.62657900,0.85464500,0.22335300]],[0.863,[0.63690200,0.85654200,0.21662000]],[0.867,[0.64725700,0.85840000,0.20986100]],[0.871,[0.65764200,0.86021900,0.20308200]],[0.875,[0.66805400,0.86199900,0.19629300]],[0.878,[0.67848900,0.86374200,0.18950300]],[0.882,[0.68894400,0.86544800,0.18272500]],[0.886,[0.69941500,0.86711700,0.17597100]],[0.890,[0.70989800,0.86875100,0.16925700]],[0.894,[0.72039100,0.87035000,0.16260300]],[0.898,[0.73088900,0.87191600,0.15602900]],[0.902,[0.74138800,0.87344900,0.14956100]],[0.906,[0.75188400,0.87495100,0.14322800]],[0.910,[0.76237300,0.87642400,0.13706400]],[0.914,[0.77285200,0.87786800,0.13110900]],[0.918,[0.78331500,0.87928500,0.12540500]],[0.922,[0.79376000,0.88067800,0.12000500]],[0.925,[0.80418200,0.88204600,0.11496500]],[0.929,[0.81457600,0.88339300,0.11034700]],[0.933,[0.82494000,0.88472000,0.10621700]],[0.937,[0.83527000,0.88602900,0.10264600]],[0.941,[0.84556100,0.88732200,0.09970200]],[0.945,[0.85581000,0.88860100,0.09745200]],[0.949,[0.86601300,0.88986800,0.09595300]],[0.953,[0.87616800,0.89112500,0.09525000]],[0.957,[0.88627100,0.89237400,0.09537400]],[0.961,[0.89632000,0.89361600,0.09633500]],[0.965,[0.90631100,0.89485500,0.09812500]],[0.969,[0.91624200,0.89609100,0.10071700]],[0.973,[0.92610600,0.89733000,0.10407100]],[0.976,[0.93590400,0.89857000,0.10813100]],[0.980,[0.94563600,0.89981500,0.11283800]],[0.984,[0.95530000,0.90106500,0.11812800]],[0.988,[0.96489400,0.90232300,0.12394100]],[0.992,[0.97441700,0.90359000,0.13021500]],[0.996,[0.98386800,0.90486700,0.13689700]],[1.000,[0.99324800,0.90615700,0.14393600]]]
H.colormap_vorticity_pink = [[0.000,[0.20340025,0.05125715,0.20853721]],[0.004,[0.20826202,0.05257439,0.21293290]],[0.008,[0.21313526,0.05385492,0.21730306]],[0.012,[0.21802045,0.05509893,0.22164676]],[0.016,[0.22291807,0.05630663,0.22596300]],[0.020,[0.22782852,0.05747825,0.23025069]],[0.024,[0.23275618,0.05860748,0.23451143]],[0.027,[0.23769737,0.05970120,0.23874094]],[0.031,[0.24265208,0.06076033,0.24293764]],[0.035,[0.24762052,0.06178533,0.24710008]],[0.039,[0.25260288,0.06277675,0.25122673]],[0.043,[0.25759927,0.06373523,0.25531596]],[0.047,[0.26260976,0.06466150,0.25936605]],[0.051,[0.26763544,0.06555455,0.26337578]],[0.055,[0.27267598,0.06641579,0.26734303]],[0.059,[0.27773011,0.06724828,0.27126523]],[0.063,[0.28279763,0.06805326,0.27514038]],[0.067,[0.28787829,0.06883212,0.27896641]],[0.071,[0.29297177,0.06958642,0.28274117]],[0.075,[0.29807765,0.07031788,0.28646248]],[0.078,[0.30319545,0.07102842,0.29012809]],[0.082,[0.30832464,0.07172011,0.29373575]],[0.086,[0.31346457,0.07239524,0.29728315]],[0.090,[0.31861455,0.07305628,0.30076800]],[0.094,[0.32377380,0.07370590,0.30418800]],[0.098,[0.32894146,0.07434697,0.30754086]],[0.102,[0.33411661,0.07498254,0.31082433]],[0.106,[0.33929826,0.07561586,0.31403622]],[0.110,[0.34448536,0.07625034,0.31717438]],[0.114,[0.34967708,0.07688902,0.32023675]],[0.118,[0.35487306,0.07753419,0.32322125]],[0.122,[0.36007097,0.07819169,0.32612604]],[0.125,[0.36526951,0.07886553,0.32894943]],[0.129,[0.37046736,0.07955978,0.33168987]],[0.133,[0.37566316,0.08027858,0.33434595]],[0.137,[0.38085553,0.08102606,0.33691649]],[0.141,[0.38604309,0.08180633,0.33940046]],[0.145,[0.39122561,0.08262142,0.34179654]],[0.149,[0.39640071,0.08347702,0.34410442]],[0.153,[0.40156669,0.08437758,0.34632390]],[0.157,[0.40672217,0.08532677,0.34845483]],[0.161,[0.41186583,0.08632804,0.35049732]],[0.165,[0.41699698,0.08738362,0.35245124]],[0.169,[0.42211410,0.08849693,0.35431721]],[0.173,[0.42721549,0.08967152,0.35609639]],[0.176,[0.43230001,0.09090969,0.35778975]],[0.180,[0.43736661,0.09221344,0.35939846]],[0.184,[0.44241480,0.09358362,0.36092332]],[0.188,[0.44744296,0.09502266,0.36236656]],[0.192,[0.45245022,0.09653153,0.36372988]],[0.196,[0.45743580,0.09811082,0.36501514]],[0.200,[0.46239915,0.09976065,0.36622412]],[0.204,[0.46733939,0.10148133,0.36735917]],[0.208,[0.47225593,0.10327260,0.36842255]],[0.212,[0.47714828,0.10513387,0.36941650]],[0.216,[0.48201596,0.10706442,0.37034344]],[0.220,[0.48685856,0.10906325,0.37120582]],[0.224,[0.49167582,0.11112909,0.37200598]],[0.227,[0.49646750,0.11326054,0.37274632]],[0.231,[0.50123327,0.11545624,0.37342952]],[0.235,[0.50597299,0.11771456,0.37405808]],[0.239,[0.51068666,0.12003365,0.37463413]],[0.243,[0.51537424,0.12241171,0.37516003]],[0.247,[0.52003564,0.12484701,0.37563826]],[0.251,[0.52467068,0.12733788,0.37607164]],[0.255,[0.52927965,0.12988221,0.37646180]],[0.259,[0.53386261,0.13247818,0.37681091]],[0.263,[0.53841965,0.13512398,0.37712110]],[0.267,[0.54295065,0.13781801,0.37739515]],[0.271,[0.54745584,0.14055843,0.37763473]],[0.275,[0.55193545,0.14334348,0.37784149]],[0.278,[0.55638960,0.14617156,0.37801733]],[0.282,[0.56081843,0.14904112,0.37816410]],[0.286,[0.56522185,0.15195079,0.37828450]],[0.290,[0.56960020,0.15489902,0.37837948]],[0.294,[0.57395365,0.15788445,0.37845058]],[0.298,[0.57828232,0.16090583,0.37849943]],[0.302,[0.58258634,0.16396195,0.37852760]],[0.306,[0.58686572,0.16705170,0.37853726]],[0.310,[0.59112064,0.17017398,0.37852950]],[0.314,[0.59535127,0.17332779,0.37850546]],[0.318,[0.59955770,0.17651220,0.37846653]],[0.322,[0.60374000,0.17972635,0.37841404]],[0.325,[0.60789824,0.18296943,0.37834937]],[0.329,[0.61203242,0.18624067,0.37827444]],[0.333,[0.61614266,0.18953940,0.37818974]],[0.337,[0.62022902,0.19286498,0.37809649]],[0.341,[0.62429150,0.19621684,0.37799588]],[0.345,[0.62833011,0.19959444,0.37788907]],[0.349,[0.63234486,0.20299730,0.37777720]],[0.353,[0.63633567,0.20642491,0.37766190]],[0.357,[0.64030257,0.20987692,0.37754374]],[0.361,[0.64424550,0.21335297,0.37742379]],[0.365,[0.64816439,0.21685275,0.37730312]],[0.369,[0.65205918,0.22037597,0.37718281]],[0.373,[0.65592975,0.22392235,0.37706391]],[0.376,[0.65977600,0.22749166,0.37694762]],[0.380,[0.66359781,0.23108369,0.37683500]],[0.384,[0.66739504,0.23469830,0.37672691]],[0.388,[0.67116753,0.23833535,0.37662440]],[0.392,[0.67491512,0.24199472,0.37652853]],[0.396,[0.67863762,0.24567630,0.37644035]],[0.400,[0.68233484,0.24938002,0.37636095]],[0.404,[0.68600655,0.25310580,0.37629145]],[0.408,[0.68965253,0.25685360,0.37623291]],[0.412,[0.69327254,0.26062340,0.37618635]],[0.416,[0.69686632,0.26441520,0.37615291]],[0.420,[0.70043360,0.26822899,0.37613371]],[0.424,[0.70397409,0.27206478,0.37612990]],[0.427,[0.70748750,0.27592259,0.37614266]],[0.431,[0.71097352,0.27980245,0.37617313]],[0.435,[0.71443181,0.28370442,0.37622252]],[0.439,[0.71786206,0.28762852,0.37629208]],[0.443,[0.72126390,0.29157480,0.37638306]],[0.447,[0.72463700,0.29554332,0.37649676]],[0.451,[0.72798098,0.29953413,0.37663448]],[0.455,[0.73129546,0.30354729,0.37679757]],[0.459,[0.73458005,0.30758288,0.37698731]],[0.463,[0.73783435,0.31164097,0.37720511]],[0.467,[0.74105798,0.31572158,0.37745245]],[0.471,[0.74425052,0.31982476,0.37773081]],[0.475,[0.74741157,0.32395055,0.37804166]],[0.478,[0.75054072,0.32809900,0.37838654]],[0.482,[0.75363755,0.33227014,0.37876700]],[0.486,[0.75670159,0.33646406,0.37918448]],[0.490,[0.75973246,0.34068073,0.37964068]],[0.494,[0.76272975,0.34492014,0.38013731]],[0.498,[0.76569305,0.34918228,0.38067601]],[0.502,[0.76862195,0.35346712,0.38125850]],[0.506,[0.77151605,0.35777464,0.38188648]],[0.510,[0.77437495,0.36210479,0.38256169]],[0.514,[0.77719822,0.36645754,0.38328582]],[0.518,[0.77998556,0.37083276,0.38406076]],[0.522,[0.78273660,0.37523032,0.38488831]],[0.525,[0.78545100,0.37965010,0.38577027]],[0.529,[0.78812845,0.38409196,0.38670846]],[0.533,[0.79076866,0.38855573,0.38770470]],[0.537,[0.79337135,0.39304120,0.38876082]],[0.541,[0.79593630,0.39754813,0.38987866]],[0.545,[0.79846329,0.40207627,0.39106003]],[0.549,[0.80095214,0.40662536,0.39230669]],[0.553,[0.80340270,0.41119510,0.39362043]],[0.557,[0.80581485,0.41578517,0.39500298]],[0.561,[0.80818855,0.42039519,0.39645606]],[0.565,[0.81052390,0.42502464,0.39798147]],[0.569,[0.81282080,0.42967323,0.39958071]],[0.573,[0.81507930,0.43434053,0.40125532]],[0.576,[0.81729951,0.43902609,0.40300681]],[0.580,[0.81948157,0.44372941,0.40483662]],[0.584,[0.82162569,0.44844998,0.40674611]],[0.588,[0.82373229,0.45318712,0.40873667]],[0.592,[0.82580183,0.45794015,0.41080953]],[0.596,[0.82783443,0.46270870,0.41296566]],[0.600,[0.82983048,0.46749218,0.41520606]],[0.604,[0.83179047,0.47228997,0.41753164]],[0.608,[0.83371489,0.47710144,0.41994320]],[0.612,[0.83560431,0.48192593,0.42244142]],[0.616,[0.83745936,0.48676280,0.42502690]],[0.620,[0.83928115,0.49161102,0.42770018]],[0.624,[0.84107035,0.49646996,0.43046153]],[0.627,[0.84282741,0.50133921,0.43331112]],[0.631,[0.84455311,0.50621807,0.43624906]],[0.635,[0.84624832,0.51110586,0.43927533]],[0.639,[0.84791390,0.51600192,0.44238981]],[0.643,[0.84955078,0.52090556,0.44559226]],[0.647,[0.85115991,0.52581613,0.44888233]],[0.651,[0.85274227,0.53073296,0.45225954]],[0.655,[0.85429886,0.53565540,0.45572335]],[0.659,[0.85583071,0.54058284,0.45927307]],[0.663,[0.85733888,0.54551465,0.46290794]],[0.667,[0.85882442,0.55045025,0.46662711]],[0.671,[0.86028873,0.55538883,0.47042955]],[0.675,[0.86173275,0.56032997,0.47431426]],[0.678,[0.86315731,0.56527328,0.47828022]],[0.682,[0.86456348,0.57021827,0.48232627]],[0.686,[0.86595233,0.57516447,0.48645122]],[0.690,[0.86732494,0.58011144,0.49065382]],[0.694,[0.86868234,0.58505874,0.49493276]],[0.698,[0.87002561,0.59000599,0.49928670]],[0.702,[0.87135575,0.59495282,0.50371428]],[0.706,[0.87267379,0.59989890,0.50821409]],[0.710,[0.87398160,0.60484341,0.51278430]],[0.714,[0.87527962,0.60978640,0.51742369]],[0.718,[0.87656874,0.61472764,0.52213085]],[0.722,[0.87784992,0.61966691,0.52690431]],[0.725,[0.87912408,0.62460401,0.53174263]],[0.729,[0.88039211,0.62953874,0.53664435]],[0.733,[0.88165490,0.63447097,0.54160802]],[0.737,[0.88291328,0.63940055,0.54663223]],[0.741,[0.88416808,0.64432738,0.55171557]],[0.745,[0.88542008,0.64925139,0.55685666]],[0.749,[0.88667005,0.65417250,0.56205414]],[0.753,[0.88791872,0.65909067,0.56730668]],[0.757,[0.88917090,0.66400384,0.57261005]],[0.761,[0.89042371,0.66891382,0.57796541]],[0.765,[0.89167767,0.67382071,0.58337159]],[0.769,[0.89293342,0.67872453,0.58882738]],[0.773,[0.89419156,0.68362534,0.59433158]],[0.776,[0.89545267,0.68852319,0.59988306]],[0.780,[0.89672032,0.69341676,0.60547834]],[0.784,[0.89799564,0.69830590,0.61111575]],[0.788,[0.89927597,0.70319221,0.61679672]],[0.792,[0.90056181,0.70807582,0.62252022]],[0.796,[0.90185363,0.71295684,0.62828530]],[0.800,[0.90315480,0.71783410,0.63408853]],[0.804,[0.90446821,0.72270670,0.63992685]],[0.808,[0.90578934,0.72757702,0.64580349]],[0.812,[0.90711857,0.73244522,0.65171762]],[0.816,[0.90845631,0.73731145,0.65766843]],[0.820,[0.90981225,0.74217193,0.66364681]],[0.824,[0.91117810,0.74703058,0.66965958]],[0.827,[0.91255393,0.75188769,0.67570624]],[0.831,[0.91394046,0.75674328,0.68178577]],[0.835,[0.91534816,0.76159342,0.68788806]],[0.839,[0.91676720,0.76644249,0.69402174]],[0.843,[0.91819790,0.77129068,0.70018617]],[0.847,[0.91964557,0.77613620,0.70637599]],[0.851,[0.92111262,0.78097847,0.71258846]],[0.855,[0.92259257,0.78582038,0.71882946]],[0.859,[0.92408634,0.79066188,0.72509782]],[0.863,[0.92560593,0.79549870,0.73138149]],[0.867,[0.92713958,0.80033571,0.73769161]],[0.871,[0.92868761,0.80517307,0.74402771]],[0.875,[0.93026226,0.81000656,0.75037722]],[0.878,[0.93185391,0.81484010,0.75674949]],[0.882,[0.93346107,0.81967454,0.76314584]],[0.886,[0.93509628,0.82450566,0.76955320]],[0.890,[0.93675010,0.82933722,0.77598096]],[0.894,[0.93842059,0.83417022,0.78243098]],[0.898,[0.94012241,0.83899979,0.78888773]],[0.902,[0.94184257,0.84383087,0.79536454]],[0.906,[0.94358303,0.84866304,0.80185918]],[0.910,[0.94535503,0.85349280,0.80835951]],[0.914,[0.94714576,0.85832485,0.81487893]],[0.918,[0.94896310,0.86315684,0.82140881]],[0.922,[0.95080878,0.86798852,0.82794705]],[0.925,[0.95267455,0.87282297,0.83450240]],[0.929,[0.95457496,0.87765571,0.84105874]],[0.933,[0.95649898,0.88249069,0.84762790]],[0.937,[0.95844981,0.88732720,0.85420614]],[0.941,[0.96043456,0.89216329,0.86078529]],[0.945,[0.96244207,0.89700286,0.86737746]],[0.949,[0.96448728,0.90184151,0.87396567]],[0.953,[0.96655947,0.90668298,0.88056151]],[0.957,[0.96866357,0.91152607,0.88715902]],[0.961,[0.97080349,0.91636994,0.89375329]],[0.965,[0.97297049,0.92121764,0.90035362]],[0.969,[0.97518156,0.92606439,0.90693990]],[0.973,[0.97742080,0.93091541,0.91352937]],[0.976,[0.97970195,0.93576702,0.92010507]],[0.980,[0.98201829,0.94062171,0.92667310]],[0.984,[0.98437391,0.94547881,0.93322656]],[0.988,[0.98677194,0.95033807,0.93975862]],[0.992,[0.98920738,0.95520176,0.94627024]],[0.996,[0.99169155,0.96006773,0.95274067]],[1.000,[0.99421147,0.96494148,0.95917135]]]
H.colormap_vorticity_turquoise = [[0.000,[0.08225560,0.11492441,0.26479017]],[0.004,[0.08312617,0.11903837,0.26686289]],[0.008,[0.08400181,0.12310749,0.26895267]],[0.012,[0.08487294,0.12713875,0.27105417]],[0.016,[0.08574385,0.13113332,0.27316912]],[0.020,[0.08661249,0.13509450,0.27529614]],[0.024,[0.08747533,0.13902581,0.27743329]],[0.027,[0.08833859,0.14292709,0.27958315]],[0.031,[0.08919013,0.14680436,0.28174002]],[0.035,[0.09004100,0.15065551,0.28390867]],[0.039,[0.09088232,0.15448500,0.28608501]],[0.043,[0.09171714,0.15829319,0.28827028]],[0.047,[0.09254608,0.16208117,0.29046458]],[0.051,[0.09336173,0.16585233,0.29266480]],[0.055,[0.09417284,0.16960508,0.29487442]],[0.059,[0.09496900,0.17334347,0.29708922]],[0.063,[0.09575619,0.17706663,0.29931153]],[0.067,[0.09653316,0.18077576,0.30154079]],[0.071,[0.09729329,0.18447344,0.30377451]],[0.075,[0.09804493,0.18815809,0.30601574]],[0.078,[0.09877832,0.19183299,0.30826092]],[0.082,[0.09949804,0.19549751,0.31051168]],[0.086,[0.10020549,0.19915186,0.31276843]],[0.090,[0.10089002,0.20279929,0.31502756]],[0.094,[0.10156203,0.20643764,0.31729251]],[0.098,[0.10221505,0.21006899,0.31956112]],[0.102,[0.10284688,0.21369428,0.32183267]],[0.106,[0.10346375,0.21731242,0.32410904]],[0.110,[0.10405562,0.22092615,0.32638711]],[0.114,[0.10462727,0.22453468,0.32866827]],[0.118,[0.10518146,0.22813774,0.33095325]],[0.122,[0.10570551,0.23173845,0.33323831]],[0.125,[0.10620936,0.23533489,0.33552622]],[0.129,[0.10669272,0.23892742,0.33781678]],[0.133,[0.10714289,0.24251899,0.34010639]],[0.137,[0.10757131,0.24610739,0.34239809]],[0.141,[0.10797639,0.24969322,0.34469128]],[0.145,[0.10834600,0.25327913,0.34698268]],[0.149,[0.10869133,0.25686304,0.34927505]],[0.153,[0.10901163,0.26044532,0.35156802]],[0.157,[0.10929328,0.26402876,0.35385806]],[0.161,[0.10954788,0.26761128,0.35614786]],[0.165,[0.10977489,0.27119314,0.35843709]],[0.169,[0.10996353,0.27477648,0.36072299]],[0.173,[0.11011983,0.27836030,0.36300681]],[0.176,[0.11024602,0.28194432,0.36528883]],[0.180,[0.11033616,0.28552972,0.36756748]],[0.184,[0.11038673,0.28911718,0.36984175]],[0.188,[0.11040471,0.29270558,0.37211295]],[0.192,[0.11038934,0.29629516,0.37438064]],[0.196,[0.11032908,0.29988791,0.37664208]],[0.200,[0.11023173,0.30348258,0.37889869]],[0.204,[0.11009863,0.30707904,0.38115045]],[0.208,[0.10992866,0.31067752,0.38339682]],[0.212,[0.10970926,0.31428004,0.38563492]],[0.216,[0.10945183,0.31788484,0.38786678]],[0.220,[0.10915570,0.32149208,0.39009193]],[0.224,[0.10882021,0.32510190,0.39230988]],[0.227,[0.10843373,0.32871604,0.39451799]],[0.231,[0.10800528,0.33233317,0.39671769]],[0.235,[0.10753553,0.33595323,0.39890871]],[0.239,[0.10702392,0.33957631,0.40109056]],[0.243,[0.10646662,0.34320298,0.40326210]],[0.247,[0.10585824,0.34683394,0.40542188]],[0.251,[0.10520656,0.35046815,0.40757096]],[0.255,[0.10451122,0.35410566,0.40970881]],[0.259,[0.10377192,0.35774653,0.41183489]],[0.263,[0.10298843,0.36139080,0.41394866]],[0.267,[0.10215131,0.36503965,0.41604787]],[0.271,[0.10126892,0.36869202,0.41813352]],[0.275,[0.10034231,0.37234779,0.42020525]],[0.278,[0.09937170,0.37600698,0.42226250]],[0.282,[0.09835742,0.37966955,0.42430469]],[0.286,[0.09729997,0.38333550,0.42633126]],[0.290,[0.09620004,0.38700476,0.42834163]],[0.294,[0.09505173,0.39067803,0.43033399]],[0.298,[0.09386234,0.39435455,0.43230887]],[0.302,[0.09263427,0.39803412,0.43426586]],[0.306,[0.09136928,0.40171665,0.43620437]],[0.310,[0.09006946,0.40540204,0.43812379]],[0.314,[0.08873731,0.40909016,0.44002354]],[0.318,[0.08737577,0.41278087,0.44190300]],[0.322,[0.08598831,0.41647400,0.44376159]],[0.325,[0.08457895,0.42016939,0.44559868]],[0.329,[0.08315236,0.42386684,0.44741369]],[0.333,[0.08171394,0.42756614,0.44920601]],[0.337,[0.08026988,0.43126706,0.45097504]],[0.341,[0.07882726,0.43496935,0.45272018]],[0.345,[0.07739416,0.43867274,0.45444085]],[0.349,[0.07597972,0.44237693,0.45613645]],[0.353,[0.07459424,0.44608161,0.45780643]],[0.357,[0.07324931,0.44978644,0.45945021]],[0.361,[0.07195782,0.45349106,0.46106724]],[0.365,[0.07073404,0.45719509,0.46265700]],[0.369,[0.06959365,0.46089811,0.46421897]],[0.373,[0.06855375,0.46459968,0.46575265]],[0.376,[0.06763273,0.46829936,0.46725759]],[0.380,[0.06685020,0.47199664,0.46873333]],[0.384,[0.06622677,0.47569101,0.47017948]],[0.388,[0.06577674,0.47938244,0.47159416]],[0.392,[0.06552566,0.48307007,0.47297774]],[0.396,[0.06549821,0.48675309,0.47433054]],[0.400,[0.06571558,0.49043087,0.47565232]],[0.404,[0.06619782,0.49410277,0.47694291]],[0.408,[0.06696294,0.49776810,0.47820211]],[0.412,[0.06801611,0.50142699,0.47942671]],[0.416,[0.06938288,0.50507783,0.48061980]],[0.420,[0.07107372,0.50871983,0.48178149]],[0.424,[0.07309574,0.51235222,0.48291199]],[0.427,[0.07544313,0.51597502,0.48400767]],[0.431,[0.07812721,0.51958652,0.48507257]],[0.435,[0.08114572,0.52318584,0.48610736]],[0.439,[0.08448833,0.52677264,0.48710972]],[0.443,[0.08815110,0.53034572,0.48808171]],[0.447,[0.09212706,0.53390388,0.48902580]],[0.451,[0.09640117,0.53744678,0.48993927]],[0.455,[0.10096511,0.54097304,0.49082601]],[0.459,[0.10580589,0.54448174,0.49168732]],[0.463,[0.11090917,0.54797225,0.49252203]],[0.467,[0.11626318,0.55144324,0.49333556]],[0.471,[0.12185356,0.55489421,0.49412566]],[0.475,[0.12766727,0.55832396,0.49489786]],[0.478,[0.13369121,0.56173186,0.49565192]],[0.482,[0.13991195,0.56511701,0.49639184]],[0.486,[0.14631713,0.56847874,0.49711902]],[0.490,[0.15289371,0.57181634,0.49783712]],[0.494,[0.15963000,0.57512924,0.49854817]],[0.498,[0.16651330,0.57841691,0.49925615]],[0.502,[0.17353288,0.58167892,0.49996313]],[0.506,[0.18067610,0.58491493,0.50067365]],[0.510,[0.18793344,0.58812469,0.50138963]],[0.514,[0.19529246,0.59130810,0.50211590]],[0.518,[0.20274431,0.59446505,0.50285464]],[0.522,[0.21027766,0.59759568,0.50361022]],[0.525,[0.21788350,0.60070012,0.50438554]],[0.529,[0.22555217,0.60377865,0.50518416]],[0.533,[0.23327491,0.60683163,0.50600926]],[0.537,[0.24104301,0.60985952,0.50686415]],[0.541,[0.24884894,0.61286282,0.50775157]],[0.545,[0.25668402,0.61584223,0.50867505]],[0.549,[0.26454253,0.61879831,0.50963658]],[0.553,[0.27241623,0.62173194,0.51063959]],[0.557,[0.28030037,0.62464378,0.51168577]],[0.561,[0.28818811,0.62753476,0.51277795]],[0.565,[0.29607483,0.63040570,0.51391788]],[0.569,[0.30395552,0.63325751,0.51510756]],[0.573,[0.31182548,0.63609115,0.51634887]],[0.576,[0.31968144,0.63890744,0.51764306]],[0.580,[0.32751881,0.64170747,0.51899197]],[0.584,[0.33533556,0.64449201,0.52039636]],[0.588,[0.34312773,0.64726215,0.52185776]],[0.592,[0.35089362,0.65001870,0.52337683]],[0.596,[0.35863089,0.65276260,0.52495444]],[0.600,[0.36633683,0.65549486,0.52659157]],[0.604,[0.37401197,0.65821602,0.52828804]],[0.608,[0.38165106,0.66092757,0.53004568]],[0.612,[0.38925805,0.66362950,0.53186311]],[0.616,[0.39682619,0.66632361,0.53374255]],[0.620,[0.40435935,0.66900988,0.53568268]],[0.624,[0.41185545,0.67168934,0.53768413]],[0.627,[0.41931195,0.67436313,0.53974757]],[0.631,[0.42673260,0.67703119,0.54187183]],[0.635,[0.43411299,0.67969503,0.54405806]],[0.639,[0.44145473,0.68235501,0.54630566]],[0.643,[0.44875982,0.68501134,0.54861400]],[0.647,[0.45602407,0.68766556,0.55098397]],[0.651,[0.46324986,0.69031781,0.55341478]],[0.655,[0.47043894,0.69296834,0.55590587]],[0.659,[0.47758904,0.69561826,0.55845753]],[0.663,[0.48469972,0.69826831,0.56106956]],[0.667,[0.49177413,0.70091838,0.56374112]],[0.671,[0.49881245,0.70356902,0.56647195]],[0.675,[0.50581153,0.70622159,0.56926226]],[0.678,[0.51277388,0.70887607,0.57211131]],[0.682,[0.51970103,0.71153267,0.57501859]],[0.686,[0.52659327,0.71419186,0.57798374]],[0.690,[0.53344948,0.71685451,0.58100655]],[0.694,[0.54026906,0.71952134,0.58408665]],[0.698,[0.54705487,0.72219215,0.58722338]],[0.702,[0.55380726,0.72486737,0.59041634]],[0.706,[0.56052657,0.72754743,0.59366511]],[0.710,[0.56721317,0.73023276,0.59696926]],[0.714,[0.57386499,0.73292445,0.60032836]],[0.718,[0.58048457,0.73562232,0.60374187]],[0.722,[0.58707274,0.73832661,0.60720930]],[0.725,[0.59362989,0.74103770,0.61073019]],[0.729,[0.60015641,0.74375596,0.61430405]],[0.733,[0.60665269,0.74648175,0.61793039]],[0.737,[0.61311912,0.74921542,0.62160871]],[0.741,[0.61955610,0.75195731,0.62533849]],[0.745,[0.62596359,0.75470790,0.62911918]],[0.749,[0.63234144,0.75746769,0.63295016]],[0.753,[0.63869119,0.76023665,0.63683100]],[0.757,[0.64501324,0.76301508,0.64076119]],[0.761,[0.65130797,0.76580329,0.64474018]],[0.765,[0.65757580,0.76860157,0.64876743]],[0.769,[0.66381711,0.77141023,0.65284240]],[0.773,[0.67003230,0.77422953,0.65696453]],[0.776,[0.67622177,0.77705976,0.66113327]],[0.780,[0.68238592,0.77990119,0.66534806]],[0.784,[0.68852514,0.78275408,0.66960833]],[0.788,[0.69463984,0.78561869,0.67391352]],[0.792,[0.70073040,0.78849528,0.67826307]],[0.796,[0.70679722,0.79138408,0.68265641]],[0.800,[0.71284071,0.79428535,0.68709296]],[0.804,[0.71886125,0.79719932,0.69157216]],[0.808,[0.72485924,0.80012621,0.69609343]],[0.812,[0.73083509,0.80306624,0.70065621]],[0.816,[0.73678917,0.80601965,0.70525992]],[0.820,[0.74272190,0.80898665,0.70990399]],[0.824,[0.74863273,0.81196780,0.71458740]],[0.827,[0.75452231,0.81496323,0.71930966]],[0.831,[0.76039158,0.81797292,0.72407043]],[0.835,[0.76624094,0.82099707,0.72886914]],[0.839,[0.77207078,0.82403586,0.73370523]],[0.843,[0.77788150,0.82708949,0.73857810]],[0.847,[0.78367350,0.83015814,0.74348721]],[0.851,[0.78944716,0.83324197,0.74843197]],[0.855,[0.79520290,0.83634117,0.75341183]],[0.859,[0.80094018,0.83945630,0.75842558]],[0.863,[0.80665847,0.84258795,0.76347196]],[0.867,[0.81235991,0.84573553,0.76855153]],[0.871,[0.81804489,0.84889920,0.77366371]],[0.875,[0.82371383,0.85207911,0.77880793]],[0.878,[0.82936712,0.85527541,0.78398361]],[0.882,[0.83500487,0.85848838,0.78918994]],[0.886,[0.84062467,0.86171948,0.79442393]],[0.890,[0.84622998,0.86496746,0.79968738]],[0.894,[0.85182123,0.86823244,0.80497972]],[0.898,[0.85739886,0.87151457,0.81030033]],[0.902,[0.86296333,0.87481394,0.81564861]],[0.906,[0.86851129,0.87813251,0.82102020]],[0.910,[0.87404693,0.88146862,0.82641787]],[0.914,[0.87957085,0.88482234,0.83184102]],[0.918,[0.88508363,0.88819370,0.83728899]],[0.922,[0.89058366,0.89158388,0.84275871]],[0.925,[0.89607183,0.89499282,0.84824952]],[0.929,[0.90155093,0.89841950,0.85376285]],[0.933,[0.90702184,0.90186385,0.85929802]],[0.937,[0.91248330,0.90532691,0.86485172]],[0.941,[0.91793653,0.90880848,0.87042326]],[0.945,[0.92338518,0.91230711,0.87601483]],[0.949,[0.92883088,0.91582235,0.88162632]],[0.953,[0.93427164,0.91935565,0.88725314]],[0.957,[0.93971244,0.92290477,0.89289983]],[0.961,[0.94515638,0.92646829,0.89856977]],[0.965,[0.95060356,0.93004618,0.90426466]],[0.969,[0.95605310,0.93363854,0.90998868]],[0.973,[0.96150666,0.93724342,0.91575606]],[0.976,[0.96695738,0.94086247,0.92157953]],[0.980,[0.97238707,0.94450246,0.92746703]],[0.984,[0.97777857,0.94816875,0.93343649]],[0.988,[0.98310507,0.95187277,0.93948603]],[0.992,[0.98834174,0.95562829,0.94558363]],[0.996,[0.99349184,0.95943756,0.95169832]],[1.000,[0.99857633,0.96329654,0.95778950]]]
H.colormap_winter = [[0.000, [0.000, 0.000, 1.000]], [0.002, [0.000, 0.000, 1.000]], [0.004, [0.000, 0.004, 0.998]], [0.006, [0.000, 0.004, 0.998]], [0.008, [0.000, 0.008, 0.996]], [0.010, [0.000, 0.008, 0.996]], [0.012, [0.000, 0.012, 0.994]], [0.014, [0.000, 0.012, 0.994]], [0.016, [0.000, 0.016, 0.992]], [0.018, [0.000, 0.016, 0.992]], [0.020, [0.000, 0.020, 0.990]], [0.022, [0.000, 0.020, 0.990]], [0.023, [0.000, 0.024, 0.988]], [0.025, [0.000, 0.024, 0.988]], [0.027, [0.000, 0.027, 0.986]], [0.029, [0.000, 0.027, 0.986]], [0.031, [0.000, 0.031, 0.984]], [0.033, [0.000, 0.031, 0.984]], [0.035, [0.000, 0.035, 0.982]], [0.037, [0.000, 0.035, 0.982]], [0.039, [0.000, 0.039, 0.980]], [0.041, [0.000, 0.039, 0.980]], [0.043, [0.000, 0.043, 0.978]], [0.045, [0.000, 0.043, 0.978]], [0.047, [0.000, 0.047, 0.976]], [0.049, [0.000, 0.047, 0.976]], [0.051, [0.000, 0.051, 0.975]], [0.053, [0.000, 0.051, 0.975]], [0.055, [0.000, 0.055, 0.973]], [0.057, [0.000, 0.055, 0.973]], [0.059, [0.000, 0.059, 0.971]], [0.061, [0.000, 0.059, 0.971]], [0.063, [0.000, 0.063, 0.969]], [0.065, [0.000, 0.063, 0.969]], [0.067, [0.000, 0.067, 0.967]], [0.068, [0.000, 0.067, 0.967]], [0.070, [0.000, 0.071, 0.965]], [0.072, [0.000, 0.071, 0.965]], [0.074, [0.000, 0.075, 0.963]], [0.076, [0.000, 0.075, 0.963]], [0.078, [0.000, 0.078, 0.961]], [0.080, [0.000, 0.078, 0.961]], [0.082, [0.000, 0.082, 0.959]], [0.084, [0.000, 0.082, 0.959]], [0.086, [0.000, 0.086, 0.957]], [0.088, [0.000, 0.086, 0.957]], [0.090, [0.000, 0.090, 0.955]], [0.092, [0.000, 0.090, 0.955]], [0.094, [0.000, 0.094, 0.953]], [0.096, [0.000, 0.094, 0.953]], [0.098, [0.000, 0.098, 0.951]], [0.100, [0.000, 0.098, 0.951]], [0.102, [0.000, 0.102, 0.949]], [0.104, [0.000, 0.102, 0.949]], [0.106, [0.000, 0.106, 0.947]], [0.108, [0.000, 0.106, 0.947]], [0.110, [0.000, 0.110, 0.945]], [0.112, [0.000, 0.110, 0.945]], [0.114, [0.000, 0.114, 0.943]], [0.115, [0.000, 0.114, 0.943]], [0.117, [0.000, 0.118, 0.941]], [0.119, [0.000, 0.118, 0.941]], [0.121, [0.000, 0.122, 0.939]], [0.123, [0.000, 0.122, 0.939]], [0.125, [0.000, 0.125, 0.937]], [0.127, [0.000, 0.125, 0.937]], [0.129, [0.000, 0.129, 0.935]], [0.131, [0.000, 0.129, 0.935]], [0.133, [0.000, 0.133, 0.933]], [0.135, [0.000, 0.133, 0.933]], [0.137, [0.000, 0.137, 0.931]], [0.139, [0.000, 0.137, 0.931]], [0.141, [0.000, 0.141, 0.929]], [0.143, [0.000, 0.141, 0.929]], [0.145, [0.000, 0.145, 0.927]], [0.147, [0.000, 0.145, 0.927]], [0.149, [0.000, 0.149, 0.925]], [0.151, [0.000, 0.149, 0.925]], [0.153, [0.000, 0.153, 0.924]], [0.155, [0.000, 0.153, 0.924]], [0.157, [0.000, 0.157, 0.922]], [0.159, [0.000, 0.157, 0.922]], [0.160, [0.000, 0.161, 0.920]], [0.162, [0.000, 0.161, 0.920]], [0.164, [0.000, 0.165, 0.918]], [0.166, [0.000, 0.165, 0.918]], [0.168, [0.000, 0.169, 0.916]], [0.170, [0.000, 0.169, 0.916]], [0.172, [0.000, 0.173, 0.914]], [0.174, [0.000, 0.173, 0.914]], [0.176, [0.000, 0.176, 0.912]], [0.178, [0.000, 0.176, 0.912]], [0.180, [0.000, 0.180, 0.910]], [0.182, [0.000, 0.180, 0.910]], [0.184, [0.000, 0.184, 0.908]], [0.186, [0.000, 0.184, 0.908]], [0.188, [0.000, 0.188, 0.906]], [0.190, [0.000, 0.188, 0.906]], [0.192, [0.000, 0.192, 0.904]], [0.194, [0.000, 0.192, 0.904]], [0.196, [0.000, 0.196, 0.902]], [0.198, [0.000, 0.196, 0.902]], [0.200, [0.000, 0.200, 0.900]], [0.202, [0.000, 0.200, 0.900]], [0.204, [0.000, 0.204, 0.898]], [0.205, [0.000, 0.204, 0.898]], [0.207, [0.000, 0.208, 0.896]], [0.209, [0.000, 0.208, 0.896]], [0.211, [0.000, 0.212, 0.894]], [0.213, [0.000, 0.212, 0.894]], [0.215, [0.000, 0.216, 0.892]], [0.217, [0.000, 0.216, 0.892]], [0.219, [0.000, 0.220, 0.890]], [0.221, [0.000, 0.220, 0.890]], [0.223, [0.000, 0.224, 0.888]], [0.225, [0.000, 0.224, 0.888]], [0.227, [0.000, 0.227, 0.886]], [0.229, [0.000, 0.227, 0.886]], [0.231, [0.000, 0.231, 0.884]], [0.233, [0.000, 0.231, 0.884]], [0.235, [0.000, 0.235, 0.882]], [0.237, [0.000, 0.235, 0.882]], [0.239, [0.000, 0.239, 0.880]], [0.241, [0.000, 0.239, 0.880]], [0.243, [0.000, 0.243, 0.878]], [0.245, [0.000, 0.243, 0.878]], [0.247, [0.000, 0.247, 0.876]], [0.249, [0.000, 0.247, 0.876]], [0.250, [0.000, 0.251, 0.875]], [0.252, [0.000, 0.251, 0.875]], [0.254, [0.000, 0.255, 0.873]], [0.256, [0.000, 0.255, 0.873]], [0.258, [0.000, 0.259, 0.871]], [0.260, [0.000, 0.259, 0.871]], [0.262, [0.000, 0.263, 0.869]], [0.264, [0.000, 0.263, 0.869]], [0.266, [0.000, 0.267, 0.867]], [0.268, [0.000, 0.267, 0.867]], [0.270, [0.000, 0.271, 0.865]], [0.272, [0.000, 0.271, 0.865]], [0.274, [0.000, 0.275, 0.863]], [0.276, [0.000, 0.275, 0.863]], [0.278, [0.000, 0.278, 0.861]], [0.280, [0.000, 0.278, 0.861]], [0.282, [0.000, 0.282, 0.859]], [0.284, [0.000, 0.282, 0.859]], [0.286, [0.000, 0.286, 0.857]], [0.288, [0.000, 0.286, 0.857]], [0.290, [0.000, 0.290, 0.855]], [0.292, [0.000, 0.290, 0.855]], [0.294, [0.000, 0.294, 0.853]], [0.295, [0.000, 0.294, 0.853]], [0.297, [0.000, 0.298, 0.851]], [0.299, [0.000, 0.298, 0.851]], [0.301, [0.000, 0.302, 0.849]], [0.303, [0.000, 0.302, 0.849]], [0.305, [0.000, 0.306, 0.847]], [0.307, [0.000, 0.306, 0.847]], [0.309, [0.000, 0.310, 0.845]], [0.311, [0.000, 0.310, 0.845]], [0.313, [0.000, 0.314, 0.843]], [0.315, [0.000, 0.314, 0.843]], [0.317, [0.000, 0.318, 0.841]], [0.319, [0.000, 0.318, 0.841]], [0.321, [0.000, 0.322, 0.839]], [0.323, [0.000, 0.322, 0.839]], [0.325, [0.000, 0.325, 0.837]], [0.327, [0.000, 0.325, 0.837]], [0.329, [0.000, 0.329, 0.835]], [0.331, [0.000, 0.329, 0.835]], [0.333, [0.000, 0.333, 0.833]], [0.335, [0.000, 0.333, 0.833]], [0.337, [0.000, 0.337, 0.831]], [0.339, [0.000, 0.337, 0.831]], [0.341, [0.000, 0.341, 0.829]], [0.342, [0.000, 0.341, 0.829]], [0.344, [0.000, 0.345, 0.827]], [0.346, [0.000, 0.345, 0.827]], [0.348, [0.000, 0.349, 0.825]], [0.350, [0.000, 0.349, 0.825]], [0.352, [0.000, 0.353, 0.824]], [0.354, [0.000, 0.353, 0.824]], [0.356, [0.000, 0.357, 0.822]], [0.358, [0.000, 0.357, 0.822]], [0.360, [0.000, 0.361, 0.820]], [0.362, [0.000, 0.361, 0.820]], [0.364, [0.000, 0.365, 0.818]], [0.366, [0.000, 0.365, 0.818]], [0.368, [0.000, 0.369, 0.816]], [0.370, [0.000, 0.369, 0.816]], [0.372, [0.000, 0.373, 0.814]], [0.374, [0.000, 0.373, 0.814]], [0.376, [0.000, 0.376, 0.812]], [0.378, [0.000, 0.376, 0.812]], [0.380, [0.000, 0.380, 0.810]], [0.382, [0.000, 0.380, 0.810]], [0.384, [0.000, 0.384, 0.808]], [0.386, [0.000, 0.384, 0.808]], [0.387, [0.000, 0.388, 0.806]], [0.389, [0.000, 0.388, 0.806]], [0.391, [0.000, 0.392, 0.804]], [0.393, [0.000, 0.392, 0.804]], [0.395, [0.000, 0.396, 0.802]], [0.397, [0.000, 0.396, 0.802]], [0.399, [0.000, 0.400, 0.800]], [0.401, [0.000, 0.400, 0.800]], [0.403, [0.000, 0.404, 0.798]], [0.405, [0.000, 0.404, 0.798]], [0.407, [0.000, 0.408, 0.796]], [0.409, [0.000, 0.408, 0.796]], [0.411, [0.000, 0.412, 0.794]], [0.413, [0.000, 0.412, 0.794]], [0.415, [0.000, 0.416, 0.792]], [0.417, [0.000, 0.416, 0.792]], [0.419, [0.000, 0.420, 0.790]], [0.421, [0.000, 0.420, 0.790]], [0.423, [0.000, 0.424, 0.788]], [0.425, [0.000, 0.424, 0.788]], [0.427, [0.000, 0.427, 0.786]], [0.429, [0.000, 0.427, 0.786]], [0.431, [0.000, 0.431, 0.784]], [0.432, [0.000, 0.431, 0.784]], [0.434, [0.000, 0.435, 0.782]], [0.436, [0.000, 0.435, 0.782]], [0.438, [0.000, 0.439, 0.780]], [0.440, [0.000, 0.439, 0.780]], [0.442, [0.000, 0.443, 0.778]], [0.444, [0.000, 0.443, 0.778]], [0.446, [0.000, 0.447, 0.776]], [0.448, [0.000, 0.447, 0.776]], [0.450, [0.000, 0.451, 0.775]], [0.452, [0.000, 0.451, 0.775]], [0.454, [0.000, 0.455, 0.773]], [0.456, [0.000, 0.455, 0.773]], [0.458, [0.000, 0.459, 0.771]], [0.460, [0.000, 0.459, 0.771]], [0.462, [0.000, 0.463, 0.769]], [0.464, [0.000, 0.463, 0.769]], [0.466, [0.000, 0.467, 0.767]], [0.468, [0.000, 0.467, 0.767]], [0.470, [0.000, 0.471, 0.765]], [0.472, [0.000, 0.471, 0.765]], [0.474, [0.000, 0.475, 0.763]], [0.476, [0.000, 0.475, 0.763]], [0.477, [0.000, 0.478, 0.761]], [0.479, [0.000, 0.478, 0.761]], [0.481, [0.000, 0.482, 0.759]], [0.483, [0.000, 0.482, 0.759]], [0.485, [0.000, 0.486, 0.757]], [0.487, [0.000, 0.486, 0.757]], [0.489, [0.000, 0.490, 0.755]], [0.491, [0.000, 0.490, 0.755]], [0.493, [0.000, 0.494, 0.753]], [0.495, [0.000, 0.494, 0.753]], [0.497, [0.000, 0.498, 0.751]], [0.499, [0.000, 0.498, 0.751]], [0.501, [0.000, 0.502, 0.749]], [0.503, [0.000, 0.502, 0.749]], [0.505, [0.000, 0.506, 0.747]], [0.507, [0.000, 0.506, 0.747]], [0.509, [0.000, 0.510, 0.745]], [0.511, [0.000, 0.510, 0.745]], [0.513, [0.000, 0.514, 0.743]], [0.515, [0.000, 0.514, 0.743]], [0.517, [0.000, 0.518, 0.741]], [0.519, [0.000, 0.518, 0.741]], [0.521, [0.000, 0.522, 0.739]], [0.523, [0.000, 0.522, 0.739]], [0.524, [0.000, 0.525, 0.737]], [0.526, [0.000, 0.525, 0.737]], [0.528, [0.000, 0.529, 0.735]], [0.530, [0.000, 0.529, 0.735]], [0.532, [0.000, 0.533, 0.733]], [0.534, [0.000, 0.533, 0.733]], [0.536, [0.000, 0.537, 0.731]], [0.538, [0.000, 0.537, 0.731]], [0.540, [0.000, 0.541, 0.729]], [0.542, [0.000, 0.541, 0.729]], [0.544, [0.000, 0.545, 0.727]], [0.546, [0.000, 0.545, 0.727]], [0.548, [0.000, 0.549, 0.725]], [0.550, [0.000, 0.549, 0.725]], [0.552, [0.000, 0.553, 0.724]], [0.554, [0.000, 0.553, 0.724]], [0.556, [0.000, 0.557, 0.722]], [0.558, [0.000, 0.557, 0.722]], [0.560, [0.000, 0.561, 0.720]], [0.562, [0.000, 0.561, 0.720]], [0.564, [0.000, 0.565, 0.718]], [0.566, [0.000, 0.565, 0.718]], [0.568, [0.000, 0.569, 0.716]], [0.569, [0.000, 0.569, 0.716]], [0.571, [0.000, 0.573, 0.714]], [0.573, [0.000, 0.573, 0.714]], [0.575, [0.000, 0.576, 0.712]], [0.577, [0.000, 0.576, 0.712]], [0.579, [0.000, 0.580, 0.710]], [0.581, [0.000, 0.580, 0.710]], [0.583, [0.000, 0.584, 0.708]], [0.585, [0.000, 0.584, 0.708]], [0.587, [0.000, 0.588, 0.706]], [0.589, [0.000, 0.588, 0.706]], [0.591, [0.000, 0.592, 0.704]], [0.593, [0.000, 0.592, 0.704]], [0.595, [0.000, 0.596, 0.702]], [0.597, [0.000, 0.596, 0.702]], [0.599, [0.000, 0.600, 0.700]], [0.601, [0.000, 0.600, 0.700]], [0.603, [0.000, 0.604, 0.698]], [0.605, [0.000, 0.604, 0.698]], [0.607, [0.000, 0.608, 0.696]], [0.609, [0.000, 0.608, 0.696]], [0.611, [0.000, 0.612, 0.694]], [0.613, [0.000, 0.612, 0.694]], [0.614, [0.000, 0.616, 0.692]], [0.616, [0.000, 0.616, 0.692]], [0.618, [0.000, 0.620, 0.690]], [0.620, [0.000, 0.620, 0.690]], [0.622, [0.000, 0.624, 0.688]], [0.624, [0.000, 0.624, 0.688]], [0.626, [0.000, 0.627, 0.686]], [0.628, [0.000, 0.627, 0.686]], [0.630, [0.000, 0.631, 0.684]], [0.632, [0.000, 0.631, 0.684]], [0.634, [0.000, 0.635, 0.682]], [0.636, [0.000, 0.635, 0.682]], [0.638, [0.000, 0.639, 0.680]], [0.640, [0.000, 0.639, 0.680]], [0.642, [0.000, 0.643, 0.678]], [0.644, [0.000, 0.643, 0.678]], [0.646, [0.000, 0.647, 0.676]], [0.648, [0.000, 0.647, 0.676]], [0.650, [0.000, 0.651, 0.675]], [0.652, [0.000, 0.651, 0.675]], [0.654, [0.000, 0.655, 0.673]], [0.656, [0.000, 0.655, 0.673]], [0.658, [0.000, 0.659, 0.671]], [0.659, [0.000, 0.659, 0.671]], [0.661, [0.000, 0.663, 0.669]], [0.663, [0.000, 0.663, 0.669]], [0.665, [0.000, 0.667, 0.667]], [0.667, [0.000, 0.667, 0.667]], [0.669, [0.000, 0.671, 0.665]], [0.671, [0.000, 0.671, 0.665]], [0.673, [0.000, 0.675, 0.663]], [0.675, [0.000, 0.675, 0.663]], [0.677, [0.000, 0.678, 0.661]], [0.679, [0.000, 0.678, 0.661]], [0.681, [0.000, 0.682, 0.659]], [0.683, [0.000, 0.682, 0.659]], [0.685, [0.000, 0.686, 0.657]], [0.687, [0.000, 0.686, 0.657]], [0.689, [0.000, 0.690, 0.655]], [0.691, [0.000, 0.690, 0.655]], [0.693, [0.000, 0.694, 0.653]], [0.695, [0.000, 0.694, 0.653]], [0.697, [0.000, 0.698, 0.651]], [0.699, [0.000, 0.698, 0.651]], [0.701, [0.000, 0.702, 0.649]], [0.703, [0.000, 0.702, 0.649]], [0.705, [0.000, 0.706, 0.647]], [0.706, [0.000, 0.706, 0.647]], [0.708, [0.000, 0.710, 0.645]], [0.710, [0.000, 0.710, 0.645]], [0.712, [0.000, 0.714, 0.643]], [0.714, [0.000, 0.714, 0.643]], [0.716, [0.000, 0.718, 0.641]], [0.718, [0.000, 0.718, 0.641]], [0.720, [0.000, 0.722, 0.639]], [0.722, [0.000, 0.722, 0.639]], [0.724, [0.000, 0.725, 0.637]], [0.726, [0.000, 0.725, 0.637]], [0.728, [0.000, 0.729, 0.635]], [0.730, [0.000, 0.729, 0.635]], [0.732, [0.000, 0.733, 0.633]], [0.734, [0.000, 0.733, 0.633]], [0.736, [0.000, 0.737, 0.631]], [0.738, [0.000, 0.737, 0.631]], [0.740, [0.000, 0.741, 0.629]], [0.742, [0.000, 0.741, 0.629]], [0.744, [0.000, 0.745, 0.627]], [0.746, [0.000, 0.745, 0.627]], [0.748, [0.000, 0.749, 0.625]], [0.750, [0.000, 0.749, 0.625]], [0.751, [0.000, 0.753, 0.624]], [0.753, [0.000, 0.753, 0.624]], [0.755, [0.000, 0.757, 0.622]], [0.757, [0.000, 0.757, 0.622]], [0.759, [0.000, 0.761, 0.620]], [0.761, [0.000, 0.761, 0.620]], [0.763, [0.000, 0.765, 0.618]], [0.765, [0.000, 0.765, 0.618]], [0.767, [0.000, 0.769, 0.616]], [0.769, [0.000, 0.769, 0.616]], [0.771, [0.000, 0.773, 0.614]], [0.773, [0.000, 0.773, 0.614]], [0.775, [0.000, 0.776, 0.612]], [0.777, [0.000, 0.776, 0.612]], [0.779, [0.000, 0.780, 0.610]], [0.781, [0.000, 0.780, 0.610]], [0.783, [0.000, 0.784, 0.608]], [0.785, [0.000, 0.784, 0.608]], [0.787, [0.000, 0.788, 0.606]], [0.789, [0.000, 0.788, 0.606]], [0.791, [0.000, 0.792, 0.604]], [0.793, [0.000, 0.792, 0.604]], [0.795, [0.000, 0.796, 0.602]], [0.796, [0.000, 0.796, 0.602]], [0.798, [0.000, 0.800, 0.600]], [0.800, [0.000, 0.800, 0.600]], [0.802, [0.000, 0.804, 0.598]], [0.804, [0.000, 0.804, 0.598]], [0.806, [0.000, 0.808, 0.596]], [0.808, [0.000, 0.808, 0.596]], [0.810, [0.000, 0.812, 0.594]], [0.812, [0.000, 0.812, 0.594]], [0.814, [0.000, 0.816, 0.592]], [0.816, [0.000, 0.816, 0.592]], [0.818, [0.000, 0.820, 0.590]], [0.820, [0.000, 0.820, 0.590]], [0.822, [0.000, 0.824, 0.588]], [0.824, [0.000, 0.824, 0.588]], [0.826, [0.000, 0.827, 0.586]], [0.828, [0.000, 0.827, 0.586]], [0.830, [0.000, 0.831, 0.584]], [0.832, [0.000, 0.831, 0.584]], [0.834, [0.000, 0.835, 0.582]], [0.836, [0.000, 0.835, 0.582]], [0.838, [0.000, 0.839, 0.580]], [0.840, [0.000, 0.839, 0.580]], [0.841, [0.000, 0.843, 0.578]], [0.843, [0.000, 0.843, 0.578]], [0.845, [0.000, 0.847, 0.576]], [0.847, [0.000, 0.847, 0.576]], [0.849, [0.000, 0.851, 0.575]], [0.851, [0.000, 0.851, 0.575]], [0.853, [0.000, 0.855, 0.573]], [0.855, [0.000, 0.855, 0.573]], [0.857, [0.000, 0.859, 0.571]], [0.859, [0.000, 0.859, 0.571]], [0.861, [0.000, 0.863, 0.569]], [0.863, [0.000, 0.863, 0.569]], [0.865, [0.000, 0.867, 0.567]], [0.867, [0.000, 0.867, 0.567]], [0.869, [0.000, 0.871, 0.565]], [0.871, [0.000, 0.871, 0.565]], [0.873, [0.000, 0.875, 0.563]], [0.875, [0.000, 0.875, 0.563]], [0.877, [0.000, 0.878, 0.561]], [0.879, [0.000, 0.878, 0.561]], [0.881, [0.000, 0.882, 0.559]], [0.883, [0.000, 0.882, 0.559]], [0.885, [0.000, 0.886, 0.557]], [0.886, [0.000, 0.886, 0.557]], [0.888, [0.000, 0.890, 0.555]], [0.890, [0.000, 0.890, 0.555]], [0.892, [0.000, 0.894, 0.553]], [0.894, [0.000, 0.894, 0.553]], [0.896, [0.000, 0.898, 0.551]], [0.898, [0.000, 0.898, 0.551]], [0.900, [0.000, 0.902, 0.549]], [0.902, [0.000, 0.902, 0.549]], [0.904, [0.000, 0.906, 0.547]], [0.906, [0.000, 0.906, 0.547]], [0.908, [0.000, 0.910, 0.545]], [0.910, [0.000, 0.910, 0.545]], [0.912, [0.000, 0.914, 0.543]], [0.914, [0.000, 0.914, 0.543]], [0.916, [0.000, 0.918, 0.541]], [0.918, [0.000, 0.918, 0.541]], [0.920, [0.000, 0.922, 0.539]], [0.922, [0.000, 0.922, 0.539]], [0.924, [0.000, 0.925, 0.537]], [0.926, [0.000, 0.925, 0.537]], [0.928, [0.000, 0.929, 0.535]], [0.930, [0.000, 0.929, 0.535]], [0.932, [0.000, 0.933, 0.533]], [0.933, [0.000, 0.933, 0.533]], [0.935, [0.000, 0.937, 0.531]], [0.937, [0.000, 0.937, 0.531]], [0.939, [0.000, 0.941, 0.529]], [0.941, [0.000, 0.941, 0.529]], [0.943, [0.000, 0.945, 0.527]], [0.945, [0.000, 0.945, 0.527]], [0.947, [0.000, 0.949, 0.525]], [0.949, [0.000, 0.949, 0.525]], [0.951, [0.000, 0.953, 0.524]], [0.953, [0.000, 0.953, 0.524]], [0.955, [0.000, 0.957, 0.522]], [0.957, [0.000, 0.957, 0.522]], [0.959, [0.000, 0.961, 0.520]], [0.961, [0.000, 0.961, 0.520]], [0.963, [0.000, 0.965, 0.518]], [0.965, [0.000, 0.965, 0.518]], [0.967, [0.000, 0.969, 0.516]], [0.969, [0.000, 0.969, 0.516]], [0.971, [0.000, 0.973, 0.514]], [0.973, [0.000, 0.973, 0.514]], [0.975, [0.000, 0.976, 0.512]], [0.977, [0.000, 0.976, 0.512]], [0.978, [0.000, 0.980, 0.510]], [0.980, [0.000, 0.980, 0.510]], [0.982, [0.000, 0.984, 0.508]], [0.984, [0.000, 0.984, 0.508]], [0.986, [0.000, 0.988, 0.506]], [0.988, [0.000, 0.988, 0.506]], [0.990, [0.000, 0.992, 0.504]], [0.992, [0.000, 0.992, 0.504]], [0.994, [0.000, 0.996, 0.502]], [0.996, [0.000, 0.996, 0.502]], [0.998, [0.000, 1.000, 0.500]], [1.000, [0.000, 1.000, 0.500]]];
H.colormap_YlGn = [[0.000, [1.000, 1.000, 0.898]], [0.002, [1.000, 1.000, 0.898]], [0.004, [0.999, 1.000, 0.893]], [0.006, [0.999, 1.000, 0.893]], [0.008, [0.998, 0.999, 0.887]], [0.010, [0.998, 0.999, 0.887]], [0.012, [0.997, 0.999, 0.882]], [0.014, [0.997, 0.999, 0.882]], [0.016, [0.996, 0.999, 0.876]], [0.018, [0.996, 0.999, 0.876]], [0.020, [0.995, 0.998, 0.871]], [0.022, [0.995, 0.998, 0.871]], [0.023, [0.994, 0.998, 0.866]], [0.025, [0.994, 0.998, 0.866]], [0.027, [0.993, 0.997, 0.860]], [0.029, [0.993, 0.997, 0.860]], [0.031, [0.992, 0.997, 0.855]], [0.033, [0.992, 0.997, 0.855]], [0.035, [0.991, 0.997, 0.849]], [0.037, [0.991, 0.997, 0.849]], [0.039, [0.990, 0.996, 0.844]], [0.041, [0.990, 0.996, 0.844]], [0.043, [0.989, 0.996, 0.838]], [0.045, [0.989, 0.996, 0.838]], [0.047, [0.988, 0.996, 0.833]], [0.049, [0.988, 0.996, 0.833]], [0.051, [0.987, 0.995, 0.828]], [0.053, [0.987, 0.995, 0.828]], [0.055, [0.986, 0.995, 0.822]], [0.057, [0.986, 0.995, 0.822]], [0.059, [0.985, 0.994, 0.817]], [0.061, [0.985, 0.994, 0.817]], [0.063, [0.984, 0.994, 0.811]], [0.065, [0.984, 0.994, 0.811]], [0.067, [0.983, 0.994, 0.806]], [0.068, [0.983, 0.994, 0.806]], [0.070, [0.982, 0.993, 0.801]], [0.072, [0.982, 0.993, 0.801]], [0.074, [0.981, 0.993, 0.795]], [0.076, [0.981, 0.993, 0.795]], [0.078, [0.980, 0.993, 0.790]], [0.080, [0.980, 0.993, 0.790]], [0.082, [0.979, 0.992, 0.784]], [0.084, [0.979, 0.992, 0.784]], [0.086, [0.978, 0.992, 0.779]], [0.088, [0.978, 0.992, 0.779]], [0.090, [0.977, 0.992, 0.774]], [0.092, [0.977, 0.992, 0.774]], [0.094, [0.976, 0.991, 0.768]], [0.096, [0.976, 0.991, 0.768]], [0.098, [0.975, 0.991, 0.763]], [0.100, [0.975, 0.991, 0.763]], [0.102, [0.974, 0.990, 0.757]], [0.104, [0.974, 0.990, 0.757]], [0.106, [0.973, 0.990, 0.752]], [0.108, [0.973, 0.990, 0.752]], [0.110, [0.972, 0.990, 0.746]], [0.112, [0.972, 0.990, 0.746]], [0.114, [0.971, 0.989, 0.741]], [0.115, [0.971, 0.989, 0.741]], [0.117, [0.970, 0.989, 0.736]], [0.119, [0.970, 0.989, 0.736]], [0.121, [0.969, 0.989, 0.730]], [0.123, [0.969, 0.989, 0.730]], [0.125, [0.968, 0.988, 0.725]], [0.127, [0.968, 0.988, 0.725]], [0.129, [0.964, 0.987, 0.722]], [0.131, [0.964, 0.987, 0.722]], [0.133, [0.961, 0.985, 0.720]], [0.135, [0.961, 0.985, 0.720]], [0.137, [0.957, 0.984, 0.717]], [0.139, [0.957, 0.984, 0.717]], [0.141, [0.953, 0.982, 0.714]], [0.143, [0.953, 0.982, 0.714]], [0.145, [0.950, 0.981, 0.712]], [0.147, [0.950, 0.981, 0.712]], [0.149, [0.946, 0.979, 0.709]], [0.151, [0.946, 0.979, 0.709]], [0.153, [0.942, 0.978, 0.706]], [0.155, [0.942, 0.978, 0.706]], [0.157, [0.939, 0.976, 0.703]], [0.159, [0.939, 0.976, 0.703]], [0.160, [0.935, 0.975, 0.701]], [0.162, [0.935, 0.975, 0.701]], [0.164, [0.931, 0.973, 0.698]], [0.166, [0.931, 0.973, 0.698]], [0.168, [0.928, 0.972, 0.695]], [0.170, [0.928, 0.972, 0.695]], [0.172, [0.924, 0.970, 0.693]], [0.174, [0.924, 0.970, 0.693]], [0.176, [0.920, 0.969, 0.690]], [0.178, [0.920, 0.969, 0.690]], [0.180, [0.916, 0.967, 0.687]], [0.182, [0.916, 0.967, 0.687]], [0.184, [0.913, 0.966, 0.685]], [0.186, [0.913, 0.966, 0.685]], [0.188, [0.909, 0.964, 0.682]], [0.190, [0.909, 0.964, 0.682]], [0.192, [0.905, 0.963, 0.679]], [0.194, [0.905, 0.963, 0.679]], [0.196, [0.902, 0.961, 0.676]], [0.198, [0.902, 0.961, 0.676]], [0.200, [0.898, 0.960, 0.674]], [0.202, [0.898, 0.960, 0.674]], [0.204, [0.894, 0.959, 0.671]], [0.205, [0.894, 0.959, 0.671]], [0.207, [0.891, 0.957, 0.668]], [0.209, [0.891, 0.957, 0.668]], [0.211, [0.887, 0.956, 0.666]], [0.213, [0.887, 0.956, 0.666]], [0.215, [0.883, 0.954, 0.663]], [0.217, [0.883, 0.954, 0.663]], [0.219, [0.880, 0.953, 0.660]], [0.221, [0.880, 0.953, 0.660]], [0.223, [0.876, 0.951, 0.657]], [0.225, [0.876, 0.951, 0.657]], [0.227, [0.872, 0.950, 0.655]], [0.229, [0.872, 0.950, 0.655]], [0.231, [0.869, 0.948, 0.652]], [0.233, [0.869, 0.948, 0.652]], [0.235, [0.865, 0.947, 0.649]], [0.237, [0.865, 0.947, 0.649]], [0.239, [0.861, 0.945, 0.647]], [0.241, [0.861, 0.945, 0.647]], [0.243, [0.857, 0.944, 0.644]], [0.245, [0.857, 0.944, 0.644]], [0.247, [0.854, 0.942, 0.641]], [0.249, [0.854, 0.942, 0.641]], [0.250, [0.850, 0.941, 0.639]], [0.252, [0.850, 0.941, 0.639]], [0.254, [0.844, 0.938, 0.636]], [0.256, [0.844, 0.938, 0.636]], [0.258, [0.839, 0.936, 0.633]], [0.260, [0.839, 0.936, 0.633]], [0.262, [0.833, 0.934, 0.631]], [0.264, [0.833, 0.934, 0.631]], [0.266, [0.828, 0.931, 0.628]], [0.268, [0.828, 0.931, 0.628]], [0.270, [0.823, 0.929, 0.626]], [0.272, [0.823, 0.929, 0.626]], [0.274, [0.817, 0.927, 0.623]], [0.276, [0.817, 0.927, 0.623]], [0.278, [0.812, 0.924, 0.620]], [0.280, [0.812, 0.924, 0.620]], [0.282, [0.806, 0.922, 0.618]], [0.284, [0.806, 0.922, 0.618]], [0.286, [0.801, 0.920, 0.615]], [0.288, [0.801, 0.920, 0.615]], [0.290, [0.795, 0.917, 0.613]], [0.292, [0.795, 0.917, 0.613]], [0.294, [0.790, 0.915, 0.610]], [0.295, [0.790, 0.915, 0.610]], [0.297, [0.785, 0.913, 0.608]], [0.299, [0.785, 0.913, 0.608]], [0.301, [0.779, 0.910, 0.605]], [0.303, [0.779, 0.910, 0.605]], [0.305, [0.774, 0.908, 0.602]], [0.307, [0.774, 0.908, 0.602]], [0.309, [0.768, 0.906, 0.600]], [0.311, [0.768, 0.906, 0.600]], [0.313, [0.763, 0.903, 0.597]], [0.315, [0.763, 0.903, 0.597]], [0.317, [0.758, 0.901, 0.595]], [0.319, [0.758, 0.901, 0.595]], [0.321, [0.752, 0.899, 0.592]], [0.323, [0.752, 0.899, 0.592]], [0.325, [0.747, 0.896, 0.589]], [0.327, [0.747, 0.896, 0.589]], [0.329, [0.741, 0.894, 0.587]], [0.331, [0.741, 0.894, 0.587]], [0.333, [0.736, 0.892, 0.584]], [0.335, [0.736, 0.892, 0.584]], [0.337, [0.731, 0.889, 0.582]], [0.339, [0.731, 0.889, 0.582]], [0.341, [0.725, 0.887, 0.579]], [0.342, [0.725, 0.887, 0.579]], [0.344, [0.720, 0.884, 0.577]], [0.346, [0.720, 0.884, 0.577]], [0.348, [0.714, 0.882, 0.574]], [0.350, [0.714, 0.882, 0.574]], [0.352, [0.709, 0.880, 0.571]], [0.354, [0.709, 0.880, 0.571]], [0.356, [0.703, 0.877, 0.569]], [0.358, [0.703, 0.877, 0.569]], [0.360, [0.698, 0.875, 0.566]], [0.362, [0.698, 0.875, 0.566]], [0.364, [0.693, 0.873, 0.564]], [0.366, [0.693, 0.873, 0.564]], [0.368, [0.687, 0.870, 0.561]], [0.370, [0.687, 0.870, 0.561]], [0.372, [0.682, 0.868, 0.558]], [0.374, [0.682, 0.868, 0.558]], [0.376, [0.676, 0.866, 0.556]], [0.378, [0.676, 0.866, 0.556]], [0.380, [0.669, 0.863, 0.553]], [0.382, [0.669, 0.863, 0.553]], [0.384, [0.663, 0.860, 0.551]], [0.386, [0.663, 0.860, 0.551]], [0.387, [0.656, 0.857, 0.548]], [0.389, [0.656, 0.857, 0.548]], [0.391, [0.650, 0.854, 0.546]], [0.393, [0.650, 0.854, 0.546]], [0.395, [0.643, 0.851, 0.543]], [0.397, [0.643, 0.851, 0.543]], [0.399, [0.637, 0.849, 0.540]], [0.401, [0.637, 0.849, 0.540]], [0.403, [0.630, 0.846, 0.538]], [0.405, [0.630, 0.846, 0.538]], [0.407, [0.624, 0.843, 0.535]], [0.409, [0.624, 0.843, 0.535]], [0.411, [0.617, 0.840, 0.533]], [0.413, [0.617, 0.840, 0.533]], [0.415, [0.611, 0.837, 0.530]], [0.417, [0.611, 0.837, 0.530]], [0.419, [0.604, 0.834, 0.527]], [0.421, [0.604, 0.834, 0.527]], [0.423, [0.598, 0.832, 0.525]], [0.425, [0.598, 0.832, 0.525]], [0.427, [0.591, 0.829, 0.522]], [0.429, [0.591, 0.829, 0.522]], [0.431, [0.585, 0.826, 0.520]], [0.432, [0.585, 0.826, 0.520]], [0.434, [0.578, 0.823, 0.517]], [0.436, [0.578, 0.823, 0.517]], [0.438, [0.572, 0.820, 0.515]], [0.440, [0.572, 0.820, 0.515]], [0.442, [0.565, 0.818, 0.512]], [0.444, [0.565, 0.818, 0.512]], [0.446, [0.559, 0.815, 0.509]], [0.448, [0.559, 0.815, 0.509]], [0.450, [0.552, 0.812, 0.507]], [0.452, [0.552, 0.812, 0.507]], [0.454, [0.546, 0.809, 0.504]], [0.456, [0.546, 0.809, 0.504]], [0.458, [0.539, 0.806, 0.502]], [0.460, [0.539, 0.806, 0.502]], [0.462, [0.533, 0.803, 0.499]], [0.464, [0.533, 0.803, 0.499]], [0.466, [0.526, 0.801, 0.496]], [0.468, [0.526, 0.801, 0.496]], [0.470, [0.519, 0.798, 0.494]], [0.472, [0.519, 0.798, 0.494]], [0.474, [0.513, 0.795, 0.491]], [0.476, [0.513, 0.795, 0.491]], [0.477, [0.506, 0.792, 0.489]], [0.479, [0.506, 0.792, 0.489]], [0.481, [0.500, 0.789, 0.486]], [0.483, [0.500, 0.789, 0.486]], [0.485, [0.493, 0.786, 0.484]], [0.487, [0.493, 0.786, 0.484]], [0.489, [0.487, 0.784, 0.481]], [0.491, [0.487, 0.784, 0.481]], [0.493, [0.480, 0.781, 0.478]], [0.495, [0.480, 0.781, 0.478]], [0.497, [0.474, 0.778, 0.476]], [0.499, [0.474, 0.778, 0.476]], [0.501, [0.467, 0.775, 0.473]], [0.503, [0.467, 0.775, 0.473]], [0.505, [0.460, 0.771, 0.469]], [0.507, [0.460, 0.771, 0.469]], [0.509, [0.454, 0.768, 0.466]], [0.511, [0.454, 0.768, 0.466]], [0.513, [0.447, 0.765, 0.462]], [0.515, [0.447, 0.765, 0.462]], [0.517, [0.440, 0.762, 0.459]], [0.519, [0.440, 0.762, 0.459]], [0.521, [0.433, 0.758, 0.456]], [0.523, [0.433, 0.758, 0.456]], [0.524, [0.427, 0.755, 0.452]], [0.526, [0.427, 0.755, 0.452]], [0.528, [0.420, 0.752, 0.449]], [0.530, [0.420, 0.752, 0.449]], [0.532, [0.413, 0.748, 0.445]], [0.534, [0.413, 0.748, 0.445]], [0.536, [0.406, 0.745, 0.442]], [0.538, [0.406, 0.745, 0.442]], [0.540, [0.400, 0.742, 0.438]], [0.542, [0.400, 0.742, 0.438]], [0.544, [0.393, 0.738, 0.435]], [0.546, [0.393, 0.738, 0.435]], [0.548, [0.386, 0.735, 0.431]], [0.550, [0.386, 0.735, 0.431]], [0.552, [0.379, 0.732, 0.428]], [0.554, [0.379, 0.732, 0.428]], [0.556, [0.372, 0.728, 0.425]], [0.558, [0.372, 0.728, 0.425]], [0.560, [0.366, 0.725, 0.421]], [0.562, [0.366, 0.725, 0.421]], [0.564, [0.359, 0.722, 0.418]], [0.566, [0.359, 0.722, 0.418]], [0.568, [0.352, 0.718, 0.414]], [0.569, [0.352, 0.718, 0.414]], [0.571, [0.345, 0.715, 0.411]], [0.573, [0.345, 0.715, 0.411]], [0.575, [0.339, 0.712, 0.407]], [0.577, [0.339, 0.712, 0.407]], [0.579, [0.332, 0.708, 0.404]], [0.581, [0.332, 0.708, 0.404]], [0.583, [0.325, 0.705, 0.400]], [0.585, [0.325, 0.705, 0.400]], [0.587, [0.318, 0.702, 0.397]], [0.589, [0.318, 0.702, 0.397]], [0.591, [0.312, 0.698, 0.394]], [0.593, [0.312, 0.698, 0.394]], [0.595, [0.305, 0.695, 0.390]], [0.597, [0.305, 0.695, 0.390]], [0.599, [0.298, 0.692, 0.387]], [0.601, [0.298, 0.692, 0.387]], [0.603, [0.291, 0.688, 0.383]], [0.605, [0.291, 0.688, 0.383]], [0.607, [0.285, 0.685, 0.380]], [0.609, [0.285, 0.685, 0.380]], [0.611, [0.278, 0.682, 0.376]], [0.613, [0.278, 0.682, 0.376]], [0.614, [0.271, 0.678, 0.373]], [0.616, [0.271, 0.678, 0.373]], [0.618, [0.264, 0.675, 0.369]], [0.620, [0.264, 0.675, 0.369]], [0.622, [0.257, 0.672, 0.366]], [0.624, [0.257, 0.672, 0.366]], [0.626, [0.253, 0.668, 0.363]], [0.628, [0.253, 0.668, 0.363]], [0.630, [0.249, 0.663, 0.360]], [0.632, [0.249, 0.663, 0.360]], [0.634, [0.245, 0.658, 0.356]], [0.636, [0.245, 0.658, 0.356]], [0.638, [0.242, 0.653, 0.353]], [0.640, [0.242, 0.653, 0.353]], [0.642, [0.238, 0.648, 0.350]], [0.644, [0.238, 0.648, 0.350]], [0.646, [0.234, 0.644, 0.347]], [0.648, [0.234, 0.644, 0.347]], [0.650, [0.230, 0.639, 0.344]], [0.652, [0.230, 0.639, 0.344]], [0.654, [0.227, 0.634, 0.340]], [0.656, [0.227, 0.634, 0.340]], [0.658, [0.223, 0.629, 0.337]], [0.659, [0.223, 0.629, 0.337]], [0.661, [0.219, 0.624, 0.334]], [0.663, [0.219, 0.624, 0.334]], [0.665, [0.216, 0.620, 0.331]], [0.667, [0.216, 0.620, 0.331]], [0.669, [0.212, 0.615, 0.328]], [0.671, [0.212, 0.615, 0.328]], [0.673, [0.208, 0.610, 0.324]], [0.675, [0.208, 0.610, 0.324]], [0.677, [0.205, 0.605, 0.321]], [0.679, [0.205, 0.605, 0.321]], [0.681, [0.201, 0.600, 0.318]], [0.683, [0.201, 0.600, 0.318]], [0.685, [0.197, 0.596, 0.315]], [0.687, [0.197, 0.596, 0.315]], [0.689, [0.194, 0.591, 0.312]], [0.691, [0.194, 0.591, 0.312]], [0.693, [0.190, 0.586, 0.308]], [0.695, [0.190, 0.586, 0.308]], [0.697, [0.186, 0.581, 0.305]], [0.699, [0.186, 0.581, 0.305]], [0.701, [0.182, 0.576, 0.302]], [0.703, [0.182, 0.576, 0.302]], [0.705, [0.179, 0.572, 0.299]], [0.706, [0.179, 0.572, 0.299]], [0.708, [0.175, 0.567, 0.296]], [0.710, [0.175, 0.567, 0.296]], [0.712, [0.171, 0.562, 0.292]], [0.714, [0.171, 0.562, 0.292]], [0.716, [0.168, 0.557, 0.289]], [0.718, [0.168, 0.557, 0.289]], [0.720, [0.164, 0.552, 0.286]], [0.722, [0.164, 0.552, 0.286]], [0.724, [0.160, 0.548, 0.283]], [0.726, [0.160, 0.548, 0.283]], [0.728, [0.157, 0.543, 0.280]], [0.730, [0.157, 0.543, 0.280]], [0.732, [0.153, 0.538, 0.276]], [0.734, [0.153, 0.538, 0.276]], [0.736, [0.149, 0.533, 0.273]], [0.738, [0.149, 0.533, 0.273]], [0.740, [0.146, 0.528, 0.270]], [0.742, [0.146, 0.528, 0.270]], [0.744, [0.142, 0.524, 0.267]], [0.746, [0.142, 0.524, 0.267]], [0.748, [0.138, 0.519, 0.264]], [0.750, [0.138, 0.519, 0.264]], [0.751, [0.134, 0.515, 0.262]], [0.753, [0.134, 0.515, 0.262]], [0.755, [0.130, 0.512, 0.260]], [0.757, [0.130, 0.512, 0.260]], [0.759, [0.125, 0.508, 0.259]], [0.761, [0.125, 0.508, 0.259]], [0.763, [0.121, 0.505, 0.257]], [0.765, [0.121, 0.505, 0.257]], [0.767, [0.117, 0.501, 0.256]], [0.769, [0.117, 0.501, 0.256]], [0.771, [0.112, 0.498, 0.254]], [0.773, [0.112, 0.498, 0.254]], [0.775, [0.108, 0.494, 0.253]], [0.777, [0.108, 0.494, 0.253]], [0.779, [0.104, 0.491, 0.251]], [0.781, [0.104, 0.491, 0.251]], [0.783, [0.100, 0.488, 0.250]], [0.785, [0.100, 0.488, 0.250]], [0.787, [0.095, 0.484, 0.248]], [0.789, [0.095, 0.484, 0.248]], [0.791, [0.091, 0.481, 0.247]], [0.793, [0.091, 0.481, 0.247]], [0.795, [0.087, 0.477, 0.245]], [0.796, [0.087, 0.477, 0.245]], [0.798, [0.082, 0.474, 0.244]], [0.800, [0.082, 0.474, 0.244]], [0.802, [0.078, 0.470, 0.242]], [0.804, [0.078, 0.470, 0.242]], [0.806, [0.074, 0.467, 0.241]], [0.808, [0.074, 0.467, 0.241]], [0.810, [0.069, 0.463, 0.239]], [0.812, [0.069, 0.463, 0.239]], [0.814, [0.065, 0.460, 0.238]], [0.816, [0.065, 0.460, 0.238]], [0.818, [0.061, 0.457, 0.237]], [0.820, [0.061, 0.457, 0.237]], [0.822, [0.057, 0.453, 0.235]], [0.824, [0.057, 0.453, 0.235]], [0.826, [0.052, 0.450, 0.234]], [0.828, [0.052, 0.450, 0.234]], [0.830, [0.048, 0.446, 0.232]], [0.832, [0.048, 0.446, 0.232]], [0.834, [0.044, 0.443, 0.231]], [0.836, [0.044, 0.443, 0.231]], [0.838, [0.039, 0.439, 0.229]], [0.840, [0.039, 0.439, 0.229]], [0.841, [0.035, 0.436, 0.228]], [0.843, [0.035, 0.436, 0.228]], [0.845, [0.031, 0.432, 0.226]], [0.847, [0.031, 0.432, 0.226]], [0.849, [0.026, 0.429, 0.225]], [0.851, [0.026, 0.429, 0.225]], [0.853, [0.022, 0.425, 0.223]], [0.855, [0.022, 0.425, 0.223]], [0.857, [0.018, 0.422, 0.222]], [0.859, [0.018, 0.422, 0.222]], [0.861, [0.013, 0.419, 0.220]], [0.863, [0.013, 0.419, 0.220]], [0.865, [0.009, 0.415, 0.219]], [0.867, [0.009, 0.415, 0.219]], [0.869, [0.005, 0.412, 0.217]], [0.871, [0.005, 0.412, 0.217]], [0.873, [0.001, 0.408, 0.216]], [0.875, [0.001, 0.408, 0.216]], [0.877, [0.000, 0.404, 0.214]], [0.879, [0.000, 0.404, 0.214]], [0.881, [0.000, 0.400, 0.212]], [0.883, [0.000, 0.400, 0.212]], [0.885, [0.000, 0.395, 0.211]], [0.886, [0.000, 0.395, 0.211]], [0.888, [0.000, 0.391, 0.209]], [0.890, [0.000, 0.391, 0.209]], [0.892, [0.000, 0.387, 0.207]], [0.894, [0.000, 0.387, 0.207]], [0.896, [0.000, 0.383, 0.206]], [0.898, [0.000, 0.383, 0.206]], [0.900, [0.000, 0.378, 0.204]], [0.902, [0.000, 0.378, 0.204]], [0.904, [0.000, 0.374, 0.202]], [0.906, [0.000, 0.374, 0.202]], [0.908, [0.000, 0.370, 0.200]], [0.910, [0.000, 0.370, 0.200]], [0.912, [0.000, 0.365, 0.199]], [0.914, [0.000, 0.365, 0.199]], [0.916, [0.000, 0.361, 0.197]], [0.918, [0.000, 0.361, 0.197]], [0.920, [0.000, 0.357, 0.195]], [0.922, [0.000, 0.357, 0.195]], [0.924, [0.000, 0.352, 0.194]], [0.926, [0.000, 0.352, 0.194]], [0.928, [0.000, 0.348, 0.192]], [0.930, [0.000, 0.348, 0.192]], [0.932, [0.000, 0.344, 0.190]], [0.933, [0.000, 0.344, 0.190]], [0.935, [0.000, 0.339, 0.188]], [0.937, [0.000, 0.339, 0.188]], [0.939, [0.000, 0.335, 0.187]], [0.941, [0.000, 0.335, 0.187]], [0.943, [0.000, 0.331, 0.185]], [0.945, [0.000, 0.331, 0.185]], [0.947, [0.000, 0.327, 0.183]], [0.949, [0.000, 0.327, 0.183]], [0.951, [0.000, 0.322, 0.181]], [0.953, [0.000, 0.322, 0.181]], [0.955, [0.000, 0.318, 0.180]], [0.957, [0.000, 0.318, 0.180]], [0.959, [0.000, 0.314, 0.178]], [0.961, [0.000, 0.314, 0.178]], [0.963, [0.000, 0.309, 0.176]], [0.965, [0.000, 0.309, 0.176]], [0.967, [0.000, 0.305, 0.175]], [0.969, [0.000, 0.305, 0.175]], [0.971, [0.000, 0.301, 0.173]], [0.973, [0.000, 0.301, 0.173]], [0.975, [0.000, 0.296, 0.171]], [0.977, [0.000, 0.296, 0.171]], [0.978, [0.000, 0.292, 0.169]], [0.980, [0.000, 0.292, 0.169]], [0.982, [0.000, 0.288, 0.168]], [0.984, [0.000, 0.288, 0.168]], [0.986, [0.000, 0.284, 0.166]], [0.988, [0.000, 0.284, 0.166]], [0.990, [0.000, 0.279, 0.164]], [0.992, [0.000, 0.279, 0.164]], [0.994, [0.000, 0.275, 0.163]], [0.996, [0.000, 0.275, 0.163]], [0.998, [0.000, 0.271, 0.161]], [1.000, [0.000, 0.271, 0.161]]];
H.colormap_YlGnBu = [[0.000, [1.000, 1.000, 0.851]], [0.002, [1.000, 1.000, 0.851]], [0.004, [0.998, 0.999, 0.846]], [0.006, [0.998, 0.999, 0.846]], [0.008, [0.996, 0.998, 0.841]], [0.010, [0.996, 0.998, 0.841]], [0.012, [0.993, 0.997, 0.836]], [0.014, [0.993, 0.997, 0.836]], [0.016, [0.991, 0.997, 0.831]], [0.018, [0.991, 0.997, 0.831]], [0.020, [0.989, 0.996, 0.826]], [0.022, [0.989, 0.996, 0.826]], [0.023, [0.987, 0.995, 0.821]], [0.025, [0.987, 0.995, 0.821]], [0.027, [0.984, 0.994, 0.817]], [0.029, [0.984, 0.994, 0.817]], [0.031, [0.982, 0.993, 0.812]], [0.033, [0.982, 0.993, 0.812]], [0.035, [0.980, 0.992, 0.807]], [0.037, [0.980, 0.992, 0.807]], [0.039, [0.978, 0.991, 0.802]], [0.041, [0.978, 0.991, 0.802]], [0.043, [0.976, 0.991, 0.797]], [0.045, [0.976, 0.991, 0.797]], [0.047, [0.973, 0.990, 0.792]], [0.049, [0.973, 0.990, 0.792]], [0.051, [0.971, 0.989, 0.787]], [0.053, [0.971, 0.989, 0.787]], [0.055, [0.969, 0.988, 0.782]], [0.057, [0.969, 0.988, 0.782]], [0.059, [0.967, 0.987, 0.777]], [0.061, [0.967, 0.987, 0.777]], [0.063, [0.965, 0.986, 0.772]], [0.065, [0.965, 0.986, 0.772]], [0.067, [0.962, 0.985, 0.767]], [0.068, [0.962, 0.985, 0.767]], [0.070, [0.960, 0.984, 0.762]], [0.072, [0.960, 0.984, 0.762]], [0.074, [0.958, 0.984, 0.757]], [0.076, [0.958, 0.984, 0.757]], [0.078, [0.956, 0.983, 0.753]], [0.080, [0.956, 0.983, 0.753]], [0.082, [0.953, 0.982, 0.748]], [0.084, [0.953, 0.982, 0.748]], [0.086, [0.951, 0.981, 0.743]], [0.088, [0.951, 0.981, 0.743]], [0.090, [0.949, 0.980, 0.738]], [0.092, [0.949, 0.980, 0.738]], [0.094, [0.947, 0.979, 0.733]], [0.096, [0.947, 0.979, 0.733]], [0.098, [0.945, 0.978, 0.728]], [0.100, [0.945, 0.978, 0.728]], [0.102, [0.942, 0.978, 0.723]], [0.104, [0.942, 0.978, 0.723]], [0.106, [0.940, 0.977, 0.718]], [0.108, [0.940, 0.977, 0.718]], [0.110, [0.938, 0.976, 0.713]], [0.112, [0.938, 0.976, 0.713]], [0.114, [0.936, 0.975, 0.708]], [0.115, [0.936, 0.975, 0.708]], [0.117, [0.934, 0.974, 0.703]], [0.119, [0.934, 0.974, 0.703]], [0.121, [0.931, 0.973, 0.698]], [0.123, [0.931, 0.973, 0.698]], [0.125, [0.929, 0.972, 0.694]], [0.127, [0.929, 0.972, 0.694]], [0.129, [0.924, 0.970, 0.695]], [0.131, [0.924, 0.970, 0.695]], [0.133, [0.919, 0.969, 0.695]], [0.135, [0.919, 0.969, 0.695]], [0.137, [0.915, 0.967, 0.695]], [0.139, [0.915, 0.967, 0.695]], [0.141, [0.910, 0.965, 0.696]], [0.143, [0.910, 0.965, 0.696]], [0.145, [0.905, 0.963, 0.696]], [0.147, [0.905, 0.963, 0.696]], [0.149, [0.901, 0.961, 0.696]], [0.151, [0.901, 0.961, 0.696]], [0.153, [0.896, 0.959, 0.697]], [0.155, [0.896, 0.959, 0.697]], [0.157, [0.891, 0.958, 0.697]], [0.159, [0.891, 0.958, 0.697]], [0.160, [0.887, 0.956, 0.697]], [0.162, [0.887, 0.956, 0.697]], [0.164, [0.882, 0.954, 0.698]], [0.166, [0.882, 0.954, 0.698]], [0.168, [0.877, 0.952, 0.698]], [0.170, [0.877, 0.952, 0.698]], [0.172, [0.873, 0.950, 0.699]], [0.174, [0.873, 0.950, 0.699]], [0.176, [0.868, 0.948, 0.699]], [0.178, [0.868, 0.948, 0.699]], [0.180, [0.863, 0.946, 0.699]], [0.182, [0.863, 0.946, 0.699]], [0.184, [0.859, 0.945, 0.700]], [0.186, [0.859, 0.945, 0.700]], [0.188, [0.854, 0.943, 0.700]], [0.190, [0.854, 0.943, 0.700]], [0.192, [0.849, 0.941, 0.700]], [0.194, [0.849, 0.941, 0.700]], [0.196, [0.845, 0.939, 0.701]], [0.198, [0.845, 0.939, 0.701]], [0.200, [0.840, 0.937, 0.701]], [0.202, [0.840, 0.937, 0.701]], [0.204, [0.835, 0.935, 0.702]], [0.205, [0.835, 0.935, 0.702]], [0.207, [0.831, 0.934, 0.702]], [0.209, [0.831, 0.934, 0.702]], [0.211, [0.826, 0.932, 0.702]], [0.213, [0.826, 0.932, 0.702]], [0.215, [0.821, 0.930, 0.703]], [0.217, [0.821, 0.930, 0.703]], [0.219, [0.817, 0.928, 0.703]], [0.221, [0.817, 0.928, 0.703]], [0.223, [0.812, 0.926, 0.703]], [0.225, [0.812, 0.926, 0.703]], [0.227, [0.807, 0.924, 0.704]], [0.229, [0.807, 0.924, 0.704]], [0.231, [0.803, 0.922, 0.704]], [0.233, [0.803, 0.922, 0.704]], [0.235, [0.798, 0.921, 0.704]], [0.237, [0.798, 0.921, 0.704]], [0.239, [0.793, 0.919, 0.705]], [0.241, [0.793, 0.919, 0.705]], [0.243, [0.789, 0.917, 0.705]], [0.245, [0.789, 0.917, 0.705]], [0.247, [0.784, 0.915, 0.706]], [0.249, [0.784, 0.915, 0.706]], [0.250, [0.778, 0.913, 0.706]], [0.252, [0.778, 0.913, 0.706]], [0.254, [0.769, 0.909, 0.707]], [0.256, [0.769, 0.909, 0.707]], [0.258, [0.760, 0.906, 0.708]], [0.260, [0.760, 0.906, 0.708]], [0.262, [0.752, 0.903, 0.709]], [0.264, [0.752, 0.903, 0.709]], [0.266, [0.743, 0.899, 0.710]], [0.268, [0.743, 0.899, 0.710]], [0.270, [0.734, 0.896, 0.710]], [0.272, [0.734, 0.896, 0.710]], [0.274, [0.725, 0.892, 0.711]], [0.276, [0.725, 0.892, 0.711]], [0.278, [0.716, 0.889, 0.712]], [0.280, [0.716, 0.889, 0.712]], [0.282, [0.707, 0.885, 0.713]], [0.284, [0.707, 0.885, 0.713]], [0.286, [0.698, 0.882, 0.714]], [0.288, [0.698, 0.882, 0.714]], [0.290, [0.690, 0.878, 0.715]], [0.292, [0.690, 0.878, 0.715]], [0.294, [0.681, 0.875, 0.716]], [0.295, [0.681, 0.875, 0.716]], [0.297, [0.672, 0.872, 0.716]], [0.299, [0.672, 0.872, 0.716]], [0.301, [0.663, 0.868, 0.717]], [0.303, [0.663, 0.868, 0.717]], [0.305, [0.654, 0.865, 0.718]], [0.307, [0.654, 0.865, 0.718]], [0.309, [0.645, 0.861, 0.719]], [0.311, [0.645, 0.861, 0.719]], [0.313, [0.636, 0.858, 0.720]], [0.315, [0.636, 0.858, 0.720]], [0.317, [0.628, 0.854, 0.721]], [0.319, [0.628, 0.854, 0.721]], [0.321, [0.619, 0.851, 0.722]], [0.323, [0.619, 0.851, 0.722]], [0.325, [0.610, 0.847, 0.722]], [0.327, [0.610, 0.847, 0.722]], [0.329, [0.601, 0.844, 0.723]], [0.331, [0.601, 0.844, 0.723]], [0.333, [0.592, 0.841, 0.724]], [0.335, [0.592, 0.841, 0.724]], [0.337, [0.583, 0.837, 0.725]], [0.339, [0.583, 0.837, 0.725]], [0.341, [0.574, 0.834, 0.726]], [0.342, [0.574, 0.834, 0.726]], [0.344, [0.566, 0.830, 0.727]], [0.346, [0.566, 0.830, 0.727]], [0.348, [0.557, 0.827, 0.728]], [0.350, [0.557, 0.827, 0.728]], [0.352, [0.548, 0.823, 0.728]], [0.354, [0.548, 0.823, 0.728]], [0.356, [0.539, 0.820, 0.729]], [0.358, [0.539, 0.820, 0.729]], [0.360, [0.530, 0.816, 0.730]], [0.362, [0.530, 0.816, 0.730]], [0.364, [0.521, 0.813, 0.731]], [0.366, [0.521, 0.813, 0.731]], [0.368, [0.512, 0.810, 0.732]], [0.370, [0.512, 0.810, 0.732]], [0.372, [0.504, 0.806, 0.733]], [0.374, [0.504, 0.806, 0.733]], [0.376, [0.495, 0.803, 0.734]], [0.378, [0.495, 0.803, 0.734]], [0.380, [0.488, 0.800, 0.735]], [0.382, [0.488, 0.800, 0.735]], [0.384, [0.480, 0.797, 0.736]], [0.386, [0.480, 0.797, 0.736]], [0.387, [0.472, 0.794, 0.737]], [0.389, [0.472, 0.794, 0.737]], [0.391, [0.465, 0.792, 0.738]], [0.393, [0.465, 0.792, 0.738]], [0.395, [0.457, 0.789, 0.739]], [0.397, [0.457, 0.789, 0.739]], [0.399, [0.449, 0.786, 0.740]], [0.401, [0.449, 0.786, 0.740]], [0.403, [0.442, 0.783, 0.741]], [0.405, [0.442, 0.783, 0.741]], [0.407, [0.434, 0.780, 0.743]], [0.409, [0.434, 0.780, 0.743]], [0.411, [0.427, 0.777, 0.744]], [0.413, [0.427, 0.777, 0.744]], [0.415, [0.419, 0.775, 0.745]], [0.417, [0.419, 0.775, 0.745]], [0.419, [0.411, 0.772, 0.746]], [0.421, [0.411, 0.772, 0.746]], [0.423, [0.404, 0.769, 0.747]], [0.425, [0.404, 0.769, 0.747]], [0.427, [0.396, 0.766, 0.748]], [0.429, [0.396, 0.766, 0.748]], [0.431, [0.388, 0.763, 0.749]], [0.432, [0.388, 0.763, 0.749]], [0.434, [0.381, 0.760, 0.750]], [0.436, [0.381, 0.760, 0.750]], [0.438, [0.373, 0.758, 0.751]], [0.440, [0.373, 0.758, 0.751]], [0.442, [0.366, 0.755, 0.753]], [0.444, [0.366, 0.755, 0.753]], [0.446, [0.358, 0.752, 0.754]], [0.448, [0.358, 0.752, 0.754]], [0.450, [0.350, 0.749, 0.755]], [0.452, [0.350, 0.749, 0.755]], [0.454, [0.343, 0.746, 0.756]], [0.456, [0.343, 0.746, 0.756]], [0.458, [0.335, 0.743, 0.757]], [0.460, [0.335, 0.743, 0.757]], [0.462, [0.327, 0.741, 0.758]], [0.464, [0.327, 0.741, 0.758]], [0.466, [0.320, 0.738, 0.759]], [0.468, [0.320, 0.738, 0.759]], [0.470, [0.312, 0.735, 0.760]], [0.472, [0.312, 0.735, 0.760]], [0.474, [0.304, 0.732, 0.761]], [0.476, [0.304, 0.732, 0.761]], [0.477, [0.297, 0.729, 0.763]], [0.479, [0.297, 0.729, 0.763]], [0.481, [0.289, 0.726, 0.764]], [0.483, [0.289, 0.726, 0.764]], [0.485, [0.282, 0.724, 0.765]], [0.487, [0.282, 0.724, 0.765]], [0.489, [0.274, 0.721, 0.766]], [0.491, [0.274, 0.721, 0.766]], [0.493, [0.266, 0.718, 0.767]], [0.495, [0.266, 0.718, 0.767]], [0.497, [0.259, 0.715, 0.768]], [0.499, [0.259, 0.715, 0.768]], [0.501, [0.253, 0.711, 0.768]], [0.503, [0.253, 0.711, 0.768]], [0.505, [0.248, 0.707, 0.768]], [0.507, [0.248, 0.707, 0.768]], [0.509, [0.244, 0.702, 0.767]], [0.511, [0.244, 0.702, 0.767]], [0.513, [0.239, 0.698, 0.767]], [0.515, [0.239, 0.698, 0.767]], [0.517, [0.235, 0.693, 0.766]], [0.519, [0.235, 0.693, 0.766]], [0.521, [0.231, 0.689, 0.766]], [0.523, [0.231, 0.689, 0.766]], [0.524, [0.226, 0.684, 0.765]], [0.526, [0.226, 0.684, 0.765]], [0.528, [0.222, 0.680, 0.765]], [0.530, [0.222, 0.680, 0.765]], [0.532, [0.217, 0.675, 0.764]], [0.534, [0.217, 0.675, 0.764]], [0.536, [0.213, 0.670, 0.764]], [0.538, [0.213, 0.670, 0.764]], [0.540, [0.208, 0.666, 0.763]], [0.542, [0.208, 0.666, 0.763]], [0.544, [0.204, 0.661, 0.763]], [0.546, [0.204, 0.661, 0.763]], [0.548, [0.200, 0.657, 0.762]], [0.550, [0.200, 0.657, 0.762]], [0.552, [0.195, 0.652, 0.762]], [0.554, [0.195, 0.652, 0.762]], [0.556, [0.191, 0.648, 0.761]], [0.558, [0.191, 0.648, 0.761]], [0.560, [0.186, 0.643, 0.761]], [0.562, [0.186, 0.643, 0.761]], [0.564, [0.182, 0.639, 0.761]], [0.566, [0.182, 0.639, 0.761]], [0.568, [0.177, 0.634, 0.760]], [0.569, [0.177, 0.634, 0.760]], [0.571, [0.173, 0.630, 0.760]], [0.573, [0.173, 0.630, 0.760]], [0.575, [0.169, 0.625, 0.759]], [0.577, [0.169, 0.625, 0.759]], [0.579, [0.164, 0.620, 0.759]], [0.581, [0.164, 0.620, 0.759]], [0.583, [0.160, 0.616, 0.758]], [0.585, [0.160, 0.616, 0.758]], [0.587, [0.155, 0.611, 0.758]], [0.589, [0.155, 0.611, 0.758]], [0.591, [0.151, 0.607, 0.757]], [0.593, [0.151, 0.607, 0.757]], [0.595, [0.146, 0.602, 0.757]], [0.597, [0.146, 0.602, 0.757]], [0.599, [0.142, 0.598, 0.756]], [0.601, [0.142, 0.598, 0.756]], [0.603, [0.138, 0.593, 0.756]], [0.605, [0.138, 0.593, 0.756]], [0.607, [0.133, 0.589, 0.755]], [0.609, [0.133, 0.589, 0.755]], [0.611, [0.129, 0.584, 0.755]], [0.613, [0.129, 0.584, 0.755]], [0.614, [0.124, 0.579, 0.754]], [0.616, [0.124, 0.579, 0.754]], [0.618, [0.120, 0.575, 0.754]], [0.620, [0.120, 0.575, 0.754]], [0.622, [0.115, 0.570, 0.753]], [0.624, [0.115, 0.570, 0.753]], [0.626, [0.114, 0.565, 0.751]], [0.628, [0.114, 0.565, 0.751]], [0.630, [0.115, 0.558, 0.748]], [0.632, [0.115, 0.558, 0.748]], [0.634, [0.115, 0.552, 0.745]], [0.636, [0.115, 0.552, 0.745]], [0.638, [0.116, 0.546, 0.742]], [0.640, [0.116, 0.546, 0.742]], [0.642, [0.117, 0.540, 0.739]], [0.644, [0.117, 0.540, 0.739]], [0.646, [0.117, 0.533, 0.736]], [0.648, [0.117, 0.533, 0.736]], [0.650, [0.118, 0.527, 0.733]], [0.652, [0.118, 0.527, 0.733]], [0.654, [0.118, 0.521, 0.730]], [0.656, [0.118, 0.521, 0.730]], [0.658, [0.119, 0.515, 0.727]], [0.659, [0.119, 0.515, 0.727]], [0.661, [0.120, 0.508, 0.725]], [0.663, [0.120, 0.508, 0.725]], [0.665, [0.120, 0.502, 0.722]], [0.667, [0.120, 0.502, 0.722]], [0.669, [0.121, 0.496, 0.719]], [0.671, [0.121, 0.496, 0.719]], [0.673, [0.121, 0.489, 0.716]], [0.675, [0.121, 0.489, 0.716]], [0.677, [0.122, 0.483, 0.713]], [0.679, [0.122, 0.483, 0.713]], [0.681, [0.123, 0.477, 0.710]], [0.683, [0.123, 0.477, 0.710]], [0.685, [0.123, 0.471, 0.707]], [0.687, [0.123, 0.471, 0.707]], [0.689, [0.124, 0.464, 0.704]], [0.691, [0.124, 0.464, 0.704]], [0.693, [0.125, 0.458, 0.701]], [0.695, [0.125, 0.458, 0.701]], [0.697, [0.125, 0.452, 0.698]], [0.699, [0.125, 0.452, 0.698]], [0.701, [0.126, 0.445, 0.695]], [0.703, [0.126, 0.445, 0.695]], [0.705, [0.126, 0.439, 0.692]], [0.706, [0.126, 0.439, 0.692]], [0.708, [0.127, 0.433, 0.689]], [0.710, [0.127, 0.433, 0.689]], [0.712, [0.128, 0.427, 0.686]], [0.714, [0.128, 0.427, 0.686]], [0.716, [0.128, 0.420, 0.683]], [0.718, [0.128, 0.420, 0.683]], [0.720, [0.129, 0.414, 0.680]], [0.722, [0.129, 0.414, 0.680]], [0.724, [0.129, 0.408, 0.677]], [0.726, [0.129, 0.408, 0.677]], [0.728, [0.130, 0.402, 0.674]], [0.730, [0.130, 0.402, 0.674]], [0.732, [0.131, 0.395, 0.671]], [0.734, [0.131, 0.395, 0.671]], [0.736, [0.131, 0.389, 0.668]], [0.738, [0.131, 0.389, 0.668]], [0.740, [0.132, 0.383, 0.665]], [0.742, [0.132, 0.383, 0.665]], [0.744, [0.133, 0.376, 0.663]], [0.746, [0.133, 0.376, 0.663]], [0.748, [0.133, 0.370, 0.660]], [0.750, [0.133, 0.370, 0.660]], [0.751, [0.134, 0.365, 0.657]], [0.753, [0.134, 0.365, 0.657]], [0.755, [0.134, 0.360, 0.655]], [0.757, [0.134, 0.360, 0.655]], [0.759, [0.134, 0.354, 0.652]], [0.761, [0.134, 0.354, 0.652]], [0.763, [0.135, 0.349, 0.650]], [0.765, [0.135, 0.349, 0.650]], [0.767, [0.135, 0.344, 0.647]], [0.769, [0.135, 0.344, 0.647]], [0.771, [0.135, 0.339, 0.645]], [0.773, [0.135, 0.339, 0.645]], [0.775, [0.136, 0.334, 0.642]], [0.777, [0.136, 0.334, 0.642]], [0.779, [0.136, 0.329, 0.640]], [0.781, [0.136, 0.329, 0.640]], [0.783, [0.137, 0.323, 0.637]], [0.785, [0.137, 0.323, 0.637]], [0.787, [0.137, 0.318, 0.635]], [0.789, [0.137, 0.318, 0.635]], [0.791, [0.137, 0.313, 0.632]], [0.793, [0.137, 0.313, 0.632]], [0.795, [0.138, 0.308, 0.630]], [0.796, [0.138, 0.308, 0.630]], [0.798, [0.138, 0.303, 0.627]], [0.800, [0.138, 0.303, 0.627]], [0.802, [0.138, 0.298, 0.625]], [0.804, [0.138, 0.298, 0.625]], [0.806, [0.139, 0.292, 0.623]], [0.808, [0.139, 0.292, 0.623]], [0.810, [0.139, 0.287, 0.620]], [0.812, [0.139, 0.287, 0.620]], [0.814, [0.140, 0.282, 0.618]], [0.816, [0.140, 0.282, 0.618]], [0.818, [0.140, 0.277, 0.615]], [0.820, [0.140, 0.277, 0.615]], [0.822, [0.140, 0.272, 0.613]], [0.824, [0.140, 0.272, 0.613]], [0.826, [0.141, 0.267, 0.610]], [0.828, [0.141, 0.267, 0.610]], [0.830, [0.141, 0.261, 0.608]], [0.832, [0.141, 0.261, 0.608]], [0.834, [0.141, 0.256, 0.605]], [0.836, [0.141, 0.256, 0.605]], [0.838, [0.142, 0.251, 0.603]], [0.840, [0.142, 0.251, 0.603]], [0.841, [0.142, 0.246, 0.600]], [0.843, [0.142, 0.246, 0.600]], [0.845, [0.142, 0.241, 0.598]], [0.847, [0.142, 0.241, 0.598]], [0.849, [0.143, 0.236, 0.595]], [0.851, [0.143, 0.236, 0.595]], [0.853, [0.143, 0.230, 0.593]], [0.855, [0.143, 0.230, 0.593]], [0.857, [0.144, 0.225, 0.591]], [0.859, [0.144, 0.225, 0.591]], [0.861, [0.144, 0.220, 0.588]], [0.863, [0.144, 0.220, 0.588]], [0.865, [0.144, 0.215, 0.586]], [0.867, [0.144, 0.215, 0.586]], [0.869, [0.145, 0.210, 0.583]], [0.871, [0.145, 0.210, 0.583]], [0.873, [0.145, 0.205, 0.581]], [0.875, [0.145, 0.205, 0.581]], [0.877, [0.142, 0.201, 0.574]], [0.879, [0.142, 0.201, 0.574]], [0.881, [0.138, 0.199, 0.567]], [0.883, [0.138, 0.199, 0.567]], [0.885, [0.135, 0.196, 0.559]], [0.886, [0.135, 0.196, 0.559]], [0.888, [0.131, 0.193, 0.552]], [0.890, [0.131, 0.193, 0.552]], [0.892, [0.128, 0.190, 0.544]], [0.894, [0.128, 0.190, 0.544]], [0.896, [0.124, 0.187, 0.537]], [0.898, [0.124, 0.187, 0.537]], [0.900, [0.121, 0.184, 0.530]], [0.902, [0.121, 0.184, 0.530]], [0.904, [0.117, 0.182, 0.522]], [0.906, [0.117, 0.182, 0.522]], [0.908, [0.113, 0.179, 0.515]], [0.910, [0.113, 0.179, 0.515]], [0.912, [0.110, 0.176, 0.507]], [0.914, [0.110, 0.176, 0.507]], [0.916, [0.106, 0.173, 0.500]], [0.918, [0.106, 0.173, 0.500]], [0.920, [0.103, 0.170, 0.493]], [0.922, [0.103, 0.170, 0.493]], [0.924, [0.099, 0.167, 0.485]], [0.926, [0.099, 0.167, 0.485]], [0.928, [0.096, 0.165, 0.478]], [0.930, [0.096, 0.165, 0.478]], [0.932, [0.092, 0.162, 0.471]], [0.933, [0.092, 0.162, 0.471]], [0.935, [0.088, 0.159, 0.463]], [0.937, [0.088, 0.159, 0.463]], [0.939, [0.085, 0.156, 0.456]], [0.941, [0.085, 0.156, 0.456]], [0.943, [0.081, 0.153, 0.448]], [0.945, [0.081, 0.153, 0.448]], [0.947, [0.078, 0.151, 0.441]], [0.949, [0.078, 0.151, 0.441]], [0.951, [0.074, 0.148, 0.434]], [0.953, [0.074, 0.148, 0.434]], [0.955, [0.071, 0.145, 0.426]], [0.957, [0.071, 0.145, 0.426]], [0.959, [0.067, 0.142, 0.419]], [0.961, [0.067, 0.142, 0.419]], [0.963, [0.063, 0.139, 0.412]], [0.965, [0.063, 0.139, 0.412]], [0.967, [0.060, 0.136, 0.404]], [0.969, [0.060, 0.136, 0.404]], [0.971, [0.056, 0.134, 0.397]], [0.973, [0.056, 0.134, 0.397]], [0.975, [0.053, 0.131, 0.389]], [0.977, [0.053, 0.131, 0.389]], [0.978, [0.049, 0.128, 0.382]], [0.980, [0.049, 0.128, 0.382]], [0.982, [0.046, 0.125, 0.375]], [0.984, [0.046, 0.125, 0.375]], [0.986, [0.042, 0.122, 0.367]], [0.988, [0.042, 0.122, 0.367]], [0.990, [0.039, 0.119, 0.360]], [0.992, [0.039, 0.119, 0.360]], [0.994, [0.035, 0.117, 0.352]], [0.996, [0.035, 0.117, 0.352]], [0.998, [0.031, 0.114, 0.345]], [1.000, [0.031, 0.114, 0.345]]];
H.colormap_YlOrBr = [[0.000, [1.000, 1.000, 0.898]], [0.002, [1.000, 1.000, 0.898]], [0.004, [1.000, 0.999, 0.893]], [0.006, [1.000, 0.999, 0.893]], [0.008, [1.000, 0.998, 0.888]], [0.010, [1.000, 0.998, 0.888]], [0.012, [1.000, 0.997, 0.883]], [0.014, [1.000, 0.997, 0.883]], [0.016, [1.000, 0.996, 0.878]], [0.018, [1.000, 0.996, 0.878]], [0.020, [1.000, 0.995, 0.873]], [0.022, [1.000, 0.995, 0.873]], [0.023, [1.000, 0.994, 0.868]], [0.025, [1.000, 0.994, 0.868]], [0.027, [1.000, 0.993, 0.863]], [0.029, [1.000, 0.993, 0.863]], [0.031, [1.000, 0.992, 0.858]], [0.033, [1.000, 0.992, 0.858]], [0.035, [1.000, 0.991, 0.853]], [0.037, [1.000, 0.991, 0.853]], [0.039, [1.000, 0.990, 0.848]], [0.041, [1.000, 0.990, 0.848]], [0.043, [1.000, 0.989, 0.843]], [0.045, [1.000, 0.989, 0.843]], [0.047, [1.000, 0.988, 0.838]], [0.049, [1.000, 0.988, 0.838]], [0.051, [1.000, 0.987, 0.832]], [0.053, [1.000, 0.987, 0.832]], [0.055, [1.000, 0.986, 0.827]], [0.057, [1.000, 0.986, 0.827]], [0.059, [1.000, 0.985, 0.822]], [0.061, [1.000, 0.985, 0.822]], [0.063, [1.000, 0.984, 0.817]], [0.065, [1.000, 0.984, 0.817]], [0.067, [1.000, 0.983, 0.812]], [0.068, [1.000, 0.983, 0.812]], [0.070, [1.000, 0.982, 0.807]], [0.072, [1.000, 0.982, 0.807]], [0.074, [1.000, 0.981, 0.802]], [0.076, [1.000, 0.981, 0.802]], [0.078, [1.000, 0.980, 0.797]], [0.080, [1.000, 0.980, 0.797]], [0.082, [1.000, 0.979, 0.792]], [0.084, [1.000, 0.979, 0.792]], [0.086, [1.000, 0.978, 0.787]], [0.088, [1.000, 0.978, 0.787]], [0.090, [1.000, 0.977, 0.782]], [0.092, [1.000, 0.977, 0.782]], [0.094, [1.000, 0.976, 0.777]], [0.096, [1.000, 0.976, 0.777]], [0.098, [1.000, 0.975, 0.772]], [0.100, [1.000, 0.975, 0.772]], [0.102, [1.000, 0.974, 0.767]], [0.104, [1.000, 0.974, 0.767]], [0.106, [1.000, 0.973, 0.762]], [0.108, [1.000, 0.973, 0.762]], [0.110, [1.000, 0.972, 0.757]], [0.112, [1.000, 0.972, 0.757]], [0.114, [1.000, 0.971, 0.752]], [0.115, [1.000, 0.971, 0.752]], [0.117, [1.000, 0.970, 0.747]], [0.119, [1.000, 0.970, 0.747]], [0.121, [1.000, 0.969, 0.742]], [0.123, [1.000, 0.969, 0.742]], [0.125, [1.000, 0.968, 0.737]], [0.127, [1.000, 0.968, 0.737]], [0.129, [1.000, 0.966, 0.731]], [0.131, [1.000, 0.966, 0.731]], [0.133, [1.000, 0.963, 0.726]], [0.135, [1.000, 0.963, 0.726]], [0.137, [1.000, 0.961, 0.721]], [0.139, [1.000, 0.961, 0.721]], [0.141, [0.999, 0.958, 0.715]], [0.143, [0.999, 0.958, 0.715]], [0.145, [0.999, 0.956, 0.710]], [0.147, [0.999, 0.956, 0.710]], [0.149, [0.999, 0.954, 0.705]], [0.151, [0.999, 0.954, 0.705]], [0.153, [0.999, 0.951, 0.700]], [0.155, [0.999, 0.951, 0.700]], [0.157, [0.999, 0.949, 0.694]], [0.159, [0.999, 0.949, 0.694]], [0.160, [0.999, 0.946, 0.689]], [0.162, [0.999, 0.946, 0.689]], [0.164, [0.999, 0.944, 0.684]], [0.166, [0.999, 0.944, 0.684]], [0.168, [0.999, 0.941, 0.678]], [0.170, [0.999, 0.941, 0.678]], [0.172, [0.999, 0.939, 0.673]], [0.174, [0.999, 0.939, 0.673]], [0.176, [0.998, 0.936, 0.668]], [0.178, [0.998, 0.936, 0.668]], [0.180, [0.998, 0.934, 0.663]], [0.182, [0.998, 0.934, 0.663]], [0.184, [0.998, 0.931, 0.657]], [0.186, [0.998, 0.931, 0.657]], [0.188, [0.998, 0.929, 0.652]], [0.190, [0.998, 0.929, 0.652]], [0.192, [0.998, 0.926, 0.647]], [0.194, [0.998, 0.926, 0.647]], [0.196, [0.998, 0.924, 0.641]], [0.198, [0.998, 0.924, 0.641]], [0.200, [0.998, 0.922, 0.636]], [0.202, [0.998, 0.922, 0.636]], [0.204, [0.998, 0.919, 0.631]], [0.205, [0.998, 0.919, 0.631]], [0.207, [0.997, 0.917, 0.625]], [0.209, [0.997, 0.917, 0.625]], [0.211, [0.997, 0.914, 0.620]], [0.213, [0.997, 0.914, 0.620]], [0.215, [0.997, 0.912, 0.615]], [0.217, [0.997, 0.912, 0.615]], [0.219, [0.997, 0.909, 0.610]], [0.221, [0.997, 0.909, 0.610]], [0.223, [0.997, 0.907, 0.604]], [0.225, [0.997, 0.907, 0.604]], [0.227, [0.997, 0.904, 0.599]], [0.229, [0.997, 0.904, 0.599]], [0.231, [0.997, 0.902, 0.594]], [0.233, [0.997, 0.902, 0.594]], [0.235, [0.997, 0.899, 0.588]], [0.237, [0.997, 0.899, 0.588]], [0.239, [0.996, 0.897, 0.583]], [0.241, [0.996, 0.897, 0.583]], [0.243, [0.996, 0.895, 0.578]], [0.245, [0.996, 0.895, 0.578]], [0.247, [0.996, 0.892, 0.573]], [0.249, [0.996, 0.892, 0.573]], [0.250, [0.996, 0.889, 0.567]], [0.252, [0.996, 0.889, 0.567]], [0.254, [0.996, 0.885, 0.558]], [0.256, [0.996, 0.885, 0.558]], [0.258, [0.996, 0.882, 0.550]], [0.260, [0.996, 0.882, 0.550]], [0.262, [0.996, 0.878, 0.542]], [0.264, [0.996, 0.878, 0.542]], [0.266, [0.996, 0.874, 0.534]], [0.268, [0.996, 0.874, 0.534]], [0.270, [0.996, 0.870, 0.526]], [0.272, [0.996, 0.870, 0.526]], [0.274, [0.996, 0.866, 0.518]], [0.276, [0.996, 0.866, 0.518]], [0.278, [0.996, 0.863, 0.510]], [0.280, [0.996, 0.863, 0.510]], [0.282, [0.996, 0.859, 0.502]], [0.284, [0.996, 0.859, 0.502]], [0.286, [0.996, 0.855, 0.494]], [0.288, [0.996, 0.855, 0.494]], [0.290, [0.996, 0.851, 0.485]], [0.292, [0.996, 0.851, 0.485]], [0.294, [0.996, 0.847, 0.477]], [0.295, [0.996, 0.847, 0.477]], [0.297, [0.996, 0.843, 0.469]], [0.299, [0.996, 0.843, 0.469]], [0.301, [0.996, 0.840, 0.461]], [0.303, [0.996, 0.840, 0.461]], [0.305, [0.996, 0.836, 0.453]], [0.307, [0.996, 0.836, 0.453]], [0.309, [0.996, 0.832, 0.445]], [0.311, [0.996, 0.832, 0.445]], [0.313, [0.996, 0.828, 0.437]], [0.315, [0.996, 0.828, 0.437]], [0.317, [0.996, 0.824, 0.429]], [0.319, [0.996, 0.824, 0.429]], [0.321, [0.996, 0.821, 0.420]], [0.323, [0.996, 0.821, 0.420]], [0.325, [0.996, 0.817, 0.412]], [0.327, [0.996, 0.817, 0.412]], [0.329, [0.996, 0.813, 0.404]], [0.331, [0.996, 0.813, 0.404]], [0.333, [0.996, 0.809, 0.396]], [0.335, [0.996, 0.809, 0.396]], [0.337, [0.996, 0.805, 0.388]], [0.339, [0.996, 0.805, 0.388]], [0.341, [0.996, 0.802, 0.380]], [0.342, [0.996, 0.802, 0.380]], [0.344, [0.996, 0.798, 0.372]], [0.346, [0.996, 0.798, 0.372]], [0.348, [0.996, 0.794, 0.364]], [0.350, [0.996, 0.794, 0.364]], [0.352, [0.996, 0.790, 0.355]], [0.354, [0.996, 0.790, 0.355]], [0.356, [0.996, 0.786, 0.347]], [0.358, [0.996, 0.786, 0.347]], [0.360, [0.996, 0.782, 0.339]], [0.362, [0.996, 0.782, 0.339]], [0.364, [0.996, 0.779, 0.331]], [0.366, [0.996, 0.779, 0.331]], [0.368, [0.996, 0.775, 0.323]], [0.370, [0.996, 0.775, 0.323]], [0.372, [0.996, 0.771, 0.315]], [0.374, [0.996, 0.771, 0.315]], [0.376, [0.996, 0.767, 0.308]], [0.378, [0.996, 0.767, 0.308]], [0.380, [0.996, 0.761, 0.303]], [0.382, [0.996, 0.761, 0.303]], [0.384, [0.996, 0.756, 0.299]], [0.386, [0.996, 0.756, 0.299]], [0.387, [0.996, 0.751, 0.294]], [0.389, [0.996, 0.751, 0.294]], [0.391, [0.996, 0.745, 0.289]], [0.393, [0.996, 0.745, 0.289]], [0.395, [0.996, 0.740, 0.285]], [0.397, [0.996, 0.740, 0.285]], [0.399, [0.996, 0.735, 0.280]], [0.401, [0.996, 0.735, 0.280]], [0.403, [0.996, 0.730, 0.275]], [0.405, [0.996, 0.730, 0.275]], [0.407, [0.996, 0.724, 0.271]], [0.409, [0.996, 0.724, 0.271]], [0.411, [0.996, 0.719, 0.266]], [0.413, [0.996, 0.719, 0.266]], [0.415, [0.996, 0.714, 0.261]], [0.417, [0.996, 0.714, 0.261]], [0.419, [0.996, 0.708, 0.257]], [0.421, [0.996, 0.708, 0.257]], [0.423, [0.996, 0.703, 0.252]], [0.425, [0.996, 0.703, 0.252]], [0.427, [0.996, 0.698, 0.247]], [0.429, [0.996, 0.698, 0.247]], [0.431, [0.996, 0.693, 0.243]], [0.432, [0.996, 0.693, 0.243]], [0.434, [0.996, 0.687, 0.238]], [0.436, [0.996, 0.687, 0.238]], [0.438, [0.996, 0.682, 0.233]], [0.440, [0.996, 0.682, 0.233]], [0.442, [0.996, 0.677, 0.229]], [0.444, [0.996, 0.677, 0.229]], [0.446, [0.996, 0.671, 0.224]], [0.448, [0.996, 0.671, 0.224]], [0.450, [0.996, 0.666, 0.219]], [0.452, [0.996, 0.666, 0.219]], [0.454, [0.996, 0.661, 0.215]], [0.456, [0.996, 0.661, 0.215]], [0.458, [0.996, 0.656, 0.210]], [0.460, [0.996, 0.656, 0.210]], [0.462, [0.996, 0.650, 0.205]], [0.464, [0.996, 0.650, 0.205]], [0.466, [0.996, 0.645, 0.201]], [0.468, [0.996, 0.645, 0.201]], [0.470, [0.996, 0.640, 0.196]], [0.472, [0.996, 0.640, 0.196]], [0.474, [0.996, 0.634, 0.191]], [0.476, [0.996, 0.634, 0.191]], [0.477, [0.996, 0.629, 0.186]], [0.479, [0.996, 0.629, 0.186]], [0.481, [0.996, 0.624, 0.182]], [0.483, [0.996, 0.624, 0.182]], [0.485, [0.996, 0.619, 0.177]], [0.487, [0.996, 0.619, 0.177]], [0.489, [0.996, 0.613, 0.172]], [0.491, [0.996, 0.613, 0.172]], [0.493, [0.996, 0.608, 0.168]], [0.495, [0.996, 0.608, 0.168]], [0.497, [0.996, 0.603, 0.163]], [0.499, [0.996, 0.603, 0.163]], [0.501, [0.995, 0.597, 0.159]], [0.503, [0.995, 0.597, 0.159]], [0.505, [0.993, 0.592, 0.157]], [0.507, [0.993, 0.592, 0.157]], [0.509, [0.991, 0.587, 0.154]], [0.511, [0.991, 0.587, 0.154]], [0.513, [0.988, 0.582, 0.152]], [0.515, [0.988, 0.582, 0.152]], [0.517, [0.986, 0.577, 0.149]], [0.519, [0.986, 0.577, 0.149]], [0.521, [0.984, 0.572, 0.147]], [0.523, [0.984, 0.572, 0.147]], [0.524, [0.982, 0.567, 0.144]], [0.526, [0.982, 0.567, 0.144]], [0.528, [0.979, 0.562, 0.141]], [0.530, [0.979, 0.562, 0.141]], [0.532, [0.977, 0.557, 0.139]], [0.534, [0.977, 0.557, 0.139]], [0.536, [0.975, 0.552, 0.136]], [0.538, [0.975, 0.552, 0.136]], [0.540, [0.973, 0.547, 0.134]], [0.542, [0.973, 0.547, 0.134]], [0.544, [0.971, 0.542, 0.131]], [0.546, [0.971, 0.542, 0.131]], [0.548, [0.968, 0.537, 0.128]], [0.550, [0.968, 0.537, 0.128]], [0.552, [0.966, 0.532, 0.126]], [0.554, [0.966, 0.532, 0.126]], [0.556, [0.964, 0.527, 0.123]], [0.558, [0.964, 0.527, 0.123]], [0.560, [0.962, 0.522, 0.121]], [0.562, [0.962, 0.522, 0.121]], [0.564, [0.960, 0.517, 0.118]], [0.566, [0.960, 0.517, 0.118]], [0.568, [0.957, 0.512, 0.116]], [0.569, [0.957, 0.512, 0.116]], [0.571, [0.955, 0.507, 0.113]], [0.573, [0.955, 0.507, 0.113]], [0.575, [0.953, 0.502, 0.110]], [0.577, [0.953, 0.502, 0.110]], [0.579, [0.951, 0.497, 0.108]], [0.581, [0.951, 0.497, 0.108]], [0.583, [0.948, 0.492, 0.105]], [0.585, [0.948, 0.492, 0.105]], [0.587, [0.946, 0.487, 0.103]], [0.589, [0.946, 0.487, 0.103]], [0.591, [0.944, 0.481, 0.100]], [0.593, [0.944, 0.481, 0.100]], [0.595, [0.942, 0.476, 0.097]], [0.597, [0.942, 0.476, 0.097]], [0.599, [0.940, 0.471, 0.095]], [0.601, [0.940, 0.471, 0.095]], [0.603, [0.937, 0.466, 0.092]], [0.605, [0.937, 0.466, 0.092]], [0.607, [0.935, 0.461, 0.090]], [0.609, [0.935, 0.461, 0.090]], [0.611, [0.933, 0.456, 0.087]], [0.613, [0.933, 0.456, 0.087]], [0.614, [0.931, 0.451, 0.085]], [0.616, [0.931, 0.451, 0.085]], [0.618, [0.929, 0.446, 0.082]], [0.620, [0.929, 0.446, 0.082]], [0.622, [0.926, 0.441, 0.079]], [0.624, [0.926, 0.441, 0.079]], [0.626, [0.923, 0.436, 0.077]], [0.628, [0.923, 0.436, 0.077]], [0.630, [0.919, 0.432, 0.075]], [0.632, [0.919, 0.432, 0.075]], [0.634, [0.915, 0.428, 0.073]], [0.636, [0.915, 0.428, 0.073]], [0.638, [0.911, 0.423, 0.070]], [0.640, [0.911, 0.423, 0.070]], [0.642, [0.907, 0.419, 0.068]], [0.644, [0.907, 0.419, 0.068]], [0.646, [0.903, 0.414, 0.066]], [0.648, [0.903, 0.414, 0.066]], [0.650, [0.899, 0.410, 0.064]], [0.652, [0.899, 0.410, 0.064]], [0.654, [0.895, 0.405, 0.062]], [0.656, [0.895, 0.405, 0.062]], [0.658, [0.892, 0.401, 0.059]], [0.659, [0.892, 0.401, 0.059]], [0.661, [0.888, 0.397, 0.057]], [0.663, [0.888, 0.397, 0.057]], [0.665, [0.884, 0.392, 0.055]], [0.667, [0.884, 0.392, 0.055]], [0.669, [0.880, 0.388, 0.053]], [0.671, [0.880, 0.388, 0.053]], [0.673, [0.876, 0.383, 0.050]], [0.675, [0.876, 0.383, 0.050]], [0.677, [0.872, 0.379, 0.048]], [0.679, [0.872, 0.379, 0.048]], [0.681, [0.868, 0.374, 0.046]], [0.683, [0.868, 0.374, 0.046]], [0.685, [0.864, 0.370, 0.044]], [0.687, [0.864, 0.370, 0.044]], [0.689, [0.860, 0.366, 0.042]], [0.691, [0.860, 0.366, 0.042]], [0.693, [0.856, 0.361, 0.039]], [0.695, [0.856, 0.361, 0.039]], [0.697, [0.852, 0.357, 0.037]], [0.699, [0.852, 0.357, 0.037]], [0.701, [0.848, 0.352, 0.035]], [0.703, [0.848, 0.352, 0.035]], [0.705, [0.844, 0.348, 0.033]], [0.706, [0.844, 0.348, 0.033]], [0.708, [0.840, 0.343, 0.031]], [0.710, [0.840, 0.343, 0.031]], [0.712, [0.836, 0.339, 0.028]], [0.714, [0.836, 0.339, 0.028]], [0.716, [0.832, 0.335, 0.026]], [0.718, [0.832, 0.335, 0.026]], [0.720, [0.829, 0.330, 0.024]], [0.722, [0.829, 0.330, 0.024]], [0.724, [0.825, 0.326, 0.022]], [0.726, [0.825, 0.326, 0.022]], [0.728, [0.821, 0.321, 0.019]], [0.730, [0.821, 0.321, 0.019]], [0.732, [0.817, 0.317, 0.017]], [0.734, [0.817, 0.317, 0.017]], [0.736, [0.813, 0.312, 0.015]], [0.738, [0.813, 0.312, 0.015]], [0.740, [0.809, 0.308, 0.013]], [0.742, [0.809, 0.308, 0.013]], [0.744, [0.805, 0.304, 0.011]], [0.746, [0.805, 0.304, 0.011]], [0.748, [0.801, 0.299, 0.008]], [0.750, [0.801, 0.299, 0.008]], [0.751, [0.795, 0.296, 0.008]], [0.753, [0.795, 0.296, 0.008]], [0.755, [0.789, 0.293, 0.008]], [0.757, [0.789, 0.293, 0.008]], [0.759, [0.783, 0.290, 0.009]], [0.761, [0.783, 0.290, 0.009]], [0.763, [0.776, 0.287, 0.009]], [0.765, [0.776, 0.287, 0.009]], [0.767, [0.770, 0.284, 0.009]], [0.769, [0.770, 0.284, 0.009]], [0.771, [0.764, 0.281, 0.009]], [0.773, [0.764, 0.281, 0.009]], [0.775, [0.758, 0.278, 0.010]], [0.777, [0.758, 0.278, 0.010]], [0.779, [0.751, 0.275, 0.010]], [0.781, [0.751, 0.275, 0.010]], [0.783, [0.745, 0.272, 0.010]], [0.785, [0.745, 0.272, 0.010]], [0.787, [0.739, 0.269, 0.010]], [0.789, [0.739, 0.269, 0.010]], [0.791, [0.733, 0.266, 0.010]], [0.793, [0.733, 0.266, 0.010]], [0.795, [0.726, 0.263, 0.011]], [0.796, [0.726, 0.263, 0.011]], [0.798, [0.720, 0.260, 0.011]], [0.800, [0.720, 0.260, 0.011]], [0.802, [0.714, 0.257, 0.011]], [0.804, [0.714, 0.257, 0.011]], [0.806, [0.707, 0.254, 0.011]], [0.808, [0.707, 0.254, 0.011]], [0.810, [0.701, 0.252, 0.012]], [0.812, [0.701, 0.252, 0.012]], [0.814, [0.695, 0.249, 0.012]], [0.816, [0.695, 0.249, 0.012]], [0.818, [0.689, 0.246, 0.012]], [0.820, [0.689, 0.246, 0.012]], [0.822, [0.682, 0.243, 0.012]], [0.824, [0.682, 0.243, 0.012]], [0.826, [0.676, 0.240, 0.013]], [0.828, [0.676, 0.240, 0.013]], [0.830, [0.670, 0.237, 0.013]], [0.832, [0.670, 0.237, 0.013]], [0.834, [0.664, 0.234, 0.013]], [0.836, [0.664, 0.234, 0.013]], [0.838, [0.657, 0.231, 0.013]], [0.840, [0.657, 0.231, 0.013]], [0.841, [0.651, 0.228, 0.014]], [0.843, [0.651, 0.228, 0.014]], [0.845, [0.645, 0.225, 0.014]], [0.847, [0.645, 0.225, 0.014]], [0.849, [0.638, 0.222, 0.014]], [0.851, [0.638, 0.222, 0.014]], [0.853, [0.632, 0.219, 0.014]], [0.855, [0.632, 0.219, 0.014]], [0.857, [0.626, 0.216, 0.015]], [0.859, [0.626, 0.216, 0.015]], [0.861, [0.620, 0.213, 0.015]], [0.863, [0.620, 0.213, 0.015]], [0.865, [0.613, 0.210, 0.015]], [0.867, [0.613, 0.210, 0.015]], [0.869, [0.607, 0.207, 0.015]], [0.871, [0.607, 0.207, 0.015]], [0.873, [0.601, 0.204, 0.016]], [0.875, [0.601, 0.204, 0.016]], [0.877, [0.595, 0.202, 0.016]], [0.879, [0.595, 0.202, 0.016]], [0.881, [0.588, 0.200, 0.016]], [0.883, [0.588, 0.200, 0.016]], [0.885, [0.582, 0.199, 0.016]], [0.886, [0.582, 0.199, 0.016]], [0.888, [0.576, 0.197, 0.017]], [0.890, [0.576, 0.197, 0.017]], [0.892, [0.569, 0.195, 0.017]], [0.894, [0.569, 0.195, 0.017]], [0.896, [0.563, 0.193, 0.017]], [0.898, [0.563, 0.193, 0.017]], [0.900, [0.557, 0.191, 0.017]], [0.902, [0.557, 0.191, 0.017]], [0.904, [0.551, 0.189, 0.018]], [0.906, [0.551, 0.189, 0.018]], [0.908, [0.544, 0.188, 0.018]], [0.910, [0.544, 0.188, 0.018]], [0.912, [0.538, 0.186, 0.018]], [0.914, [0.538, 0.186, 0.018]], [0.916, [0.532, 0.184, 0.018]], [0.918, [0.532, 0.184, 0.018]], [0.920, [0.525, 0.182, 0.019]], [0.922, [0.525, 0.182, 0.019]], [0.924, [0.519, 0.180, 0.019]], [0.926, [0.519, 0.180, 0.019]], [0.928, [0.513, 0.178, 0.019]], [0.930, [0.513, 0.178, 0.019]], [0.932, [0.507, 0.176, 0.019]], [0.933, [0.507, 0.176, 0.019]], [0.935, [0.500, 0.175, 0.020]], [0.937, [0.500, 0.175, 0.020]], [0.939, [0.494, 0.173, 0.020]], [0.941, [0.494, 0.173, 0.020]], [0.943, [0.488, 0.171, 0.020]], [0.945, [0.488, 0.171, 0.020]], [0.947, [0.482, 0.169, 0.020]], [0.949, [0.482, 0.169, 0.020]], [0.951, [0.475, 0.167, 0.021]], [0.953, [0.475, 0.167, 0.021]], [0.955, [0.469, 0.165, 0.021]], [0.957, [0.469, 0.165, 0.021]], [0.959, [0.463, 0.164, 0.021]], [0.961, [0.463, 0.164, 0.021]], [0.963, [0.456, 0.162, 0.021]], [0.965, [0.456, 0.162, 0.021]], [0.967, [0.450, 0.160, 0.022]], [0.969, [0.450, 0.160, 0.022]], [0.971, [0.444, 0.158, 0.022]], [0.973, [0.444, 0.158, 0.022]], [0.975, [0.438, 0.156, 0.022]], [0.977, [0.438, 0.156, 0.022]], [0.978, [0.431, 0.154, 0.022]], [0.980, [0.431, 0.154, 0.022]], [0.982, [0.425, 0.152, 0.023]], [0.984, [0.425, 0.152, 0.023]], [0.986, [0.419, 0.151, 0.023]], [0.988, [0.419, 0.151, 0.023]], [0.990, [0.413, 0.149, 0.023]], [0.992, [0.413, 0.149, 0.023]], [0.994, [0.406, 0.147, 0.023]], [0.996, [0.406, 0.147, 0.023]], [0.998, [0.400, 0.145, 0.024]], [1.000, [0.400, 0.145, 0.024]]];
H.colormap_YlOrRd = [[0.000, [1.000, 1.000, 0.800]], [0.002, [1.000, 1.000, 0.800]], [0.004, [1.000, 0.998, 0.795]], [0.006, [1.000, 0.998, 0.795]], [0.008, [1.000, 0.996, 0.789]], [0.010, [1.000, 0.996, 0.789]], [0.012, [1.000, 0.993, 0.784]], [0.014, [1.000, 0.993, 0.784]], [0.016, [1.000, 0.991, 0.778]], [0.018, [1.000, 0.991, 0.778]], [0.020, [1.000, 0.989, 0.773]], [0.022, [1.000, 0.989, 0.773]], [0.023, [1.000, 0.987, 0.768]], [0.025, [1.000, 0.987, 0.768]], [0.027, [1.000, 0.984, 0.762]], [0.029, [1.000, 0.984, 0.762]], [0.031, [1.000, 0.982, 0.757]], [0.033, [1.000, 0.982, 0.757]], [0.035, [1.000, 0.980, 0.751]], [0.037, [1.000, 0.980, 0.751]], [0.039, [1.000, 0.978, 0.746]], [0.041, [1.000, 0.978, 0.746]], [0.043, [1.000, 0.976, 0.740]], [0.045, [1.000, 0.976, 0.740]], [0.047, [1.000, 0.973, 0.735]], [0.049, [1.000, 0.973, 0.735]], [0.051, [1.000, 0.971, 0.730]], [0.053, [1.000, 0.971, 0.730]], [0.055, [1.000, 0.969, 0.724]], [0.057, [1.000, 0.969, 0.724]], [0.059, [1.000, 0.967, 0.719]], [0.061, [1.000, 0.967, 0.719]], [0.063, [1.000, 0.965, 0.713]], [0.065, [1.000, 0.965, 0.713]], [0.067, [1.000, 0.962, 0.708]], [0.068, [1.000, 0.962, 0.708]], [0.070, [1.000, 0.960, 0.703]], [0.072, [1.000, 0.960, 0.703]], [0.074, [1.000, 0.958, 0.697]], [0.076, [1.000, 0.958, 0.697]], [0.078, [1.000, 0.956, 0.692]], [0.080, [1.000, 0.956, 0.692]], [0.082, [1.000, 0.953, 0.686]], [0.084, [1.000, 0.953, 0.686]], [0.086, [1.000, 0.951, 0.681]], [0.088, [1.000, 0.951, 0.681]], [0.090, [1.000, 0.949, 0.675]], [0.092, [1.000, 0.949, 0.675]], [0.094, [1.000, 0.947, 0.670]], [0.096, [1.000, 0.947, 0.670]], [0.098, [1.000, 0.945, 0.665]], [0.100, [1.000, 0.945, 0.665]], [0.102, [1.000, 0.942, 0.659]], [0.104, [1.000, 0.942, 0.659]], [0.106, [1.000, 0.940, 0.654]], [0.108, [1.000, 0.940, 0.654]], [0.110, [1.000, 0.938, 0.648]], [0.112, [1.000, 0.938, 0.648]], [0.114, [1.000, 0.936, 0.643]], [0.115, [1.000, 0.936, 0.643]], [0.117, [1.000, 0.934, 0.638]], [0.119, [1.000, 0.934, 0.638]], [0.121, [1.000, 0.931, 0.632]], [0.123, [1.000, 0.931, 0.632]], [0.125, [1.000, 0.929, 0.627]], [0.127, [1.000, 0.929, 0.627]], [0.129, [1.000, 0.927, 0.622]], [0.131, [1.000, 0.927, 0.622]], [0.133, [1.000, 0.924, 0.616]], [0.135, [1.000, 0.924, 0.616]], [0.137, [1.000, 0.922, 0.611]], [0.139, [1.000, 0.922, 0.611]], [0.141, [0.999, 0.919, 0.606]], [0.143, [0.999, 0.919, 0.606]], [0.145, [0.999, 0.917, 0.601]], [0.147, [0.999, 0.917, 0.601]], [0.149, [0.999, 0.914, 0.596]], [0.151, [0.999, 0.914, 0.596]], [0.153, [0.999, 0.912, 0.591]], [0.155, [0.999, 0.912, 0.591]], [0.157, [0.999, 0.909, 0.585]], [0.159, [0.999, 0.909, 0.585]], [0.160, [0.999, 0.907, 0.580]], [0.162, [0.999, 0.907, 0.580]], [0.164, [0.999, 0.904, 0.575]], [0.166, [0.999, 0.904, 0.575]], [0.168, [0.999, 0.902, 0.570]], [0.170, [0.999, 0.902, 0.570]], [0.172, [0.999, 0.900, 0.565]], [0.174, [0.999, 0.900, 0.565]], [0.176, [0.998, 0.897, 0.560]], [0.178, [0.998, 0.897, 0.560]], [0.180, [0.998, 0.895, 0.554]], [0.182, [0.998, 0.895, 0.554]], [0.184, [0.998, 0.892, 0.549]], [0.186, [0.998, 0.892, 0.549]], [0.188, [0.998, 0.890, 0.544]], [0.190, [0.998, 0.890, 0.544]], [0.192, [0.998, 0.887, 0.539]], [0.194, [0.998, 0.887, 0.539]], [0.196, [0.998, 0.885, 0.534]], [0.198, [0.998, 0.885, 0.534]], [0.200, [0.998, 0.882, 0.529]], [0.202, [0.998, 0.882, 0.529]], [0.204, [0.998, 0.880, 0.523]], [0.205, [0.998, 0.880, 0.523]], [0.207, [0.997, 0.877, 0.518]], [0.209, [0.997, 0.877, 0.518]], [0.211, [0.997, 0.875, 0.513]], [0.213, [0.997, 0.875, 0.513]], [0.215, [0.997, 0.873, 0.508]], [0.217, [0.997, 0.873, 0.508]], [0.219, [0.997, 0.870, 0.503]], [0.221, [0.997, 0.870, 0.503]], [0.223, [0.997, 0.868, 0.498]], [0.225, [0.997, 0.868, 0.498]], [0.227, [0.997, 0.865, 0.492]], [0.229, [0.997, 0.865, 0.492]], [0.231, [0.997, 0.863, 0.487]], [0.233, [0.997, 0.863, 0.487]], [0.235, [0.997, 0.860, 0.482]], [0.237, [0.997, 0.860, 0.482]], [0.239, [0.996, 0.858, 0.477]], [0.241, [0.996, 0.858, 0.477]], [0.243, [0.996, 0.855, 0.472]], [0.245, [0.996, 0.855, 0.472]], [0.247, [0.996, 0.853, 0.467]], [0.249, [0.996, 0.853, 0.467]], [0.250, [0.996, 0.850, 0.461]], [0.252, [0.996, 0.850, 0.461]], [0.254, [0.996, 0.845, 0.456]], [0.256, [0.996, 0.845, 0.456]], [0.258, [0.996, 0.840, 0.451]], [0.260, [0.996, 0.840, 0.451]], [0.262, [0.996, 0.835, 0.446]], [0.264, [0.996, 0.835, 0.446]], [0.266, [0.996, 0.831, 0.441]], [0.268, [0.996, 0.831, 0.441]], [0.270, [0.996, 0.826, 0.436]], [0.272, [0.996, 0.826, 0.436]], [0.274, [0.996, 0.821, 0.430]], [0.276, [0.996, 0.821, 0.430]], [0.278, [0.996, 0.816, 0.425]], [0.280, [0.996, 0.816, 0.425]], [0.282, [0.996, 0.811, 0.420]], [0.284, [0.996, 0.811, 0.420]], [0.286, [0.996, 0.807, 0.415]], [0.288, [0.996, 0.807, 0.415]], [0.290, [0.996, 0.802, 0.410]], [0.292, [0.996, 0.802, 0.410]], [0.294, [0.996, 0.797, 0.405]], [0.295, [0.996, 0.797, 0.405]], [0.297, [0.996, 0.792, 0.399]], [0.299, [0.996, 0.792, 0.399]], [0.301, [0.996, 0.787, 0.394]], [0.303, [0.996, 0.787, 0.394]], [0.305, [0.996, 0.783, 0.389]], [0.307, [0.996, 0.783, 0.389]], [0.309, [0.996, 0.778, 0.384]], [0.311, [0.996, 0.778, 0.384]], [0.313, [0.996, 0.773, 0.379]], [0.315, [0.996, 0.773, 0.379]], [0.317, [0.996, 0.768, 0.374]], [0.319, [0.996, 0.768, 0.374]], [0.321, [0.996, 0.763, 0.368]], [0.323, [0.996, 0.763, 0.368]], [0.325, [0.996, 0.759, 0.363]], [0.327, [0.996, 0.759, 0.363]], [0.329, [0.996, 0.754, 0.358]], [0.331, [0.996, 0.754, 0.358]], [0.333, [0.996, 0.749, 0.353]], [0.335, [0.996, 0.749, 0.353]], [0.337, [0.996, 0.744, 0.348]], [0.339, [0.996, 0.744, 0.348]], [0.341, [0.996, 0.739, 0.343]], [0.342, [0.996, 0.739, 0.343]], [0.344, [0.996, 0.735, 0.337]], [0.346, [0.996, 0.735, 0.337]], [0.348, [0.996, 0.730, 0.332]], [0.350, [0.996, 0.730, 0.332]], [0.352, [0.996, 0.725, 0.327]], [0.354, [0.996, 0.725, 0.327]], [0.356, [0.996, 0.720, 0.322]], [0.358, [0.996, 0.720, 0.322]], [0.360, [0.996, 0.715, 0.317]], [0.362, [0.996, 0.715, 0.317]], [0.364, [0.996, 0.711, 0.312]], [0.366, [0.996, 0.711, 0.312]], [0.368, [0.996, 0.706, 0.306]], [0.370, [0.996, 0.706, 0.306]], [0.372, [0.996, 0.701, 0.301]], [0.374, [0.996, 0.701, 0.301]], [0.376, [0.996, 0.696, 0.297]], [0.378, [0.996, 0.696, 0.297]], [0.380, [0.996, 0.692, 0.295]], [0.382, [0.996, 0.692, 0.295]], [0.384, [0.996, 0.687, 0.293]], [0.386, [0.996, 0.687, 0.293]], [0.387, [0.996, 0.683, 0.291]], [0.389, [0.996, 0.683, 0.291]], [0.391, [0.996, 0.678, 0.289]], [0.393, [0.996, 0.678, 0.289]], [0.395, [0.995, 0.674, 0.287]], [0.397, [0.995, 0.674, 0.287]], [0.399, [0.995, 0.669, 0.285]], [0.401, [0.995, 0.669, 0.285]], [0.403, [0.995, 0.664, 0.284]], [0.405, [0.995, 0.664, 0.284]], [0.407, [0.995, 0.660, 0.282]], [0.409, [0.995, 0.660, 0.282]], [0.411, [0.995, 0.655, 0.280]], [0.413, [0.995, 0.655, 0.280]], [0.415, [0.995, 0.651, 0.278]], [0.417, [0.995, 0.651, 0.278]], [0.419, [0.995, 0.646, 0.276]], [0.421, [0.995, 0.646, 0.276]], [0.423, [0.995, 0.642, 0.274]], [0.425, [0.995, 0.642, 0.274]], [0.427, [0.994, 0.637, 0.272]], [0.429, [0.994, 0.637, 0.272]], [0.431, [0.994, 0.633, 0.270]], [0.432, [0.994, 0.633, 0.270]], [0.434, [0.994, 0.628, 0.268]], [0.436, [0.994, 0.628, 0.268]], [0.438, [0.994, 0.623, 0.266]], [0.440, [0.994, 0.623, 0.266]], [0.442, [0.994, 0.619, 0.264]], [0.444, [0.994, 0.619, 0.264]], [0.446, [0.994, 0.614, 0.262]], [0.448, [0.994, 0.614, 0.262]], [0.450, [0.994, 0.610, 0.260]], [0.452, [0.994, 0.610, 0.260]], [0.454, [0.994, 0.605, 0.258]], [0.456, [0.994, 0.605, 0.258]], [0.458, [0.993, 0.601, 0.256]], [0.460, [0.993, 0.601, 0.256]], [0.462, [0.993, 0.596, 0.254]], [0.464, [0.993, 0.596, 0.254]], [0.466, [0.993, 0.592, 0.252]], [0.468, [0.993, 0.592, 0.252]], [0.470, [0.993, 0.587, 0.250]], [0.472, [0.993, 0.587, 0.250]], [0.474, [0.993, 0.583, 0.248]], [0.476, [0.993, 0.583, 0.248]], [0.477, [0.993, 0.578, 0.246]], [0.479, [0.993, 0.578, 0.246]], [0.481, [0.993, 0.573, 0.244]], [0.483, [0.993, 0.573, 0.244]], [0.485, [0.993, 0.569, 0.242]], [0.487, [0.993, 0.569, 0.242]], [0.489, [0.992, 0.564, 0.240]], [0.491, [0.992, 0.564, 0.240]], [0.493, [0.992, 0.560, 0.238]], [0.495, [0.992, 0.560, 0.238]], [0.497, [0.992, 0.555, 0.236]], [0.499, [0.992, 0.555, 0.236]], [0.501, [0.992, 0.549, 0.234]], [0.503, [0.992, 0.549, 0.234]], [0.505, [0.992, 0.541, 0.232]], [0.507, [0.992, 0.541, 0.232]], [0.509, [0.992, 0.534, 0.230]], [0.511, [0.992, 0.534, 0.230]], [0.513, [0.992, 0.526, 0.228]], [0.515, [0.992, 0.526, 0.228]], [0.517, [0.992, 0.518, 0.225]], [0.519, [0.992, 0.518, 0.225]], [0.521, [0.991, 0.510, 0.223]], [0.523, [0.991, 0.510, 0.223]], [0.524, [0.991, 0.503, 0.221]], [0.526, [0.991, 0.503, 0.221]], [0.528, [0.991, 0.495, 0.219]], [0.530, [0.991, 0.495, 0.219]], [0.532, [0.991, 0.487, 0.216]], [0.534, [0.991, 0.487, 0.216]], [0.536, [0.991, 0.479, 0.214]], [0.538, [0.991, 0.479, 0.214]], [0.540, [0.991, 0.472, 0.212]], [0.542, [0.991, 0.472, 0.212]], [0.544, [0.991, 0.464, 0.210]], [0.546, [0.991, 0.464, 0.210]], [0.548, [0.991, 0.456, 0.208]], [0.550, [0.991, 0.456, 0.208]], [0.552, [0.990, 0.448, 0.205]], [0.554, [0.990, 0.448, 0.205]], [0.556, [0.990, 0.441, 0.203]], [0.558, [0.990, 0.441, 0.203]], [0.560, [0.990, 0.433, 0.201]], [0.562, [0.990, 0.433, 0.201]], [0.564, [0.990, 0.425, 0.199]], [0.566, [0.990, 0.425, 0.199]], [0.568, [0.990, 0.417, 0.197]], [0.569, [0.990, 0.417, 0.197]], [0.571, [0.990, 0.410, 0.194]], [0.573, [0.990, 0.410, 0.194]], [0.575, [0.990, 0.402, 0.192]], [0.577, [0.990, 0.402, 0.192]], [0.579, [0.990, 0.394, 0.190]], [0.581, [0.990, 0.394, 0.190]], [0.583, [0.990, 0.386, 0.188]], [0.585, [0.990, 0.386, 0.188]], [0.587, [0.989, 0.379, 0.185]], [0.589, [0.989, 0.379, 0.185]], [0.591, [0.989, 0.371, 0.183]], [0.593, [0.989, 0.371, 0.183]], [0.595, [0.989, 0.363, 0.181]], [0.597, [0.989, 0.363, 0.181]], [0.599, [0.989, 0.355, 0.179]], [0.601, [0.989, 0.355, 0.179]], [0.603, [0.989, 0.348, 0.177]], [0.605, [0.989, 0.348, 0.177]], [0.607, [0.989, 0.340, 0.174]], [0.609, [0.989, 0.340, 0.174]], [0.611, [0.989, 0.332, 0.172]], [0.613, [0.989, 0.332, 0.172]], [0.614, [0.989, 0.324, 0.170]], [0.616, [0.989, 0.324, 0.170]], [0.618, [0.988, 0.317, 0.168]], [0.620, [0.988, 0.317, 0.168]], [0.622, [0.988, 0.309, 0.166]], [0.624, [0.988, 0.309, 0.166]], [0.626, [0.986, 0.302, 0.164]], [0.628, [0.986, 0.302, 0.164]], [0.630, [0.983, 0.295, 0.162]], [0.632, [0.983, 0.295, 0.162]], [0.634, [0.980, 0.289, 0.160]], [0.636, [0.980, 0.289, 0.160]], [0.638, [0.977, 0.283, 0.158]], [0.640, [0.977, 0.283, 0.158]], [0.642, [0.974, 0.276, 0.157]], [0.644, [0.974, 0.276, 0.157]], [0.646, [0.971, 0.270, 0.155]], [0.648, [0.971, 0.270, 0.155]], [0.650, [0.968, 0.263, 0.153]], [0.652, [0.968, 0.263, 0.153]], [0.654, [0.965, 0.257, 0.152]], [0.656, [0.965, 0.257, 0.152]], [0.658, [0.962, 0.251, 0.150]], [0.659, [0.962, 0.251, 0.150]], [0.661, [0.959, 0.244, 0.148]], [0.663, [0.959, 0.244, 0.148]], [0.665, [0.956, 0.238, 0.146]], [0.667, [0.956, 0.238, 0.146]], [0.669, [0.952, 0.232, 0.145]], [0.671, [0.952, 0.232, 0.145]], [0.673, [0.949, 0.225, 0.143]], [0.675, [0.949, 0.225, 0.143]], [0.677, [0.946, 0.219, 0.141]], [0.679, [0.946, 0.219, 0.141]], [0.681, [0.943, 0.212, 0.140]], [0.683, [0.943, 0.212, 0.140]], [0.685, [0.940, 0.206, 0.138]], [0.687, [0.940, 0.206, 0.138]], [0.689, [0.937, 0.200, 0.136]], [0.691, [0.937, 0.200, 0.136]], [0.693, [0.934, 0.193, 0.134]], [0.695, [0.934, 0.193, 0.134]], [0.697, [0.931, 0.187, 0.133]], [0.699, [0.931, 0.187, 0.133]], [0.701, [0.928, 0.180, 0.131]], [0.703, [0.928, 0.180, 0.131]], [0.705, [0.925, 0.174, 0.129]], [0.706, [0.925, 0.174, 0.129]], [0.708, [0.922, 0.168, 0.127]], [0.710, [0.922, 0.168, 0.127]], [0.712, [0.919, 0.161, 0.126]], [0.714, [0.919, 0.161, 0.126]], [0.716, [0.916, 0.155, 0.124]], [0.718, [0.916, 0.155, 0.124]], [0.720, [0.912, 0.148, 0.122]], [0.722, [0.912, 0.148, 0.122]], [0.724, [0.909, 0.142, 0.121]], [0.726, [0.909, 0.142, 0.121]], [0.728, [0.906, 0.136, 0.119]], [0.730, [0.906, 0.136, 0.119]], [0.732, [0.903, 0.129, 0.117]], [0.734, [0.903, 0.129, 0.117]], [0.736, [0.900, 0.123, 0.115]], [0.738, [0.900, 0.123, 0.115]], [0.740, [0.897, 0.116, 0.114]], [0.742, [0.897, 0.116, 0.114]], [0.744, [0.894, 0.110, 0.112]], [0.746, [0.894, 0.110, 0.112]], [0.748, [0.891, 0.104, 0.110]], [0.750, [0.891, 0.104, 0.110]], [0.751, [0.887, 0.100, 0.111]], [0.753, [0.887, 0.100, 0.111]], [0.755, [0.882, 0.096, 0.112]], [0.757, [0.882, 0.096, 0.112]], [0.759, [0.877, 0.093, 0.113]], [0.761, [0.877, 0.093, 0.113]], [0.763, [0.873, 0.090, 0.114]], [0.765, [0.873, 0.090, 0.114]], [0.767, [0.868, 0.087, 0.116]], [0.769, [0.868, 0.087, 0.116]], [0.771, [0.863, 0.084, 0.117]], [0.773, [0.863, 0.084, 0.117]], [0.775, [0.859, 0.080, 0.118]], [0.777, [0.859, 0.080, 0.118]], [0.779, [0.854, 0.077, 0.119]], [0.781, [0.854, 0.077, 0.119]], [0.783, [0.849, 0.074, 0.121]], [0.785, [0.849, 0.074, 0.121]], [0.787, [0.845, 0.071, 0.122]], [0.789, [0.845, 0.071, 0.122]], [0.791, [0.840, 0.068, 0.123]], [0.793, [0.840, 0.068, 0.123]], [0.795, [0.835, 0.064, 0.124]], [0.796, [0.835, 0.064, 0.124]], [0.798, [0.831, 0.061, 0.125]], [0.800, [0.831, 0.061, 0.125]], [0.802, [0.826, 0.058, 0.127]], [0.804, [0.826, 0.058, 0.127]], [0.806, [0.821, 0.055, 0.128]], [0.808, [0.821, 0.055, 0.128]], [0.810, [0.817, 0.052, 0.129]], [0.812, [0.817, 0.052, 0.129]], [0.814, [0.812, 0.048, 0.130]], [0.816, [0.812, 0.048, 0.130]], [0.818, [0.807, 0.045, 0.132]], [0.820, [0.807, 0.045, 0.132]], [0.822, [0.803, 0.042, 0.133]], [0.824, [0.803, 0.042, 0.133]], [0.826, [0.798, 0.039, 0.134]], [0.828, [0.798, 0.039, 0.134]], [0.830, [0.793, 0.036, 0.135]], [0.832, [0.793, 0.036, 0.135]], [0.834, [0.789, 0.032, 0.137]], [0.836, [0.789, 0.032, 0.137]], [0.838, [0.784, 0.029, 0.138]], [0.840, [0.784, 0.029, 0.138]], [0.841, [0.779, 0.026, 0.139]], [0.843, [0.779, 0.026, 0.139]], [0.845, [0.774, 0.023, 0.140]], [0.847, [0.774, 0.023, 0.140]], [0.849, [0.770, 0.020, 0.141]], [0.851, [0.770, 0.020, 0.141]], [0.853, [0.765, 0.016, 0.143]], [0.855, [0.765, 0.016, 0.143]], [0.857, [0.760, 0.013, 0.144]], [0.859, [0.760, 0.013, 0.144]], [0.861, [0.756, 0.010, 0.145]], [0.863, [0.756, 0.010, 0.145]], [0.865, [0.751, 0.007, 0.146]], [0.867, [0.751, 0.007, 0.146]], [0.869, [0.746, 0.004, 0.148]], [0.871, [0.746, 0.004, 0.148]], [0.873, [0.742, 0.000, 0.149]], [0.875, [0.742, 0.000, 0.149]], [0.877, [0.735, 0.000, 0.149]], [0.879, [0.735, 0.000, 0.149]], [0.881, [0.727, 0.000, 0.149]], [0.883, [0.727, 0.000, 0.149]], [0.885, [0.720, 0.000, 0.149]], [0.886, [0.720, 0.000, 0.149]], [0.888, [0.712, 0.000, 0.149]], [0.890, [0.712, 0.000, 0.149]], [0.892, [0.705, 0.000, 0.149]], [0.894, [0.705, 0.000, 0.149]], [0.896, [0.697, 0.000, 0.149]], [0.898, [0.697, 0.000, 0.149]], [0.900, [0.690, 0.000, 0.149]], [0.902, [0.690, 0.000, 0.149]], [0.904, [0.682, 0.000, 0.149]], [0.906, [0.682, 0.000, 0.149]], [0.908, [0.675, 0.000, 0.149]], [0.910, [0.675, 0.000, 0.149]], [0.912, [0.667, 0.000, 0.149]], [0.914, [0.667, 0.000, 0.149]], [0.916, [0.660, 0.000, 0.149]], [0.918, [0.660, 0.000, 0.149]], [0.920, [0.652, 0.000, 0.149]], [0.922, [0.652, 0.000, 0.149]], [0.924, [0.645, 0.000, 0.149]], [0.926, [0.645, 0.000, 0.149]], [0.928, [0.637, 0.000, 0.149]], [0.930, [0.637, 0.000, 0.149]], [0.932, [0.630, 0.000, 0.149]], [0.933, [0.630, 0.000, 0.149]], [0.935, [0.622, 0.000, 0.149]], [0.937, [0.622, 0.000, 0.149]], [0.939, [0.615, 0.000, 0.149]], [0.941, [0.615, 0.000, 0.149]], [0.943, [0.607, 0.000, 0.149]], [0.945, [0.607, 0.000, 0.149]], [0.947, [0.600, 0.000, 0.149]], [0.949, [0.600, 0.000, 0.149]], [0.951, [0.592, 0.000, 0.149]], [0.953, [0.592, 0.000, 0.149]], [0.955, [0.585, 0.000, 0.149]], [0.957, [0.585, 0.000, 0.149]], [0.959, [0.577, 0.000, 0.149]], [0.961, [0.577, 0.000, 0.149]], [0.963, [0.570, 0.000, 0.149]], [0.965, [0.570, 0.000, 0.149]], [0.967, [0.562, 0.000, 0.149]], [0.969, [0.562, 0.000, 0.149]], [0.971, [0.554, 0.000, 0.149]], [0.973, [0.554, 0.000, 0.149]], [0.975, [0.547, 0.000, 0.149]], [0.977, [0.547, 0.000, 0.149]], [0.978, [0.539, 0.000, 0.149]], [0.980, [0.539, 0.000, 0.149]], [0.982, [0.532, 0.000, 0.149]], [0.984, [0.532, 0.000, 0.149]], [0.986, [0.524, 0.000, 0.149]], [0.988, [0.524, 0.000, 0.149]], [0.990, [0.517, 0.000, 0.149]], [0.992, [0.517, 0.000, 0.149]], [0.994, [0.509, 0.000, 0.149]], [0.996, [0.509, 0.000, 0.149]], [0.998, [0.502, 0.000, 0.149]], [1.000, [0.502, 0.000, 0.149]]];

H.color_blend = function(steps, left_hex, right_hex) {
    const blendRgb = function (steps, rgb1, rgb2) {
      let step = [ (rgb2[0] - rgb1[0]) / steps, (rgb2[1] - rgb1[1]) / steps, (rgb2[2] - rgb1[2]) / steps ]
      let array = [ rgb1 ]
      for (let i = 1; i < steps; i++) {
        array.push([array[i - 1][0] + step[0], array[i - 1][1] + step[1], array[i - 1][2] + step[2]])
      }
      array.push(rgb2)
      return array.map(function(rgb) { return formatAll(rgb) })
    }
    var hex = function (steps, left_hex, right_hex) {
      const left_rgb = H.hex_to_rgb(left_hex); 
      let left_array = [ left_rgb.r, left_rgb.g, left_rgb.b ]
      const right_rgb = H.hex_to_rgb(right_hex); 
      let right_array = [ right_rgb.r, right_rgb.g, right_rgb.b ]
      let blended = blendRgb(steps, left_array, right_array);
      let result = []
      blended.forEach(function(c) {
        let cobj = { r: c[0], g: c[1], b: c[2] }
        result.push( H.rgb_to_hex(cobj) )
      })
      return result;
    }
    function normalize (n, upper, lower) {
      if (n > upper) return upper
      if (n < lower) return lower
      return n
    }
    function format (n) {
        return Math.round(normalize(n, 255, 0))
    }
    function formatAll (rgb) {
        return rgb.map(function(channel) { return format(channel) })
    }
    let blend = hex(steps, left_hex, right_hex);
    return blend
};
'use strict'
H.color_array_interpolate = function (hex_color_array) {
	const clamp01 = H.Number.clamp01;
	const lerp = H.Interpolation.lerp;
	const smooth_step = H.Interpolation.smooth_step
	let palette = hex_color_array.map(function(c) {
        c = H.hex_to_rgb(c);
        let rgb = [c.r, c.g, c.b, 1.0 ]
        return rgb;
	});
	return function(t, interp) {
        let mix;
        if ( interp === 'lerp') {
            mix = lerp;
        } else if ( interp === 'smooth_step' ) {
            mix = smooth_step;
        }
		t = clamp01(t);
		var idx = ( palette.length - 1 ) * t,
			lIdx = Math.floor( idx ),
			rIdx = Math.ceil( idx );
		t = idx - lIdx;
		var lColor = palette[lIdx], rColor = palette[rIdx];
		var result = lColor.map(function(v, i) {
			v = mix(v, rColor[i], t);
			if (i < 3) v = Math.round(v);
			return v;
		});
        let hex_result = H.rgb_to_hex({r: result.slice(0, 1), g: result.slice(1, 2), b: result.slice(2, 3) })
		return hex_result;
	};
}

H.generate_gradient = function(hex_color_one, hex_color_two, n) {
    const c1 = H.hex_to_rgb(hex_color_one);
    const c2 = H.hex_to_rgb(hex_color_two);
    var gradient = [];
    var r = c1.r;
    var g = c1.g;
    var b = c1.b;
    var dr = (c2.r - c1.r) / (n - 1);
    var dg = (c2.g - c1.g) / (n - 1);
    var db = (c2.b - c1.b) / (n - 1);
    for (var i = 0; i < n; i++) {
      gradient.push(H.rgb_to_hex({r: r, g: g, b: b}));
      r += dr;
      g += dg;
      b += db;
    }
    return gradient;
};

H.color_mix = function(hex_color_one, hex_color_two, amount) {
    amount = (amount === 0) ? 0 : (amount || 50);
    var rgb1 = H.hex_to_rgb(hex_color_one);
    var rgb2 = H.hex_to_rgb(hex_color_two);
    var p = amount / 100;
    var rgba = {
        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,
        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,
        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,
        a: ((rgb2.a - rgb1.a) * p) + rgb1.a
    };
    let result = H.rgb_to_hex(rgba);
    return result;
};


H.color_palette_from_image = function( img_url, color_count ) {
    color_count = color_count || 256;
   function get_image_palette ( sourceImage, colorCount ) {
        const opts = {
            colors: colorCount,             
            method: 2,               
            boxSize: [64,64],        
            boxPxls: 2,              
            initColors: 4096,        
            minHueCols: 0,           
            dithKern: null,          
            dithDelta: 0,            
            dithSerp: false,         
            palette: [],             
            reIndex: false,          
            useCache: true,          
            cacheFreq: 10,           
            colorDist: "euclidean",  
        };
        let can = new CanvasImage(sourceImage);
	    let quant = new RgbQuant(opts);
	    quant.sample(can);
        let palette = quant.palette(true);
        let reduced = quant.reduce(can, 2, 'FloydSteinberg', false);
        let hex_palette = []
        palette.forEach(function(p) {
            hex_palette.push(H.rgb_to_hex({ r: p[0], g: p[1], b: p[2] }))
        })
        return new Promise(function(resolve, reject) { 
            if( hex_palette.length === opts.colors ) {
                resolve(hex_palette)
            } else {
                reject('something went wrong')
            }  
        })
    };
    const CanvasImage = function (image) {
        const canvas  = document.createElement('canvas');
        const context = canvas.getContext('2d');
        const width  = canvas.width  = image.width;
        const height = canvas.height = image.height;
        canvas.style.display = 'none';
        context.drawImage(image, 0, 0, width, height);
        return canvas
    };
    let get_color_from_url = new Promise(function(resolve, reject) { 
        let img = new Image();
        img.addEventListener('load', function() {
            get_image_palette( img, color_count ).then(function(res) {
                return resolve(res)
            });
        });
        img.src = img_url
    })
    return get_color_from_url.then(function(res) {
            return res
    });
}

H.generate_shades = function(hex_color, size) {
var scaleTo = function (color, size, scale) {
    var i, ret = [], r, g, b, a, scaleR, scaleG, scaleB;
    if (!isFinite(size) || typeof size !== 'number') {
        size = 10;
    }
    let rgb = H.hex_to_rgb(color)
    r = rgb.r;
    g = rgb.g;
    b = rgb.b;
    scaleR = (scale - r) / size;
    scaleG = (scale - g) / size;
    scaleB = (scale - b) / size;
    for (i = 0; i < size; i++) {
        r += scaleR;
        g += scaleG;
        b += scaleB;
        let obj = { r: r, g: g, b: b }
        ret.push( H.rgb_to_hex(obj) ); 
    }
    return ret;
};
let shades = scaleTo(hex_color, size, 0);;
return shades;
}

H.color_spin = function ( hex_color, amount ) {
    var rgb = H.hex_to_rgb(hex_color);
    var hsl = H.rgb_to_hsl(rgb);
    var hue = (hsl.h + amount) % 360;
    hsl.h = hue < 0 ? 360 + hue : hue;
    let hsl_rgb = H.hsl_to_rgb(hsl);
    let result = H.rgb_to_hex(hsl_rgb);
    return result;
}


H.color_step_hex_add = function(factor, steps, hex_color) {
  function stepRgb(factor, steps, hex_color) {
      const rgb = H.hex_to_rgb(hex_color);
      let array = [ [rgb.r, rgb.g, rgb.b] ]
      for (let i = 1; i < steps + 1; i++) {
          array.push(applyMethod(factor, array[i - 1]))
      }
      return array.map(function(rgb) { return formatAll(rgb) } )
  }
  function applyMethod (factor, rgb) {
      const numProvided = typeof factor === 'number'
      return rgb.map((channel, i) => channel + ((numProvided) ? factor : factor[i]))
  }
  let rgb_steps = stepRgb(factor, steps, hex_color);
  let result = []
  rgb_steps.forEach(function(c) {
      let cobj = { r: c[0], g: c[1], b: c[2] }
      result.push( H.rgb_to_hex(cobj) )
  })
  function normalize (n, upper, lower) {
      if (n > upper) return upper
      if (n < lower) return lower
      return n
  }
  function format (n) {
      return Math.round(normalize(n, 255, 0))
  }
  function formatAll (rgb) {
      return rgb.map(function(channel) { return format(channel) })
  }
  return result;
}

H.color_step_hex_divide = function(factor, steps, hex_color) {
  function stepRgb(factor, steps, hex_color) {
      const rgb = H.hex_to_rgb(hex_color);
      let array = [ [rgb.r, rgb.g, rgb.b] ]
      for (let i = 1; i < steps + 1; i++) {
          array.push(applyMethod(factor, array[i - 1]))
      }
      return array.map(function(rgb) { return formatAll(rgb) } )
  }
  function applyMethod (factor, rgb) {
      const numProvided = typeof factor === 'number'
      return rgb.map((channel, i) => channel / ((numProvided) ? factor : factor[i]))
  }
  let rgb_steps = stepRgb(factor, steps, hex_color);
  let result = []
  rgb_steps.forEach(function(c) {
      let cobj = { r: c[0], g: c[1], b: c[2] }
      result.push( H.rgb_to_hex(cobj) )
  })
  function normalize (n, upper, lower) {
      if (n > upper) return upper
      if (n < lower) return lower
      return n
  }
  function format (n) {
      return Math.round(normalize(n, 255, 0))
  }
  function formatAll (rgb) {
      return rgb.map(function(channel) { return format(channel) })
  }
  return result;
}

H.color_step_hex_multiply = function(factor, steps, hex_color) {
  function stepRgb(factor, steps, hex_color) {
      const rgb = H.hex_to_rgb(hex_color);
      let array = [ [rgb.r, rgb.g, rgb.b] ]
      for (let i = 1; i < steps + 1; i++) {
          array.push(applyMethod(factor, array[i - 1]))
      }
      return array.map(function(rgb) { return formatAll(rgb) } )
  }
  function applyMethod (factor, rgb) {
      const numProvided = typeof factor === 'number'
      return rgb.map((channel, i) => channel * ((numProvided) ? factor : factor[i]))
  }
  let rgb_steps = stepRgb(factor, steps, hex_color);
  let result = []
  rgb_steps.forEach(function(c) {
      let cobj = { r: c[0], g: c[1], b: c[2] }
      result.push( H.rgb_to_hex(cobj) )
  })
  function normalize (n, upper, lower) {
      if (n > upper) return upper
      if (n < lower) return lower
      return n
  }
  function format (n) {
      return Math.round(normalize(n, 255, 0))
  }
  function formatAll (rgb) {
      return rgb.map(function(channel) { return format(channel) })
  }
  return result;
}

H.color_step_hex_subtract = function(factor, steps, hex_color) {
    function stepRgb(factor, steps, hex_color) {
        const rgb = H.hex_to_rgb(hex_color);
        let array = [ [rgb.r, rgb.g, rgb.b] ]
        for (let i = 1; i < steps + 1; i++) {
            array.push(applyMethod(factor, array[i - 1]))
        }
        return array.map(function(rgb) { return formatAll(rgb) } )
    }
    function applyMethod (factor, rgb) {
        const numProvided = typeof factor === 'number'
        return rgb.map(function(channel, i) { return channel - ((numProvided) ? factor : factor[i]) } )
    }
    let rgb_steps = stepRgb(factor, steps, hex_color);
    let result = []
    rgb_steps.forEach(function(c) {
        let cobj = { r: c[0], g: c[1], b: c[2] }
        result.push( H.rgb_to_hex(cobj) )
    })
    function normalize (n, upper, lower) {
        if (n > upper) return upper
        if (n < lower) return lower
        return n
    }
    function format (n) {
        return Math.round(normalize(n, 255, 0))
    }
    function formatAll (rgb) {
        return rgb.map(function(channel) { return format(channel) })
    }
    return result;
}

H.generate_tints = function(hex_color, size) {
var scaleTo = function (color, size, scale) {
    var i, ret = [], r, g, b, scaleR, scaleG, scaleB;
    if (!isFinite(size) || typeof size !== 'number') {
        size = 10;
    }
    let rgb = H.hex_to_rgb(color)
    r = rgb.r;
    g = rgb.g;
    b = rgb.b;
    scaleR = (scale - r) / size;
    scaleG = (scale - g) / size;
    scaleB = (scale - b) / size;
    for (i = 0; i < size; i++) {
        r += scaleR;
        g += scaleG;
        b += scaleB;
        let obj = { r: r, g: g, b: b }
        ret.push( H.rgb_to_hex(obj) ); 
    }
    return ret;
};
let tints = scaleTo(hex_color, size, 1);
return tints
}

H.generate_tones = function(hex_color, size) {
var scaleTo = function (color, size, scale) {
    var i, ret = [], r, g, b, scaleR, scaleG, scaleB;
    if (!isFinite(size) || typeof size !== 'number') {
        size = 10;
    }
    let rgb = H.hex_to_rgb(color)
    r = rgb.r;
    g = rgb.g;
    b = rgb.b;
    scaleR = (scale - r) / size;
    scaleG = (scale - g) / size;
    scaleB = (scale - b) / size;
    for (i = 0; i < size; i++) {
        r += scaleR;
        g += scaleG;
        b += scaleB;
        let obj = { r: r, g: g, b: b }
        ret.push( H.rgb_to_hex(obj) ); 
    }
    return ret;
};
let tones = scaleTo(hex_color, size, 0.5);
return tones
}

H.harmony_analogous = function ( hex_color ) {
    const harmony = [0,30,60,90,120,150];
    const harmonize = H.color_utils.harmonize;
    let result = harmonize( hex_color, harmony );
    return result;
}

H.harmony_clash = function ( hex_color ) {
    const harmony = [0,90,270];
    const harmonize = H.color_utils.harmonize;
    let result = harmonize( hex_color, harmony );
    return result;
}

H.harmony_complement = function (hex_color) {
    var rgb = H.hex_to_rgb(hex_color);
    var hsl = H.rgb_to_hsl(rgb);
    hsl.h = (hsl.h + 180) % 360;
    let hsl_rgb = H.hsl_to_rgb(hsl);
    let result = H.rgb_to_hex(hsl_rgb)
    return result;
}

H.harmony_custom = function ( hex_color, harmony_arr ) {
    harmony_arr = harmony_arr || [0,120,240];
    const harmonize = H.color_utils.harmonize;
    let result = harmonize( hex_color, harmony );
    return result;
}

H.harmony_five_tone_a = function ( hex_color ) {
    const harmony = [0,115,155,205,245];
    const harmonize = H.color_utils.harmonize;
    let result = harmonize( hex_color, harmony );
    return result;
}

H.harmony_five_tone_b = function ( hex_color ) {
    const harmony = [0,40,90,130,245];
    const harmonize = H.color_utils.harmonize;
    let result = harmonize( hex_color, harmony );
    return result;
}

H.harmony_five_tone_c = function ( hex_color ) {
    const harmony = [0,50,90,205,320];
    const harmonize = H.color_utils.harmonize;
    let result = harmonize( hex_color, harmony );
    return result;
}

H.harmony_five_tone_d = function ( hex_color ) {
    const harmony = [0,40,155,270,310];
    const harmonize = H.color_utils.harmonize;
    let result = harmonize( hex_color, harmony );
    return result;
}

H.harmony_five_tone_e = function ( hex_color ) {
    const harmony = [0,115,230,270,320];
    const harmonize = H.color_utils.harmonize;
    let result = harmonize( hex_color, harmony );
    return result;
}

H.harmony_four_tone_ccw = function ( hex_color ) {
    const harmony = [0,120,180,300];
    const harmonize = H.color_utils.harmonize;
    let result = harmonize( hex_color, harmony );
    return result;
}

H.harmony_four_tone_cw = function ( hex_color ) {
    const harmony = [0,60,180,240];
    const harmonize = H.color_utils.harmonize;
    let result = harmonize( hex_color, harmony );
    return result;
}

H.harmony_neutral = function ( hex_color ) {
    const harmony = [0,15,30,45,60,75];
    const harmonize = H.color_utils.harmonize;
    let result = harmonize( hex_color, harmony );
    return result;
}

H.harmony_six_tone_ccw = function ( hex_color ) {
    const harmony = [0,90,120,210,240,330];
    const harmonize = H.color_utils.harmonize;
    let result = harmonize( hex_color, harmony );
    return result;
}

H.harmony_six_tone_cw = function ( hex_color ) {
    const harmony = [0,30,120,150,240,270];
    const harmonize = H.color_utils.harmonize;
    let result = harmonize( hex_color, harmony );
    return result;
}

H.harmony_split_complementary_ccw = function ( hex_color ) {
    const harmony = [0,60,210];
    const harmonize = H.color_utils.harmonize;
    let result = harmonize( hex_color, harmony );
    return result;
}

H.harmony_split_complementary_cw = function ( hex_color ) {
    const harmony = [0,150,300];
    const harmonize = H.color_utils.harmonize;
    let result = harmonize( hex_color, harmony );
    return result;
}

H.harmony_split_complementary = function ( hex_color ) {
    const harmony = [0,150,320];
    const harmonize = H.color_utils.harmonize;
    let result = harmonize( hex_color, harmony );
    return result;
}

H.harmony_tetradic = function ( hex_color ) {
const harmony = [0,90,180,270];
const harmonize = H.color_utils.harmonize;
let result = harmonize( hex_color, harmony );
return result;
}

H.harmony_triadic = function ( hex_color ) {
    const harmony = [0,120,240];
    const harmonize = H.color_utils.harmonize;
    let result = harmonize( hex_color, harmony );
    return result;
}

H.filter_channel_cmyk = function( hex_color_array, filter_channel, filter_action, filter_value ) {
    const gt = H.Comparator.is_greater_than;
    const lt = H.Comparator.is_less_than;
    const eq = H.Comparator.is_equal;
    let result = []
    hex_color_array.forEach(function(c) {
        let rgb = H.hex_to_rgb(c);
        let cmyk = H.rgb_to_cmyk(rgb);
        if ( filter_action === '>' ) { 
            if ( gt( cmyk[filter_channel] , filter_value ) ) {
                result.push(c)
            }
        } else if ( filter_action === '>' ) {
            if ( lt( cmyk[filter_channel] , filter_value ) ) {
                result.push(c)
            }
        } else if ( filter_action === '=' ) {
            if ( eq( cmyk[filter_channel] , filter_value ) ) {
                result.push(c)
            }
        }
    })
    return result
}

H.filter_channel_hue = function( hex_color_array, filter_action, filter_value ) {
    const gt = H.Comparator.is_greater_than;
    const lt = H.Comparator.is_less_than;
    const eq = H.Comparator.is_equal;
    let result = []
   hex_color_array.forEach(function(c) {
        let rgb = H.hex_to_rgb(c);
        let hsl = H.rgb_to_hsl(rgb);
        if ( filter_action === '>' ) { 
            if ( gt( hsl.h , filter_value ) ) {
                result.push(c)
            }
        } else if ( filter_action === '>' ) {
            if ( lt( hsl.h , filter_value ) ) {
                result.push(c)
            }
        } else if ( filter_action === '=' ) {
            if ( eq( hsl.h , filter_value ) ) {
                result.push(c)
            }
        }
    })
    return result
}

H.filter_channel_lightness = function( hex_color_array, filter_action, filter_value ) {
    const gt = H.Comparator.is_greater_than;
    const lt = H.Comparator.is_less_than;
    const eq = H.Comparator.is_equal;
    let result = []
    hex_color_array.forEach(function(c) {
        let rgb = H.hex_to_rgb(c);
        let hsl = H.rgb_to_hsl(rgb);
        if ( filter_action === '>' ) { 
            if ( gt( hsl.l , filter_value ) ) {
                result.push(c)
            }
        } else if ( filter_action === '>' ) {
            if ( lt( hsl.l , filter_value ) ) {
                result.push(c)
            }
        } else if ( filter_action === '=' ) {
            if ( eq( hsl.l , filter_value ) ) {
                result.push(c)
            }
        }
    })
    return result
}

H.filter_channel_rgb = function( hex_color_array, filter_channel, filter_action, filter_value ) {
    const gt = H.Comparator.is_greater_than;
    const lt = H.Comparator.is_less_than;
    const eq = H.Comparator.is_equal;
    let result = []
    hex_color_array.forEach(function(c) {
        let rgb = H.hex_to_rgb(c);
        if ( filter_action === '>' ) { 
            if ( gt( rgb[filter_channel] , filter_value ) ) {
                result.push(c)
            }
        } else if ( filter_action === '>' ) {
            if ( lt( rgb[filter_channel] , filter_value ) ) {
                result.push(c)
            }
        } else if ( filter_action === '=' ) {
            if ( eq( rgb[filter_channel] , filter_value ) ) {
                result.push(c)
            }
        }
    })
    return result
}

H.filter_channel_saturation = function( hex_color_array, filter_action, filter_value ) {
    const gt = H.Comparator.is_greater_than;
    const lt = H.Comparator.is_less_than;
    const eq = H.Comparator.is_equal;
    let result = []
    hex_color_array.forEach(function(c) {
        let rgb = H.hex_to_rgb(c);
        let hsl = H.rgb_to_hsl(rgb);
        if ( filter_action === '>' ) { 
            if ( gt( hsl.s , filter_value ) ) {
                result.push(c)
            }
        } else if ( filter_action === '>' ) {
            if ( lt( hsl.s , filter_value ) ) {
                result.push(c)
            }
        } else if ( filter_action === '=' ) {
            if ( eq( hsl.s , filter_value ) ) {
                result.push(c)
            }
        }
    })
    return result
}

H.filter_channel_whiteness = function( hex_color_array, filter_action, filter_value ) {
    const gt = H.Comparator.is_greater_than;
    const lt = H.Comparator.is_less_than;
    const eq = H.Comparator.is_equal;
    let result = []
    hex_color_array.forEach(function(c) {
        let rgb = H.hex_to_rgb(c);
        let hwb = H.rgb_to_hwb(rgb);
        if ( filter_action === '>' ) { 
            if ( gt( hwb.w , filter_value ) ) {
                result.push(c)
            }
        } else if ( filter_action === '>' ) {
            if ( lt( hwb.w , filter_value ) ) {
                result.push(c)
            }
        } else if ( filter_action === '=' ) {
            if ( eq( hwb.w , filter_value ) ) {
                result.push(c)
            }
        }
    })
    return result
}

H.color_blacken = function (hex_color, ratio) {
    var hwb = H.hex_to_hwb(hex_color);
    hwb.b += hwb.b * ratio;
    hwb.b = H.Number.clamp(hwb.b, 0, 100)
    let hwb_rgb = H.hwb_to_rgb(hwb);
    let result = H.rgb_to_hex(hwb_rgb)
    return result;
}

H.color_brighten = function (hex_color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var rgb = H.hex_to_rgb(hex_color);
    rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * - (amount / 100))));
    rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * - (amount / 100))));
    rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * - (amount / 100))));
    let result = H.rgb_to_hex(rgb);
    return result;
}

H.color_darken = function ( hex_color, ratio ) {
    ratio = ratio || 0.5;
    var rgb = H.hex_to_rgb(hex_color);
    var hsl = H.rgb_to_hsl(rgb);
    hsl.s -= hsl.s * ratio;
    hsl.s = H.Number.clamp(hsl.s, 0, 100)
    let hsl_rgb = H.hsl_to_rgb(hsl);
    let result = H.rgb_to_hex(hsl_rgb)
    return result;
}

H.color_desaturate = function ( hex_color, ratio ) {
    ratio = ratio || 0.5;
    var rgb = H.hex_to_rgb(hex_color);
    var hsl = H.rgb_to_hsl(rgb);
    hsl.s -= hsl.s * ratio;
    hsl.s = H.Number.clamp(hsl.s, 0, 100)
    let hsl_rgb = H.hsl_to_rgb(hsl);
    let result = H.rgb_to_hex(hsl_rgb)
    return result;
}

H.color_grayscale = function ( hex_color ) {
    var rgb = H.hex_to_rgb( hex_color );
    var val = rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11;
    let gray_rgb = { r: val, g: val, b: val}
    let result = H.rgb_to_hex(gray_rgb)
    return result;
}

H.color_lighten = function (hex_color, ratio) {
    ratio = ratio || 0.5;
    var rgb = H.hex_to_rgb(hex_color);
    var hsl = H.rgb_to_hsl(rgb);
    hsl.s += hsl.s * ratio;
    hsl.s = H.Number.clamp(hsl.s, 0, 100)
    let hsl_rgb = H.hsl_to_rgb(hsl);
    let result = H.rgb_to_hex(hsl_rgb);
    return result;
}

H.color_luminance = function( hex_color, percent ) {
    percent = percent || 20;
    let rgb = H.hex_to_rgb(hex_color);
    let amt = Math.round(2.55 * percent);
    let R = clamp(rgb.r + amt, 0, 255);
    let G = clamp(rgb.g + amt, 0, 255);
    let B = clamp(rgb.b + amt, 0, 255);
    function clamp(val, min, max) {
        return val > max ? max : val < min ? min : val;
    }
    let result = H.rgb_to_hex({r: R, g: G, b: B })
    return result
};

H.color_saturate = function (hex_color, ratio) {
    ratio = ratio || 0.5;
    var rgb = H.hex_to_rgb(hex_color);
    var hsl = H.rgb_to_hsl(rgb);
    hsl.s += hsl.s * ratio;
    hsl.s = H.Number.clamp(hsl.s, 0, 100)
    let hsl_rgb = H.hsl_to_rgb(hsl);
    let result = H.rgb_to_hex(hsl_rgb);
    return result;
}

H.color_temperature = function() {
var from_kelvin = function (kelvin) {
    const temp = kelvin / 100;
    let r,g,b;
    if (temp < 66) {
        r = 255
        g = -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * Math.log(g)
        b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * Math.log(b)
    } else {
        r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * Math.log(r)
        g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * Math.log(g)
        b = 255
    }
    let result = H.rgb_to_hex( { r: r, g: g, b: b} );
    return result;
}
var from_color = function(hex_color) {
    var rgb = H.hex_to_rgb(hex_color);
    const r = rgb.r, b = rgb.b;
    let minTemp = 1000;
    let maxTemp = 40000;
    const eps = 0.4;
    let temp;
    while (maxTemp - minTemp > eps) {
        temp = (maxTemp + minTemp) * 0.5;
        const rgb = from_kelvin(temp);
        if ((rgb.b / rgb.r) >= (b / r)) {
            maxTemp = temp;
        } else {
            minTemp = temp;
        }
    }
    return temp;
}
return {
    from_kelvin : from_kelvin,
    from_color : from_color
}
}()

H.color_whiten = function (hex_color, ratio) {
    var hwb = H.hex_to_hwb(hex_color);
    hwb.w += hwb.w * ratio;
    hwb.w = H.Number.clamp(hwb.w, 0, 100)
    let hwb_rgb = H.hwb_to_rgb(hwb);
    let result = H.rgb_to_hex(hwb_rgb)
    return result;
}

H.specs_cmyk = {
	name: 'cmyk',
	min: [0,0,0,0],
	max: [100,100,100,100],
	channel: ['cyan', 'magenta', 'yellow', 'black'],
    alias: ['CMYK']
}

H.specs_hsl = {
	name: 'hsl',
	min: [0,0,0],
	max: [360,100,100],
	channel: ['hue', 'saturation', 'lightness'],
    alias: ['HSL']
}

H.specs_hsv = {
	name: 'hsv',
	min: [0,0,0],
	max: [360,100,100],
	channel: ['hue', 'saturation', 'value'],
    alias: ['HSV', 'HSB']
}

H.specs_hwb = {
	name: 'hwb',
	min: [0,0,0],
	max: [360,100,100],
	channel: ['hue', 'whiteness', 'blackness'],
    alias: ['HWB']
}

H.specs_lab = { 
    name: 'lab',
    min: [0,-100,-100],
    max: [100,100,100],
    channel: ['lightness', 'a', 'b'],
    alias: ['LAB', 'cielab']
}

H.specs_lch = {
	name: 'lchab',
	min: [0,0,0],
	max: [100,100,360],
	channel: ['lightness', 'chroma', 'hue'],
    alias: ['LCHab', 'cielch', 'LCH', 'HLC', 'LSH']
}

H.specs_rgb = {
	name: 'rgb',
	min: [0,0,0],
	max: [255,255,255],
	channel: ['red', 'green', 'blue'],
	alias: ['RGB']
};

H.is_valid_hex = function (str) {
    const assertString = H.assert_string;
    const hexcolor = /^#?([0-9A-F]{3}|[0-9A-F]{6})$/i;
  assertString(str);
  return hexcolor.test(str);
}

H.is_valid_hsl = function (hsl) {
    if (hsl.length !== 3) return false
    for (let i = 0; i < hsl.length; i++) {
      if (typeof hsl[i] !== 'number' || hsl[i] > ((i === 0) ? 359 : 100) || hsl[i] < 0) return false
    }
    return true
  }

H.is_valid_rgb = function (rgb) {
    if (rgb.length !== 3) return false
    for (let i = 0; i < rgb.length; i++) {
      if (typeof rgb[i] !== 'number' || rgb[i] > 255 || rgb[i] < 0) return false
    }
    return true
}

H.color_attributes = function ( hex_color ) {
    let rgb = H.hex_to_rgb(hex_color);
    let cmyk = H.rgb_to_cmyk(rgb);
    let hsl = H.rgb_to_hsl(rgb);
    let hsv = H.rgb_to_hsv(rgb);
    let lab = H.rgb_to_lab(rgb);
    let lch = H.lab_to_lch(lab)
    let hwb = H.rgb_to_hwb(rgb);
    let attributes = new Object();
    attributes.red = Number(rgb.r.toFixed(0));
    attributes.green = Number(rgb.g.toFixed(0));
    attributes.blue = Number(rgb.b.toFixed(0));
    attributes.cyan = Number(cmyk.c.toFixed(2));
    attributes.magenta = Number(cmyk.m.toFixed(2));
    attributes.yellow = Number(cmyk.y.toFixed(2));
    attributes.black = Number(cmyk.k.toFixed(2));
    attributes.hue = Number(hsl.h.toFixed(0));
    attributes.saturation = Number(hsl.s.toFixed(2));
    attributes.luminance = Number(hsl.l.toFixed(2));
    attributes.value = Number(hsv.v.toFixed(2));
    attributes.brightness = Number(hsv.v.toFixed(2));
    attributes.chroma = Number(lch.c.toFixed(2));
    attributes.whiteness = Number(hwb.w.toFixed(2));
    attributes.blackness = Number(hwb.b.toFixed(2));
    return attributes
}
H.color_keywords = {
	aliceblue: [240, 248, 255],
	antiquewhite: [250, 235, 215],
	aqua: [0, 255, 255],
	aquamarine: [127, 255, 212],
	azure: [240, 255, 255],
	beige: [245, 245, 220],
	bisque: [255, 228, 196],
	black: [0, 0, 0],
	blanchedalmond: [255, 235, 205],
	blue: [0, 0, 255],
	blueviolet: [138, 43, 226],
	brown: [165, 42, 42],
	burlywood: [222, 184, 135],
	cadetblue: [95, 158, 160],
	chartreuse: [127, 255, 0],
	chocolate: [210, 105, 30],
	coral: [255, 127, 80],
	cornflowerblue: [100, 149, 237],
	cornsilk: [255, 248, 220],
	crimson: [220, 20, 60],
	cyan: [0, 255, 255],
	darkblue: [0, 0, 139],
	darkcyan: [0, 139, 139],
	darkgoldenrod: [184, 134, 11],
	darkgray: [169, 169, 169],
	darkgreen: [0, 100, 0],
	darkgrey: [169, 169, 169],
	darkkhaki: [189, 183, 107],
	darkmagenta: [139, 0, 139],
	darkolivegreen: [85, 107, 47],
	darkorange: [255, 140, 0],
	darkorchid: [153, 50, 204],
	darkred: [139, 0, 0],
	darksalmon: [233, 150, 122],
	darkseagreen: [143, 188, 143],
	darkslateblue: [72, 61, 139],
	darkslategray: [47, 79, 79],
	darkslategrey: [47, 79, 79],
	darkturquoise: [0, 206, 209],
	darkviolet: [148, 0, 211],
	deeppink: [255, 20, 147],
	deepskyblue: [0, 191, 255],
	dimgray: [105, 105, 105],
	dimgrey: [105, 105, 105],
	dodgerblue: [30, 144, 255],
	firebrick: [178, 34, 34],
	floralwhite: [255, 250, 240],
	forestgreen: [34, 139, 34],
	fuchsia: [255, 0, 255],
	gainsboro: [220, 220, 220],
	ghostwhite: [248, 248, 255],
	gold: [255, 215, 0],
	goldenrod: [218, 165, 32],
	gray: [128, 128, 128],
	green: [0, 128, 0],
	greenyellow: [173, 255, 47],
	grey: [128, 128, 128],
	honeydew: [240, 255, 240],
	hotpink: [255, 105, 180],
	indianred: [205, 92, 92],
	indigo: [75, 0, 130],
	ivory: [255, 255, 240],
	khaki: [240, 230, 140],
	lavender: [230, 230, 250],
	lavenderblush: [255, 240, 245],
	lawngreen: [124, 252, 0],
	lemonchiffon: [255, 250, 205],
	lightblue: [173, 216, 230],
	lightcoral: [240, 128, 128],
	lightcyan: [224, 255, 255],
	lightgoldenrodyellow: [250, 250, 210],
	lightgray: [211, 211, 211],
	lightgreen: [144, 238, 144],
	lightgrey: [211, 211, 211],
	lightpink: [255, 182, 193],
	lightsalmon: [255, 160, 122],
	lightseagreen: [32, 178, 170],
	lightskyblue: [135, 206, 250],
	lightslategray: [119, 136, 153],
	lightslategrey: [119, 136, 153],
	lightsteelblue: [176, 196, 222],
	lightyellow: [255, 255, 224],
	lime: [0, 255, 0],
	limegreen: [50, 205, 50],
	linen: [250, 240, 230],
	magenta: [255, 0, 255],
	maroon: [128, 0, 0],
	mediumaquamarine: [102, 205, 170],
	mediumblue: [0, 0, 205],
	mediumorchid: [186, 85, 211],
	mediumpurple: [147, 112, 219],
	mediumseagreen: [60, 179, 113],
	mediumslateblue: [123, 104, 238],
	mediumspringgreen: [0, 250, 154],
	mediumturquoise: [72, 209, 204],
	mediumvioletred: [199, 21, 133],
	midnightblue: [25, 25, 112],
	mintcream: [245, 255, 250],
	mistyrose: [255, 228, 225],
	moccasin: [255, 228, 181],
	navajowhite: [255, 222, 173],
	navy: [0, 0, 128],
	oldlace: [253, 245, 230],
	olive: [128, 128, 0],
	olivedrab: [107, 142, 35],
	orange: [255, 165, 0],
	orangered: [255, 69, 0],
	orchid: [218, 112, 214],
	palegoldenrod: [238, 232, 170],
	palegreen: [152, 251, 152],
	paleturquoise: [175, 238, 238],
	palevioletred: [219, 112, 147],
	papayawhip: [255, 239, 213],
	peachpuff: [255, 218, 185],
	peru: [205, 133, 63],
	pink: [255, 192, 203],
	plum: [221, 160, 221],
	powderblue: [176, 224, 230],
	purple: [128, 0, 128],
	rebeccapurple: [102, 51, 153],
	red: [255, 0, 0],
	rosybrown: [188, 143, 143],
	royalblue: [65, 105, 225],
	saddlebrown: [139, 69, 19],
	salmon: [250, 128, 114],
	sandybrown: [244, 164, 96],
	seagreen: [46, 139, 87],
	seashell: [255, 245, 238],
	sienna: [160, 82, 45],
	silver: [192, 192, 192],
	skyblue: [135, 206, 235],
	slateblue: [106, 90, 205],
	slategray: [112, 128, 144],
	slategrey: [112, 128, 144],
	snow: [255, 250, 250],
	springgreen: [0, 255, 127],
	steelblue: [70, 130, 180],
	tan: [210, 180, 140],
	teal: [0, 128, 128],
	thistle: [216, 191, 216],
	tomato: [255, 99, 71],
	transparent: [0, 0, 0],
	turquoise: [64, 224, 208],
	violet: [238, 130, 238],
	wheat: [245, 222, 179],
	white: [255, 255, 255],
	whitesmoke: [245, 245, 245],
	yellow: [255, 255, 0],
	yellowgreen: [154, 205, 50]
};

(function(){
	function RgbQuant(opts) {
		opts = opts || {};
		this.method = opts.method || 2;
		this.colors = opts.colors || 256;
		this.initColors = opts.initColors || 4096;
		this.initDist = opts.initDist || 0.01;
		this.distIncr = opts.distIncr || 0.005;
		this.hueGroups = opts.hueGroups || 10;
		this.satGroups = opts.satGroups || 10;
		this.lumGroups = opts.lumGroups || 10;
		this.minHueCols = opts.minHueCols || 0;
		this.hueStats = this.minHueCols ? new HueStats(this.hueGroups, this.minHueCols) : null;
		this.boxSize = opts.boxSize || [64,64];
		this.boxPxls = opts.boxPxls || 2;
		this.palLocked = false;
		this.dithKern = opts.dithKern || null;
		this.dithSerp = opts.dithSerp || false;
		this.dithDelta = opts.dithDelta || 0;
		this.histogram = {};
		this.idxrgb = opts.palette ? opts.palette.slice(0) : [];
		this.idxi32 = [];
		this.i32idx = {};
		this.i32rgb = {};
		this.useCache = opts.useCache !== false;
		this.cacheFreq = opts.cacheFreq || 10;
		this.reIndex = opts.reIndex || this.idxrgb.length == 0;
		this.colorDist = opts.colorDist == "manhattan" ? distManhattan : distEuclidean;
		if (this.idxrgb.length > 0) {
			var self = this;
			this.idxrgb.forEach(function(rgb, i) {
				var i32 = (
					(255    << 24) |	
					(rgb[2] << 16) |	
					(rgb[1] <<  8) |	
					 rgb[0]				
				) >>> 0;
				self.idxi32[i]		= i32;
				self.i32idx[i32]	= i;
				self.i32rgb[i32]	= rgb;
			});
		}
	}
	RgbQuant.prototype.sample = function sample(img, width) {
		if (this.palLocked)
			throw "Cannot sample additional images, palette already assembled.";
		var data = getImageData(img, width);
		switch (this.method) {
			case 1: this.colorStats1D(data.buf32); break;
			case 2: this.colorStats2D(data.buf32, data.width); break;
		}
	};
	RgbQuant.prototype.reduce = function reduce(img, retType, dithKern, dithSerp) {
		if (!this.palLocked)
			this.buildPal();
		dithKern = dithKern || this.dithKern;
		dithSerp = typeof dithSerp != "undefined" ? dithSerp : this.dithSerp;
		retType = retType || 1;
		if (dithKern)
			var out32 = this.dither(img, dithKern, dithSerp);
		else {
			var data = getImageData(img),
				buf32 = data.buf32,
				len = buf32.length,
				out32 = new Uint32Array(len);
			for (var i = 0; i < len; i++) {
				var i32 = buf32[i];
				out32[i] = this.nearestColor(i32);
			}
		}
		if (retType == 1)
			return new Uint8Array(out32.buffer);
		if (retType == 2) {
			var out = [],
				len = out32.length;
			for (var i = 0; i < len; i++) {
				var i32 = out32[i];
				out[i] = this.i32idx[i32];
			}
			return out;
		}
	};
	RgbQuant.prototype.dither = function(img, kernel, serpentine) {
		var kernels = {
			FloydSteinberg: [
				[7 / 16, 1, 0],
				[3 / 16, -1, 1],
				[5 / 16, 0, 1],
				[1 / 16, 1, 1]
			],
			FalseFloydSteinberg: [
				[3 / 8, 1, 0],
				[3 / 8, 0, 1],
				[2 / 8, 1, 1]
			],
			Stucki: [
				[8 / 42, 1, 0],
				[4 / 42, 2, 0],
				[2 / 42, -2, 1],
				[4 / 42, -1, 1],
				[8 / 42, 0, 1],
				[4 / 42, 1, 1],
				[2 / 42, 2, 1],
				[1 / 42, -2, 2],
				[2 / 42, -1, 2],
				[4 / 42, 0, 2],
				[2 / 42, 1, 2],
				[1 / 42, 2, 2]
			],
			Atkinson: [
				[1 / 8, 1, 0],
				[1 / 8, 2, 0],
				[1 / 8, -1, 1],
				[1 / 8, 0, 1],
				[1 / 8, 1, 1],
				[1 / 8, 0, 2]
			],
			Jarvis: [			
				[7 / 48, 1, 0],
				[5 / 48, 2, 0],
				[3 / 48, -2, 1],
				[5 / 48, -1, 1],
				[7 / 48, 0, 1],
				[5 / 48, 1, 1],
				[3 / 48, 2, 1],
				[1 / 48, -2, 2],
				[3 / 48, -1, 2],
				[5 / 48, 0, 2],
				[3 / 48, 1, 2],
				[1 / 48, 2, 2]
			],
			Burkes: [
				[8 / 32, 1, 0],
				[4 / 32, 2, 0],
				[2 / 32, -2, 1],
				[4 / 32, -1, 1],
				[8 / 32, 0, 1],
				[4 / 32, 1, 1],
				[2 / 32, 2, 1],
			],
			Sierra: [
				[5 / 32, 1, 0],
				[3 / 32, 2, 0],
				[2 / 32, -2, 1],
				[4 / 32, -1, 1],
				[5 / 32, 0, 1],
				[4 / 32, 1, 1],
				[2 / 32, 2, 1],
				[2 / 32, -1, 2],
				[3 / 32, 0, 2],
				[2 / 32, 1, 2],
			],
			TwoSierra: [
				[4 / 16, 1, 0],
				[3 / 16, 2, 0],
				[1 / 16, -2, 1],
				[2 / 16, -1, 1],
				[3 / 16, 0, 1],
				[2 / 16, 1, 1],
				[1 / 16, 2, 1],
			],
			SierraLite: [
				[2 / 4, 1, 0],
				[1 / 4, -1, 1],
				[1 / 4, 0, 1],
			],
		};
		if (!kernel || !kernels[kernel]) {
			throw 'Unknown dithering kernel: ' + kernel;
		}
		var ds = kernels[kernel];
		var data = getImageData(img),
			buf32 = data.buf32,
			width = data.width,
			height = data.height,
			len = buf32.length;
		var dir = serpentine ? -1 : 1;
		for (var y = 0; y < height; y++) {
			if (serpentine)
				dir = dir * -1;
			var lni = y * width;
			for (var x = (dir == 1 ? 0 : width - 1), xend = (dir == 1 ? width : 0); x !== xend; x += dir) {
				var idx = lni + x,
					i32 = buf32[idx],
					r1 = (i32 & 0xff),
					g1 = (i32 & 0xff00) >> 8,
					b1 = (i32 & 0xff0000) >> 16;
				var i32x = this.nearestColor(i32),
					r2 = (i32x & 0xff),
					g2 = (i32x & 0xff00) >> 8,
					b2 = (i32x & 0xff0000) >> 16;
				buf32[idx] =
					(255 << 24)	|	
					(b2  << 16)	|	
					(g2  <<  8)	|	
					 r2;
				if (this.dithDelta) {
					var dist = this.colorDist([r1, g1, b1], [r2, g2, b2]);
					if (dist < this.dithDelta)
						continue;
				}
				var er = r1 - r2,
					eg = g1 - g2,
					eb = b1 - b2;
				for (var i = (dir == 1 ? 0 : ds.length - 1), end = (dir == 1 ? ds.length : 0); i !== end; i += dir) {
					var x1 = ds[i][1] * dir,
						y1 = ds[i][2];
					var lni2 = y1 * width;
					if (x1 + x >= 0 && x1 + x < width && y1 + y >= 0 && y1 + y < height) {
						var d = ds[i][0];
						var idx2 = idx + (lni2 + x1);
						var r3 = (buf32[idx2] & 0xff),
							g3 = (buf32[idx2] & 0xff00) >> 8,
							b3 = (buf32[idx2] & 0xff0000) >> 16;
						var r4 = Math.max(0, Math.min(255, r3 + er * d)),
							g4 = Math.max(0, Math.min(255, g3 + eg * d)),
							b4 = Math.max(0, Math.min(255, b3 + eb * d));
						buf32[idx2] =
							(255 << 24)	|	
							(b4  << 16)	|	
							(g4  <<  8)	|	
							 r4;			
					}
				}
			}
		}
		return buf32;
	};
	RgbQuant.prototype.buildPal = function buildPal(noSort) {
		if (this.palLocked || this.idxrgb.length > 0 && this.idxrgb.length <= this.colors) return;
		var histG  = this.histogram,
			sorted = sortedHashKeys(histG, true);
		if (sorted.length == 0)
			throw "Nothing has been sampled, palette cannot be built.";
		switch (this.method) {
			case 1:
				var cols = this.initColors,
					last = sorted[cols - 1],
					freq = histG[last];
				var idxi32 = sorted.slice(0, cols);
				var pos = cols, len = sorted.length;
				while (pos < len && histG[sorted[pos]] == freq)
					idxi32.push(sorted[pos++]);
				if (this.hueStats)
					this.hueStats.inject(idxi32);
				break;
			case 2:
				var idxi32 = sorted;
				break;
		}
		idxi32 = idxi32.map(function(v){return +v;});
		this.reducePal(idxi32);
		if (!noSort && this.reIndex)
			this.sortPal();
		if (this.useCache)
			this.cacheHistogram(idxi32);
		this.palLocked = true;
	};
	RgbQuant.prototype.palette = function palette(tuples, noSort) {
		this.buildPal(noSort);
		return tuples ? this.idxrgb : new Uint8Array((new Uint32Array(this.idxi32)).buffer);
	};
	RgbQuant.prototype.prunePal = function prunePal(keep) {
		var i32;
		for (var j = 0; j < this.idxrgb.length; j++) {
			if (!keep[j]) {
				i32 = this.idxi32[j];
				this.idxrgb[j] = null;
				this.idxi32[j] = null;
				delete this.i32idx[i32];
			}
		}
		if (this.reIndex) {
			var idxrgb = [],
				idxi32 = [],
				i32idx = {};
			for (var j = 0, i = 0; j < this.idxrgb.length; j++) {
				if (this.idxrgb[j]) {
					i32 = this.idxi32[j];
					idxrgb[i] = this.idxrgb[j];
					i32idx[i32] = i;
					idxi32[i] = i32;
					i++;
				}
			}
			this.idxrgb = idxrgb;
			this.idxi32 = idxi32;
			this.i32idx = i32idx;
		}
	};
	RgbQuant.prototype.reducePal = function reducePal(idxi32) {
		if (this.idxrgb.length > this.colors) {
			var len = idxi32.length, keep = {}, uniques = 0, idx, pruned = false;
			for (var i = 0; i < len; i++) {
				if (uniques == this.colors && !pruned) {
					this.prunePal(keep);
					pruned = true;
				}
				idx = this.nearestIndex(idxi32[i]);
				if (uniques < this.colors && !keep[idx]) {
					keep[idx] = true;
					uniques++;
				}
			}
			if (!pruned) {
				this.prunePal(keep);
				pruned = true;
			}
		}
		else {
			var idxrgb = idxi32.map(function(i32) {
				return [
					(i32 & 0xff),
					(i32 & 0xff00) >> 8,
					(i32 & 0xff0000) >> 16,
				];
			});
			var len = idxrgb.length,
				palLen = len,
				thold = this.initDist;
			if (palLen > this.colors) {
				while (palLen > this.colors) {
					var memDist = [];
					for (var i = 0; i < len; i++) {
						var pxi = idxrgb[i], i32i = idxi32[i];
						if (!pxi) continue;
						for (var j = i + 1; j < len; j++) {
							var pxj = idxrgb[j], i32j = idxi32[j];
							if (!pxj) continue;
							var dist = this.colorDist(pxi, pxj);
							if (dist < thold) {
								memDist.push([j, pxj, i32j, dist]);
								delete(idxrgb[j]);
								palLen--;
							}
						}
					}
					thold += (palLen > this.colors * 3) ? this.initDist : this.distIncr;
				}
				if (palLen < this.colors) {
					sort.call(memDist, function(a,b) {
						return b[3] - a[3];
					});
					var k = 0;
					while (palLen < this.colors) {
						idxrgb[memDist[k][0]] = memDist[k][1];
						palLen++;
						k++;
					}
				}
			}
			var len = idxrgb.length;
			for (var i = 0; i < len; i++) {
				if (!idxrgb[i]) continue;
				this.idxrgb.push(idxrgb[i]);
				this.idxi32.push(idxi32[i]);
				this.i32idx[idxi32[i]] = this.idxi32.length - 1;
				this.i32rgb[idxi32[i]] = idxrgb[i];
			}
		}
	};
	RgbQuant.prototype.colorStats1D = function colorStats1D(buf32) {
		var histG = this.histogram,
			num = 0, col,
			len = buf32.length;
		for (var i = 0; i < len; i++) {
			col = buf32[i];
			if ((col & 0xff000000) >> 24 == 0) continue;
			if (this.hueStats)
				this.hueStats.check(col);
			if (col in histG)
				histG[col]++;
			else
				histG[col] = 1;
		}
	};
	RgbQuant.prototype.colorStats2D = function colorStats2D(buf32, width) {
		var boxW = this.boxSize[0],
			boxH = this.boxSize[1],
			area = boxW * boxH,
			boxes = makeBoxes(width, buf32.length / width, boxW, boxH),
			histG = this.histogram,
			self = this;
		boxes.forEach(function(box) {
			var effc = Math.max(Math.round((box.w * box.h) / area) * self.boxPxls, 2),
				histL = {}, col;
			iterBox(box, width, function(i) {
				col = buf32[i];
				if ((col & 0xff000000) >> 24 == 0) return;
				if (self.hueStats)
					self.hueStats.check(col);
				if (col in histG)
					histG[col]++;
				else if (col in histL) {
					if (++histL[col] >= effc)
						histG[col] = histL[col];
				}
				else
					histL[col] = 1;
			});
		});
		if (this.hueStats)
			this.hueStats.inject(histG);
	};
	RgbQuant.prototype.sortPal = function sortPal() {
		var self = this;
		this.idxi32.sort(function(a,b) {
			var idxA = self.i32idx[a],
				idxB = self.i32idx[b],
				rgbA = self.idxrgb[idxA],
				rgbB = self.idxrgb[idxB];
			var hslA = rgb2hsl(rgbA[0],rgbA[1],rgbA[2]),
				hslB = rgb2hsl(rgbB[0],rgbB[1],rgbB[2]);
			var hueA = (rgbA[0] == rgbA[1] && rgbA[1] == rgbA[2]) ? -1 : hueGroup(hslA.h, self.hueGroups);
			var hueB = (rgbB[0] == rgbB[1] && rgbB[1] == rgbB[2]) ? -1 : hueGroup(hslB.h, self.hueGroups);
			var hueDiff = hueB - hueA;
			if (hueDiff) return -hueDiff;
			var lumDiff = lumGroup(+hslB.l.toFixed(2)) - lumGroup(+hslA.l.toFixed(2));
			if (lumDiff) return -lumDiff;
			var satDiff = satGroup(+hslB.s.toFixed(2)) - satGroup(+hslA.s.toFixed(2));
			if (satDiff) return -satDiff;
		});
		this.idxi32.forEach(function(i32, i) {
			self.idxrgb[i] = self.i32rgb[i32];
			self.i32idx[i32] = i;
		});
	};
	RgbQuant.prototype.nearestColor = function nearestColor(i32) {
		var idx = this.nearestIndex(i32);
		return idx === null ? 0 : this.idxi32[idx];
	};
	RgbQuant.prototype.nearestIndex = function nearestIndex(i32) {
		if ((i32 & 0xff000000) >> 24 == 0)
			return null;
		if (this.useCache && (""+i32) in this.i32idx)
			return this.i32idx[i32];
		var min = 1000,
			idx,
			rgb = [
				(i32 & 0xff),
				(i32 & 0xff00) >> 8,
				(i32 & 0xff0000) >> 16,
			],
			len = this.idxrgb.length;
		for (var i = 0; i < len; i++) {
			if (!this.idxrgb[i]) continue;		
			var dist = this.colorDist(rgb, this.idxrgb[i]);
			if (dist < min) {
				min = dist;
				idx = i;
			}
		}
		return idx;
	};
	RgbQuant.prototype.cacheHistogram = function cacheHistogram(idxi32) {
		for (var i = 0, i32 = idxi32[i]; i < idxi32.length && this.histogram[i32] >= this.cacheFreq; i32 = idxi32[i++])
			this.i32idx[i32] = this.nearestIndex(i32);
	};
	function HueStats(numGroups, minCols) {
		this.numGroups = numGroups;
		this.minCols = minCols;
		this.stats = {};
		for (var i = -1; i < numGroups; i++)
			this.stats[i] = {num: 0, cols: []};
		this.groupsFull = 0;
	}
	HueStats.prototype.check = function checkHue(i32) {
		if (this.groupsFull == this.numGroups + 1)
			this.check = function() {return;};
		var r = (i32 & 0xff),
			g = (i32 & 0xff00) >> 8,
			b = (i32 & 0xff0000) >> 16,
			hg = (r == g && g == b) ? -1 : hueGroup(rgb2hsl(r,g,b).h, this.numGroups),
			gr = this.stats[hg],
			min = this.minCols;
		gr.num++;
		if (gr.num > min)
			return;
		if (gr.num == min)
			this.groupsFull++;
		if (gr.num <= min)
			this.stats[hg].cols.push(i32);
	};
	HueStats.prototype.inject = function injectHues(histG) {
		for (var i = -1; i < this.numGroups; i++) {
			if (this.stats[i].num <= this.minCols) {
				switch (typeOf(histG)) {
					case "Array":
						this.stats[i].cols.forEach(function(col){
							if (histG.indexOf(col) == -1)
								histG.push(col);
						});
						break;
					case "Object":
						this.stats[i].cols.forEach(function(col){
							if (!histG[col])
								histG[col] = 1;
							else
								histG[col]++;
						});
						break;
				}
			}
		}
	};
	var Pr = .2126,
		Pg = .7152,
		Pb = .0722;
	function rgb2lum(r,g,b) {
		return Math.sqrt(
			Pr * r*r +
			Pg * g*g +
			Pb * b*b
		);
	}
	var rd = 255,
		gd = 255,
		bd = 255;
	var euclMax = Math.sqrt(Pr*rd*rd + Pg*gd*gd + Pb*bd*bd);
	function distEuclidean(rgb0, rgb1) {
		var rd = rgb1[0]-rgb0[0],
			gd = rgb1[1]-rgb0[1],
			bd = rgb1[2]-rgb0[2];
		return Math.sqrt(Pr*rd*rd + Pg*gd*gd + Pb*bd*bd) / euclMax;
	}
	var manhMax = Pr*rd + Pg*gd + Pb*bd;
	function distManhattan(rgb0, rgb1) {
		var rd = Math.abs(rgb1[0]-rgb0[0]),
			gd = Math.abs(rgb1[1]-rgb0[1]),
			bd = Math.abs(rgb1[2]-rgb0[2]);
		return (Pr*rd + Pg*gd + Pb*bd) / manhMax;
	}
	function rgb2hsl(r, g, b) {
		var max, min, h, s, l, d;
		r /= 255;
		g /= 255;
		b /= 255;
		max = Math.max(r, g, b);
		min = Math.min(r, g, b);
		l = (max + min) / 2;
		if (max == min) {
			h = s = 0;
		} else {
			d = max - min;
			s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
			switch (max) {
				case r: h = (g - b) / d + (g < b ? 6 : 0); break;
				case g:	h = (b - r) / d + 2; break;
				case b:	h = (r - g) / d + 4; break
			}
			h /= 6;
		}
		return {
			h: h,
			s: s,
			l: rgb2lum(r,g,b),
		};
	}
	function hueGroup(hue, segs) {
		var seg = 1/segs,
			haf = seg/2;
		if (hue >= 1 - haf || hue <= haf)
			return 0;
		for (var i = 1; i < segs; i++) {
			var mid = i*seg;
			if (hue >= mid - haf && hue <= mid + haf)
				return i;
		}
	}
	function satGroup(sat) {
		return sat;
	}
	function lumGroup(lum) {
		return lum;
	}
	function typeOf(val) {
		return Object.prototype.toString.call(val).slice(8,-1);
	}
	var sort = isArrSortStable() ? Array.prototype.sort : stableSort;
	function stableSort(fn) {
		var type = typeOf(this[0]);
		if (type == "Number" || type == "String") {
			var ord = {}, len = this.length, val;
			for (var i = 0; i < len; i++) {
				val = this[i];
				if (ord[val] || ord[val] === 0) continue;
				ord[val] = i;
			}
			return this.sort(function(a,b) {
				return fn(a,b) || ord[a] - ord[b];
			});
		}
		else {
			var ord = this.map(function(v){return v});
			return this.sort(function(a,b) {
				return fn(a,b) || ord.indexOf(a) - ord.indexOf(b);
			});
		}
	}
	function isArrSortStable() {
		var str = "abcdefghijklmnopqrstuvwxyz";
		return "xyzvwtursopqmnklhijfgdeabc" == str.split("").sort(function(a,b) {
			return ~~(str.indexOf(b)/2.3) - ~~(str.indexOf(a)/2.3);
		}).join("");
	}
	function getImageData(img, width) {
		var can, ctx, imgd, buf8, buf32, height;
		switch (typeOf(img)) {
			case "HTMLImageElement":
				can = document.createElement("canvas");
				can.width = img.naturalWidth;
				can.height = img.naturalHeight;
				ctx = can.getContext("2d");
				ctx.drawImage(img,0,0);
			case "Canvas":
			case "HTMLCanvasElement":
				can = can || img;
				ctx = ctx || can.getContext("2d");
			case "CanvasRenderingContext2D":
				ctx = ctx || img;
				can = can || ctx.canvas;
				imgd = ctx.getImageData(0, 0, can.width, can.height);
			case "ImageData":
				imgd = imgd || img;
				width = imgd.width;
				if (typeOf(imgd.data) == "CanvasPixelArray")
					buf8 = new Uint8Array(imgd.data);
				else
					buf8 = imgd.data;
			case "Array":
			case "CanvasPixelArray":
				buf8 = buf8 || new Uint8Array(img);
			case "Uint8Array":
			case "Uint8ClampedArray":
				buf8 = buf8 || img;
				buf32 = new Uint32Array(buf8.buffer);
			case "Uint32Array":
				buf32 = buf32 || img;
				buf8 = buf8 || new Uint8Array(buf32.buffer);
				width = width || buf32.length;
				height = buf32.length / width;
		}
		return {
			can: can,
			ctx: ctx,
			imgd: imgd,
			buf8: buf8,
			buf32: buf32,
			width: width,
			height: height,
		};
	}
	function makeBoxes(wid, hgt, w0, h0) {
		var wnum = ~~(wid/w0), wrem = wid%w0,
			hnum = ~~(hgt/h0), hrem = hgt%h0,
			xend = wid-wrem, yend = hgt-hrem;
		var bxs = [];
		for (var y = 0; y < hgt; y += h0)
			for (var x = 0; x < wid; x += w0)
				bxs.push({x:x, y:y, w:(x==xend?wrem:w0), h:(y==yend?hrem:h0)});
		return bxs;
	}
	function iterBox(bbox, wid, fn) {
		var b = bbox,
			i0 = b.y * wid + b.x,
			i1 = (b.y + b.h - 1) * wid + (b.x + b.w - 1),
			cnt = 0, incr = wid - b.w + 1, i = i0;
		do {
			fn.call(this, i);
			i += (++cnt % b.w == 0) ? incr : 1;
		} while (i <= i1);
	}
	function sortedHashKeys(obj, desc) {
		var keys = [];
		for (var key in obj)
			keys.push(key);
		return sort.call(keys, function(a,b) {
			return desc ? obj[b] - obj[a] : obj[a] - obj[b];
		});
	}
	this.RgbQuant = RgbQuant;
	if (typeof module !== 'undefined' && module.exports) {
		module.exports = RgbQuant;
	}
}).call(this);

H.color_utils = function() {
    var color_cut = function (specifier) {
        var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;
        while (i < n) colors[i] = "#" + specifier.slice(i * 6, ++i * 6);
        return colors;
    }
    var harmonize = function (color, degrees) {
        var ret = [], rgb, hsl, h, s, l, i, degree;
        rgb = H.hex_to_rgb(color);
        hsl = H.rgb_to_hsl(rgb);
        h = hsl.h;
        s = hsl.s;
        l = hsl.l;
        for (i = 0; i < degrees.length; i++) {
            degree = degrees[i];
            let c = { h: ((hsl.h + degree) % 360), s: s, l: l }
            let hsl_rgb = H.hsl_to_rgb( c )
            let rgb_hex = H.rgb_to_hex( hsl_rgb )
            ret.push(rgb_hex);
        }
        return ret;
    };
    var pad2 = function (c) {
        return c.length == 1 ? '0' + c : '' + c;
    }
    var ramp = function (range) {
        var n = range.length;
        return function(t) {
          return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
        };
    }
return {
    color_cut : color_cut,
    harmonize : harmonize,
    pad2 : pad2,
    ramp : ramp
}
}()
H.Comparator.cmp_reverse = function(a, b) {
    return (a < b || a == null) && b != null ? 1 :
      (a > b || b == null) && a != null ? -1 :
      ((b = b instanceof Date ? +b : b),
       (a = a instanceof Date ? +a : a)) !== a && b === b ? 1 :
      b !== b && a === a ? -1 : 0;
};
H.Comparator.cmp = function(a, b) {
    return (a < b || a == null) && b != null ? -1 :
      (a > b || b == null) && a != null ? 1 :
      ((b = b instanceof Date ? +b : b),
       (a = a instanceof Date ? +a : a)) !== a && b === b ? -1 :
      b !== b && a === a ? 1 : 0;
};
H.Comparator.is_between = function (v, a, b) {
    return H.Number.in_range(v, a, b);
}
H.Comparator.is_equal = function (a, b) {
    return a === b;
}
H.Comparator.is_greater_than_equal = function (a, b) {
    return a === b;
}
H.Comparator.is_greater_than = function (a, b) {
    return a > b;
}
H.Comparator.is_less_than_equal = function (a, b) {
    return a <= b;
}
H.Comparator.is_less_than = function (a, b) {
    return a < b;
}
H.Comparator.is_not_equal = function (a, b) {
    return a != b;
}

'use strict';
H.Condition.if_else = function( bool, x, y ) {
	if ( bool ) {
		return x;
	}
	return y;
}

'use strict';
H.Condition.if_then = function( bool, x, y ) {
    const isFunction = H.Assert.is_function;
	if ( !isFunction( x ) ) {
		throw new TypeError( 'invalid argument. Second argument must be a function. Value: `'+x+'`.' );
	}
	if ( !isFunction( y ) ) {
		throw new TypeError( 'invalid argument. Third argument must be a function. Value: `'+y+'`.' );
	}
	if ( bool ) {
		return x();
	}
	return y();
}

"use strict";
H.Condition.try_catch = function(x, y) {
  const isFunction = H.Assert.is_function;
  if (!isFunction(x)) {
    throw new TypeError(
      "invalid argument. First argument must be a function. Value: `" + x + "`."
    );
  }
  try {
    return x();
  } catch (error) {
    return y;
  }
};


H.Convert.degrees_to_radian = function (deg) {
    return deg / H.Convert.degrees;
}
H.Convert.degrees = 180 / Math.PI;
H.Convert.radian_to_degrees = function  (rad) {
    return rad * H.Convert.degrees;
}
H.Dist.additive_symmetric = function (a, b) {
  var i = 0;
  var ii = a.length;
  var d = 0;
  for (; i < ii; i++) {
    d += ((a[i] - b[i]) * (a[i] - b[i]) * (a[i] + b[i])) / (a[i] * b[i]);
  }
  return d;
}

H.Dist.avg = function(a, b) {
  var ii = a.length;
  var max = 0;
  var ans = 0;
  var aux = 0;
  for (var i = 0; i < ii; i++) {
    aux = Math.abs(a[i] - b[i]);
    ans += aux;
    if (max < aux) {
      max = aux;
    }
  }
  return (max + ans) / 2;
}

H.Dist.bhattacharyya = function (a, b) {
  var ii = a.length;
  var ans = 0;
  for (var i = 0; i < ii; i++) {
    ans += Math.sqrt(a[i] * b[i]);
  }
  return -Math.log(ans);
}

H.Dist.canberra = function (a, b) {
  var ii = a.length;
  var ans = 0;
  for (var i = 0; i < ii; i++) {
    ans += Math.abs(a[i] - b[i]) / (a[i] + b[i]);
  }
  return ans;
}

H.Dist.chebyshev = function(a, b) {
  var ii = a.length;
  var max = 0;
  var aux = 0;
  for (var i = 0; i < ii; i++) {
    aux = Math.abs(a[i] - b[i]);
    if (max < aux) {
      max = aux;
    }
  }
  return max;
}

H.Dist.clark = function (a, b) {
  var d = 0;
  for (let i = 0; i < a.length; i++) {
    d +=
      (Math.abs(a[i] - b[i]) / ((a[i] + b[i]))) ** 2;
  }
  return Math.sqrt(d);
}

H.Dist.dice = function(a, b) {
  let a2 = 0;
  let b2 = 0;
  let prod2 = 0;
  for (let i = 0; i < a.length; i++) {
    a2 += a[i] * a[i];
    b2 += b[i] * b[i];
    prod2 += (a[i] - b[i]) * (a[i] - b[i]);
  }
  return prod2 / (a2 + b2);
}

H.Dist.divergence = function (a, b) {
  var i = 0;
  var ii = a.length;
  var d = 0;
  for (; i < ii; i++) {
    d += ((a[i] - b[i]) * (a[i] - b[i])) / ((a[i] + b[i]) * (a[i] + b[i]));
  }
  return 2 * d;
}


H.Dist.euclidean = function(p, q) {
    function squaredEuclidean(p, q) {
        let d = 0;
        for (let i = 0; i < p.length; i++) {
            d += (p[i] - q[i]) * (p[i] - q[i]);
        }
        return d;
    }
    return Math.sqrt(squaredEuclidean(p, q));
}
H.Dist.fidelity = function (a, b) {
  var ii = a.length;
  var ans = 0;
  for (var i = 0; i < ii; i++) {
    ans += Math.sqrt(a[i] * b[i]);
  }
  return ans;
}

H.Dist.gower = function (a, b) {
  var ii = a.length;
  var ans = 0;
  for (var i = 0; i < ii; i++) {
    ans += Math.abs(a[i] - b[i]);
  }
  return ans / ii;
}

H.Dist.harmonic_mean =  function (a, b) {
  var ii = a.length;
  var ans = 0;
  for (var i = 0; i < ii; i++) {
    ans += (a[i] * b[i]) / (a[i] + b[i]);
  }
  return 2 * ans;
}

H.Dist.hellinger = function (a, b) {
  var ii = a.length;
  var ans = 0;
  for (var i = 0; i < ii; i++) {
    ans += Math.sqrt(a[i] * b[i]);
  }
  return 2 * Math.sqrt(1 - ans);
}

H.Dist.inner_product = function (a, b) {
  var ii = a.length;
  var ans = 0;
  for (var i = 0; i < ii; i++) {
    ans += a[i] * b[i];
  }
  return ans;
}

H.Dist.intersection = function (a, b) {
  var ii = a.length;
  var ans = 0;
  for (var i = 0; i < ii; i++) {
    ans += Math.min(a[i], b[i]);
  }
  return 1 - ans;
}

H.Dist.jeffreys = function (a, b) {
  var ii = a.length;
  var ans = 0;
  for (var i = 0; i < ii; i++) {
    ans += (a[i] - b[i]) * Math.log(a[i] / b[i]);
  }
  return ans;
}

H.Dist.jensen_difference = function (a, b) {
  var ii = a.length;
  var ans = 0;
  for (var i = 0; i < ii; i++) {
    ans +=
      (a[i] * Math.log(a[i]) + b[i] * Math.log(b[i])) / 2 -
      ((a[i] + b[i]) / 2) * Math.log((a[i] + b[i]) / 2);
  }
  return ans;
}

H.Dist.jensen_shannon = function (a, b) {
  var ii = a.length;
  var p = 0;
  var q = 0;
  for (var i = 0; i < ii; i++) {
    p += a[i] * Math.log((2 * a[i]) / (a[i] + b[i]));
    q += b[i] * Math.log((2 * b[i]) / (a[i] + b[i]));
  }
  return (p + q) / 2;
}

H.Dist.kdivergence = function (a, b) {
  var ii = a.length;
  var ans = 0;
  for (var i = 0; i < ii; i++) {
    ans += a[i] * Math.log((2 * a[i]) / (a[i] + b[i]));
  }
  return ans;
}

H.Dist.kulczynski = function (a, b) {
  var ii = a.length;
  var up = 0;
  var down = 0;
  for (var i = 0; i < ii; i++) {
    up += Math.abs(a[i] - b[i]);
    down += Math.min(a[i], b[i]);
  }
  return up / down;
}

H.Dist.kullback_leibler = function (a, b) {
  var ii = a.length;
  var ans = 0;
  for (var i = 0; i < ii; i++) {
    ans += a[i] * Math.log(a[i] / b[i]);
  }
  return ans;
}

H.Dist.kumar_johnson = function (a, b) {
  var ii = a.length;
  var ans = 0;
  for (var i = 0; i < ii; i++) {
    ans +=
      Math.pow(a[i] * a[i] - b[i] * b[i], 2) / (2 * Math.pow(a[i] * b[i], 1.5));
  }
  return ans;
}

H.Dist.lorentzian = function (a, b) {
  var ii = a.length;
  var ans = 0;
  for (var i = 0; i < ii; i++) {
    ans += Math.log(Math.abs(a[i] - b[i]) + 1);
  }
  return ans;
}

H.Dist.manhattan = function (a, b) {
  var i = 0;
  var ii = a.length;
  var d = 0;
  for (; i < ii; i++) {
    d += Math.abs(a[i] - b[i]);
  }
  return d;
}

H.Dist.matusita = function (a, b) {
  var ii = a.length;
  var ans = 0;
  for (var i = 0; i < ii; i++) {
    ans += Math.sqrt(a[i] * b[i]);
  }
  return Math.sqrt(2 - 2 * ans);
}

H.Dist.minkowski = function (a, b, p) {
  var i = 0;
  var ii = a.length;
  var d = 0;
  for (; i < ii; i++) {
    d += Math.pow(Math.abs(a[i] - b[i]), p);
  }
  return Math.pow(d, 1 / p);
}

H.Dist.motyka = function (a, b) {
  var ii = a.length;
  var up = 0;
  var down = 0;
  for (var i = 0; i < ii; i++) {
    up += Math.min(a[i], b[i]);
    down += a[i] + b[i];
  }
  return 1 - up / down;
}

H.Dist.neyman = function (a, b) {
  var i = 0;
  var ii = a.length;
  var d = 0;
  for (; i < ii; i++) {
    d += ((a[i] - b[i]) * (a[i] - b[i])) / a[i];
  }
  return d;
}

H.Dist.pearson = function (a, b) {
  var i = 0;
  var ii = a.length;
  var d = 0;
  for (; i < ii; i++) {
    d += ((a[i] - b[i]) * (a[i] - b[i])) / b[i];
  }
  return d;
}

H.Dist.probabilistic_symmetric = function (a, b) {
  var i = 0;
  var ii = a.length;
  var d = 0;
  for (; i < ii; i++) {
    d += ((a[i] - b[i]) * (a[i] - b[i])) / (a[i] + b[i]);
  }
  return 2 * d;
}

H.Dist.ruzicka = function (a, b) {
  var ii = a.length;
  var up = 0;
  var down = 0;
  for (var i = 0; i < ii; i++) {
    up += Math.min(a[i], b[i]);
    down += Math.max(a[i], b[i]);
  }
  return up / down;
}

H.Dist.soergel = function (a, b) {
  var ii = a.length;
  var up = 0;
  var down = 0;
  for (var i = 0; i < ii; i++) {
    up += Math.abs(a[i] - b[i]);
    down += Math.max(a[i], b[i]);
  }
  return up / down;
}

H.Dist.sorensen = function (a, b) {
  var ii = a.length;
  var up = 0;
  var down = 0;
  for (var i = 0; i < ii; i++) {
    up += Math.abs(a[i] - b[i]);
    down += a[i] + b[i];
  }
  return up / down;
}

H.Dist.squared_chord = function (a, b) {
  var ii = a.length;
  var ans = 0;
  for (var i = 0; i < ii; i++) {
    ans +=
      (Math.sqrt(a[i]) - Math.sqrt(b[i])) ** 2;
  }
  return ans;
}

H.Dist.squared = function (a, b) {
  var i = 0;
  var ii = a.length;
  var d = 0;
  for (; i < ii; i++) {
    d += ((a[i] - b[i]) * (a[i] - b[i])) / (a[i] + b[i]);
  }
  return d;
}

H.Dist.taneja = function (a, b) {
  var ii = a.length;
  var ans = 0;
  for (var i = 0; i < ii; i++) {
    ans +=
      ((a[i] + b[i]) / 2) *
      Math.log((a[i] + b[i]) / (2 * Math.sqrt(a[i] * b[i])));
  }
  return ans;
}

H.Dist.topsoe = function (a, b) {
  var ii = a.length;
  var ans = 0;
  for (var i = 0; i < ii; i++) {
    ans +=
      a[i] * Math.log((2 * a[i]) / (a[i] + b[i])) +
      b[i] * Math.log((2 * b[i]) / (a[i] + b[i]));
  }
  return ans;
}

H.Dist.wave_hedges = function (a, b) {
  var ii = a.length;
  var ans = 0;
  for (var i = 0; i < ii; i++) {
    ans += 1 - Math.min(a[i], b[i]) / Math.max(a[i], b[i]);
  }
  return ans;
}

"use strict";
H.Log = function() {
  var info_msg = function(msg) {
    console.info(msg);
  };
  var error_msg = function(msg) {
    console.error(msg);
  };
  var warn_msg = function(msg) {
    console.warn(msg);
  };
  return {
    info_msg: info_msg,
    error_msg: error_msg,
    warn_msg: warn_msg
  };
}();
"use strict";
H.ErrorMsg = function() {
    var collection_column = function(caller, collection, column) {
        if (!H.Assert.is_array(collection))
        throw new Error( caller + ': collection is not an array' );
        if (!H.Assert.is_object(collection[0]))
        throw new Error( caller + ': collection does not have valid object' );
        if (!collection.length > 0)
        throw new Error( caller + ': collection input appears empty' );
        const col_cols = H.Profile.list_keys(collection);
        if (!H.Assert.is_string(column))
        throw new Error( caller + ': column ' + column + ' input should be a string' );
        if (!H.Validate.is_in(column, col_cols))
        throw new Error( caller + ': column ' + column + ' is not found in collection' );
    }
    var fmap = function(caller, fmap, fields) {
        if (!H.Assert.is_object(fmap))
        throw new Error( caller + ': fmap is not a valid object' );
        let fmap_keys = Object.keys(fmap);
        for ( var f = 0; f < fields.length; f++ ) {
            if (!H.Validate.is_in( fields[f], fmap_keys ))
                throw new Error( caller + ': ' + fields[f] + ' column is not found in fmap' );
            if (H.Assert.is_undef(fmap[fields[f]]) || H.Assert.is_empty(fmap[fields[f]]))
                throw new Error( caller + ': ' + fields[f] + ' column is not defined in fmap' );
        }
    }
    var fmap_collection = function(caller, fmap, collection) {
        const fmap_keys = Object.keys(fmap);
        const col_cols = H.Profile.list_keys(collection);
        var coll_key_set = new Set(col_cols);
        for ( var f = 0; f < fmap_keys.length; f++ ) {
            if (!coll_key_set.has(fmap[fmap_keys[f]]))
                throw new Error( caller + ': ' + fmap[fmap_keys[f]] + ' column is not found in collection' );
        }
    }
    var vspec = function( caller, vspec, mandatory ) {
        const vspec_keys = Object.keys(vspec);
        let intersection = H.Array.intersection(vspec_keys, mandatory);
        if(intersection.length != vspec.keys.length) {
            let diff = H.Array.difference(intersection, mandatory)
            throw new Error( caller + ': ' + ' missing mandatory vspec parameter: ' + diff );
        }
    }
return {
    collection_column : collection_column,
    fmap : fmap,
    fmap_collection : fmap_collection,
    vspec : vspec
}
}();

'use strict';
function compose() {
	const isFunction = H.Assert.is_function;
	var nFuncs;
	var f;
	var i;
	nFuncs = arguments.length;
	if ( nFuncs < 2 ) {
		throw new Error( 'insufficient input arguments. Must provide multiple functions to compose.' );
	}
	f = new Array( nFuncs );
	for ( i = 0; i < nFuncs; i++ ) {
		f[ i ] = arguments[ i ];
		if ( !isFunction( f[ i ] ) ) {
			throw new TypeError( 'invalid argument. All arguments must be functions. Value: `'+f[ i ]+'`.' );
		}
	}
	return composite;
	function composite() {
		var args;
		var i;
		args = new Array( arguments.length );
		for ( i = 0; i < args.length; i++ ) {
			args[ i ] = arguments[ i ];
		}
		args = f[ nFuncs-1 ].apply( null, args );
		for ( i = nFuncs-2; i >= 0; i-- ) {
			args = f[ i ]( args );
		}
		return args;
	}
}


H.Func.curry = function  (fn) {
    return (function resolver (...resolverArgs) {
      return (...args) => {
        const nextArgs = resolverArgs.concat(args.length ? args : null)
        const next = (nextArgs.length >= fn.length)
        ? fn
        : resolver
        return next(...nextArgs)
      }
    })()
}

H.Func.debounce = function(fn, threshold, isAsap) {
  var timeout, result;
  function debounced() {
    var args = arguments,
      context = this;
    function delayed() {
      if (!isAsap) {
        result = fn.apply(context, args);
      }
      timeout = null;
    }
    if (timeout) {
      clearTimeout(timeout);
    } else if (isAsap) {
      result = fn.apply(context, args);
    }
    timeout = setTimeout(delayed, threshold);
    return result;
  }
  debounced.cancel = function() {
    clearTimeout(timeout);
  };
  return debounced;
};




'use strict';
function funseq() {
	const isFunction = H.Assert.is_function;
	var nFuncs;
	var f;
	var i;
	nFuncs = arguments.length;
	if ( nFuncs < 2 ) {
		throw new Error( 'insufficient input arguments. Must provide multiple functions to execute sequentially.' );
	}
	f = new Array( nFuncs );
	for ( i = 0; i < nFuncs; i++ ) {
		f[ i ] = arguments[ i ];
		if ( !isFunction( f[ i ] ) ) {
			throw new TypeError( 'invalid argument. All arguments must be functions. Value: `'+f[ i ]+'`.' );
		}
	}
	return pipeline;
	function pipeline() {
		var args;
		var i;
		args = new Array( arguments.length );
		for ( i = 0; i < args.length; i++ ) {
			args[ i ] = arguments[ i ];
		}
		args = f[ 0 ].apply( null, args );
		for ( i = 1; i < nFuncs; i++ ) {
			args = f[ i ]( args );
		}
		return args;
	}
}

H.Func.fn_series = function() {
  var fns = arguments;
  return function() {
    var i = 0,
      n = fns.length;
    while (i < n) {
      fns[i].apply(this, arguments);
      i += 1;
    }
  };
};


    H.Func.identity = function (val){
        return val;
    }

H.Func.make_iterator = function(src, thisObj) {
  const identity = H.Func.identity;
  const deepMatches = H.Obj.deep_match;
  const prop = H.Obj.prop;
  if (src == null) {
    return identity;
  }
  switch (typeof src) {
    case "function":
      return typeof thisObj !== "undefined"
        ? function(val, i, arr) {
            return src.call(thisObj, val, i, arr);
          }
        : src;
    case "object":
      return function(val) {
        return deepMatches(val, src);
      };
    case "string":
    case "number":
      return prop(src);
  }
};

H.Func.named_func = function(name, f) {
    const FNAME = '__name__';
    return (f[FNAME] = name, f);
}

'use strict';
H.Func.noop = function() {
}


H.Func.run = function (val, ...args) {
    if (val instanceof Function)
        return val(...args);
    return val;
}

H.Func.throttle = function(fn, delay) {
  const now = H.Utils.now;
  var context,
    timeout,
    result,
    args,
    diff,
    prevCall = 0;
  function delayed() {
    prevCall = now();
    timeout = null;
    result = fn.apply(context, args);
  }
  function throttled() {
    context = this;
    args = arguments;
    diff = delay - (now() - prevCall);
    if (diff <= 0) {
      clearTimeout(timeout);
      delayed();
    } else if (!timeout) {
      timeout = setTimeout(delayed, diff);
    }
    return result;
  }
  throttled.cancel = function() {
    clearTimeout(timeout);
  };
  return throttled;
};


H.Geometry.angle_reflect = function (incidenceAngle, surfaceAngle){
  const a = surfaceAngle * 2 - incidenceAngle;
  return a >= 360 ? a - 360 : a < 0 ? a + 360 : a;
}

H.Geometry.angle_to_degrees = function (angle){
  return angle * 180 / Math.PI;
}

H.Geometry.angle_to_radians = function (angle){
  return angle / 180 * Math.PI;
}

H.Geometry.close_polygon = function(polygon) {
    const isClosed = H.Geometry.is_closed;
    return isClosed(polygon) ? polygon : [...polygon, polygon[0]];
}

H.Geometry.cross_product = function (a, b, o){
    return (a[0] - o[0]) * (b[1] - o[1]) - (a[1] - o[1]) * (b[0] - o[0]);
}


H.Geometry.interpose = function(xmin, xmax, predict) {
  const angle = H.Geometry.line_angle;
  const midpoint = H.Geometry.line_midpoint;
  const l = (Math.log(xmax - xmin) * Math.LOG10E + 1) | 0;
  const precision = 1 * Math.pow(10, -l / 2 - 1),
    maxIter = 1e4;
  let points = [px(xmin), px(xmax)],
    iter = 0;
  while (find(points) && iter < maxIter);
  return points;
  function px(x) {
    return [x, predict(x)];
  }
  function find(points) {
    iter++;
    const n = points.length;
    let found = false;
    for (let i = 0; i < n - 1; i++) {
      const p0 = points[i],
        p1 = points[i + 1],
        m = midpoint([p0, p1]),
        mp = px(m[0]),
        a0 = angle([p0, m]),
        a1 = angle([p0, mp]),
        a = Math.abs(a0 - a1);
      if (a > precision) {
        points.splice(i + 1, 0, mp);
        found = true;
      }
    }
    return found;
  }
};


H.Geometry.is_closed = function (polygon){
    return polygon[0] === polygon[polygon.length - 1];
}

H.Geometry.line_angle = function(line){
    return Math.atan2(line[1][1] - line[0][1], line[1][0] - line[0][0]) * 180 / Math.PI;
}


H.Geometry.line_interpolate = function (line) {
  const lineAngle = H.Geometry.line_angle;
  const lineLength = H.Geometry.line_length;
  const pointTranslate = H.Geometry.point_translate;
  return t => t === 0 ? line[0] : t === 1 ? line[1] : pointTranslate(line[0], lineAngle(line), lineLength(line) * t);
}

H.Geometry.line_intersects_line = function (lineA, lineB) {
    let a = lineA[0][0],
        b = lineA[0][1],
        c = lineA[1][0],
        d = lineA[1][1],
        p = lineB[0][0],
        q = lineB[0][1],
        r = lineB[1][0],
        s = lineB[1][1],
        det, gamma, lambda;
    det = (c - a) * (s - q) - (r - p) * (d - b);
    if (det === 0) {
      return false;
    } else {
      lambda = ((s - q) * (r - a) + (p - r) * (s - b)) / det;
      gamma = ((b - d) * (r - a) + (c - a) * (s - b)) / det;
      return (0 < lambda && lambda < 1) && (0 < gamma && gamma < 1);
    }
  }

H.Geometry.line_intersects_polygon = function (line, polygon) {
    const close = H.Geometry.close;
    const lineIntersectsLine = H.Geometry.line_intersects_line;
    const pointOnLine = H.Geometry.point_on_line;
  let intersects = false;
  const closed = close(polygon);
  for (let i = 0, l = closed.length - 1; i < l; i++){
    const v0 = closed[i],
          v1 = closed[i + 1];
    if (lineIntersectsLine(line, [v0, v1]) || (pointOnLine(v0, line) && pointOnLine(v1, line))){
      intersects = true;
      break;
    }
  }
  return intersects;
}

H.Geometry.line_length = function(line) {
    return Math.sqrt(Math.pow(line[1][0] - line[0][0], 2) + Math.pow(line[1][1] - line[0][1], 2));
}

H.Geometry.line_midpoint = function (line) {
    return [(line[0][0] + line[1][0]) / 2, (line[0][1] + line[1][1]) / 2];
}



H.Geometry.point_in_polygon = function (point, polygon) {
    let x = point[0],
        y = point[1],
        inside = false;
    for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {
      const xi = polygon[i][0], yi = polygon[i][1],
            xj = polygon[j][0], yj = polygon[j][1];
      if (((yi > y) != (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi)) { inside = !inside; }
    }
    return inside;
}

H.Geometry.point_left_of_line = function (point, line) {
    const cross = H.Geometry.cross_product;
    const topPointFirst = H.Geometry.top_point_first;
    const t = topPointFirst(line);
    return cross(point, t[1], t[0]) < 0;
  }

H.Geometry.point_on_line = function (point, line){
    const lineLength = H.Geometry.line_length;
    const pointWithLine = H.Geometry.point_with_line;
  const l = lineLength(line);
  return pointWithLine(point, line) && lineLength([line[0], point]) <= l && lineLength([line[1], point]) <= l;
}


H.Geometry.point_on_polygon = function (point, polygon){
  const close = H.Geometry.close_polygon;
  const pointOnLine = H.Geometry.point_on_line;
  let on = false;
  const closed = close(polygon);
  for (let i = 0, l = closed.length - 1; i < l; i++){
    if (pointOnLine(point, [closed[i], closed[i + 1]])){
      on = true;
      break;
    }
  }
  return on;
}

H.Geometry.point_right_of_line = function (point, line){
    const cross = H.Geometry.cross_product;
    const topPointFirst = H.Geometry.top_point_first;
    const t = topPointFirst(line);
    return cross(point, t[1], t[0]) > 0;
  }

H.Geometry.point_rotate = function (point, angle, origin){
  const angleToRadians = H.Geometry.angle_to_radians;
  const r = angleToRadians(angle);
  if (!origin || (origin[0] === 0 && origin[1] === 0)){
    return rotate(point, r);
  }
  else {
    const p0 = point.map((c, i) => c - origin[i]);
    const rotated = rotate(p0, r);
    return rotated.map((c, i) => c + origin[i]);
  }
  function rotate(point, angle){
    return [(point[0] * Math.cos(angle)) - point[1] * Math.sin(angle), (point[0] * Math.sin(angle)) + point[1] * Math.cos(angle)];
  }
}

H.Geometry.point_translate = function (point, angle, distance) {
  const angleToRadians = H.Geometry.angle_to_radians;
  const r = angleToRadians(angle);
  return [point[0] + distance * Math.cos(r), point[1] + distance * Math.sin(r)];
}

H.Geometry.point_with_line = function (point, line){
    const cross = H.Geometry.cross_product;
    return cross(point, line[0], line[1]) === 0;
}

H.Geometry.polygon_area = function (vertices, signed = false){
  let a = 0;
  for (let i = 0, l = vertices.length; i < l; i++) {
    const v0 = vertices[i],
          v1 = vertices[i === l - 1 ? 0 : i + 1];
    a += v0[0] * v1[1];
    a -= v1[0] * v0[1];
  }
  return signed ? a / 2 : Math.abs(a / 2);
}

H.Geometry.polygon_bounds = function (polygon){
  if (polygon.length < 3){
    return null;
  }
  let xMin = Infinity,
      xMax = -Infinity,
      yMin = Infinity,
      yMax = -Infinity,
      found = false;
  for (let i = 0, l = polygon.length; i < l; i++){
    const p = polygon[i],
          x = p[0],
          y = p[1];
    if (x != null && isFinite(x) && y != null && isFinite(y)){
      found = true;
      if (x < xMin) xMin = x;
      if (x > xMax) xMax = x;
      if (y < yMin) yMin = y;
      if (y > yMax) yMax = y;      
    }
  }
  return found ? [[xMin, yMin], [xMax, yMax]] : null;
}

H.Geometry.polygon_centroid = function (vertices) {
    let a = 0, x = 0, y = 0, l = vertices.length;
    for (let i = 0; i < l; i++) {
      const s = i === l - 1 ? 0 : i + 1,
            v0 = vertices[i],
            v1 = vertices[s],
            f = (v0[0] * v1[1]) - (v1[0] * v0[1]);
      a += f;
      x += (v0[0] + v1[0]) * f;
      y += (v0[1] + v1[1]) * f;
    }
    const d = a * 3;
    return [x / d, y / d];
}

H.Geometry.polygon_hull = function (points) {
  const cross = H.Geometry.cross_product;
  if (points.length < 3) { return null; }
  const pointsCopy = points.slice().sort((a, b) => a[0] === b[0] ? a[1] - b[1] : a[0] - b[0]);
  let lower = [];
  for (let i0 = 0; i0 < pointsCopy.length; i0++) {
    while (lower.length >= 2 && cross(lower[lower.length - 2], lower[lower.length - 1], pointsCopy[i0]) <= 0) {
       lower.pop();
    }
    lower.push(pointsCopy[i0]);
  }
  let upper = [];
  for (let i1 = pointsCopy.length - 1; i1 >= 0; i1--) {
    while (upper.length >= 2 && cross(upper[upper.length - 2], upper[upper.length - 1], pointsCopy[i1]) <= 0) {
       upper.pop();
    }
    upper.push(pointsCopy[i1]);
  }
  upper.pop();
  lower.pop();
  return lower.concat(upper);
}

H.Geometry.polygon_in_polygon = function(polygonA, polygonB) {
    const close = H.Geometry.close;
    const lineIntersectsPolygon = H.Geometry.line_intersects_polygon;
    const pointInPolygon = H.Geometry.point_in_polygon;
  let inside = true;
  const closed = close(polygonA);
  for (let i = 0, l = closed.length - 1; i < l; i++){
    const v0 = closed[i];
    if (!pointInPolygon(v0, polygonB)){
      inside = false;
      break;
    }
    if (lineIntersectsPolygon([v0, closed[i + 1]], polygonB)){
      inside = false;
      break;
    }
  }
  return inside;
}

H.Geometry.polygon_intersects_polygon = function (polygonA, polygonB) {
const close = H.Geometry.close;
const lineIntersectsPolygon = H.Geometry.line_intersects_polygon;
const pointOnPolygon = H.Geometry.point_in_polygon;
  let intersects = false,
      onCount = 0;
  const closed = close(polygonA);
  for (let i = 0, l = closed.length - 1; i < l; i++){
    const v0 = closed[i],
          v1 = closed[i + 1];
    if (lineIntersectsPolygon([v0, v1], polygonB)){
      intersects = true;
      break;
    }
    if (pointOnPolygon(v0, polygonB)){
      ++onCount;
    }
    if (onCount === 2){
      intersects = true;
      break;
    }
  }
  return intersects;
}

H.Geometry.polygon_length = function (vertices){
  if (vertices.length === 0) {
    return 0;
  }
  let i = -1,
      n = vertices.length,
      b = vertices[n - 1],
      xa,
      ya,
      xb = b[0],
      yb = b[1],
      perimeter = 0;
  while (++i < n) {
    xa = xb;
    ya = yb;
    b = vertices[i];
    xb = b[0];
    yb = b[1];
    xa -= xb;
    ya -= yb;
    perimeter += Math.sqrt(xa * xa + ya * ya);
  }
  return perimeter;
}

H.Geometry.polygon_mean = function(vertices) {
    let x = 0, y = 0, l = vertices.length;
    for (let i = 0; i < l; i++) {
      const v = vertices[i];        
      x += v[0];
      y += v[1];
    }
    return [x / l, y / l];
}

H.Geometry.polygon_regular = function (sides = 3, area = 100, center){ 
  const lineAngle = H.Geometry.line_angle;
  const lineLength = H.Geometry.line_length;
  const pointTranslate = H.Geometry.point_translate;
  const polygonTranslate = H.Geometry.polygon_translate;
  let polygon = [],
      point = [0, 0],
      sum = [0, 0],
      angle = 0;
  for (let i = 0; i < sides; i++){
    polygon[i] = point;
    sum[0] += point[0];
    sum[1] += point[1];
    point = pointTranslate(point, angle, Math.sqrt((4 * area) * Math.tan(Math.PI / sides) / sides)); 
    angle -= 360 / sides;
  }
  if (center){
    const line = [[sum[0] / sides, sum[1] / sides], center]
    polygon = polygonTranslate(polygon, lineAngle(line), lineLength(line));    
  }
  return polygon;
}

H.Geometry.polygon_rotate = function (polygon, angle, origin){
  const pointRotate = H.Geometry.point_rotate
  let p = [];
  for (let i = 0, l = polygon.length; i < l; i++){
    p[i] = pointRotate(polygon[i], angle, origin);
  }
  return p;
}

H.Geometry.polygon_scale = function (polygon, scale, origin){
  const lineAngle = H.Geometry.line_angle;
  const lineLength = H.Geometry.line_length;
  const pointTranslate = H.Geometry.point_translate;
  const polygonCentroid = H.Geometry.polygon_centroid;
  if (!origin){
    origin = polygonCentroid(polygon);
  }
  let p = [];
  for (let i = 0, l = polygon.length; i < l; i++){
    const v = polygon[i],
          d = lineLength([origin, v]),
          a = lineAngle([origin, v]);
    p[i] = pointTranslate(origin, a, d * scale);
  }
  return p;
}

H.Geometry.polygon_translate = function (polygon, angle, distance){
  const pointTranslate = H.Geometry.point_translate;
  let p = [];
  for (let i = 0, l = polygon.length; i < l; i++){
    p[i] = pointTranslate(polygon[i], angle, distance);
  }
  return p;
}

H.Geometry.top_point_first = function (line){
    return line[1][1] > line[0][1] ? line : [line[1], line[0]];
  }

H.Hash.murmurhash3 = function(seed, data) {
  function mul32(a, b) {
    return (
      ((a & 0xffff) * b + ((((a >>> 16) * b) & 0xffff) << 16)) & 0xffffffff
    );
  }
  function sum32(a, b) {
    return (
      ((a & 0xffff) + (b >>> 16) + ((((a >>> 16) + b) & 0xffff) << 16)) &
      0xffffffff
    );
  }
  function rotl32(a, b) {
    return (a << b) | (a >>> (32 - b));
  }
  var c1 = 0xcc9e2d51,
    c2 = 0x1b873593,
    r1 = 15,
    r2 = 13,
    m = 5,
    n = 0x6b64e654;
  var hash = seed,
    k1,
    i,
    l;
  for (i = 0, l = data.length - 4; i <= l; i += 4) {
    k1 =
      data[i] | (data[i + 1] << 8) | (data[i + 2] << 16) | (data[i + 3] << 24);
    k1 = mul32(k1, c1);
    k1 = rotl32(k1, r1);
    k1 = mul32(k1, c2);
    hash ^= k1;
    hash = rotl32(hash, r2);
    hash = mul32(hash, m);
    hash = sum32(hash, n);
  }
  k1 = 0;
  switch (data.length & 3) {
    case 3:
      k1 ^= data[i + 2] << 16;
    case 2:
      k1 ^= data[i + 1] << 8;
    case 1:
      k1 ^= data[i];
      k1 = mul32(k1, c1);
      k1 = rotl32(k1, r1);
      k1 = mul32(k1, c2);
      hash ^= k1;
    default:
  }
  hash ^= data.length;
  hash ^= hash >>> 16;
  hash = mul32(hash, 0x85ebca6b);
  hash ^= hash >>> 13;
  hash = mul32(hash, 0xc2b2ae35);
  hash ^= hash >>> 16;
  return hash >>> 0;
};


H.String.str_hash = function(str) {
  let hash = 5381;
  let i = str.length;
  while (i) {
    hash = (hash << 5) + hash + str.charCodeAt(--i);
  }
  return hash >>> 0; 
};


H.Interpolation.bezier = function(a, b, t, c1, c2) {
    var tSquared = t * t;
    var invT = 1.0 - t;
    var invTSquared = invT * invT;
    return (
      a * invTSquared * invT +
      3 * (c1 * (b - a) + a) * t * invTSquared +
      3 * (c2 * (b - a) + b) * tSquared * invT +
      b * tSquared * t
    );
};

H.Interpolation.circular = function(a, b, f, isFlipped) {
    if (!!isFlipped) {
      return a - (b - a) * (Math.sqrt(1 - f * f) - 1);
    } else {
      f = 1 - f;
      return a + (b - a) * Math.sqrt(1 - f * f);
    }
};

H.Interpolation.cosine = function(a, b, f) {
    return b + (a - b) * (0.5 + 0.5 * Math.cos(f * Math.PI));
};


H.Interpolation.cubic_bezier = function() {
    "use strict";
    var abs = Math.abs,
      min = Math.min,
      max = Math.max,
      cos = Math.cos,
      sin = Math.sin,
      acos = Math.acos,
      sqrt = Math.sqrt,
      pi = Math.PI,
      ZERO = { x: 0, y: 0, z: 0 };
    var utils = H.Interpolation.utils;
    var PolyBezier = H.Interpolation.poly_bezier;
    var Bezier = function(coords) {
      var args = coords && coords.forEach ? coords : [].slice.call(arguments);
      var coordlen = false;
      if (typeof args[0] === "object") {
        coordlen = args.length;
        var newargs = [];
        args.forEach(function(point) {
          ["x", "y", "z"].forEach(function(d) {
            if (typeof point[d] !== "undefined") {
              newargs.push(point[d]);
            }
          });
        });
        args = newargs;
      }
      var higher = false;
      var len = args.length;
      if (coordlen) {
        if (coordlen > 4) {
          if (arguments.length !== 1) {
            throw new Error(
              "Only new Bezier(point[]) is accepted for 4th and higher order curves"
            );
          }
          higher = true;
        }
      } else {
        if (len !== 6 && len !== 8 && len !== 9 && len !== 12) {
          if (arguments.length !== 1) {
            throw new Error(
              "Only new Bezier(point[]) is accepted for 4th and higher order curves"
            );
          }
        }
      }
      var _3d =
        (!higher && (len === 9 || len === 12)) ||
        (coords && coords[0] && typeof coords[0].z !== "undefined");
      this._3d = _3d;
      var points = [];
      for (var idx = 0, step = _3d ? 3 : 2; idx < len; idx += step) {
        var point = {
          x: args[idx],
          y: args[idx + 1]
        };
        if (_3d) {
          point.z = args[idx + 2];
        }
        points.push(point);
      }
      this.order = points.length - 1;
      this.points = points;
      var dims = ["x", "y"];
      if (_3d) dims.push("z");
      this.dims = dims;
      this.dimlen = dims.length;
      (function(curve) {
        var order = curve.order;
        var points = curve.points;
        var a = utils.align(points, { p1: points[0], p2: points[order] });
        for (var i = 0; i < a.length; i++) {
          if (abs(a[i].y) > 0.0001) {
            curve._linear = false;
            return;
          }
        }
        curve._linear = true;
      })(this);
      this._t1 = 0;
      this._t2 = 1;
      this.update();
    };
    function getABC(n, S, B, E, t) {
      if (typeof t === "undefined") {
        t = 0.5;
      }
      var u = utils.projectionratio(t, n),
        um = 1 - u,
        C = {
          x: u * S.x + um * E.x,
          y: u * S.y + um * E.y
        },
        s = utils.abcratio(t, n),
        A = {
          x: B.x + (B.x - C.x) / s,
          y: B.y + (B.y - C.y) / s
        };
      return { A: A, B: B, C: C };
    }
    Bezier.quadraticFromPoints = function(p1, p2, p3, t) {
      if (typeof t === "undefined") {
        t = 0.5;
      }
      if (t === 0) {
        return new Bezier(p2, p2, p3);
      }
      if (t === 1) {
        return new Bezier(p1, p2, p2);
      }
      var abc = getABC(2, p1, p2, p3, t);
      return new Bezier(p1, abc.A, p3);
    };
    Bezier.cubicFromPoints = function(S, B, E, t, d1) {
      if (typeof t === "undefined") {
        t = 0.5;
      }
      var abc = getABC(3, S, B, E, t);
      if (typeof d1 === "undefined") {
        d1 = utils.dist(B, abc.C);
      }
      var d2 = d1 * (1 - t) / t;
      var selen = utils.dist(S, E),
        lx = (E.x - S.x) / selen,
        ly = (E.y - S.y) / selen,
        bx1 = d1 * lx,
        by1 = d1 * ly,
        bx2 = d2 * lx,
        by2 = d2 * ly;
      var e1 = { x: B.x - bx1, y: B.y - by1 },
        e2 = { x: B.x + bx2, y: B.y + by2 },
        A = abc.A,
        v1 = { x: A.x + (e1.x - A.x) / (1 - t), y: A.y + (e1.y - A.y) / (1 - t) },
        v2 = { x: A.x + (e2.x - A.x) / t, y: A.y + (e2.y - A.y) / t },
        nc1 = { x: S.x + (v1.x - S.x) / t, y: S.y + (v1.y - S.y) / t },
        nc2 = {
          x: E.x + (v2.x - E.x) / (1 - t),
          y: E.y + (v2.y - E.y) / (1 - t)
        };
      return new Bezier(S, nc1, nc2, E);
    };
    var getUtils = function() {
      return utils;
    };
    Bezier.getUtils = getUtils;
    Bezier.PolyBezier = PolyBezier;
    Bezier.prototype = {
      getUtils: getUtils,
      valueOf: function() {
        return this.toString();
      },
      toString: function() {
        return utils.pointsToString(this.points);
      },
      toSVG: function(relative) {
        if (this._3d) return false;
        var p = this.points,
          x = p[0].x,
          y = p[0].y,
          s = ["M", x, y, this.order === 2 ? "Q" : "C"];
        for (var i = 1, last = p.length; i < last; i++) {
          s.push(p[i].x);
          s.push(p[i].y);
        }
        return s.join(" ");
      },
      setRatios: function(ratios) {
        if (ratios.length !== this.points.length) {
          throw new Error("incorrect number of ratio values");
        }
        this.ratios = ratios;
        this._lut = []; 
      },
      update: function() {
        this._lut = [];
        this.dpoints = utils.derive(this.points, this._3d);
        this.computedirection();
      },
      computedirection: function() {
        var points = this.points;
        var angle = utils.angle(points[0], points[this.order], points[1]);
        this.clockwise = angle > 0;
      },
      length: function() {
        return utils.length(this.derivative.bind(this));
      },
      _lut: [],
      getLUT: function(steps) {
        steps = steps || 100;
        if (this._lut.length === steps) {
          return this._lut;
        }
        this._lut = [];
        steps--;
        for (var t = 0; t <= steps; t++) {
          this._lut.push(this.compute(t / steps));
        }
        return this._lut;
      },
      on: function(point, error) {
        error = error || 5;
        var lut = this.getLUT(),
          hits = [],
          c,
          t = 0;
        for (var i = 0; i < lut.length; i++) {
          c = lut[i];
          if (utils.dist(c, point) < error) {
            hits.push(c);
            t += i / lut.length;
          }
        }
        if (!hits.length) return false;
        return (t /= hits.length);
      },
      project: function(point) {
        var LUT = this.getLUT(),
          l = LUT.length - 1,
          closest = utils.closest(LUT, point),
          mdist = closest.mdist,
          mpos = closest.mpos;
        var ft,
          t,
          p,
          d,
          t1 = (mpos - 1) / l,
          t2 = (mpos + 1) / l,
          step = 0.1 / l;
        mdist += 1;
        for (t = t1, ft = t; t < t2 + step; t += step) {
          p = this.compute(t);
          d = utils.dist(point, p);
          if (d < mdist) {
            mdist = d;
            ft = t;
          }
        }
        p = this.compute(ft);
        p.t = ft;
        p.d = mdist;
        return p;
      },
      get: function(t) {
        return this.compute(t);
      },
      point: function(idx) {
        return this.points[idx];
      },
      compute: function(t) {
        if (this.ratios) return utils.computeWithRatios(t, this.points, this.ratios, this._3d);
        return utils.compute(t, this.points, this._3d, this.ratios);
      },
      raise: function() {
        var p = this.points,
          np = [p[0]],
          i,
          k = p.length,
          pi,
          pim;
        for (var i = 1; i < k; i++) {
          pi = p[i];
          pim = p[i - 1];
          np[i] = {
            x: (k - i) / k * pi.x + i / k * pim.x,
            y: (k - i) / k * pi.y + i / k * pim.y
          };
        }
        np[k] = p[k - 1];
        return new Bezier(np);
      },
      derivative: function(t) {
        var mt = 1 - t,
          a,
          b,
          c = 0,
          p = this.dpoints[0];
        if (this.order === 2) {
          p = [p[0], p[1], ZERO];
          a = mt;
          b = t;
        }
        if (this.order === 3) {
          a = mt * mt;
          b = mt * t * 2;
          c = t * t;
        }
        var ret = {
          x: a * p[0].x + b * p[1].x + c * p[2].x,
          y: a * p[0].y + b * p[1].y + c * p[2].y
        };
        if (this._3d) {
          ret.z = a * p[0].z + b * p[1].z + c * p[2].z;
        }
        return ret;
      },
      curvature: function(t) {
        return utils.curvature(t, this.points, this._3d);
      },
      inflections: function() {
        return utils.inflections(this.points);
      },
      normal: function(t) {
        return this._3d ? this.__normal3(t) : this.__normal2(t);
      },
      __normal2: function(t) {
        var d = this.derivative(t);
        var q = sqrt(d.x * d.x + d.y * d.y);
        return { x: -d.y / q, y: d.x / q };
      },
      __normal3: function(t) {
        var r1 = this.derivative(t),
          r2 = this.derivative(t + 0.01),
          q1 = sqrt(r1.x * r1.x + r1.y * r1.y + r1.z * r1.z),
          q2 = sqrt(r2.x * r2.x + r2.y * r2.y + r2.z * r2.z);
        r1.x /= q1;
        r1.y /= q1;
        r1.z /= q1;
        r2.x /= q2;
        r2.y /= q2;
        r2.z /= q2;
        var c = {
          x: r2.y * r1.z - r2.z * r1.y,
          y: r2.z * r1.x - r2.x * r1.z,
          z: r2.x * r1.y - r2.y * r1.x
        };
        var m = sqrt(c.x * c.x + c.y * c.y + c.z * c.z);
        c.x /= m;
        c.y /= m;
        c.z /= m;
        var R = [
          c.x * c.x,
          c.x * c.y - c.z,
          c.x * c.z + c.y,
          c.x * c.y + c.z,
          c.y * c.y,
          c.y * c.z - c.x,
          c.x * c.z - c.y,
          c.y * c.z + c.x,
          c.z * c.z
        ];
        var n = {
          x: R[0] * r1.x + R[1] * r1.y + R[2] * r1.z,
          y: R[3] * r1.x + R[4] * r1.y + R[5] * r1.z,
          z: R[6] * r1.x + R[7] * r1.y + R[8] * r1.z
        };
        return n;
      },
      hull: function(t) {
        var p = this.points,
          _p = [],
          pt,
          q = [],
          idx = 0,
          i = 0,
          l = 0;
        q[idx++] = p[0];
        q[idx++] = p[1];
        q[idx++] = p[2];
        if (this.order === 3) {
          q[idx++] = p[3];
        }
        while (p.length > 1) {
          _p = [];
          for (i = 0, l = p.length - 1; i < l; i++) {
            pt = utils.lerp(t, p[i], p[i + 1]);
            q[idx++] = pt;
            _p.push(pt);
          }
          p = _p;
        }
        return q;
      },
      split: function(t1, t2) {
        if (t1 === 0 && !!t2) {
          return this.split(t2).left;
        }
        if (t2 === 1) {
          return this.split(t1).right;
        }
        var q = this.hull(t1);
        var result = {
          left:
            this.order === 2
              ? new Bezier([q[0], q[3], q[5]])
              : new Bezier([q[0], q[4], q[7], q[9]]),
          right:
            this.order === 2
              ? new Bezier([q[5], q[4], q[2]])
              : new Bezier([q[9], q[8], q[6], q[3]]),
          span: q
        };
        result.left._t1 = utils.map(0, 0, 1, this._t1, this._t2);
        result.left._t2 = utils.map(t1, 0, 1, this._t1, this._t2);
        result.right._t1 = utils.map(t1, 0, 1, this._t1, this._t2);
        result.right._t2 = utils.map(1, 0, 1, this._t1, this._t2);
        if (!t2) {
          return result;
        }
        t2 = utils.map(t2, t1, 1, 0, 1);
        var subsplit = result.right.split(t2);
        return subsplit.left;
      },
      extrema: function() {
        var dims = this.dims,
          result = {},
          roots = [],
          p,
          mfn;
        dims.forEach(
          function(dim) {
            mfn = function(v) {
              return v[dim];
            };
            p = this.dpoints[0].map(mfn);
            result[dim] = utils.droots(p);
            if (this.order === 3) {
              p = this.dpoints[1].map(mfn);
              result[dim] = result[dim].concat(utils.droots(p));
            }
            result[dim] = result[dim].filter(function(t) {
              return t >= 0 && t <= 1;
            });
            roots = roots.concat(result[dim].sort(utils.numberSort));
          }.bind(this)
        );
        roots = roots.sort(utils.numberSort).filter(function(v, idx) {
          return roots.indexOf(v) === idx;
        });
        result.values = roots;
        return result;
      },
      bbox: function() {
        var extrema = this.extrema(),
          result = {};
        this.dims.forEach(
          function(d) {
            result[d] = utils.getminmax(this, d, extrema[d]);
          }.bind(this)
        );
        return result;
      },
      overlaps: function(curve) {
        var lbbox = this.bbox(),
          tbbox = curve.bbox();
        return utils.bboxoverlap(lbbox, tbbox);
      },
      offset: function(t, d) {
        if (typeof d !== "undefined") {
          var c = this.get(t);
          var n = this.normal(t);
          var ret = {
            c: c,
            n: n,
            x: c.x + n.x * d,
            y: c.y + n.y * d
          };
          if (this._3d) {
            ret.z = c.z + n.z * d;
          }
          return ret;
        }
        if (this._linear) {
          var nv = this.normal(0);
          var coords = this.points.map(function(p) {
            var ret = {
              x: p.x + t * nv.x,
              y: p.y + t * nv.y
            };
            if (p.z && n.z) {
              ret.z = p.z + t * nv.z;
            }
            return ret;
          });
          return [new Bezier(coords)];
        }
        var reduced = this.reduce();
        return reduced.map(function(s) {
          if (s._linear) {
            return s.offset(t)[0];
          }
          return s.scale(t);
        });
      },
      simple: function() {
        if (this.order === 3) {
          var a1 = utils.angle(this.points[0], this.points[3], this.points[1]);
          var a2 = utils.angle(this.points[0], this.points[3], this.points[2]);
          if ((a1 > 0 && a2 < 0) || (a1 < 0 && a2 > 0)) return false;
        }
        var n1 = this.normal(0);
        var n2 = this.normal(1);
        var s = n1.x * n2.x + n1.y * n2.y;
        if (this._3d) {
          s += n1.z * n2.z;
        }
        var angle = abs(acos(s));
        return angle < pi / 3;
      },
      reduce: function() {
        var i,
          t1 = 0,
          t2 = 0,
          step = 0.01,
          segment,
          pass1 = [],
          pass2 = [];
        var extrema = this.extrema().values;
        if (extrema.indexOf(0) === -1) {
          extrema = [0].concat(extrema);
        }
        if (extrema.indexOf(1) === -1) {
          extrema.push(1);
        }
        for (t1 = extrema[0], i = 1; i < extrema.length; i++) {
          t2 = extrema[i];
          segment = this.split(t1, t2);
          segment._t1 = t1;
          segment._t2 = t2;
          pass1.push(segment);
          t1 = t2;
        }
        pass1.forEach(function(p1) {
          t1 = 0;
          t2 = 0;
          while (t2 <= 1) {
            for (t2 = t1 + step; t2 <= 1 + step; t2 += step) {
              segment = p1.split(t1, t2);
              if (!segment.simple()) {
                t2 -= step;
                if (abs(t1 - t2) < step) {
                  return [];
                }
                segment = p1.split(t1, t2);
                segment._t1 = utils.map(t1, 0, 1, p1._t1, p1._t2);
                segment._t2 = utils.map(t2, 0, 1, p1._t1, p1._t2);
                pass2.push(segment);
                t1 = t2;
                break;
              }
            }
          }
          if (t1 < 1) {
            segment = p1.split(t1, 1);
            segment._t1 = utils.map(t1, 0, 1, p1._t1, p1._t2);
            segment._t2 = p1._t2;
            pass2.push(segment);
          }
        });
        return pass2;
      },
      scale: function(d) {
        var order = this.order;
        var distanceFn = false;
        if (typeof d === "function") {
          distanceFn = d;
        }
        if (distanceFn && order === 2) {
          return this.raise().scale(distanceFn);
        }
        var clockwise = this.clockwise;
        var r1 = distanceFn ? distanceFn(0) : d;
        var r2 = distanceFn ? distanceFn(1) : d;
        var v = [this.offset(0, 10), this.offset(1, 10)];
        var o = utils.lli4(v[0], v[0].c, v[1], v[1].c);
        if (!o) {
          throw new Error("cannot scale this curve. Try reducing it first.");
        }
        var points = this.points,
          np = [];
        [0, 1].forEach(
          function(t) {
            var p = (np[t * order] = utils.copy(points[t * order]));
            p.x += (t ? r2 : r1) * v[t].n.x;
            p.y += (t ? r2 : r1) * v[t].n.y;
          }.bind(this)
        );
        if (!distanceFn) {
          [0, 1].forEach(
            function(t) {
              if (this.order === 2 && !!t) return;
              var p = np[t * order];
              var d = this.derivative(t);
              var p2 = { x: p.x + d.x, y: p.y + d.y };
              np[t + 1] = utils.lli4(p, p2, o, points[t + 1]);
            }.bind(this)
          );
          return new Bezier(np);
        }
        [0, 1].forEach(
          function(t) {
            if (this.order === 2 && !!t) return;
            var p = points[t + 1];
            var ov = {
              x: p.x - o.x,
              y: p.y - o.y
            };
            var rc = distanceFn ? distanceFn((t + 1) / order) : d;
            if (distanceFn && !clockwise) rc = -rc;
            var m = sqrt(ov.x * ov.x + ov.y * ov.y);
            ov.x /= m;
            ov.y /= m;
            np[t + 1] = {
              x: p.x + rc * ov.x,
              y: p.y + rc * ov.y
            };
          }.bind(this)
        );
        return new Bezier(np);
      },
      outline: function(d1, d2, d3, d4) {
        d2 = typeof d2 === "undefined" ? d1 : d2;
        var reduced = this.reduce(),
          len = reduced.length,
          fcurves = [],
          bcurves = [],
          p,
          alen = 0,
          tlen = this.length();
        var graduated = typeof d3 !== "undefined" && typeof d4 !== "undefined";
        function linearDistanceFunction(s, e, tlen, alen, slen) {
          return function(v) {
            var f1 = alen / tlen,
              f2 = (alen + slen) / tlen,
              d = e - s;
            return utils.map(v, 0, 1, s + f1 * d, s + f2 * d);
          };
        }
        reduced.forEach(function(segment) {
          slen = segment.length();
          if (graduated) {
            fcurves.push(
              segment.scale(linearDistanceFunction(d1, d3, tlen, alen, slen))
            );
            bcurves.push(
              segment.scale(linearDistanceFunction(-d2, -d4, tlen, alen, slen))
            );
          } else {
            fcurves.push(segment.scale(d1));
            bcurves.push(segment.scale(-d2));
          }
          alen += slen;
        });
        bcurves = bcurves
          .map(function(s) {
            p = s.points;
            if (p[3]) {
              s.points = [p[3], p[2], p[1], p[0]];
            } else {
              s.points = [p[2], p[1], p[0]];
            }
            return s;
          })
          .reverse();
        var fs = fcurves[0].points[0],
          fe = fcurves[len - 1].points[fcurves[len - 1].points.length - 1],
          bs = bcurves[len - 1].points[bcurves[len - 1].points.length - 1],
          be = bcurves[0].points[0],
          ls = utils.makeline(bs, fs),
          le = utils.makeline(fe, be),
          segments = [ls]
            .concat(fcurves)
            .concat([le])
            .concat(bcurves),
          slen = segments.length;
        return new PolyBezier(segments);
      },
      outlineshapes: function(d1, d2, curveIntersectionThreshold) {
        d2 = d2 || d1;
        var outline = this.outline(d1, d2).curves;
        var shapes = [];
        for (var i = 1, len = outline.length; i < len / 2; i++) {
          var shape = utils.makeshape(
            outline[i],
            outline[len - i],
            curveIntersectionThreshold
          );
          shape.startcap.virtual = i > 1;
          shape.endcap.virtual = i < len / 2 - 1;
          shapes.push(shape);
        }
        return shapes;
      },
      intersects: function(curve, curveIntersectionThreshold) {
        if (!curve) return this.selfintersects(curveIntersectionThreshold);
        if (curve.p1 && curve.p2) {
          return this.lineIntersects(curve);
        }
        if (curve instanceof Bezier) {
          curve = curve.reduce();
        }
        return this.curveintersects(
          this.reduce(),
          curve,
          curveIntersectionThreshold
        );
      },
      lineIntersects: function(line) {
        var mx = min(line.p1.x, line.p2.x),
          my = min(line.p1.y, line.p2.y),
          MX = max(line.p1.x, line.p2.x),
          MY = max(line.p1.y, line.p2.y),
          self = this;
        return utils.roots(this.points, line).filter(function(t) {
          var p = self.get(t);
          return utils.between(p.x, mx, MX) && utils.between(p.y, my, MY);
        });
      },
      selfintersects: function(curveIntersectionThreshold) {
        var reduced = this.reduce();
        var i,
          len = reduced.length - 2,
          results = [],
          result,
          left,
          right;
        for (i = 0; i < len; i++) {
          left = reduced.slice(i, i + 1);
          right = reduced.slice(i + 2);
          result = this.curveintersects(left, right, curveIntersectionThreshold);
          results = results.concat(result);
        }
        return results;
      },
      curveintersects: function(c1, c2, curveIntersectionThreshold) {
        var pairs = [];
        c1.forEach(function(l) {
          c2.forEach(function(r) {
            if (l.overlaps(r)) {
              pairs.push({ left: l, right: r });
            }
          });
        });
        var intersections = [];
        pairs.forEach(function(pair) {
          var result = utils.pairiteration(
            pair.left,
            pair.right,
            curveIntersectionThreshold
          );
          if (result.length > 0) {
            intersections = intersections.concat(result);
          }
        });
        return intersections;
      },
      arcs: function(errorThreshold) {
        errorThreshold = errorThreshold || 0.5;
        var circles = [];
        return this._iterate(errorThreshold, circles);
      },
      _error: function(pc, np1, s, e) {
        var q = (e - s) / 4,
          c1 = this.get(s + q),
          c2 = this.get(e - q),
          ref = utils.dist(pc, np1),
          d1 = utils.dist(pc, c1),
          d2 = utils.dist(pc, c2);
        return abs(d1 - ref) + abs(d2 - ref);
      },
      _iterate: function(errorThreshold, circles) {
        var t_s = 0,
          t_e = 1,
          safety;
        do {
          safety = 0;
          t_e = 1;
          var np1 = this.get(t_s),
            np2,
            np3,
            arc,
            prev_arc;
          var curr_good = false,
            prev_good = false,
            done;
          var t_m = t_e,
            prev_e = 1,
            step = 0;
          do {
            prev_good = curr_good;
            prev_arc = arc;
            t_m = (t_s + t_e) / 2;
            step++;
            np2 = this.get(t_m);
            np3 = this.get(t_e);
            arc = utils.getccenter(np1, np2, np3);
            arc.interval = {
              start: t_s,
              end: t_e
            };
            var error = this._error(arc, np1, t_s, t_e);
            curr_good = error <= errorThreshold;
            done = prev_good && !curr_good;
            if (!done) prev_e = t_e;
            if (curr_good) {
              if (t_e >= 1) {
                arc.interval.end = prev_e = 1;
                prev_arc = arc;
                if (t_e > 1) {
                  var d = {
                    x: arc.x + arc.r * cos(arc.e),
                    y: arc.y + arc.r * sin(arc.e)
                  };
                  arc.e += utils.angle({ x: arc.x, y: arc.y }, d, this.get(1));
                }
                break;
              }
              t_e = t_e + (t_e - t_s) / 2;
            } else {
              t_e = t_m;
            }
          } while (!done && safety++ < 100);
          if (safety >= 100) {
            break;
          }
          prev_arc = prev_arc ? prev_arc : arc;
          circles.push(prev_arc);
          t_s = prev_e;
        } while (t_e < 1);
        return circles;
      }
    };
    return {
      Bezier : Bezier
    }
}();
H.Interpolation.decimated = function(steps, strategy, a, b, f) {
  const LinearInterpolation = H.Interpolation.linear;
  this.numSteps = steps;
  this.strategy = strategy || new LinearInterpolation();
  var fd = Math.floor(f * this.numSteps) / this.numSteps;
  return this.strategy.interpolate(a, b, fd);
}

H.Interpolation.exponential = function(a, b, f, exponent) {
    exponent = exp === undefined ? 2 : exp;
    return a + (b - a) * Math.pow(f, exponent);
};
H.Interpolation.lerp = function (v0, v1, t) {
    return v0*(1-t)+v1*t
}
H.Interpolation.linear = function(a, b, f) {
  return a + (b - a) * f;
};

H.Interpolation.poly_bezier = function() {
    "use strict";
    var utils = H.Interpolation.utils;
    var PolyBezier = function(curves) {
      this.curves = [];
      this._3d = false;
      if (!!curves) {
        this.curves = curves;
        this._3d = this.curves[0]._3d;
      }
    };
    PolyBezier.prototype = {
      valueOf: function() {
        return this.toString();
      },
      toString: function() {
        return (
          "[" +
          this.curves
            .map(function(curve) {
              return utils.pointsToString(curve.points);
            })
            .join(", ") +
          "]"
        );
      },
      addCurve: function(curve) {
        this.curves.push(curve);
        this._3d = this._3d || curve._3d;
      },
      length: function() {
        return this.curves
          .map(function(v) {
            return v.length();
          })
          .reduce(function(a, b) {
            return a + b;
          });
      },
      curve: function(idx) {
        return this.curves[idx];
      },
      bbox: function() {
        var c = this.curves;
        var bbox = c[0].bbox();
        for (var i = 1; i < c.length; i++) {
          utils.expandbox(bbox, c[i].bbox());
        }
        return bbox;
      },
      offset: function(d) {
        var offset = [];
        this.curves.forEach(function(v) {
          offset = offset.concat(v.offset(d));
        });
        return new PolyBezier(offset);
      }
    };
    return {
        PolyBezier : PolyBezier
    }
  }()
H.Interpolation.sigmoid = function(a, b, f, sharpness) {
  sharpness = sharpness || 2.0;
  let sharpPremult = 5 * sharpness;
  f = (f * 2 - 1) * sharpness;
  f = 1.0 / (1.0 + Math.exp(-f));
  return a + (b - a) * f;
};

H.Interpolation.smooth_step = function(min, max, value) {
  var x = Math.max(0, Math.min(1, (value - min) / (max - min)));
  return x * x * (3 - 2 * x);
};

H.Interpolation.threshold = function(a, b, f, threshold) {
    return f < threshold ? a : b;
}
H.Interpolation.utils = function() {
    "use strict";
    var abs = Math.abs,
      cos = Math.cos,
      sin = Math.sin,
      acos = Math.acos,
      atan2 = Math.atan2,
      sqrt = Math.sqrt,
      pow = Math.pow,
      crt = function(v) {
        return v < 0 ? -pow(-v, 1 / 3) : pow(v, 1 / 3);
      },
      pi = Math.PI,
      tau = 2 * pi,
      quart = pi / 2,
      epsilon = 0.000001,
      nMax = Number.MAX_SAFE_INTEGER || 9007199254740991,
      nMin = Number.MIN_SAFE_INTEGER || -9007199254740991,
      ZERO = { x: 0, y: 0, z: 0 };
    var utils = {
      Tvalues: [
        -0.0640568928626056260850430826247450385909,
        0.0640568928626056260850430826247450385909,
        -0.1911188674736163091586398207570696318404,
        0.1911188674736163091586398207570696318404,
        -0.3150426796961633743867932913198102407864,
        0.3150426796961633743867932913198102407864,
        -0.4337935076260451384870842319133497124524,
        0.4337935076260451384870842319133497124524,
        -0.5454214713888395356583756172183723700107,
        0.5454214713888395356583756172183723700107,
        -0.6480936519369755692524957869107476266696,
        0.6480936519369755692524957869107476266696,
        -0.7401241915785543642438281030999784255232,
        0.7401241915785543642438281030999784255232,
        -0.8200019859739029219539498726697452080761,
        0.8200019859739029219539498726697452080761,
        -0.8864155270044010342131543419821967550873,
        0.8864155270044010342131543419821967550873,
        -0.9382745520027327585236490017087214496548,
        0.9382745520027327585236490017087214496548,
        -0.9747285559713094981983919930081690617411,
        0.9747285559713094981983919930081690617411,
        -0.9951872199970213601799974097007368118745,
        0.9951872199970213601799974097007368118745
      ],
      Cvalues: [
        0.1279381953467521569740561652246953718517,
        0.1279381953467521569740561652246953718517,
        0.1258374563468282961213753825111836887264,
        0.1258374563468282961213753825111836887264,
        0.121670472927803391204463153476262425607,
        0.121670472927803391204463153476262425607,
        0.1155056680537256013533444839067835598622,
        0.1155056680537256013533444839067835598622,
        0.1074442701159656347825773424466062227946,
        0.1074442701159656347825773424466062227946,
        0.0976186521041138882698806644642471544279,
        0.0976186521041138882698806644642471544279,
        0.086190161531953275917185202983742667185,
        0.086190161531953275917185202983742667185,
        0.0733464814110803057340336152531165181193,
        0.0733464814110803057340336152531165181193,
        0.0592985849154367807463677585001085845412,
        0.0592985849154367807463677585001085845412,
        0.0442774388174198061686027482113382288593,
        0.0442774388174198061686027482113382288593,
        0.0285313886289336631813078159518782864491,
        0.0285313886289336631813078159518782864491,
        0.0123412297999871995468056670700372915759,
        0.0123412297999871995468056670700372915759
      ],
      arcfn: function(t, derivativeFn) {
        var d = derivativeFn(t);
        var l = d.x * d.x + d.y * d.y;
        if (typeof d.z !== "undefined") {
          l += d.z * d.z;
        }
        return sqrt(l);
      },
      compute: function(t, points, _3d) {
        if (t === 0) {
          return points[0];
        }
        var order = points.length-1;
        if (t === 1) {
          return points[order];
        }
        var p = points;
        var mt = 1 - t;
        if (order === 0) {
          return points[0];
        }
        if (order === 1) {
          ret = {
            x: mt * p[0].x + t * p[1].x,
            y: mt * p[0].y + t * p[1].y
          };
          if (_3d) {
            ret.z = mt * p[0].z + t * p[1].z;
          }
          return ret;
        }
        if (order < 4) {
          var mt2 = mt * mt,
            t2 = t * t,
            a,
            b,
            c,
            d = 0;
          if (order === 2) {
            p = [p[0], p[1], p[2], ZERO];
            a = mt2;
            b = mt * t * 2;
            c = t2;
          } else if (order === 3) {
            a = mt2 * mt;
            b = mt2 * t * 3;
            c = mt * t2 * 3;
            d = t * t2;
          }
          var ret = {
            x: a * p[0].x + b * p[1].x + c * p[2].x + d * p[3].x,
            y: a * p[0].y + b * p[1].y + c * p[2].y + d * p[3].y
          };
          if (_3d) {
            ret.z = a * p[0].z + b * p[1].z + c * p[2].z + d * p[3].z;
          }
          return ret;
        }
        var dCpts = JSON.parse(JSON.stringify(points));
        while (dCpts.length > 1) {
          for (var i = 0; i < dCpts.length - 1; i++) {
            dCpts[i] = {
              x: dCpts[i].x + (dCpts[i + 1].x - dCpts[i].x) * t,
              y: dCpts[i].y + (dCpts[i + 1].y - dCpts[i].y) * t
            };
            if (typeof dCpts[i].z !== "undefined") {
              dCpts[i] = dCpts[i].z + (dCpts[i + 1].z - dCpts[i].z) * t;
            }
          }
          dCpts.splice(dCpts.length - 1, 1);
        }
        return dCpts[0];
      },
      computeWithRatios: function (t, points, ratios, _3d) {
        var mt = 1 - t, r = ratios, p = points, d;
        var f1 = r[0], f2 = r[1], f3 = r[2], f4 = r[3];
        f1 *= mt;
        f2 *= t;
        if (p.length === 2) {
          d = f1 + f2;
          return {
            x: (f1 * p[0].x + f2 * p[1].x)/d,
            y: (f1 * p[0].y + f2 * p[1].y)/d,
            z: !_3d ? false : (f1 * p[0].z + f2 * p[1].z)/d
          };
        }
        f1 *= mt;
        f2 *= 2 * mt;
        f3 *= t * t;
        if (p.length === 3) {
          d = f1 + f2 + f3;
          return {
            x: (f1 * p[0].x + f2 * p[1].x + f3 * p[2].x)/d,
            y: (f1 * p[0].y + f2 * p[1].y + f3 * p[2].y)/d,
            z: !_3d ? false : (f1 * p[0].z + f2 * p[1].z + f3 * p[2].z)/d
          };
        }
        f1 *= mt;
        f2 *= 1.5 * mt;
        f3 *= 3 * mt;
        f4 *= t * t * t;
        if (p.length === 4) {
          d = f1 + f2 + f3 + f4;
          return {
            x: (f1 * p[0].x + f2 * p[1].x + f3 * p[2].x + f4 * p[3].x)/d,
            y: (f1 * p[0].y + f2 * p[1].y + f3 * p[2].y + f4 * p[3].y)/d,
            z: !_3d ? false : (f1 * p[0].z + f2 * p[1].z + f3 * p[2].z + f4 * p[3].z)/d
          };
        }
      },
      derive: function (points, _3d) {
        var dpoints = [];
        for (var p = points, d = p.length, c = d - 1; d > 1; d--, c--) {
          var list = [];
          for (var j = 0, dpt; j < c; j++) {
            dpt = {
              x: c * (p[j + 1].x - p[j].x),
              y: c * (p[j + 1].y - p[j].y)
            };
            if (_3d) {
              dpt.z = c * (p[j + 1].z - p[j].z);
            }
            list.push(dpt);
          }
          dpoints.push(list);
          p = list;
        }
        return dpoints;
      },
      between: function(v, m, M) {
        return (
          (m <= v && v <= M) ||
          utils.approximately(v, m) ||
          utils.approximately(v, M)
        );
      },
      approximately: function(a, b, precision) {
        return abs(a - b) <= (precision || epsilon);
      },
      length: function(derivativeFn) {
        var z = 0.5,
          sum = 0,
          len = utils.Tvalues.length,
          i,
          t;
        for (i = 0; i < len; i++) {
          t = z * utils.Tvalues[i] + z;
          sum += utils.Cvalues[i] * utils.arcfn(t, derivativeFn);
        }
        return z * sum;
      },
      map: function(v, ds, de, ts, te) {
        var d1 = de - ds,
          d2 = te - ts,
          v2 = v - ds,
          r = v2 / d1;
        return ts + d2 * r;
      },
      lerp: function(r, v1, v2) {
        var ret = {
          x: v1.x + r * (v2.x - v1.x),
          y: v1.y + r * (v2.y - v1.y)
        };
        if (!!v1.z && !!v2.z) {
          ret.z = v1.z + r * (v2.z - v1.z);
        }
        return ret;
      },
      pointToString: function(p) {
        var s = p.x + "/" + p.y;
        if (typeof p.z !== "undefined") {
          s += "/" + p.z;
        }
        return s;
      },
      pointsToString: function(points) {
        return "[" + points.map(utils.pointToString).join(", ") + "]";
      },
      copy: function(obj) {
        return JSON.parse(JSON.stringify(obj));
      },
      angle: function(o, v1, v2) {
        var dx1 = v1.x - o.x,
          dy1 = v1.y - o.y,
          dx2 = v2.x - o.x,
          dy2 = v2.y - o.y,
          cross = dx1 * dy2 - dy1 * dx2,
          dot = dx1 * dx2 + dy1 * dy2;
        return atan2(cross, dot);
      },
      round: function(v, d) {
        var s = "" + v;
        var pos = s.indexOf(".");
        return parseFloat(s.substring(0, pos + 1 + d));
      },
      dist: function(p1, p2) {
        var dx = p1.x - p2.x,
          dy = p1.y - p2.y;
        return sqrt(dx * dx + dy * dy);
      },
      closest: function(LUT, point) {
        var mdist = pow(2, 63),
          mpos,
          d;
        LUT.forEach(function(p, idx) {
          d = utils.dist(point, p);
          if (d < mdist) {
            mdist = d;
            mpos = idx;
          }
        });
        return { mdist: mdist, mpos: mpos };
      },
      abcratio: function(t, n) {
        if (n !== 2 && n !== 3) {
          return false;
        }
        if (typeof t === "undefined") {
          t = 0.5;
        } else if (t === 0 || t === 1) {
          return t;
        }
        var bottom = pow(t, n) + pow(1 - t, n),
          top = bottom - 1;
        return abs(top / bottom);
      },
      projectionratio: function(t, n) {
        if (n !== 2 && n !== 3) {
          return false;
        }
        if (typeof t === "undefined") {
          t = 0.5;
        } else if (t === 0 || t === 1) {
          return t;
        }
        var top = pow(1 - t, n),
          bottom = pow(t, n) + top;
        return top / bottom;
      },
      lli8: function(x1, y1, x2, y2, x3, y3, x4, y4) {
        var nx =
            (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),
          ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),
          d = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);
        if (d == 0) {
          return false;
        }
        return { x: nx / d, y: ny / d };
      },
      lli4: function(p1, p2, p3, p4) {
        var x1 = p1.x,
          y1 = p1.y,
          x2 = p2.x,
          y2 = p2.y,
          x3 = p3.x,
          y3 = p3.y,
          x4 = p4.x,
          y4 = p4.y;
        return utils.lli8(x1, y1, x2, y2, x3, y3, x4, y4);
      },
      lli: function(v1, v2) {
        return utils.lli4(v1, v1.c, v2, v2.c);
      },
      makeline: function(p1, p2) {
        var Bezier = require("./bezier");
        var x1 = p1.x,
          y1 = p1.y,
          x2 = p2.x,
          y2 = p2.y,
          dx = (x2 - x1) / 3,
          dy = (y2 - y1) / 3;
        return new Bezier(
          x1,
          y1,
          x1 + dx,
          y1 + dy,
          x1 + 2 * dx,
          y1 + 2 * dy,
          x2,
          y2
        );
      },
      findbbox: function(sections) {
        var mx = nMax,
          my = nMax,
          MX = nMin,
          MY = nMin;
        sections.forEach(function(s) {
          var bbox = s.bbox();
          if (mx > bbox.x.min) mx = bbox.x.min;
          if (my > bbox.y.min) my = bbox.y.min;
          if (MX < bbox.x.max) MX = bbox.x.max;
          if (MY < bbox.y.max) MY = bbox.y.max;
        });
        return {
          x: { min: mx, mid: (mx + MX) / 2, max: MX, size: MX - mx },
          y: { min: my, mid: (my + MY) / 2, max: MY, size: MY - my }
        };
      },
      shapeintersections: function(
        s1,
        bbox1,
        s2,
        bbox2,
        curveIntersectionThreshold
      ) {
        if (!utils.bboxoverlap(bbox1, bbox2)) return [];
        var intersections = [];
        var a1 = [s1.startcap, s1.forward, s1.back, s1.endcap];
        var a2 = [s2.startcap, s2.forward, s2.back, s2.endcap];
        a1.forEach(function(l1) {
          if (l1.virtual) return;
          a2.forEach(function(l2) {
            if (l2.virtual) return;
            var iss = l1.intersects(l2, curveIntersectionThreshold);
            if (iss.length > 0) {
              iss.c1 = l1;
              iss.c2 = l2;
              iss.s1 = s1;
              iss.s2 = s2;
              intersections.push(iss);
            }
          });
        });
        return intersections;
      },
      makeshape: function(forward, back, curveIntersectionThreshold) {
        var bpl = back.points.length;
        var fpl = forward.points.length;
        var start = utils.makeline(back.points[bpl - 1], forward.points[0]);
        var end = utils.makeline(forward.points[fpl - 1], back.points[0]);
        var shape = {
          startcap: start,
          forward: forward,
          back: back,
          endcap: end,
          bbox: utils.findbbox([start, forward, back, end])
        };
        var self = utils;
        shape.intersections = function(s2) {
          return self.shapeintersections(
            shape,
            shape.bbox,
            s2,
            s2.bbox,
            curveIntersectionThreshold
          );
        };
        return shape;
      },
      getminmax: function(curve, d, list) {
        if (!list) return { min: 0, max: 0 };
        var min = nMax,
          max = nMin,
          t,
          c;
        if (list.indexOf(0) === -1) {
          list = [0].concat(list);
        }
        if (list.indexOf(1) === -1) {
          list.push(1);
        }
        for (var i = 0, len = list.length; i < len; i++) {
          t = list[i];
          c = curve.get(t);
          if (c[d] < min) {
            min = c[d];
          }
          if (c[d] > max) {
            max = c[d];
          }
        }
        return { min: min, mid: (min + max) / 2, max: max, size: max - min };
      },
      align: function(points, line) {
        var tx = line.p1.x,
          ty = line.p1.y,
          a = -atan2(line.p2.y - ty, line.p2.x - tx),
          d = function(v) {
            return {
              x: (v.x - tx) * cos(a) - (v.y - ty) * sin(a),
              y: (v.x - tx) * sin(a) + (v.y - ty) * cos(a)
            };
          };
        return points.map(d);
      },
      roots: function(points, line) {
        line = line || { p1: { x: 0, y: 0 }, p2: { x: 1, y: 0 } };
        var order = points.length - 1;
        var p = utils.align(points, line);
        var reduce = function(t) {
          return 0 <= t && t <= 1;
        };
        if (order === 2) {
          var a = p[0].y,
            b = p[1].y,
            c = p[2].y,
            d = a - 2 * b + c;
          if (d !== 0) {
            var m1 = -sqrt(b * b - a * c),
              m2 = -a + b,
              v1 = -(m1 + m2) / d,
              v2 = -(-m1 + m2) / d;
            return [v1, v2].filter(reduce);
          } else if (b !== c && d === 0) {
            return [(2*b - c)/(2*b - 2*c)].filter(reduce);
          }
          return [];
        }
        var pa = p[0].y,
          pb = p[1].y,
          pc = p[2].y,
          pd = p[3].y,
          d = -pa + 3 * pb - 3 * pc + pd,
          a = 3 * pa - 6 * pb + 3 * pc,
          b = -3 * pa + 3 * pb,
          c = pa;
        if (utils.approximately(d, 0)) {
          if (utils.approximately(a, 0)) {
            if (utils.approximately(b, 0)) {
              return [];
            }
            return [-c / b].filter(reduce);
          }
          var q = sqrt(b * b - 4 * a * c),
            a2 = 2 * a;
          return [(q - b) / a2, (-b - q) / a2].filter(reduce);
        }
        a /= d;
        b /= d;
        c /= d;
        var p = (3 * b - a * a) / 3,
          p3 = p / 3,
          q = (2 * a * a * a - 9 * a * b + 27 * c) / 27,
          q2 = q / 2,
          discriminant = q2 * q2 + p3 * p3 * p3,
          u1,
          v1,
          x1,
          x2,
          x3;
        if (discriminant < 0) {
          var mp3 = -p / 3,
            mp33 = mp3 * mp3 * mp3,
            r = sqrt(mp33),
            t = -q / (2 * r),
            cosphi = t < -1 ? -1 : t > 1 ? 1 : t,
            phi = acos(cosphi),
            crtr = crt(r),
            t1 = 2 * crtr;
          x1 = t1 * cos(phi / 3) - a / 3;
          x2 = t1 * cos((phi + tau) / 3) - a / 3;
          x3 = t1 * cos((phi + 2 * tau) / 3) - a / 3;
          return [x1, x2, x3].filter(reduce);
        } else if (discriminant === 0) {
          u1 = q2 < 0 ? crt(-q2) : -crt(q2);
          x1 = 2 * u1 - a / 3;
          x2 = -u1 - a / 3;
          return [x1, x2].filter(reduce);
        } else {
          var sd = sqrt(discriminant);
          u1 = crt(-q2 + sd);
          v1 = crt(q2 + sd);
          return [u1 - v1 - a / 3].filter(reduce);
        }
      },
      droots: function(p) {
        if (p.length === 3) {
          var a = p[0],
            b = p[1],
            c = p[2],
            d = a - 2 * b + c;
          if (d !== 0) {
            var m1 = -sqrt(b * b - a * c),
              m2 = -a + b,
              v1 = -(m1 + m2) / d,
              v2 = -(-m1 + m2) / d;
            return [v1, v2];
          } else if (b !== c && d === 0) {
            return [(2 * b - c) / (2 * (b - c))];
          }
          return [];
        }
        if (p.length === 2) {
          var a = p[0],
            b = p[1];
          if (a !== b) {
            return [a / (a - b)];
          }
          return [];
        }
      },
      curvature: function(t, points, _3d, kOnly) {
        var dpoints = utils.derive(points);
        var d1 = dpoints[0];
        var d2 = dpoints[1];
        var num, dnm, adk, dk, k=0, r=0;
        var d = utils.compute(t, d1);
        var dd = utils.compute(t, d2);
        var qdsum = d.x*d.x + d.y*d.y;
        if (_3d) {
          num = sqrt(
            pow(d.y*dd.z - dd.y*d.z, 2) +
            pow(d.z*dd.x - dd.z*d.x, 2) +
            pow(d.x*dd.y - dd.x*d.y, 2)
          );
          dnm = pow(qdsum + d.z*d.z, 3/2);
        } else {
          num = d.x*dd.y - d.y*dd.x;
          dnm = pow(qdsum, 3/2);
        }
        if (num === 0 || dnm === 0) {
          return { k:0, r:0 };
        }
        k = num/dnm;
        r = dnm/num;
        if (!kOnly) {
          var pk = utils.curvature(t-0.001, points, _3d, true).k;
          var nk = utils.curvature(t+0.001, points, _3d, true).k;
          dk = ((nk-k) + (k-pk))/2;
          adk = (abs(nk-k) + abs(k-pk))/2;
        }
        return { k: k, r: r, dk: dk, adk:adk, };
      },
      inflections: function(points) {
        if (points.length < 4) return [];
        var p = utils.align(points, { p1: points[0], p2: points.slice(-1)[0] }),
          a = p[2].x * p[1].y,
          b = p[3].x * p[1].y,
          c = p[1].x * p[2].y,
          d = p[3].x * p[2].y,
          v1 = 18 * (-3 * a + 2 * b + 3 * c - d),
          v2 = 18 * (3 * a - b - 3 * c),
          v3 = 18 * (c - a);
        if (utils.approximately(v1, 0)) {
          if (!utils.approximately(v2, 0)) {
            var t = -v3 / v2;
            if (0 <= t && t <= 1) return [t];
          }
          return [];
        }
        var trm = v2 * v2 - 4 * v1 * v3,
          sq = Math.sqrt(trm),
          d = 2 * v1;
        if (utils.approximately(d, 0)) return [];
        return [(sq - v2) / d, -(v2 + sq) / d].filter(function(r) {
          return 0 <= r && r <= 1;
        });
      },
      bboxoverlap: function(b1, b2) {
        var dims = ["x", "y"],
          len = dims.length,
          i,
          dim,
          l,
          t,
          d;
        for (i = 0; i < len; i++) {
          dim = dims[i];
          l = b1[dim].mid;
          t = b2[dim].mid;
          d = (b1[dim].size + b2[dim].size) / 2;
          if (abs(l - t) >= d) return false;
        }
        return true;
      },
      expandbox: function(bbox, _bbox) {
        if (_bbox.x.min < bbox.x.min) {
          bbox.x.min = _bbox.x.min;
        }
        if (_bbox.y.min < bbox.y.min) {
          bbox.y.min = _bbox.y.min;
        }
        if (_bbox.z && _bbox.z.min < bbox.z.min) {
          bbox.z.min = _bbox.z.min;
        }
        if (_bbox.x.max > bbox.x.max) {
          bbox.x.max = _bbox.x.max;
        }
        if (_bbox.y.max > bbox.y.max) {
          bbox.y.max = _bbox.y.max;
        }
        if (_bbox.z && _bbox.z.max > bbox.z.max) {
          bbox.z.max = _bbox.z.max;
        }
        bbox.x.mid = (bbox.x.min + bbox.x.max) / 2;
        bbox.y.mid = (bbox.y.min + bbox.y.max) / 2;
        if (bbox.z) {
          bbox.z.mid = (bbox.z.min + bbox.z.max) / 2;
        }
        bbox.x.size = bbox.x.max - bbox.x.min;
        bbox.y.size = bbox.y.max - bbox.y.min;
        if (bbox.z) {
          bbox.z.size = bbox.z.max - bbox.z.min;
        }
      },
      pairiteration: function(c1, c2, curveIntersectionThreshold) {
        var c1b = c1.bbox(),
          c2b = c2.bbox(),
          r = 100000,
          threshold = curveIntersectionThreshold || 0.5;
        if (
          c1b.x.size + c1b.y.size < threshold &&
          c2b.x.size + c2b.y.size < threshold
        ) {
          return [
            ((r * (c1._t1 + c1._t2) / 2) | 0) / r +
              "/" +
              ((r * (c2._t1 + c2._t2) / 2) | 0) / r
          ];
        }
        var cc1 = c1.split(0.5),
          cc2 = c2.split(0.5),
          pairs = [
            { left: cc1.left, right: cc2.left },
            { left: cc1.left, right: cc2.right },
            { left: cc1.right, right: cc2.right },
            { left: cc1.right, right: cc2.left }
          ];
        pairs = pairs.filter(function(pair) {
          return utils.bboxoverlap(pair.left.bbox(), pair.right.bbox());
        });
        var results = [];
        if (pairs.length === 0) return results;
        pairs.forEach(function(pair) {
          results = results.concat(
            utils.pairiteration(pair.left, pair.right, threshold)
          );
        });
        results = results.filter(function(v, i) {
          return results.indexOf(v) === i;
        });
        return results;
      },
      getccenter: function(p1, p2, p3) {
        var dx1 = p2.x - p1.x,
          dy1 = p2.y - p1.y,
          dx2 = p3.x - p2.x,
          dy2 = p3.y - p2.y;
        var dx1p = dx1 * cos(quart) - dy1 * sin(quart),
          dy1p = dx1 * sin(quart) + dy1 * cos(quart),
          dx2p = dx2 * cos(quart) - dy2 * sin(quart),
          dy2p = dx2 * sin(quart) + dy2 * cos(quart);
        var mx1 = (p1.x + p2.x) / 2,
          my1 = (p1.y + p2.y) / 2,
          mx2 = (p2.x + p3.x) / 2,
          my2 = (p2.y + p3.y) / 2;
        var mx1n = mx1 + dx1p,
          my1n = my1 + dy1p,
          mx2n = mx2 + dx2p,
          my2n = my2 + dy2p;
        var arc = utils.lli8(mx1, my1, mx1n, my1n, mx2, my2, mx2n, my2n),
          r = utils.dist(arc, p1),
          s = atan2(p1.y - arc.y, p1.x - arc.x),
          m = atan2(p2.y - arc.y, p2.x - arc.x),
          e = atan2(p3.y - arc.y, p3.x - arc.x),
          _;
        if (s < e) {
          if (s > m || m > e) {
            s += tau;
          }
          if (s > e) {
            _ = e;
            e = s;
            s = _;
          }
        } else {
          if (e < m && m < s) {
            _ = e;
            e = s;
            s = _;
          } else {
            e += tau;
          }
        }
        arc.s = s;
        arc.e = e;
        arc.r = r;
        return arc;
      },
      numberSort: function(a, b) {
        return a - b;
      }
    };
    return {
        utils : utils
    }
}();
H.Interpolation.zoom_lens = function() {
  const clipNormalized = H.Math.clip_normalized;
  const clip = H.Math.clip;
  const CircularInterpolation = H.Interpolation.circular;
  var ZoomLensInterpolation = function(lensPos, lensStrength) {
    this.leftImpl = new CircularInterpolation();
    this.rightImpl = new CircularInterpolation();
    this.lensPos = lensPos || 0.5;
    this.lensStrength = lensStrength || 1;
    this.absStrength = Math.abs(this.lensStrength);
    this.leftImpl.setFlipped(this.lensStrength > 0);
    this.rightImpl.setFlipped(this.lensStrength < 0);
  };
  ZoomLensInterpolation.prototype = {
    interpolate: function(min, max, t) {
      var val = min + (max - min) * t;
      if (t < this.lensPos) {
        val +=
          (this.leftImpl.interpolate(
            min,
            min + (max - min) * this.lensPos,
            t / this.lensPos
          ) -
            val) *
          this.absStrength;
      } else {
        val +=
          (this.rightImpl.interpolate(
            min + (max - min) * this.lensPos,
            max,
            (t - this.lensPos) / (1 - this.lensPos)
          ) -
            val) *
          this.absStrength;
      }
      return val;
    },
    setLensPos: function(pos, smooth) {
      this.lensPos += (clipNormalized(pos) - this.lensPos) * smooth;
    },
    setLensStrength: function(str, smooth) {
      this.lensStrength += (clip(str, -1, 1) - this.lensStrength) * smooth;
      this.absStrength = Math.abs(this.lensStrength);
      this.leftImpl.setFlipped(this.lensStrength > 0);
      this.rightImpl.setFlipped(this.lensStrength < 0);
    }
  };
  return ZoomLensInterpolation;
};

H.Iterator.for_loop = function(collection, loopFn) {
  let result = [];
  for (let item of collection) {
    let newItem = loopFn(item);
    result.push(newItem);
  }
  return result;
};


H.Iterator.function_map = function (f, a) {
    for (let item of a) {
        f(item);
    }
}

H.Iterator.loop_and_merge = function(collection, column_name, values) {
  let result = [];
  let i = 0;
  let len = collection.length;
  for (i; i < len; i++) {
    var merged = H.Obj.merge(collection[i], { [column_name]: values[i] });
    result.push(merged);
  }
  return result;
};

H.Iterator.loop = function(array) {
  let i = 0;
  return () => array[i++ % array.length];
};

H.Iterator.pattern_map = function(f, a) {
  let result = [];
  for (let item of a) {
    result.push(f(item));
  }
  return result;
};


H.Math.add_xy = function (a, b) {
    console.log('add: ' + a, b)
    return a + b;
}
H.Math.clip_normalized = function(a) {
    if (a < 0) {
        return 0;
    } else if (a > 1) {
        return 1;
    }
    return a;
}
H.Math.clip = function(a, _min, _max) {
    return a < _min ? _min : (a > _max ? _max : a);
};
H.Math.SQRT2 = Math.sqrt(2);
H.Math.SQRT3 = Math.sqrt(3);
H.Math.LOG2 = Math.log(2);
H.Math.PI = 3.14159265358979323846;
H.Math.INV_PI = 1.0 / H.Math.PI;
H.Math.HALF_PI = H.Math.PI / 2;
H.Math.THIRD_PI = H.Math.PI / 3;
H.Math.QUARTER_PI = H.Math.PI / 4;
H.Math.TWO_PI = H.Math.PI * 2;
H.Math.THREE_HALVES_PI = H.Math.TWO_PI - H.Math.HALF_PI;
H.Math.PI_SQUARED = H.Math.PI * H.Math.PI;

"use strict";
H.Math.count_steps = function(val, step, overflow) {
  val = Math.floor(val / step);
  if (overflow) {
    return val % overflow;
  }
  return val;
};


H.Math.diag = function (d) {
    var i,i1,j,n = d.length, A = Array(n), Ai;
    for(i=n-1;i>=0;i--) {
        Ai = Array(n);
        i1 = i+2;
        for(j=n-1;j>=i1;j-=2) {
            Ai[j] = 0;
            Ai[j-1] = 0;
        }
        if(j>i) { Ai[j] = 0; }
        Ai[i] = d[i];
        for(j=i-1;j>=1;j-=2) {
            Ai[j] = 0;
            Ai[j-1] = 0;
        }
        if(j===0) { Ai[0] = 0; }
        A[i] = Ai;
    }
    return A;
}

H.Math.div_xy = function (a, b) {
    console.log('div: ' + a, b)
    return a / b;
}
H.Math.epsilon = 2.220446049250313e-16;
H.Math.muleq = '*='

H.Math.mul_xy = function (a, b) {
    console.log('mul: ' + a, b)
    return a * b;
}

H.Math.norminf = function(x) {
var accum = 0;
var max = Math.max;
var abs = Math.abs;
accum = max( accum, abs(x) );
return accum
}
H.Math.pow_arr = function (arr) {
    let result = [];
    arr.map(function (x) {
        let entry = []
        x.map(function(a) {
            result.push(Math.pow(a, 2))
        })
    })
    return result;
}

H.Math.pow_xy = function (a, b) {
    console.log('pow: ' + a, b)
    return Math.pow(a, b);
}

H.Math.rep = function (s,v,k) {
    if(typeof k === "undefined") { k=0; }
    var n = s[k], ret = Array(n), i;
    if(k === s.length-1) {
        for(i=n-2;i>=0;i-=2) { ret[i+1] = v; ret[i] = v; }
        if(i===-1) { ret[0] = v; }
        return ret;
    }
    for(i=n-1;i>=0;i--) { ret[i] = H.Math.rep(s,v,k+1); }
    return ret;
}
H.Math.sqrt_x = function (a) {
    return Math.sqrt(a);
}
H.Math.sub_xy = function (a, b) {
    console.log('sub: ' + a, b)
    return a - b;
}

H.Math.sum_arr = function (arr) {
  console.log('sum_arr: ' + arr)
    var sum = 0;
    var i = arr.length;
    while (--i >= 0)
      sum += arr[i];
    return sum;
};

H.Math.svd = function (A) {
    const rep = H.Math.rep;
    const epsilon = H.Math.epsilon;
    const clone = H.Array.clone;
    var temp;
	var prec= epsilon; 
	var tolerance= 1.e-64/prec;
	var itmax= 50;
	var c=0;
	var i=0;
	var j=0;
	var k=0;
	var l=0;
	var u= clone(A);
	var m= u.length;
	var n= u[0].length;
	if (m < n) throw "Need more rows than columns"
	var e = new Array(n);
	var q = new Array(n);
	for (i=0; i<n; i++) e[i] = q[i] = 0.0;
	var v = rep([n,n],0);
 	function pythag(a,b)
 	{
		a = Math.abs(a)
		b = Math.abs(b)
		if (a > b)
			return a*Math.sqrt(1.0+(b*b/a/a))
		else if (b == 0.0) 
			return a
		return b*Math.sqrt(1.0+(a*a/b/b))
	}
	var f= 0.0;
	var g= 0.0;
	var h= 0.0;
	var x= 0.0;
	var y= 0.0;
	var z= 0.0;
	var s= 0.0;
	for (i=0; i < n; i++)
	{	
		e[i]= g;
		s= 0.0;
		l= i+1;
		for (j=i; j < m; j++) 
			s += (u[j][i]*u[j][i]);
		if (s <= tolerance)
			g= 0.0;
		else
		{	
			f= u[i][i];
			g= Math.sqrt(s);
			if (f >= 0.0) g= -g;
			h= f*g-s
			u[i][i]=f-g;
			for (j=l; j < n; j++)
			{
				s= 0.0
				for (k=i; k < m; k++) 
					s += u[k][i]*u[k][j]
				f= s/h
				for (k=i; k < m; k++) 
					u[k][j]+=f*u[k][i]
			}
		}
		q[i]= g
		s= 0.0
		for (j=l; j < n; j++) 
			s= s + u[i][j]*u[i][j]
		if (s <= tolerance)
			g= 0.0
		else
		{	
			f= u[i][i+1]
			g= Math.sqrt(s)
			if (f >= 0.0) g= -g
			h= f*g - s
			u[i][i+1] = f-g;
			for (j=l; j < n; j++) e[j]= u[i][j]/h
			for (j=l; j < m; j++)
			{	
				s=0.0
				for (k=l; k < n; k++) 
					s += (u[j][k]*u[i][k])
				for (k=l; k < n; k++) 
					u[j][k]+=s*e[k]
			}	
		}
		y= Math.abs(q[i])+Math.abs(e[i])
		if (y>x) 
			x=y
	}
	for (i=n-1; i != -1; i+= -1)
	{	
		if (g != 0.0)
		{
		 	h= g*u[i][i+1]
			for (j=l; j < n; j++) 
				v[j][i]=u[i][j]/h
			for (j=l; j < n; j++)
			{	
				s=0.0
				for (k=l; k < n; k++) 
					s += u[i][k]*v[k][j]
				for (k=l; k < n; k++) 
					v[k][j]+=(s*v[k][i])
			}	
		}
		for (j=l; j < n; j++)
		{
			v[i][j] = 0;
			v[j][i] = 0;
		}
		v[i][i] = 1;
		g= e[i]
		l= i
	}
	for (i=n-1; i != -1; i+= -1)
	{	
		l= i+1
		g= q[i]
		for (j=l; j < n; j++) 
			u[i][j] = 0;
		if (g != 0.0)
		{
			h= u[i][i]*g
			for (j=l; j < n; j++)
			{
				s=0.0
				for (k=l; k < m; k++) s += u[k][i]*u[k][j];
				f= s/h
				for (k=i; k < m; k++) u[k][j]+=f*u[k][i];
			}
			for (j=i; j < m; j++) u[j][i] = u[j][i]/g;
		}
		else
			for (j=i; j < m; j++) u[j][i] = 0;
		u[i][i] += 1;
	}
	prec= prec*x
	for (k=n-1; k != -1; k+= -1)
	{
		for (var iteration=0; iteration < itmax; iteration++)
		{	
			var test_convergence = false
			for (l=k; l != -1; l+= -1)
			{	
				if (Math.abs(e[l]) <= prec)
				{	test_convergence= true
					break 
				}
				if (Math.abs(q[l-1]) <= prec)
					break 
			}
			if (!test_convergence)
			{	
				c= 0.0
				s= 1.0
				var l1= l-1
				for (i =l; i<k+1; i++)
				{	
					f= s*e[i]
					e[i]= c*e[i]
					if (Math.abs(f) <= prec)
						break
					g= q[i]
					h= pythag(f,g)
					q[i]= h
					c= g/h
					s= -f/h
					for (j=0; j < m; j++)
					{	
						y= u[j][l1]
						z= u[j][i]
						u[j][l1] =  y*c+(z*s)
						u[j][i] = -y*s+(z*c)
					} 
				}	
			}
			z= q[k]
			if (l== k)
			{	
				if (z<0.0)
				{	
					q[k]= -z
					for (j=0; j < n; j++)
						v[j][k] = -v[j][k]
				}
				break  
			}
			if (iteration >= itmax-1)
				throw 'Error: no convergence.'
			x= q[l]
			y= q[k-1]
			g= e[k-1]
			h= e[k]
			f= ((y-z)*(y+z)+(g-h)*(g+h))/(2.0*h*y)
			g= pythag(f,1.0)
			if (f < 0.0)
				f= ((x-z)*(x+z)+h*(y/(f-g)-h))/x
			else
				f= ((x-z)*(x+z)+h*(y/(f+g)-h))/x
			c= 1.0
			s= 1.0
			for (i=l+1; i< k+1; i++)
			{	
				g= e[i]
				y= q[i]
				h= s*g
				g= c*g
				z= pythag(f,h)
				e[i-1]= z
				c= f/z
				s= h/z
				f= x*c+g*s
				g= -x*s+g*c
				h= y*s
				y= y*c
				for (j=0; j < n; j++)
				{	
					x= v[j][i-1]
					z= v[j][i]
					v[j][i-1] = x*c+z*s
					v[j][i] = -x*s+z*c
				}
				z= pythag(f,h)
				q[i-1]= z
				c= f/z
				s= h/z
				f= c*g+s*y
				x= -s*g+c*y
				for (j=0; j < m; j++)
				{
					y= u[j][i-1]
					z= u[j][i]
					u[j][i-1] = y*c+z*s
					u[j][i] = -y*s+z*c
				}
			}
			e[l]= 0.0
			e[k]= f
			q[k]= x
		} 
	}
	for (i=0;i<q.length; i++) 
	  if (q[i] < prec) q[i] = 0
	for (i=0; i< n; i++)
	{	 
	 for (j=i-1; j >= 0; j--)
	 {
	  if (q[j] < q[i])
	  {
	   c = q[j]
	   q[j] = q[i]
	   q[i] = c
	   for(k=0;k<u.length;k++) { temp = u[k][i]; u[k][i] = u[k][j]; u[k][j] = temp; }
	   for(k=0;k<v.length;k++) { temp = v[k][i]; v[k][i] = v[k][j]; v[k][j] = temp; }
	   i = j	   
	  }
	 }	
	}
	return {U:u,S:q,V:v}
};
var z_cos = function (vec) {
    let ang = Math.PI;
    let x = vec.x;
    let y = vec.y;
    let z = Math.sqrt( Math.sqrt(x) + Math.sqrt(y) - 2 * x * y * Math.cos(ang));
    let result = { x: x, y: y, z: z };
    return result;
};
H.Matrix.add = function (mat1, mat2) {
    if ((mat1.length === mat2.length) && (mat1[0].length === mat2[0].length)) {
        var result = new Array(mat1.length);
        for (var i = 0; i < mat1.length; i++) {
            result[i] = new Array(mat1[i].length);
            for (var j = 0; j < mat1[i].length; j++) {
                result[i][j] = mat1[i][j] + mat2[i][j];
            }
        }
        return result;
    } else {
        throw new Error('Matrix mismatch.');
    }
};

H.Math.array_to_matrix = function (array, numbersOfColumn) {
        var matrix = [];
        var i = 0;
        var j = -1;
        for (i, j; i < array.length; i++){
            if (i % numbersOfColumn ===0){
                j ++;
                matrix[j] =[];
            }
            matrix[j].push(array[i]);
        }
        return matrix;
    };

H.Math.arrays_to_matrix = function ( collection, array1, array2 ) {
    let values = []; 
    var i = 0;
    for (i; i < collection.length; i++){
        let measures = H.Obj.pick(collection[i],[array1, array2]);
        let value = (Object.values(measures));
        value[0] = Number.parseFloat(value[0])
        value[1] = Number.parseFloat(value[1])
        values.push(value);
    }
    return values;
};

H.Stats.create_matrix = function (rows, cols, func) {
    const isFunction = H.Assert.is_function;
    var res = new Array(rows);
    var i, j;
    if (isFunction(cols)) {
      func = cols;
      cols = rows;
    }
    for (i = 0; i < rows; i++) {
      res[i] = new Array(cols);
      for (j = 0; j < cols; j++)
        res[i][j] = func(i, j);
    }
    return res;
  };

H.Math.distance_matrix = function (data, distFn ) {
    distFn = distFn || H.Dist.euclidean;
    function getMatrix(size) {
        const matrix = [];
        for (let i = 0; i < size; i++) {
          const row = [];
          matrix.push(row);
          for (let j = 0; j < size; j++) {
            row.push(0);
          }
        }
        return matrix;
    }
    const result = getMatrix(data.length);
    for (let i = 0; i < data.length; i++) {
      for (let j = 0; j <= i; j++) {
        result[i][j] = distFn(data[i], data[j]);
        result[j][i] = result[i][j];
      }
    }
    return result;
  }
  

H.Math.matrix = function (m, n) {
    var mat = Array.apply(null, new Array(m)).map(
        Array.prototype.valueOf,
        new Array(n)
    );
    return mat;
}
H.Matrix.multiply = function(mat1, mat2) {
  const transpose = H.Math.transpose;
  const dotVec = H.Vector.dot;
  if (mat1[0].length === mat2.length) {
    var result = new Array(mat1.length);
    for (var x = 0; x < mat1.length; x++) {
      result[x] = new Array(mat2[0].length);
    }
    var mat2_T = transpose(mat2);
    for (var i = 0; i < result.length; i++) {
      for (var j = 0; j < result[i].length; j++) {
        result[i][j] = dotVec(mat1[i], mat2_T[j]);
      }
    }
    return result;
  } else {
    throw new Error("Array mismatch");
  }
};

H.Math.random_matrix = function(row,col,lower,upper) {
    const randVec = H.Vector.random;
    lower = (typeof lower !== 'undefined') ? lower : 0;
    upper = (typeof upper !== 'undefined') ? upper : 1;
    var mat = [];
    while(mat.length < row)
        mat.push(randVec(col,lower,upper));
    return mat;
};
H.Math.shape = function(mat) {
    var row = mat.length;
    var col = mat[0].length;
    return [row,col];
};
H.Math.transpose = function (x) {
    var i,j,m = x.length,n = x[0].length, ret=Array(n),A0,A1,Bj;
    for(j=0;j<n;j++) ret[j] = Array(m);
    for(i=m-1;i>=1;i-=2) {
        A1 = x[i];
        A0 = x[i-1];
        for(j=n-1;j>=1;--j) {
            Bj = ret[j]; Bj[i] = A1[j]; Bj[i-1] = A0[j];
            --j;
            Bj = ret[j]; Bj[i] = A1[j]; Bj[i-1] = A0[j];
        }
        if(j===0) {
            Bj = ret[0]; Bj[i] = A1[0]; Bj[i-1] = A0[0];
        }
    }
    if(i===0) {
        A0 = x[0];
        for(j=n-1;j>=1;--j) {
            ret[j][0] = A0[j];
            --j;
            ret[j][0] = A0[j];
        }
        if(j===0) { ret[0][0] = A0[0]; }
    }
    return ret;
}
H.Number.clamp = function(val, min, max) {
    return val > max ? max : val < min ? min : val;
}

H.Number.clamp01 = function (val) {
    return Math.min(1, Math.max(0, val));
}

H.Number.closest = function (array,val) {
    let i=0;
    let minDiff = 1000;
    let ans;
    for(i in array){
         var m=Math.abs(val-array[i]);
         if(m<minDiff){ 
                minDiff=m; 
                ans=array[i]; 
            }
      }
    return ans;
}

H.Number.in_range = function(val, min, max, threshold) {
  threshold = threshold || 0;
  return val + threshold >= min && val - threshold <= max;
};

H.Number.maybe_to_precision = function (value, digits) {
    if (value < 0) {
      value = 0 - value;
      if (typeof digits === 'number') {
        return `- ${value.toPrecision(digits)}`;
      } else {
        return `- ${value.toString()}`;
      }
    } else {
      if (typeof digits === 'number') {
        return value.toPrecision(digits);
      } else {
        return value.toString();
      }
    }
  }

H.Number.nearly_equals = function (x, y, t) {
    if (isNaN(x) || isNaN(y))
        return false;
    return Math.abs(x - y) < t;
}

"use strict";
H.Number.precision = function(num) {
  const regExponential = /^(-?\d?\.?\d+)e([+-]\d)+/;
  num = num.toExponential().match(regExponential);
  const coefficient = num[1];
  const exponent = parseInt(num[2], 10);
  const places = (coefficient.split(".")[1] || "").length;
  const ret = places - exponent;
  return ret < 0 ? 0 : ret;
};


H.Number.random_between = function (min, max){
  return Math.floor(Math.random() * (max - min + 1) + min);
}

H.Number.random = function(rand,min,max) {
    if( arguments.length === 1 ){
        return Math.random() * arguments[0];
    } else if(arguments.length == 2) {
        max = min;
        min = rand;
        rand = Math.random;
    }
    if(!min && !max) {
        return Math.random();
    } else if(!max){
        max = min;
        return rand()*max;
    }
    return rand() * (max - min) + min;
};
H.Number.range = function( start, stop, stepSize ) {
  if (stop == null) {
    stop = start
    start = 1
  }
  if (stepSize == null) stepSize = 1
  var steps = (stop - start) / stepSize
  var range = []
  for (var step = 0; step <= steps; step++) range.push(start + step * stepSize)
  return range
}
H.Number.round_to = function(n, places) {
    places = places || 3;
    return +( Math.round(parseFloat(n.toString() + "e+" + places.toString())) + "e-" + places )
}



H.Obj.deep_fill_in = function (target, defaults) {
  const forOwn = H.Obj.for_own;
  const isPlainObject = H.Assert.is_plain_object;
  var i = 0,
    n = arguments.length,
    obj;
  while (++i < n) {
    obj = arguments[i]; 
    if (obj) {
      forOwn(obj, function(newValue, key) {
        var curValue = target[key];
        if (curValue == null) {
          target[key] = newValue;
        } else if (isPlainObject(curValue) && isPlainObject(newValue)) {
          H.Utils.deep_fill_in(curValue, newValue);
        }
      });
    }
  }
  return target;
}


'use strict';
function deepGet( obj, path, options ) {
	var isStr;
	var props;
	var opts;
	var err;
	if ( !isObjectLike( obj ) ) {
		return;
	}
	isStr = isString( path );
	if ( !isStr && !isArray( path ) ) {
		throw new TypeError( 'invalid argument. Key path must be a string primitive or a key array. Value: `' + path + '`.' );
	}
	opts = copy( defaults );
	if ( arguments.length > 2 ) {
		err = validate( opts, options );
		if ( err ) {
			throw err;
		}
	}
	if ( isStr ) {
		props = path.split( opts.sep );
	} else {
		props = path;
	}
	return dget( obj, props );
}
'use strict';
function deepGet( obj, props ) {
	var len = props.length;
	var v = obj;
	var i;
	for ( i = 0; i < len; i++ ) {
		if (
			isObjectLike( v ) &&
			hasOwnProp( v, props[ i ] )
		) {
			v = v[ props[ i ] ];
		} else {
			return;
		}
	}
	return v;
}


"use strict";
H.Obj.deep_match = function(target, pattern) {
  const isArray = H.Assert.is_array;
  const forOwn = H.Obj.for_own;
  const deepMatch = H.Obj.deep_match;
  function containsMatch(array, pattern) {
    var i = -1,
      length = array.length;
    while (++i < length) {
      if (deepMatch(array[i], pattern)) {
        return true;
      }
    }
    return false;
  }
  function matchArray(target, pattern) {
    var i = -1,
      patternLength = pattern.length;
    while (++i < patternLength) {
      if (!containsMatch(target, pattern[i])) {
        return false;
      }
    }
    return true;
  }
  function matchObject(target, pattern) {
    var result = true;
    forOwn(pattern, function(val, key) {
      if (!deepMatch(target[key], val)) {
        return (result = false);
      }
    });
    return result;
  }
    if (target && typeof target === "object") {
      if (isArray(target) && isArray(pattern)) {
        return matchArray(target, pattern);
      } else {
        return matchObject(target, pattern);
      }
    } else {
      return target === pattern;
    };
};


"use strict";
H.Obj.deep_mix_in = function(target, objects) {
  const forOwn = H.Obj.for_own;
  const isPlainObject = H.Assert.is_plain_object;
  var i = 0,
    n = arguments.length,
    obj;
  while (++i < n) {
    obj = arguments[i];
    if (obj) {
      forOwn(obj, copyProp, target);
    }
    return target;
  }
  function copyProp(val, key) {
    var existing = this[key];
    if (isPlainObject(val) && isPlainObject(existing)) {
      H.Utils.deep_mix_in(existing, val);
    } else {
      this[key] = val;
    }
  }
};

H.Obj.deep_obj = function(action, obj, keys, id, key) {
    keys = keys.split(".");
    id = keys.splice(-1, 1);
    for (key in keys) obj = obj[keys[key]] = obj[keys[key]] || {};
    return action(obj, id);
  }

'use strict';
function deepPluck( arr, path, options ) {
	var dget;
	var opts;
	var out;
	var err;
	var i;
	if ( !isArray( arr ) ) {
		throw new TypeError( 'invalid argument. First argument must be an array. Value: `' + arr + '`.' );
	}
	opts = copy( defaults );
	if ( arguments.length > 2 ) {
		err = validate( opts, options );
		if ( err ) {
			throw err;
		}
	}
	if ( opts.copy ) {
		out = new Array( arr.length );
	} else {
		out = arr;
	}
	dget = deepGet( path, {
		'sep': opts.sep
	});
	for ( i = 0; i < arr.length; i++ ) {
		out[ i ] = dget( arr[ i ] );
	}
	return out;
}

    H.Obj.every = function(arr, callback, thisObj) {
        const makeIterator = H.Func.make_iterator;
        callback = makeIterator(callback, thisObj);
        var result = true;
        if (arr == null) {
            return result;
        }
        var i = -1, len = arr.length;
        while (++i < len) {
            if (!callback(arr[i], i, arr) ) {
                result = false;
                break;
            }
        }
        return result;
    }
"use strict";
H.Obj.extend = function( source, merge ) {
    var extended = {};
        var prop;
        for (prop in source) {
            if (Object.prototype.hasOwnProperty.call(source, prop)) {
                extended[prop] = source[prop];
            }
        }
        for (prop in merge) {
            if (Object.prototype.hasOwnProperty.call(merge, prop)) {
                extended[prop] = merge[prop];
            }
        }
    return extended;
};

H.Obj.filter = function(arr, callback, thisObj) {
  const makeIterator = H.Func.make_iterator;
  callback = makeIterator(callback, thisObj);
  var results = [];
  if (arr == null) {
    return results;
  }
  var i = -1,
    len = arr.length,
    value;
  while (++i < len) {
    value = arr[i];
    if (callback(value, i, arr)) {
      results.push(value);
    }
  }
  return results;
};



"use strict";
H.Obj.for_in = (function() {
  const hasOwn = H.Obj.has_own;
  var _hasDontEnumBug, _dontEnums;
  function checkDontEnum() {
    _dontEnums = [
      "toString",
      "toLocaleString",
      "valueOf",
      "hasOwnProperty",
      "isPrototypeOf",
      "propertyIsEnumerable",
      "constructor"
    ];
    _hasDontEnumBug = true;
    for (var key in { toString: null }) {
      _hasDontEnumBug = false;
    }
  }
  var exec = function(obj, fn, thisObj) {
    var key,
      i = 0;
    if (_hasDontEnumBug == null) checkDontEnum();
    for (key in obj) {
      if (run(fn, obj, key, thisObj) === false) {
        break;
      }
    }
    if (_hasDontEnumBug) {
      var ctor = obj.constructor,
        isProto = !!ctor && obj === ctor.prototype;
      while ((key = _dontEnums[i++])) {
        if (
          (key !== "constructor" || (!isProto && hasOwn(obj, key))) &&
          obj[key] !== Object.prototype[key]
        ) {
          if (run(fn, obj, key, thisObj) === false) {
            break;
          }
        }
      }
    }
  };
  function run(fn, obj, key, thisObj) {
    return fn.call(thisObj, obj[key], key, obj);
  }
  return {
    exec: exec
  };
})();

"use strict";
H.Obj.for_own = function(obj, fn, thisObj) {
  const forIn = H.Obj.for_in.exec;
  const hasOwn = H.Obj.has_own;
  forIn(obj, function(val, key) {
    if (hasOwn(obj, key)) {
      return fn.call(thisObj, obj[key], key, obj);
    }
  });
};


    H.Obj.get = function (obj, prop){
        var parts = prop.split('.'),
            last = parts.pop();
        while (prop = parts.shift()) {
            obj = obj[prop];
            if (obj == null) return;
        }
        return obj[last];
    }

"use strict";
H.Obj.has_own = function(obj, prop){
        return Object.prototype.hasOwnProperty.call(obj, prop);
}


    H.Obj.has = function (obj, prop){
        var UNDEF;
        const get = H.Obj.get;
        return get(obj, prop) !== UNDEF;
    }


H.Obj.keys =
  Object.keys ||
  function(obj) {
    const forOwn = H.Obj.for_own;
    var keys = [];
    forOwn(obj, function(val, key) {
      keys.push(key);
    });
    return keys;
  };

H.Obj.kind_of = function(val) {
    var _rKind = /^\[object (.*)\]$/,
        _toString = Object.prototype.toString,
        UNDEF;
        if (val === null) {
            return 'Null';
        } else if (val === UNDEF) {
            return 'Undefined';
        } else {
            return _rKind.exec( _toString.call(val) )[1];
        }
}

H.Obj.mapValues = function(obj, callback, thisObj) {
  const makeIterator = H.Func.make_iterator;
  const forOwn = H.Obj.for_own;
  callback = makeIterator(callback, thisObj);
  var output = {};
  forOwn(obj, function(val, key, obj) {
    output[key] = callback(val, key, obj);
  });
  return output;
};


H.Obj.merge = function(source, target) {
  let result = Object.assign({}, target, source);
  return result;
};


H.Obj.mix_in = function(target, objects) {
  const forOwn = H.Obj.for_own;
  var i = 0,
    n = arguments.length,
    obj;
  while (++i < n) {
    obj = arguments[i];
    if (obj != null) {
      forOwn(obj, copyProp, target);
    }
  }
  return target;
  function copyProp(val, key) {
    this[key] = val;
  }
};


H.Obj.omit = function(obj, key_array) {
  const slice = H.Array.slice;
  const contains = H.Array.contains;
  var keys =
      typeof arguments[1] !== "string" ? arguments[1] : slice(arguments, 1),
    out = {};
  for (var property in obj) {
    if (obj.hasOwnProperty(property) && !contains(keys, property)) {
      out[property] = obj[property];
    }
  }
  return out;
};


H.Obj.pairs = function(obj) {
    const _keys = Object.keys(obj);
    const len = _keys.length;
    const ret = Array(len);
    for (let i = 0; i < len; i++) {
        ret[i] = [_keys[i], obj[_keys[i]]];
    }
    return ret;
};

H.Obj.pick = function(obj, var_keys) {
  const slice = H.Array.slice;
  var keys =
      typeof arguments[1] !== "string" ? arguments[1] : slice(arguments, 1),
    out = {},
    i = 0,
    key;
  while ((key = keys[i++])) {
    out[key] = obj[key];
  }
  return out;
};


H.Obj.pluck = function(obj, propName) {
  const map = H.Obj.mapValues;
  const prop = H.Obj.prop;
  return map(obj, prop(propName));
};


H.Obj.prop = function(name) {
  return function(obj) {
    return obj[name];
  };
};


    H.Obj.reduce = function (obj, callback, memo, thisObj) {
        const size = H.Obj.size;
        const forOwn = H.Obj.for_own;
        var initial = arguments.length > 2;
        if (!size(obj) && !initial) {
            throw new Error('reduce of empty object with no initial value');
        }
        forOwn(obj, function(value, key, list) {
            if (!initial) {
                memo = value;
                initial = true;
            }
            else {
                memo = callback.call(thisObj, memo, value, key, list);
            }
        });
        return memo;
    }
/*!
 * set-value <https://github.com/jonschlinkert/set-value>
 *
 * Copyright (c) 2014-2018, Jon Schlinkert.
 * Released under the MIT License.
 */
'use strict';
H.Obj.set = function() {
const isPlain = H.Assert.is_plain_object;
var exec = function (target, path, value, options) {
  if (!isObject(target)) {
    return target;
  }
  let opts = options || {};
  const isArray = Array.isArray(path);
  if (!isArray && typeof path !== 'string') {
    return target;
  }
  let merge = opts.merge;
  if (merge && typeof merge !== 'function') {
    merge = Object.assign;
  }
  const keys = (isArray ? path : split(path, opts)).filter(isValidKey);
  const len = keys.length;
  const orig = target;
  if (!options && keys.length === 1) {
    result(target, keys[0], value, merge);
    return target;
  }
  for (let i = 0; i < len; i++) {
    let prop = keys[i];
    if (!isObject(target[prop])) {
      target[prop] = {};
    }
    if (i === len - 1) {
      result(target, prop, value, merge);
      break;
    }
    target = target[prop];
  }
  return orig;
}
function result(target, path, value, merge) {
  if (merge && isPlain(target[path]) && isPlain(value)) {
    target[path] = merge({}, target[path], value);
  } else {
    target[path] = value;
  }
}
function split(path, options) {
  const id = createKey(path, options);
  if (exec.memo[id]) return exec.memo[id];
  const char = (options && options.separator) ? options.separator : '.';
  let keys = [];
  let res = [];
  if (options && typeof options.split === 'function') {
    keys = options.split(path);
  } else {
    keys = path.split(char);
  }
  for (let i = 0; i < keys.length; i++) {
    let prop = keys[i];
    while (prop && prop.slice(-1) === '\\' && keys[i + 1]) {
      prop = prop.slice(0, -1) + char + keys[++i];
    }
    res.push(prop);
  }
  exec.memo[id] = res;
  return res;
}
function createKey(pattern, options) {
  let id = pattern;
  if (typeof options === 'undefined') {
    return id + '';
  }
  const keys = Object.keys(options);
  for (let i = 0; i < keys.length; i++) {
    const key = keys[i];
    id += ';' + key + '=' + String(options[key]);
  }
  return id;
}
function isValidKey(key) {
  return key !== '__proto__' && key !== 'constructor' && key !== 'prototype';
}
function isObject(val) {
  return val !== null && (typeof val === 'object' || typeof val === 'function');
}
exec.memo = {};
return {
    exec : exec
}
}();

    H.Obj.size = function (obj) {
        const forOwn = H.Obj.for_own
        var count = 0;
        forOwn(obj, function(){
            count++;
        });
        return count;
    }


'use strict';
H.Obj.union_value = (obj, prop, value) => {
    const isObject = H.Assert.is_object;
    const get = H.Obj.get;
    const set = H.Obj.set;
      const flatten = (...args) => {
        let res = [];
        let flat = arr => {
          for (let ele of arr) Array.isArray(ele) ? flat(ele, res) : res.push(ele);
        };
        flat(args);
        return res;
      };
      const unique = arr => arr.filter((v, i) => arr.indexOf(v) === i);
      const union = (...args) => unique(flatten(...args));
      const first = (...args) => args.find(v => v != null);
  if (!isObject(obj)) {
    throw new TypeError('expected the first argument to be an object');
  }
  if (typeof prop !== 'string') {
    throw new TypeError('expected the second argument to be a string');
  }
  let arr = [].concat(first(get(obj, prop), []));
  set.exec(obj, prop, union(arr, [].concat(first(value, []))));
  return obj;
};

H.Obj.unset = function(obj, prop) {
  const has = H.Obj.has;
  if (has(obj, prop)) {
    var parts = prop.split("."),
      last = parts.pop();
    while ((prop = parts.shift())) {
      obj = obj[prop];
    }
    return delete obj[last];
  } else {
    return true;
  }
};


H.Obj.values = function(obj) {
  const forOwn = H.Obj.for_own;
  var vals = [];
  forOwn(obj, function(val, key) {
    vals.push(val);
  });
  return vals;
};


H.Opts.apply_defaults = function (obj, defaults) {
    for (let key of Object.keys(defaults)) {
        if (!obj.hasOwnProperty(key))
            obj[key] = defaults[key];
    }
    return obj;
}

H.Opts.default_value = function (prop, value) {
    return typeof prop !== 'undefined' ? prop : value;
};

H.Stats.asc_num = function(a, b) { return a - b; }

H.Stats.binning = function() {
const cmp = H.Comparator.cmp;
const to_locale = H.Time.to_locale;
const to_utc = H.Time.to_utc;
const EPSILON = H.Math.epsilon; 
function bins(opt) {
  if (!opt) { throw Error("Missing binning options."); }
  var maxb = opt.maxbins || 15,
      base = opt.base || 10,
      logb = Math.log(base),
      div = opt.div || [5, 2],
      min = opt.min,
      max = opt.max,
      span = max - min,
      step, level, minstep, precision, v, i, eps;
  if (opt.step) {
    step = opt.step;
  } else if (opt.steps) {
    step = opt.steps[Math.min(
      opt.steps.length - 1,
      bisect(opt.steps, span/maxb, 0, opt.steps.length)
    )];
  } else {
    level = Math.ceil(Math.log(maxb) / logb);
    minstep = opt.minstep || 0;
    step = Math.max(
      minstep,
      Math.pow(base, Math.round(Math.log(span) / logb) - level)
    );
    while (Math.ceil(span/step) > maxb) { step *= base; }
    for (i=0; i<div.length; ++i) {
      v = step / div[i];
      if (v >= minstep && span / v <= maxb) step = v;
    }
  }
  v = Math.log(step);
  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;
  eps = Math.pow(base, -precision - 1);
  min = Math.min(min, Math.floor(min / step + eps) * step);
  max = Math.ceil(max / step) * step;
  return {
    start: min,
    stop:  max,
    step:  step,
    unit:  {precision: precision},
    value: value,
    index: index
  };
}
function bisect(a, x, lo, hi) {
  while (lo < hi) {
    var mid = lo + hi >>> 1;
    if (cmp(a[mid], x) < 0) { lo = mid + 1; }
    else { hi = mid; }
  }
  return lo;
}
function value(v) {
  return this.step * Math.floor(v / this.step + EPSILON);
}
function index(v) {
  return Math.floor((v - this.start) / this.step + EPSILON);
}
function date_value(v) {
  return this.unit.date(value.call(this, v));
}
function date_index(v) {
  return index.call(this, this.unit.unit(v));
}
bins.date = function(opt) {
  if (!opt) { throw Error("Missing date binning options."); }
  var units = opt.utc ? to_utc : time,
      dmin = opt.min,
      dmax = opt.max,
      maxb = opt.maxbins || 20,
      minb = opt.minbins || 4,
      span = (+dmax) - (+dmin),
      unit = opt.unit ? units[opt.unit] : units.find(span, minb, maxb),
      spec = bins({
        min:     unit.min != null ? unit.min : unit.unit(dmin),
        max:     unit.max != null ? unit.max : unit.unit(dmax),
        maxbins: maxb,
        minstep: unit.minstep,
        steps:   unit.step
      });
  spec.unit = unit;
  spec.index = date_index;
  if (!opt.raw) spec.value = date_value;
  return spec;
};
}
H.Stats.clip = function (arg, min, max) {
    return Math.max(min, Math.min(arg, max));
}

H.Stats.corrcoeff = function (arr1, arr2) {
    const covariance = H.Stats.covariance;
    const stdev = H.Stats.stdev;
    return covariance(arr1, arr2) /
        stdev(arr1, 1) /
        stdev(arr2, 1);
};

H.Stats.covariance = function (arr1, arr2) {
    const mean = H.Stats.mean;
    const sum = H.Stats.sum;
    var u = mean(arr1);
    var v = mean(arr2);
    var arr1Len = arr1.length;
    var sq_dev = new Array(arr1Len);
    var i;
    for (i = 0; i < arr1Len; i++)
      sq_dev[i] = (arr1[i] - u) * (arr2[i] - v);
    return sum(sq_dev) / (arr1Len - 1);
};

H.Stats.cumreduce = function (arr, func, toAlter) {
    const isArray = H.Assert.is_array;
    var row, nrow, ncol, res, col;
    if (!isArray(arr[0]))
      arr = [arr];
    nrow = arr.length;
    ncol = arr[0].length;
    res = toAlter ? arr : new Array(nrow);
    for (row = 0; row < nrow; row++) {
      if (!res[row])
        res[row] = new Array(ncol);
      if (ncol > 0)
        res[row][0] = arr[row][0];
      for (col = 1; col < ncol; col++)
        res[row][col] = func(res[row][col-1], arr[row][col]);
    }
    return res.length === 1 ? res[0] : res;
  };

H.Stats.cumsum = function (arr) {
    const cumreduce = H.Stats.cumreduce;
    return cumreduce(arr, function (a, b) { return a + b; });
  };

H.Stats.determination = function(data, x, y, uY, predict) {
  const visitPoints = H.Stats.points.visit_points;
  let SSE = 0,
    SST = 0;
  visitPoints(data, x, y, (dx, dy) => {
    const sse = dy - predict(dx),
      sst = dy - uY;
    SSE += sse * sse;
    SST += sst * sst;
  });
  return 1 - SSE / SST;
};


H.Stats.diff = function (arr) {
    var diffs = [];
    var arrLen = arr.length;
    var i;
    for (i = 1; i < arrLen; i++)
      diffs.push(arr[i] - arr[i - 1]);
    return diffs;
  };

H.Stats.gcd = function(a, b) {
    if (b === 0) return a;
    return (b, a % b);
};

H.Stats.histogram = function (arr, binCnt) {
    const min = H.Stats.min;
    const max = H.Stats.max;
    binCnt = binCnt || 4;
    var first = min(arr);
    var binWidth = (max(arr) - first) / binCnt;
    var len = arr.length;
    var bins = [];
    var i;
    for (i = 0; i < binCnt; i++)
      bins[i] = 0;
    for (i = 0; i < len; i++)
      bins[Math.min(Math.floor(((arr[i] - first) / binWidth)), binCnt - 1)] += 1;
    return bins;
  };

H.Stats.iqr = function (x) {
    const quantile = H.Stats.quantiles;
    const q1 = quantile(x, 0.75);
    const q2 = quantile(x, 0.25);
    if (typeof q1 === "number" && typeof q2 === "number") {
        return q1 - q2;
    }
}

H.Stats.max = function (arr) {
    var high = arr[0];
    var i = 0;
    while (++i < arr.length)
      if (arr[i] > high)
        high = arr[i];
    return high;
  };

H.Stats.mean = function (arr) {
    const sum = H.Stats.sum;
    return sum(arr) / arr.length;
};

H.Stats.median = function (arr) {
    const ascNum = H.Stats.asc_num;
    var arrlen = arr.length;
    var _arr = arr.slice().sort(ascNum);
    return !(arrlen & 1)
      ? (_arr[(arrlen / 2) - 1 ] + _arr[(arrlen / 2)]) / 2
      : _arr[(arrlen / 2) | 0 ];
  };

H.Stats.min = function (arr) {
    var low = arr[0];
    var i = 0;
    while (++i < arr.length)
      if (arr[i] < low)
        low = arr[i];
    return low;
  };

H.Stats.mode = function(arr) {
    const ascNum = H.Stats.asc_num;
    var arrLen = arr.length;
    var _arr = arr.slice().sort(ascNum);
    var count = 1;
    var maxCount = 0;
    var numMaxCount = 0;
    var mode_arr = [];
    var i;
    for (i = 0; i < arrLen; i++) {
      if (_arr[i] === _arr[i + 1]) {
        count++;
      } else {
        if (count > maxCount) {
          mode_arr = [_arr[i]];
          maxCount = count;
          numMaxCount = 0;
        }
        else if (count === maxCount) {
          mode_arr.push(_arr[i]);
          numMaxCount++;
        }
        count = 1;
      }
    }
    return numMaxCount === 0 ? mode_arr[0] : mode_arr;
  };

H.Stats.numeric_sort = function (x) {
    return (
        x
            .slice()
            .sort(function(a, b) {
                return a - b;
            })
    );
}

H.Stats.ols = function (uX, uY, uXY, uX2) {
    const delta = uX2 - uX * uX,
          slope = Math.abs(delta) < 1e-24 ? 0 : (uXY - uX * uY) / delta,
          intercept = uY - slope * uX;
    return [intercept, slope];
  }

H.Stats.points = function() {
    var points = function (data, x, y, sort) {
    data = data.filter(d => {
      let u = x(d), v = y(d);
      return u != null && isFinite(u) && v != null && isFinite(v);
    });
    if (sort) {
      data.sort((a, b) => x(a) - x(b));
    }
    const n = data.length,
          X = new Float64Array(n),
          Y = new Float64Array(n);
    let ux = 0, uy = 0, xv, yv, d;
    for (let i = 0; i < n; ) {
      d = data[i];
      X[i] = xv = +x(d);
      Y[i] = yv = +y(d);
      ++i;
      ux += (xv - ux) / i;
      uy += (yv - uy) / i;
    }
    for (let i = 0; i < n; ++i) {
      X[i] -= ux;
      Y[i] -= uy;
    }
    return [X, Y, ux, uy];
  }
  var visit_points = function (data, x, y, cb){
    let iterations = 0;
    for (let i = 0, n = data.length; i < n; i++) {
      const d = data[i],
            dx = +x(d),
            dy = +y(d);
      if (dx != null && isFinite(dx) && dy != null && isFinite(dy)) {
        cb(dx, dy, iterations++);
      }
    }
  }
  return {
    points : points,
    visit_points : visit_points
  }
}();

H.Stats.quantiles = function (arr, quantilesArray, alphap, betap) {
  const ascNum = H.Stats.asc_num;
  const clip = H.Stats.clip;
    var sortedArray = arr.slice().sort(ascNum);
    var quantileVals = [quantilesArray.length];
    var n = arr.length;
    var i, p, m, aleph, k, gamma;
    if (typeof alphap === 'undefined')
      alphap = 3 / 8;
    if (typeof betap === 'undefined')
      betap = 3 / 8;
    for (i = 0; i < quantilesArray.length; i++) {
      p = quantilesArray[i];
      m = alphap + p * (1 - alphap - betap);
      aleph = n * p + m;
      k = Math.floor(clip(aleph, 1, n - 1));
      gamma = clip(aleph - k, 0, 1);
      quantileVals[i] = (1 - gamma) * sortedArray[k - 1] + gamma * sortedArray[k];
    }
    return quantileVals;
  };
  

H.Stats.quartiles = function (arr) {
    var arrlen = arr.length;
    var _arr = arr.slice().sort(ascNum);
    return [
      _arr[ Math.round((arrlen) / 4) - 1 ],
      _arr[ Math.round((arrlen) / 2) - 1 ],
      _arr[ Math.round((arrlen) * 3 / 4) - 1 ]
    ];
  };

H.Stats.r_squared = function(x, func) {
    if (x.length < 2) {
        return 1;
    }
    let sum = 0;
    for (let i = 0; i < x.length; i++) {
        sum += x[i][1];
    }
    const average = sum / x.length;
    let sumOfSquares = 0;
    for (let j = 0; j < x.length; j++) {
        sumOfSquares += Math.pow(average - x[j][1], 2);
    }
    let err = 0;
    for (let k = 0; k < x.length; k++) {
        err += Math.pow(x[k][1] - func(x[k][0]), 2);
    }
    return 1 - err / sumOfSquares;
};


H.Stats.rank = function (arr) {
    const ascNum = H.Stats.asc_num;
    var arrlen = arr.length;
    var sorted = arr.slice().sort(ascNum);
    var ranks = new Array(arrlen);
    var val;
    for (var i = 0; i < arrlen; i++) {
      var first = sorted.indexOf(arr[i]);
      var last = sorted.lastIndexOf(arr[i]);
      if (first === last) {
        val = first;
      } else {
        val = (first + last) / 2;
      }
      ranks[i] = val + 1;
    }
    return ranks;
  };
 H.Stats.spearmancoeff =  function (arr1, arr2) {
    const rank = H.Stats.rank;
    const corrcoeff = H.Stats.corrcoeff;
    arr1 = rank(arr1);
    arr2 = rank(arr2);
    return corrcoeff(arr1, arr2);
  }

H.Stats.stdev = function stdev(arr, flag) {
    const variance = H.Stats.variance;
    return Math.sqrt(variance(arr, flag));
  };

H.Stats.sum = function (arr) {
    var sum = 0;
    var i = arr.length;
    while (--i >= 0)
      sum += arr[i];
    return sum;
  };

H.Stats.sumsqerr = function (arr) {
    var mean = H.Stats.mean(arr);
    var sum = 0;
    var i = arr.length;
    var tmp;
    while (--i >= 0) {
      tmp = arr[i] - mean;
      sum += tmp * tmp;
    }
    return sum;
  };

H.Stats.unique_count_sorted = function (x) {
    let uniqueValueCount = 0,
        lastSeenValue;
    for (let i = 0; i < x.length; i++) {
        if (i === 0 || x[i] !== lastSeenValue) {
            lastSeenValue = x[i];
            uniqueValueCount++;
        }
    }
    return uniqueValueCount;
}

H.Stats.variance = function (arr, flag) {
    const sumsqerr = H.Stats.sumsqerr;
    return sumsqerr(arr) / (arr.length - (flag ? 1 : 0));
};

H.Stats.zeros = function zeros(rows, cols) {
    const isNumber = H.Assert.is_number;
    const create = H.Stats.create_matrix;
    if (!isNumber(cols))
      cols = rows;
    return create(rows, cols, retZero);
  };

function zScore(x, mean, standardDeviation) {
    return (x - mean) / standardDeviation;
}


H.String.acronym = function (x){
  return x.split(" ").map(function(d){ return d[0]; }).join("");
}

H.String.count = function (x, y){
  return (x.match(new RegExp(y, "g")) || []).length;
}

H.String.ends_with = function (x, y, bool){
  x = x.toString();
  return bool ? x.toUpperCase().endsWith(y.toUpperCase()) : x.endsWith(y);
}

H.String.first_letter = function (x){
  var y = x.match(/\b[a-zA-Z]/);
  return y ? y[0] : null;
}

H.String.has_digit = function (x){
  return /\d/.test(x);
}

H.String.includes = function (x, y, bool){
  x = x.toString();
  return bool ? x.toUpperCase().indexOf(y.toUpperCase()) != -1 : x.indexOf(y) != -1;
}

H.String.is_all_caps = function (x) {
  return x === x.toUpperCase();
}

H.String.is_all_digits = function (x){
  return /^\d+$/.test(x);
}

H.String.is_all_lower = function (x) {
  return x === x.toLowerCase();
}

H.String.is_upper_case = function (char) {    
  return char >= "A" && char <= "Z";
}

H.String.join = function(items, separator) {
    function isValidString(val) {
      return val != null && val !== "";
    }
    separator = separator || "";
    return filter(items, isValidString).join(separator);
}

H.String.keep_all = function (x, y){
  return x.toString().split("").map(function(d){ if (d == y) return d; }).join("");
}

H.String.keep_end = function (x, n) {
  x = x.toString();
  return x.slice(x.length - n, x.length)
}

H.String.keep_number = function (x){
	return x.replace(/[^\d.-]/g, "");
}

H.String.keep_one = function (x, y) {
  const keepAll = H.String.keep_all;
  return keepAll(x, y).charAt(0);
}

H.String.keep_start = function (x, n){
  return x.toString().slice(0, +n)
}

H.String.number_commas = function (x) {
  const removeAll = H.String.remove_all;
  return removeAll(x, ",").replace(/\B(?=(\d{3})+(?!\d))/g, ",");
};

H.String.number_decimals = function (x, n) {
  const removeAll = H.String.remove_all;
  return Number(removeAll(x, ",")).toFixed(n);
};

H.String.number_ordinal = function (x) {
  var j = x % 10,
      k = x % 100;
  return j == 1 && k != 11 ? x + "st" :
  	j == 2 && k != 12 ? x + "nd" :
  	j == 3 && k != 13 ? x + "rd" :
  	x + "th";
}

H.String.number_prepend = function (x, n, c) {
  const firstLetter = H.String.first_letter;
  const removeAll = H.String.remove_all;
	c = !c ? "0" :
		typeof(c) !== "string" ? "0" :
		c.length > 1 ? firstLetter(c) :
		c;
  for (var s = "", i = 1; i <= n - removeAll(x, ",").length; i++){
    s = s + c;
  }
  return s + removeAll(x, ",");
};

H.String.random_string = function (n) {
  if (!n) n = 5;
  var x = "",
    p = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
  for (var i = 0; i < n; i++) {
    x += p.charAt(Math.floor(Math.random() * p.length));
  }
  return x;
}

H.String.remove_all = function (x, y) {
  const replaceAll = H.String.replace_all;
  x = x.toString();
  return replaceAll(x, y , "");
}

H.String.remove_digits = function (x){
  return x.toString().replace(/\d+/g, "");
}

H.String.remove_first = function (x, y){
  return x.toString().replace(y, "");
}

H.String.remove_last = function (x, y) {
  const replaceLast = H.String.replace_last;
  return replaceLast(x, y, "");
}

H.String.remove_symbols = function (x){
  return x.replace(/[^a-zA-Z ]/g, "");
}

H.String.remove_tags = function (x, y){
  if (!y) y = [];
  y = y.map(function(d){ return "<" + d + ">"; }).join(",");
  y = (((y || "") + "").toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join(""); 
  var tags = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi,
      commentsAndPhpTags = /<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;
  return x.replace(commentsAndPhpTags, '').replace(tags, function ($0, $1) {
      return y.indexOf("<" + $1.toLowerCase() + ">") > -1 ? $0 : "";
  });
}

H.String.replace_all = function (x, y, z){
  return x.toString().replace(new RegExp(y, "g"), z);
}

H.String.replace_at = function (string, index, replacement){
  if (!index) index = 0;
  return string.substr(0, index) + replacement + string.substr(index + replacement.length);
}

H.String.replace_first = function (x, y, z){
  return x.toString().replace(y, z);
}

H.String.replace_last = function (x, y, z) {
  x = x.toString();
  var a = x.split("");
  a[x.lastIndexOf(y)] = z;
  return a.join("");
}

H.String.reverse_characters = function (x){
  return x.toString().split("").reverse().join("");
};

H.String.reverse_words = function (x){
  return x.toString().split(" ").reverse().join(" ");
}

H.String.shuffle_characters_in_words = function (x) {
  const shuffleCharacters = H.String.shuffle_characters;
  return x.toString().split(" ").map(function(d){ return shuffleCharacters(d); }).join(" ");
}

H.String.shuffle_characters = function (x) {
  const shuffle = H.Array.shuffle;
  return shuffle(x.toString().split("")).join("");
}

H.String.shuffle_words = function (x) {
  const shuffle = H.Array.shuffle;
  return shuffle(x.toString().split(" ")).join(" ");
}

H.String.split_after_first = function (str, char){
	if (!str || typeof(str) !== "string") {
		throw new Error("The first argument must be a string.");
	}
	if (!char || typeof(char) !== "string") {
		throw new Error("The second argument must be a string.");	
	}
	if (char.length == 0 || str.indexOf(char) == -1) {
		return [str, ""];
	} else if (char.length == 1){
		var i = str.indexOf(char);
		return [str.substring(0, i), str.substring(i + 1)]
	} else if (char.length > 1){
		var spl = str.split(char);
		var first = spl[0];
		spl.shift();
		return [first, spl.join(char)];
	}
}

H.String.split_after_last = function (str, char){
	if (!str || typeof(str) !== "string") {
		throw new Error("The first argument must be a string.");
	}
	if (!char || typeof(char) !== "string") {
		throw new Error("The second argument must be a string.");	
	}
	if (char.length == 0 || str.indexOf(char) == -1) {
		return [str, ""];
	} else if (char.length == 1){
		var i = str.lastIndexOf(char);
		return [str.substring(0, i), str.substring(i + 1)]
	} else if (char.length > 1){
		var spl = str.split(char);
		var last = spl[spl.length - 1];
		spl.pop();
		return [spl.join(char), last];
	}
}

H.String.split_at_index = function (str, i) {
	const isArray = H.Assert.is_array;
	const sortNumbers = H.Array.sort_numbers;
	if (!str || typeof(str) !== "string") {
		throw new Error("The first argument must be a string.");
	}
	if (!i || (typeof(i) !== "number" && !isArray(i)) ) {
		throw new Error("The second argument must be a number or an array.");	
	}
	if (typeof(i) == "number"){
		return [str.substring(0, i), str.substring(i)];	
	} else {
		if (i.some(function(num){
			return typeof(num) !== "number"
		})) {
			throw new Error("Every item in the second argument array must be a number.")
		}
		var out = sortNumbers(i).map(function(num, num_i){
			return str.substring(i[num_i - 1], num);
		});
		out.push(str.substring(i[i.length - 1]));
		return out;
	}
}
'use strict';
H.String.split = function(input, options = {}, fn) {
  if (typeof input !== 'string') throw new TypeError('expected a string');
  if (typeof options === 'function') {
    fn = options;
    options = {};
  }
  let separator = options.separator || '.';
  let ast = { type: 'root', nodes: [], stash: [''] };
  let stack = [ast];
  let state = { input, separator, stack };
  let string = input;
  let value, node;
  let i = -1;
  state.bos = () => i === 0;
  state.eos = () => i === string.length;
  state.prev = () => string[i - 1];
  state.next = () => string[i + 1];
  let quotes = options.quotes || [];
  let openers = options.brackets || {};
  if (options.brackets === true) {
    openers = { '[': ']', '(': ')', '{': '}', '<': '>' };
  }
  if (options.quotes === true) {
    quotes = ['"', '\'', '`'];
  }
  let closers = invert(openers);
  let keep = options.keep || (value => value !== '\\');
  const block = () => (state.block = stack[stack.length - 1]);
  const peek = () => string[i + 1];
  const next = () => string[++i];
  const append = value => {
    state.value = value;
    if (value && keep(value, state) !== false) {
      state.block.stash[state.block.stash.length - 1] += value;
    }
  };
  const closeIndex = (value, startIdx) => {
    let idx = string.indexOf(value, startIdx);
    if (idx > -1 && string[idx - 1] === '\\') {
      idx = closeIndex(value, idx + 1);
    }
    return idx;
  };
  for (; i < string.length - 1;) {
    state.value = value = next();
    state.index = i;
    block();
    if (value === '\\') {
      if (peek() === '\\') {
        append(value + next());
      } else {
        append(value);
        append(next());
      }
      continue;
    }
    if (quotes.includes(value)) {
      let pos = i + 1;
      let idx = closeIndex(value, pos);
      if (idx > -1) {
        append(value); 
        append(string.slice(pos, idx)); 
        append(string[idx]); 
        i = idx;
        continue;
      }
      append(value);
      continue;
    }
    if (options.brackets !== false && openers[value]) {
      node = { type: 'bracket', nodes: [] };
      node.stash = keep(value) !== false ? [value] : [''];
      node.parent = state.block;
      state.block.nodes.push(node);
      stack.push(node);
      continue;
    }
    if (options.brackets !== false && closers[value]) {
      if (stack.length === 1) {
        append(value);
        continue;
      }
      append(value);
      node = stack.pop();
      block();
      append(node.stash.join(''));
      continue;
    }
    if (value === separator && state.block.type === 'root') {
      if (typeof fn === 'function' && fn(state) === false) {
        append(value);
        continue;
      }
      state.block.stash.push('');
      continue;
    }
    append(value);
  }
  node = stack.pop();
  while (node !== ast) {
    if (options.strict === true) {
      let column = i - node.stash.length + 1;
      throw new SyntaxError(`Unmatched: "${node.stash[0]}", at column ${column}`);
    }
    value = (node.parent.stash.pop() + node.stash.join('.'));
    node.parent.stash = node.parent.stash.concat(value.split('.'));
    node = stack.pop();
  }
  function invert(obj) {
    let inverted = {};
    for (const key of Object.keys(obj)) inverted[obj[key]] = key;
    return inverted;
  }
  return node.stash;
};

H.String.starts_with = function (x, y, bool){
  return bool ? x.toUpperCase().startsWith(y.toUpperCase()) : x.toString().startsWith(y);
}

H.String.to_camel_case = function (x){
  return x.toString().replace(/(?:^\w|[A-Z]|\b\w)/g, function(letter, index) {
    return index == 0 ? letter.toLowerCase() : letter.toUpperCase();
  }).replace(/\s+/g, "").replace(/[^\w\-]+/g, "");
}

H.String.to_sentence_case = function (x, bool) {
const firstLetter = H.String.first_letter;
const flatten = H.Array.flatten;
  x = bool ? x.toString().toLowerCase() : x.toString();
  var sentences = splitByMulti(x, [". ", "! ", "? "]);
  return sentences.map(function(sentence){
  	var first_letter = firstLetter(sentence);
  	return first_letter ? sentence.replace(first_letter, first_letter.toUpperCase()) : sentence;	
  }).join("")
  function splitByMulti(str, arr){
  	var out = str.split(arr[0]).map(function(d, i, data){ 
  		return mapper(d, i, data, arr[0]);
  	});
  	arr.shift();
  	arr.forEach(function(splitter){
  		out = flatten(out.map(function(d){ return d.split(splitter).map(function(e, i, data){ return mapper(e, i, data, splitter); }); }))
  	});
  	return out;
  	function mapper(d, i, data, splitter){
  		return data.length == 0 ? d :
  			i < data.length - 1 ? d + splitter :
  			d;
  	}
  }
}

H.String.to_slug_case = function (x) {
  return x.toString().toLowerCase()
    .replace(/\s+/g, "-")           
    .replace(/[^\w\-]+/g, "")       
    .replace(/\-\-+/g, "-")         
    .replace(/^-+/, "")             
    .replace(/-+$/, "");            
}

H.String.to_snake_case = function (x) {
  return x.toString().toLowerCase()
    .replace(/\s+/g, "_")           
    .replace(/[^\w\_]+/g, "")       
    .replace(/\_\_+/g, "_")         
    .replace(/^_+/, "")             
    .replace(/_+$/, "");            
}

H.String.to_start_case = function (x, bool) {
  const toSentenceCase = H.String.to_sentence_case;
  return x.toString().split(" ").map(function(d){ return bool ? toSentenceCase(d, bool) : toSentenceCase(d); }).join(" ");
};

H.String.to_title_case = function (x) {
  var smalls = [];
  var articles = ["A", "An", "The"].forEach(function(d){ smalls.push(d); });
  var conjunctions = ["And", "But", "Or", "Nor", "So", "Yet"].forEach(function(d){ smalls.push(d); })
  var prepositions = ["As", "At", "Atop", "By", "Into", "It", "In", "For", "From", "Of", "Onto", "On", "Out", "Over", "Per", "To", "Unto", "Up", "Upon", "With"].forEach(function(d){ smalls.push(d); });
  x = x.split("").reverse().join("") + " ";
  x = x.replace(/['"]?[a-z]['"]?(?= )/g, function(match){ return match.toUpperCase(); });
  x = x.split("").slice(0, -1).reverse().join("")
  x = x.replace(/ .*?(?= )/g, function(match){
    if (smalls.indexOf(match.substr(1)) !== -1) {
      return match.toLowerCase();
    }
    return match;
  });
  x = x.replace(/(([^\.]\w\. )|(\.[\w]*?\.\. )).*?(?=[ \.])/g, function(match) {
    var word = match.split(" ")[1];
    var letters = word.split("");
    letters[0] = letters[0].toUpperCase();
    word = letters.join("");
    if(smalls.indexOf(word) !== -1) {
      return match.split(" ")[0] + " " + word;
    }
    return match;
  });
  x = x.replace(/: .*?(?= )/g, function(match){ 
    var first_letter = match.match(/\b[a-z]/);
    return match.replace(first_letter[0], first_letter[0].toUpperCase()); 
  });
  return x;
}

'use strict';
H.Structure.BST = function() {
class Node {
    constructor(key, val) {
        this.key = key;
        this.value = val !== undefined ? val : key;
        this.left = null;
        this.right = null;
        this.count = 1; 
        this.isRed = true;
    }
}
var cmp = {
    isLess: function(a, b) {
        return a < b;
    },
    isLessOrEqual: function(a, b) {
        return a <= b;
    },
    isGreater: function(a, b) {
        return a > b;
    },
    isGreaterOrEqual: function(a, b) {
        return a >= b;
    },
    areEqual: function(a, b) {
        return a === b;
    }
};
function initCompare(compareFunc) {
    if (compareFunc) {
        cmp.isLess = function(a, b) {
            return compareFunc(a, b) < 0;
        }
        cmp.isLessOrEqual = function(a, b) {
            return compareFunc(a, b) <= 0;
        }
        cmp.isGreater = function(a, b) {
            return compareFunc(a, b) > 0;
        }
        cmp.isGreaterOrEqual = function(a, b) {
            return compareFunc(a, b) >= 0;
        }
        cmp.areEqual = function(a, b) {
            return compareFunc(a, b) === 0;
        }
    }
}
function count(node) {
    return node ? node.count : 0;
}
function recalculateCount(node) {
    if (node) {
        node.count = count(node.left) + count(node.right) + 1;
    }
    return node;
}
function isRed(node) {
    return node ? node.isRed : false;
}
function rotateLeft(node) {
    if (node === null) return;
    var rootCount = node.count;
    var newRoot = node.right; 
    node.right = newRoot.left; 
    node = recalculateCount(node);
    newRoot.left = node; 
    newRoot.isRed = node.isRed;
    newRoot.count = rootCount;
    node.isRed = true;
    return newRoot;
}
function rotateRight(node) {
    if (node === null) return;
    var rootCount = node.count;
    var newRoot = node.left; 
    node.left = newRoot.right; 
    node = recalculateCount(node);
    newRoot.right = node; 
    newRoot.isRed = node.isRed;
    newRoot.count = rootCount;
    node.isRed = true;
    return newRoot;
}
function flipColors(node) {
    if (node === null) return;
    if (!isRed(node.left) || !isRed(node.right)) return;
    node.right.isRed = false;
    node.left.isRed = false;
    node.isRed = true;
    return node;
}
function balance(node) {
    if (node) {
        if (isRed(node.right) && !isRed(node.left)) {
            node = rotateLeft(node);
        }
        if (node.left !== null) {
            if (isRed(node.left) && isRed(node.left.left)) {
                node = rotateRight(node);
            }
        }
        if (isRed(node.left) && isRed(node.right)) {
            node = flipColors(node);
        }
    }
    node = recalculateCount(node);
    return node;
}
function put(node, key, val) {
    if (node === null) {
        return new Node(key, val);
    } else if (cmp.areEqual(node.key, key)) {
        node.value = val;
    } else if (cmp.isLess(key, node.key)) {
        if (node.left === null) {
            node.left = new Node(key, val);
        } else {
            node.left = put(node.left, key, val);
        }
    } else {
        if (node.right === null) {
            node.right = new Node(key, val);
        } else {
            node.right = put(node.right, key, val);
        }
    }
    node = recalculateCount(node);
    node = balance(node);
    return node;
}
function deleteByKey(node, key) {
    if (node === null) {
        return null;
    }
    if (cmp.areEqual(node.key, key)) {
        if (node.left === null && node.right === null) {
            if (node.isRed) {
                return {
                    node: null,
                    doubleBlack: false
                };
            } else {
                return {
                    node: null,
                    doubleBlack: true
                };
            }
        } else {
            if (node.right === null) {
                node = node.left;
                node.isRed = false;
                return {
                    node: node,
                    doubleBlack: false
                };
            } else {
                let result = moveMin(node, node.right);
                node.right = result.node;
                result.node = node; 
                if (result.doubleBlack) {
                    result = balanceDoubleBlack(node, 'left');
                    node = result.node;
                }
                return result;
            }
        }
    }
    var result = null;
    if (cmp.isLess(key, node.key)) {
        result = deleteByKey(node.left, key);
        if (result) {
            node.left = result.node;
            result.node = node;
            if (result.doubleBlack) {
                result = balanceDoubleBlack(node, 'right');
                node = result.node;
            }
        }
    } else {
        result = deleteByKey(node.right, key);
        if (result) {
            node.right = result.node;
            result.node = node;
            if (result.doubleBlack) {
                result = balanceDoubleBlack(node, 'left');
                node = balanceResult.node;
            }
        }
    }
    node = recalculateCount(node);
    return result;
}
function balanceDoubleBlack(node, sideToBalance) {
    if (sideToBalance === 'right') {
        if (node.right) {
            if (!node.right.isRed) {
                node.right.isRed = true;
            } else {
                node = rotateLeft(node);
                node.left.isRed = false;
                if (node.left.right) {
                    node.left.right.isRed = true;
                }
                node.left = balance(node.left);
            }
        }
    } else {
        if (node.left) {
            if (!node.left.isRed) {
                node.left.isRed = true;
            } else {
                node = rotateRight(node);
                node.right.isRed = false;
                if (node.right.left) {
                    node.right.left.isRed = true;
                }
                node.right = balance(node.right);
            }
        }
    }
    var result = {
        node: node,
        doubleBlack: true
    };
    if (node.isRed) {
        node.isRed = false;
        result.doubleBlack = false;
    }
    return result;
}
function moveMin(rootNode, node) {
    var result = {
        node: null,
        doubleBlack: false
    };
    if (node === null) {
        return result;
    }
    if (node.right !== null && node.left === null) {
        node = rotateLeft(node);
    }
    if (node.left !== null) {
        result = moveMin(rootNode, node.left);
        node.left = result.node;
        result.node = node;
        if (result.doubleBlack) {
            result = balanceDoubleBlack(node, 'right');
        }
    } else {
        rootNode.key = node.key;
        rootNode.value = node.value;
        rootNode.count--;
        result = {
            node: null, 
            doubleBlack: !node.isRed 
        };
    }
    return result;
}
function min(node) {
    if (node === null) {
        return null;
    }
    while (node.left !== null) {
        node = node.left;
    }
    return node;
}
function max(node) {
    if (node === null) {
        return null;
    }
    while (node.right !== null) {
        node = node.right;
    }
    return node;
}
function findNode(key) {
    var node = this.root;
    while (node !== null) {
        if (cmp.areEqual(node.key, key)) {
            return node;
        }
        if (cmp.isLess(this.comparekey, node.key)) {
            node = node.left;
        } else {
            node = node.right;
        }
    }
    return null;
}
function floorNode(x, node) {
    if (node === null) {
        return null;
    } else if (cmp.areEqual(node.key, x)) {
        return node;
    } else if (cmp.isLess(node.key, x)) {
        let rightFloor = floorNode(x, node.right);
        return rightFloor ? rightFloor : node;
    } else {
        return floorNode(x, node.left);
    }
}
function ceilingNode(x, node) {
    if (node === null) {
        return null;
    } else if (cmp.areEqual(node.key, x)) {
        return node;
    } else if (cmp.isLess(x, node.key)) {
        let leftCeiling = ceilingNode(x, node.left);
        return leftCeiling ? leftCeiling : node;
    } else {
        return ceilingNode(x, node.right);
    }
}
function inOrderTraversal(node, callback) {
    if (node !== null) {
        inOrderTraversal(node.left, callback);
        callback(node);
        inOrderTraversal(node.right, callback);
    }
}
function preOrderTraversal(node, callback) {
    if (node !== null) {
        callback(node);
        preOrderTraversal(node.left, callback);
        preOrderTraversal(node.right, callback);
    }
}
function postOrderTraversal(node, callback) {
    if (node !== null) {
        postOrderTraversal(node.left, callback);
        postOrderTraversal(node.right, callback);
        callback(node);
    }
}
function traversalRange(greaterFunc, lessFunc, node, callback) {
    if (node !== null) {
        if (greaterFunc(node.key)) {
            traversalRange(greaterFunc, lessFunc, node.left, callback);
        }
        if (greaterFunc(node.key) && lessFunc(node.key)) {
            callback(node);
        }
        if (lessFunc(node.key)) {
            traversalRange(greaterFunc, lessFunc, node.right, callback);
        }
    }
}
function countLess(x, node, includeEqual) {
    if (node === null) {
        return 0;
    } else if (cmp.areEqual(node.key, x)) {
        return (node.left ? node.left.count : 0) + includeEqual;
    } else if (cmp.isLess(node.key, x)) {
        return (node.left ? node.left.count + 1 : 1) + countLess(x, node.right, includeEqual);
    } else {
        return countLess(x, node.left, includeEqual);
    }
}
function countGreater(x, node, includeEqual) {
    if (node === null) {
        return 0;
    } else if (cmp.areEqual(node.key, x)) {
        return (node.right ? node.right.count : 0) + includeEqual;
    } else if (cmp.isLess(x, node.key)) {
        return (node.right ? node.right.count + 1 : 1) + countGreater(x, node.left, includeEqual);
    } else {
        return countGreater(x, node.right, includeEqual);
    }
}
class BinarySearchTree {
    constructor(constructorData, compareFunc) {
        this.root = null;
        if (constructorData) {
            if (Array.isArray(constructorData)) {
                let arr = constructorData;
                for (let i = 0; i < arr.length; i++) {
                    if (arr[i].key && arr[i].value) {
                        this.put(arr[i].key, arr[i].value);
                    } else {
                        this.put(arr[i]);
                    }
                }
            }
            let arr = constructorData.data;
            if (Array.isArray(arr)) {
                for (let i = 0; i < arr.length; i++) {
                    let key = constructorData.keyPredicate ? constructorData.keyPredicate(arr[i]) : arr[i];
                    this.put(key, arr[i]);
                }
            }
        }
        initCompare(compareFunc);
    }
    put(key, val) {
        this.root = put(this.root, key, val);
        this.root.isRed = false;
        return this;
    }
    delete(key) {
        var result = deleteByKey(this.root, key);
        if (result) {
            this.root = result.node;
        }
        return this;
    }
    getValue(key) {
        var node = findNode(key);
        if (node) {
            return node.value;
        } else {
            return null;
        }
    }
    min() {
        var node = min(this.root);
        return node ? node.value : null;
    }
    max() {
        var node = max(this.root);
        return node ? node.value : null;
    }
    floor(x) {
        var node = this.root;
        var floorNode = floorNode(x, node);
        return floorNode ? floorNode.key : null;
    }
    ceiling(x) {
        var node = this.root;
        var ceilingNode = ceilingNode(x, node);
        return ceilingNode ? ceilingNode.key : null;
    }
    iterate(callback, traversalType) {
        var node = this.root;
        if (traversalType) {
            if (traversalType === 'pre') {
                preOrderTraversal(node, callback);
            } else if (traversalType === 'post') {
                postOrderTraversal(node, callback);
            } else {
                inOrderTraversal(node, callback);
            }
        } else {
            inOrderTraversal(node, callback);
        }
        return this;
    }
    iterateRange(from, to, callback, opt) {
        var node = this.root;
        var greaterFunc = (x) => {
            return cmp.isGreaterOrEqual(x, from)
        };
        var lessFunc = (x) => {
            return cmp.isLessOrEqual(x, to)
        };
        if (opt) {
            if (opt.excludeFrom) {
                greaterFunc = (x) => {
                    return cmp.isGreater(x, from)
                };
            }
            if (opt.excludeTo) {
                lessFunc = (x) => {
                    return cmp.isGreater(x, from)
                };
            }
        }
        traversalRange(greaterFunc, lessFunc, node, callback);
        return this;
    }
    countLess(x) {
        return countLess(x, this.root, 0);
    }
    countLessOrEqual(x) {
        return countLess(x, this.root, 1);
    }
    countGreater(x) {
        return countGreater(x, this.root, 0);
    }
    countGreaterOrEqual(x) {
        return countGreater(x, this.root, 1);
    }
    countRange(from, to, opt) {
        var includeLessEqual = false;
        var includeGreaterEqual = false;
        if (opt) {
            if (opt.excludeFrom) {
                includeLessEqual = true;
            }
            if (opt.excludeTo) {
                includeGreaterEqual = true;
            }
        }
        if (this.root === null) {
            return 0;
        } else {
            return this.root.count - countLess(from, this.root, includeLessEqual) - countGreater(to, this.root, includeGreaterEqual);
        }
    }
    toValueArray() {
        var arr = [];
        this.iterate((node) => {
            arr.push(node.value);
        });
        return arr;
    }
    toKeyArray() {
        var arr = [];
        this.iterate((node) => {
            arr.push(node.key);
        });
        return arr;
    }
    toArray() {
        var arr = [];
        this.iterate((node) => {
            arr.push({
                key: node.key,
                value: node.value
            });
        });
        return arr;
    }
    clear() {
        this.root = null;
    }
    filter(predicateFunc) {
        var result = new BinarySearchTree();
        this.iterate((node) => {
            if (predicateFunc(node)) {
                result.put(node.key, node.value);
            }
        });
        return result;
    }
    map(callback) {
        var result = new BinarySearchTree();
        this.iterate((node) => {
            result.put(callback(node));
        });
        return result;
    }
    reduce(callback, init) {
        return this.toArray().reduce(callback, init);
    }
}
return {
    BinarySearchTree : BinarySearchTree
}
}()

H.Dictionary = function (toStrFunction) {
    const isUndefined = H.Assert.is_undef;
    const defaultEquals = H.Comparator.is_equal;
    const defaultToString = H.Coerce.default_to_string
    var dictionary = {},
        table = {},
        nElements = 0,
        toStr = toStrFunction || defaultToString,
        keyPrefix = '/$ ';
    dictionary.get = function (key) {
        var pair = table[keyPrefix + toStr(key)];
        if (isUndefined(pair)) {
            return undefined;
        }
        return pair.value;
    };
    dictionary.set = function (key, value) {
        var ret, k, previousElement;
        if (isUndefined(key) || isUndefined(value)) {
            return undefined;
        }
        k = keyPrefix + toStr(key);
        previousElement = table[k];
        if (isUndefined(previousElement)) {
            nElements += 1;
            ret = undefined;
        } else {
            ret = previousElement.value;
        }
        table[k] = {
            key: key,
            value: value
        };
        return ret;
    };
    dictionary.remove = function (key) {
        var k = keyPrefix + toStr(key),
            previousElement = table[k];
        if (!isUndefined(previousElement)) {
            delete table[k];
            nElements -= 1;
            return previousElement.value;
        }
        return undefined;
    };
    dictionary.keys = function () {
        var array = [],
            name;
        for (name in table) {
            if (Object.prototype.hasOwnProperty.call(table, name)) {
                array.push(table[name].key);
            }
        }
        return array;
    };
    dictionary.values = function () {
        var array = [],
            name;
        for (name in table) {
            if (Object.prototype.hasOwnProperty.call(table, name)) {
                array.push(table[name].value);
            }
        }
        return array;
    };
    dictionary.forEach = function (callback) {
        var name, pair, ret;
        for (name in table) {
            if (Object.prototype.hasOwnProperty.call(table, name)) {
                pair = table[name];
                ret = callback(pair.key, pair.value);
                if (ret === false) {
                    return;
                }
            }
        }
    };
    dictionary.containsKey = function (key) {
        return !isUndefined(dictionary.get(key));
    };
    dictionary.clear = function () {
        table = {};
        nElements = 0;
    };
    dictionary.size = function () {
        return nElements;
    };
    dictionary.isEmpty = function () {
        return nElements <= 0;
    };
    dictionary.equals = function (other, equalsFunction) {
        var eqf, isEqual;
        if (isUndefined(other) || typeof other.keys !== 'function') {
            return false;
        }
        if (dictionary.size() !== other.size()) {
            return false;
        }
        eqf = equalsFunction || defaultEquals;
        isEqual = true;
        other.forEach(function (k, v) {
            isEqual = eqf(dictionary.get(k), v);
            return isEqual;
        });
        return isEqual;
    };
    return dictionary
};

H.Structure.fixed_reverse_heap = function() {
const Heap = H.Structure.heap;
const DEFAULT_COMPARATOR = H.Comparator.cmp
const reverseComparator = H.Comparator.cmp_reverse;
function siftUp(compare, heap, size, i) {
  var endIndex = size,
      startIndex = i,
      item = heap[i],
      childIndex = 2 * i + 1,
      rightIndex;
  while (childIndex < endIndex) {
    rightIndex = childIndex + 1;
    if (
      rightIndex < endIndex &&
      compare(heap[childIndex], heap[rightIndex]) >= 0
    ) {
      childIndex = rightIndex;
    }
    heap[i] = heap[childIndex];
    i = childIndex;
    childIndex = 2 * i + 1;
  }
  heap[i] = item;
  Heap.siftDown(compare, heap, startIndex, i);
}
function consume(ArrayClass, compare, heap, size) {
  var l = size,
      i = l;
  var array = new ArrayClass(size),
      lastItem,
      item;
  while (i > 0) {
    lastItem = heap[--i];
    if (i !== 0) {
      item = heap[0];
      heap[0] = lastItem;
      siftUp(compare, heap, --size, 0);
      lastItem = item;
    }
    array[i] = lastItem;
  }
  return array;
}
function FixedReverseHeap(ArrayClass, comparator, capacity) {
  if (arguments.length === 2) {
    capacity = comparator;
    comparator = null;
  }
  this.ArrayClass = ArrayClass;
  this.capacity = capacity;
  this.items = new ArrayClass(capacity);
  this.clear();
  this.comparator = comparator || DEFAULT_COMPARATOR;
  if (typeof capacity !== 'number' && capacity <= 0)
    throw new Error('mnemonist/FixedReverseHeap.constructor: capacity should be a number > 0.');
  if (typeof this.comparator !== 'function')
    throw new Error('mnemonist/FixedReverseHeap.constructor: given comparator should be a function.');
  this.comparator = reverseComparator(this.comparator);
}
FixedReverseHeap.prototype.clear = function() {
  this.size = 0;
};
FixedReverseHeap.prototype.push = function(item) {
  if (this.size < this.capacity) {
    this.items[this.size] = item;
    Heap.siftDown(this.comparator, this.items, 0, this.size);
    this.size++;
  }
  else {
    if (this.comparator(item, this.items[0]) > 0)
      Heap.replace(this.comparator, this.items, item);
  }
  return this.size;
};
FixedReverseHeap.prototype.consume = function() {
  var items = consume(this.ArrayClass, this.comparator, this.items, this.size);
  this.size = 0;
  return items;
};
FixedReverseHeap.prototype.toArray = function() {
  return consume(this.ArrayClass, this.comparator, this.items.slice(0, this.size), this.size);
};
FixedReverseHeap.prototype.inspect = function() {
  var proxy = this.toArray();
  Object.defineProperty(proxy, 'constructor', {
    value: FixedReverseHeap,
    enumerable: false
  });
  return proxy;
};
if (typeof Symbol !== 'undefined')
  FixedReverseHeap.prototype[Symbol.for('nodejs.util.inspect.custom')] = FixedReverseHeap.prototype.inspect;
return {
    FixedReverseHeap : FixedReverseHeap
}
}();

H.Structure.for_each = function() {
var ARRAY_BUFFER_SUPPORT = typeof ArrayBuffer !== 'undefined',
    SYMBOL_SUPPORT = typeof Symbol !== 'undefined';
function forEach(iterable, callback) {
  var iterator, k, i, l, s;
  if (!iterable)
    throw new Error('obliterator/forEach: invalid iterable.');
  if (typeof callback !== 'function')
    throw new Error('obliterator/forEach: expecting a callback.');
  if (
    Array.isArray(iterable) ||
    (ARRAY_BUFFER_SUPPORT && ArrayBuffer.isView(iterable)) ||
    typeof iterable === 'string' ||
    iterable.toString() === '[object Arguments]'
  ) {
    for (i = 0, l = iterable.length; i < l; i++)
      callback(iterable[i], i);
    return;
  }
  if (typeof iterable.forEach === 'function') {
    iterable.forEach(callback);
    return;
  }
  if (
    SYMBOL_SUPPORT &&
    Symbol.iterator in iterable &&
    typeof iterable.next !== 'function'
  ) {
    iterable = iterable[Symbol.iterator]();
  }
  if (typeof iterable.next === 'function') {
    iterator = iterable;
    i = 0;
    while ((s = iterator.next(), s.done !== true)) {
      callback(s.value, i);
      i++;
    }
    return;
  }
  for (k in iterable) {
    if (iterable.hasOwnProperty(k)) {
      callback(iterable[k], k);
    }
  }
  return;
}
forEach.forEachWithNullKeys = function(iterable, callback) {
  var iterator, k, i, l, s;
  if (!iterable)
    throw new Error('obliterator/forEachWithNullKeys: invalid iterable.');
  if (typeof callback !== 'function')
    throw new Error('obliterator/forEachWithNullKeys: expecting a callback.');
  if (
    Array.isArray(iterable) ||
    (ARRAY_BUFFER_SUPPORT && ArrayBuffer.isView(iterable)) ||
    typeof iterable === 'string' ||
    iterable.toString() === '[object Arguments]'
  ) {
    for (i = 0, l = iterable.length; i < l; i++)
      callback(iterable[i], null);
    return;
  }
  if (iterable instanceof Set) {
    iterable.forEach(function(value) {
      callback(value, null);
    });
    return;
  }
  if (typeof iterable.forEach === 'function') {
    iterable.forEach(callback);
    return;
  }
  if (
    SYMBOL_SUPPORT &&
    Symbol.iterator in iterable &&
    typeof iterable.next !== 'function'
  ) {
    iterable = iterable[Symbol.iterator]();
  }
  if (typeof iterable.next === 'function') {
    iterator = iterable;
    i = 0;
    while ((s = iterator.next(), s.done !== true)) {
      callback(s.value, null);
      i++;
    }
    return;
  }
  for (k in iterable) {
    if (iterable.hasOwnProperty(k)) {
      callback(iterable[k], k);
    }
  }
  return;
};
return {
    forEach : forEach
}
}()


H.Structure.fuzzy_map = function() {
    const forEach = H.Structure.for_each.forEach;
var identity = function(x) {
  return x;
};
function FuzzyMap(descriptor) {
  this.items = new Map();
  this.clear();
  if (Array.isArray(descriptor)) {
    this.writeHashFunction = descriptor[0];
    this.readHashFunction = descriptor[1];
  }
  else {
    this.writeHashFunction = descriptor;
    this.readHashFunction = descriptor;
  }
  if (!this.writeHashFunction)
    this.writeHashFunction = identity;
  if (!this.readHashFunction)
    this.readHashFunction = identity;
  if (typeof this.writeHashFunction !== 'function')
    throw new Error('mnemonist/FuzzyMap.constructor: invalid hash function given.');
  if (typeof this.readHashFunction !== 'function')
    throw new Error('mnemonist/FuzzyMap.constructor: invalid hash function given.');
}
FuzzyMap.prototype.clear = function() {
  this.items.clear();
  this.size = 0;
};
FuzzyMap.prototype.add = function(item) {
  var key = this.writeHashFunction(item);
  this.items.set(key, item);
  this.size = this.items.size;
  return this;
};
FuzzyMap.prototype.set = function(key, item) {
  key = this.writeHashFunction(key);
  this.items.set(key, item);
  this.size = this.items.size;
  return this;
};
FuzzyMap.prototype.get = function(key) {
  key = this.readHashFunction(key);
  return this.items.get(key);
};
FuzzyMap.prototype.has = function(key) {
  key = this.readHashFunction(key);
  return this.items.has(key);
};
FuzzyMap.prototype.forEach = function(callback, scope) {
  scope = arguments.length > 1 ? scope : this;
  this.items.forEach(function(value) {
    callback.call(scope, value, value);
  });
};
FuzzyMap.prototype.values = function() {
  return this.items.values();
};
if (typeof Symbol !== 'undefined')
  FuzzyMap.prototype[Symbol.iterator] = FuzzyMap.prototype.values;
FuzzyMap.prototype.inspect = function() {
  var array = Array.from(this.items.values());
  Object.defineProperty(array, 'constructor', {
    value: FuzzyMap,
    enumerable: false
  });
  return array;
};
if (typeof Symbol !== 'undefined')
  FuzzyMap.prototype[Symbol.for('nodejs.util.inspect.custom')] = FuzzyMap.prototype.inspect;
FuzzyMap.from = function(iterable, descriptor, useSet) {
  var map = new FuzzyMap(descriptor);
  forEach(iterable, function(value, key) {
    if (useSet)
      map.set(key, value);
    else
      map.add(value);
  });
  return map;
};
return {
    FuzzyMap : FuzzyMap
}
}();
"use strict";
H.Structure.graph = function() {
const has = H.Obj.has;
const constant = H.Func.identity;
const keys = H.Obj.keys;
const filter = H.Array.filter;
const isFunction = H.Assert.is_function;
const isEmpty = H.Assert.is_empty;
const each = H.Array.for_each;
const isUndefined = H.Assert.is_undef;
const values = H.Obj.values;
const reduce = H.Collection.reduce;
const union = H.Array.union;
var DEFAULT_EDGE_NAME = "\x00";
var GRAPH_NODE = "\x00";
var EDGE_KEY_DELIM = "\x01";
function Graph(opts) {
  this._isDirected = has(opts, "directed") ? opts.directed : true;
  this._isMultigraph = has(opts, "multigraph") ? opts.multigraph : false;
  this._isCompound = has(opts, "compound") ? opts.compound : false;
  this._label = undefined;
  this._defaultNodeLabelFn = constant(undefined);
  this._defaultEdgeLabelFn = constant(undefined);
  this._nodes = {};
  if (this._isCompound) {
    this._parent = {};
    this._children = {};
    this._children[GRAPH_NODE] = {};
  }
  this._in = {};
  this._preds = {};
  this._out = {};
  this._sucs = {};
  this._edgeObjs = {};
  this._edgeLabels = {};
}
Graph.prototype._nodeCount = 0;
Graph.prototype._edgeCount = 0;
Graph.prototype.isDirected = function() {
  return this._isDirected;
};
Graph.prototype.isMultigraph = function() {
  return this._isMultigraph;
};
Graph.prototype.isCompound = function() {
  return this._isCompound;
};
Graph.prototype.setGraph = function(label) {
  this._label = label;
  return this;
};
Graph.prototype.graph = function() {
  return this._label;
};
Graph.prototype.setDefaultNodeLabel = function(newDefault) {
  if (!isFunction(newDefault)) {
    newDefault = constant(newDefault);
  }
  this._defaultNodeLabelFn = newDefault;
  return this;
};
Graph.prototype.nodeCount = function() {
  return this._nodeCount;
};
Graph.prototype.nodes = function() {
  return keys(this._nodes);
};
Graph.prototype.sources = function() {
  var self = this;
  return filter(this.nodes(), function(v) {
    return isEmpty(self._in[v]);
  });
};
Graph.prototype.sinks = function() {
  var self = this;
  return filter(this.nodes(), function(v) {
    return isEmpty(self._out[v]);
  });
};
Graph.prototype.setNodes = function(vs, value) {
  var args = arguments;
  var self = this;
  each(vs, function(v) {
    if (args.length > 1) {
      self.setNode(v, value);
    } else {
      self.setNode(v);
    }
  });
  return this;
};
Graph.prototype.setNode = function(v, value) {
  if (has(this._nodes, v)) {
    if (arguments.length > 1) {
      this._nodes[v] = value;
    }
    return this;
  }
  this._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v);
  if (this._isCompound) {
    this._parent[v] = GRAPH_NODE;
    this._children[v] = {};
    this._children[GRAPH_NODE][v] = true;
  }
  this._in[v] = {};
  this._preds[v] = {};
  this._out[v] = {};
  this._sucs[v] = {};
  ++this._nodeCount;
  return this;
};
Graph.prototype.node = function(v) {
  return this._nodes[v];
};
Graph.prototype.hasNode = function(v) {
  return has(this._nodes, v);
};
Graph.prototype.removeNode =  function(v) {
  var self = this;
  if (has(this._nodes, v)) {
    var removeEdge = function(e) { self.removeEdge(self._edgeObjs[e]); };
    delete this._nodes[v];
    if (this._isCompound) {
      this._removeFromParentsChildList(v);
      delete this._parent[v];
      each(this.children(v), function(child) {
        self.setParent(child);
      });
      delete this._children[v];
    }
    each(keys(this._in[v]), removeEdge);
    delete this._in[v];
    delete this._preds[v];
    each(keys(this._out[v]), removeEdge);
    delete this._out[v];
    delete this._sucs[v];
    --this._nodeCount;
  }
  return this;
};
Graph.prototype.setParent = function(v, parent) {
  if (!this._isCompound) {
    throw new Error("Cannot set parent in a non-compound graph");
  }
  if (isUndefined(parent)) {
    parent = GRAPH_NODE;
  } else {
    parent += "";
    for (var ancestor = parent;
      !isUndefined(ancestor);
      ancestor = this.parent(ancestor)) {
      if (ancestor === v) {
        throw new Error("Setting " + parent+ " as parent of " + v +
                        " would create a cycle");
      }
    }
    this.setNode(parent);
  }
  this.setNode(v);
  this._removeFromParentsChildList(v);
  this._parent[v] = parent;
  this._children[parent][v] = true;
  return this;
};
Graph.prototype._removeFromParentsChildList = function(v) {
  delete this._children[this._parent[v]][v];
};
Graph.prototype.parent = function(v) {
  if (this._isCompound) {
    var parent = this._parent[v];
    if (parent !== GRAPH_NODE) {
      return parent;
    }
  }
};
Graph.prototype.children = function(v) {
  if (isUndefined(v)) {
    v = GRAPH_NODE;
  }
  if (this._isCompound) {
    var children = this._children[v];
    if (children) {
      return keys(children);
    }
  } else if (v === GRAPH_NODE) {
    return this.nodes();
  } else if (this.hasNode(v)) {
    return [];
  }
};
Graph.prototype.predecessors = function(v) {
  var predsV = this._preds[v];
  if (predsV) {
    return keys(predsV);
  }
};
Graph.prototype.successors = function(v) {
  var sucsV = this._sucs[v];
  if (sucsV) {
    return keys(sucsV);
  }
};
Graph.prototype.neighbors = function(v) {
  var preds = this.predecessors(v);
  if (preds) {
    return union(preds, this.successors(v));
  }
};
Graph.prototype.isLeaf = function (v) {
  var neighbors;
  if (this.isDirected()) {
    neighbors = this.successors(v);
  } else {
    neighbors = this.neighbors(v);
  }
  return neighbors.length === 0;
};
Graph.prototype.filterNodes = function(filter) {
  var copy = new this.constructor({
    directed: this._isDirected,
    multigraph: this._isMultigraph,
    compound: this._isCompound
  });
  copy.setGraph(this.graph());
  var self = this;
  each(this._nodes, function(value, v) {
    if (filter(v)) {
      copy.setNode(v, value);
    }
  });
  each(this._edgeObjs, function(e) {
    if (copy.hasNode(e.v) && copy.hasNode(e.w)) {
      copy.setEdge(e, self.edge(e));
    }
  });
  var parents = {};
  function findParent(v) {
    var parent = self.parent(v);
    if (parent === undefined || copy.hasNode(parent)) {
      parents[v] = parent;
      return parent;
    } else if (parent in parents) {
      return parents[parent];
    } else {
      return findParent(parent);
    }
  }
  if (this._isCompound) {
    each(copy.nodes(), function(v) {
      copy.setParent(v, findParent(v));
    });
  }
  return copy;
};
Graph.prototype.setDefaultEdgeLabel = function(newDefault) {
  if (!isFunction(newDefault)) {
    newDefault = constant(newDefault);
  }
  this._defaultEdgeLabelFn = newDefault;
  return this;
};
Graph.prototype.edgeCount = function() {
  return this._edgeCount;
};
Graph.prototype.edges = function() {
  return values(this._edgeObjs);
};
Graph.prototype.setPath = function(vs, value) {
  var self = this;
  var args = arguments;
  reduce(vs, function(v, w) {
    if (args.length > 1) {
      self.setEdge(v, w, value);
    } else {
      self.setEdge(v, w);
    }
    return w;
  });
  return this;
};
Graph.prototype.setEdge = function() {
  var v, w, name, value;
  var valueSpecified = false;
  var arg0 = arguments[0];
  if (typeof arg0 === "object" && arg0 !== null && "v" in arg0) {
    v = arg0.v;
    w = arg0.w;
    name = arg0.name;
    if (arguments.length === 2) {
      value = arguments[1];
      valueSpecified = true;
    }
  } else {
    v = arg0;
    w = arguments[1];
    name = arguments[3];
    if (arguments.length > 2) {
      value = arguments[2];
      valueSpecified = true;
    }
  }
  v = "" + v;
  w = "" + w;
  if (!isUndefined(name)) {
    name = "" + name;
  }
  var e = edgeArgsToId(this._isDirected, v, w, name);
  if (has(this._edgeLabels, e)) {
    if (valueSpecified) {
      this._edgeLabels[e] = value;
    }
    return this;
  }
  if (!isUndefined(name) && !this._isMultigraph) {
    throw new Error("Cannot set a named edge when isMultigraph = false");
  }
  this.setNode(v);
  this.setNode(w);
  this._edgeLabels[e] = valueSpecified ? value : this._defaultEdgeLabelFn(v, w, name);
  var edgeObj = edgeArgsToObj(this._isDirected, v, w, name);
  v = edgeObj.v;
  w = edgeObj.w;
  Object.freeze(edgeObj);
  this._edgeObjs[e] = edgeObj;
  incrementOrInitEntry(this._preds[w], v);
  incrementOrInitEntry(this._sucs[v], w);
  this._in[w][e] = edgeObj;
  this._out[v][e] = edgeObj;
  this._edgeCount++;
  return this;
};
Graph.prototype.edge = function(v, w, name) {
  var e = (arguments.length === 1
    ? edgeObjToId(this._isDirected, arguments[0])
    : edgeArgsToId(this._isDirected, v, w, name));
  return this._edgeLabels[e];
};
Graph.prototype.hasEdge = function(v, w, name) {
  var e = (arguments.length === 1
    ? edgeObjToId(this._isDirected, arguments[0])
    : edgeArgsToId(this._isDirected, v, w, name));
  return has(this._edgeLabels, e);
};
Graph.prototype.removeEdge = function(v, w, name) {
  var e = (arguments.length === 1
    ? edgeObjToId(this._isDirected, arguments[0])
    : edgeArgsToId(this._isDirected, v, w, name));
  var edge = this._edgeObjs[e];
  if (edge) {
    v = edge.v;
    w = edge.w;
    delete this._edgeLabels[e];
    delete this._edgeObjs[e];
    decrementOrRemoveEntry(this._preds[w], v);
    decrementOrRemoveEntry(this._sucs[v], w);
    delete this._in[w][e];
    delete this._out[v][e];
    this._edgeCount--;
  }
  return this;
};
Graph.prototype.inEdges = function(v, u) {
  var inV = this._in[v];
  if (inV) {
    var edges = values(inV);
    if (!u) {
      return edges;
    }
    return filter(edges, function(edge) { return edge.v === u; });
  }
};
Graph.prototype.outEdges = function(v, w) {
  var outV = this._out[v];
  if (outV) {
    var edges = values(outV);
    if (!w) {
      return edges;
    }
    return filter(edges, function(edge) { return edge.w === w; });
  }
};
Graph.prototype.nodeEdges = function(v, w) {
  var inEdges = this.inEdges(v, w);
  if (inEdges) {
    return inEdges.concat(this.outEdges(v, w));
  }
};
function incrementOrInitEntry(map, k) {
  if (map[k]) {
    map[k]++;
  } else {
    map[k] = 1;
  }
}
function decrementOrRemoveEntry(map, k) {
  if (!--map[k]) { delete map[k]; }
}
function edgeArgsToId(isDirected, v_, w_, name) {
  var v = "" + v_;
  var w = "" + w_;
  if (!isDirected && v > w) {
    var tmp = v;
    v = w;
    w = tmp;
  }
  return v + EDGE_KEY_DELIM + w + EDGE_KEY_DELIM +
             (isUndefined(name) ? DEFAULT_EDGE_NAME : name);
}
function edgeArgsToObj(isDirected, v_, w_, name) {
  var v = "" + v_;
  var w = "" + w_;
  if (!isDirected && v > w) {
    var tmp = v;
    v = w;
    w = tmp;
  }
  var edgeObj =  { v: v, w: w };
  if (name) {
    edgeObj.name = name;
  }
  return edgeObj;
}
function edgeObjToId(isDirected, edgeObj) {
  return edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name);
}
return {
  Graph : Graph
}
}()
H.hash = function() {
}

H.Structure.heap = function() {
const forEach = H.Structure.for_each.forEach;
const iterables = H.Structure.iterables;
const DEFAULT_COMPARATOR = H.Comparator.cmp
const reverseComparator = H.Comparator.cmp_reverse;
function siftDown(compare, heap, startIndex, i) {
  var item = heap[i],
      parentIndex,
      parent;
  while (i > startIndex) {
    parentIndex = (i - 1) >> 1;
    parent = heap[parentIndex];
    if (compare(item, parent) < 0) {
      heap[i] = parent;
      i = parentIndex;
      continue;
    }
    break;
  }
  heap[i] = item;
}
function siftUp(compare, heap, i) {
  var endIndex = heap.length,
      startIndex = i,
      item = heap[i],
      childIndex = 2 * i + 1,
      rightIndex;
  while (childIndex < endIndex) {
    rightIndex = childIndex + 1;
    if (
      rightIndex < endIndex &&
      compare(heap[childIndex], heap[rightIndex]) >= 0
    ) {
      childIndex = rightIndex;
    }
    heap[i] = heap[childIndex];
    i = childIndex;
    childIndex = 2 * i + 1;
  }
  heap[i] = item;
  siftDown(compare, heap, startIndex, i);
}
function push(compare, heap, item) {
  heap.push(item);
  siftDown(compare, heap, 0, heap.length - 1);
}
function pop(compare, heap) {
  var lastItem = heap.pop();
  if (heap.length !== 0) {
    var item = heap[0];
    heap[0] = lastItem;
    siftUp(compare, heap, 0);
    return item;
  }
  return lastItem;
}
function replace(compare, heap, item) {
  if (heap.length === 0)
    throw new Error('mnemonist/heap.replace: cannot pop an empty heap.');
  var popped = heap[0];
  heap[0] = item;
  siftUp(compare, heap, 0);
  return popped;
}
function pushpop(compare, heap, item) {
  var tmp;
  if (heap.length !== 0 && compare(heap[0], item) < 0) {
    tmp = heap[0];
    heap[0] = item;
    item = tmp;
    siftUp(compare, heap, 0);
  }
  return item;
}
function heapify(compare, array) {
  var n = array.length,
      l = n >> 1,
      i = l;
  while (--i >= 0)
    siftUp(compare, array, i);
}
function consume(compare, heap) {
  var l = heap.length,
      i = 0;
  var array = new Array(l);
  while (i < l)
    array[i++] = pop(compare, heap);
  return array;
}
function nsmallest(compare, n, iterable) {
  if (arguments.length === 2) {
    iterable = n;
    n = compare;
    compare = DEFAULT_COMPARATOR;
  }
  var reverseCompare = reverseComparator(compare);
  var i, l, v;
  var min = Infinity;
  var result;
  if (n === 1) {
    if (iterables.isArrayLike(iterable)) {
      for (i = 0, l = iterable.length; i < l; i++) {
        v = iterable[i];
        if (min === Infinity || compare(v, min) < 0)
          min = v;
      }
      result = new iterable.constructor(1);
      result[0] = min;
      return result;
    }
    forEach(iterable, function(value) {
      if (min === Infinity || compare(value, min) < 0)
        min = value;
    });
    return [min];
  }
  if (iterables.isArrayLike(iterable)) {
    if (n >= iterable.length)
      return iterable.slice().sort(compare);
    result = iterable.slice(0, n);
    heapify(reverseCompare, result);
    for (i = n, l = iterable.length; i < l; i++)
      if (reverseCompare(iterable[i], result[0]) > 0)
        replace(reverseCompare, result, iterable[i]);
    return result.sort(compare);
  }
  var size = iterables.guessLength(iterable);
  if (size !== null && size < n)
    n = size;
  result = new Array(n);
  i = 0;
  forEach(iterable, function(value) {
    if (i < n) {
      result[i] = value;
    }
    else {
      if (i === n)
        heapify(reverseCompare, result);
      if (reverseCompare(value, result[0]) > 0)
        replace(reverseCompare, result, value);
    }
    i++;
  });
  if (result.length > i)
    result.length = i;
  return result.sort(compare);
}
function nlargest(compare, n, iterable) {
  if (arguments.length === 2) {
    iterable = n;
    n = compare;
    compare = DEFAULT_COMPARATOR;
  }
  var reverseCompare = reverseComparator(compare);
  var i, l, v;
  var max = -Infinity;
  var result;
  if (n === 1) {
    if (iterables.isArrayLike(iterable)) {
      for (i = 0, l = iterable.length; i < l; i++) {
        v = iterable[i];
        if (max === -Infinity || compare(v, max) > 0)
          max = v;
      }
      result = new iterable.constructor(1);
      result[0] = max;
      return result;
    }
    forEach(iterable, function(value) {
      if (max === -Infinity || compare(value, max) > 0)
        max = value;
    });
    return [max];
  }
  if (iterables.isArrayLike(iterable)) {
    if (n >= iterable.length)
      return iterable.slice().sort(reverseCompare);
    result = iterable.slice(0, n);
    heapify(compare, result);
    for (i = n, l = iterable.length; i < l; i++)
      if (compare(iterable[i], result[0]) > 0)
        replace(compare, result, iterable[i]);
    return result.sort(reverseCompare);
  }
  var size = iterables.guessLength(iterable);
  if (size !== null && size < n)
    n = size;
  result = new Array(n);
  i = 0;
  forEach(iterable, function(value) {
    if (i < n) {
      result[i] = value;
    }
    else {
      if (i === n)
        heapify(compare, result);
      if (compare(value, result[0]) > 0)
        replace(compare, result, value);
    }
    i++;
  });
  if (result.length > i)
    result.length = i;
  return result.sort(reverseCompare);
}
function Heap(comparator) {
  this.clear();
  this.comparator = comparator || DEFAULT_COMPARATOR;
  if (typeof this.comparator !== 'function')
    throw new Error('mnemonist/Heap.constructor: given comparator should be a function.');
}
Heap.prototype.clear = function() {
  this.items = [];
  this.size = 0;
};
Heap.prototype.push = function(item) {
  push(this.comparator, this.items, item);
  return ++this.size;
};
Heap.prototype.peek = function() {
  return this.items[0];
};
Heap.prototype.pop = function() {
  if (this.size !== 0)
    this.size--;
  return pop(this.comparator, this.items);
};
Heap.prototype.replace = function(item) {
  return replace(this.comparator, this.items, item);
};
Heap.prototype.pushpop = function(item) {
  return pushpop(this.comparator, this.items, item);
};
Heap.prototype.consume = function() {
  this.size = 0;
  return consume(this.comparator, this.items);
};
Heap.prototype.toArray = function() {
  return consume(this.comparator, this.items.slice());
};
Heap.prototype.inspect = function() {
  var proxy = this.toArray();
  Object.defineProperty(proxy, 'constructor', {
    value: Heap,
    enumerable: false
  });
  return proxy;
};
if (typeof Symbol !== 'undefined')
  Heap.prototype[Symbol.for('nodejs.util.inspect.custom')] = Heap.prototype.inspect;
function MaxHeap(comparator) {
  this.clear();
  this.comparator = comparator || DEFAULT_COMPARATOR;
  if (typeof this.comparator !== 'function')
    throw new Error('mnemonist/MaxHeap.constructor: given comparator should be a function.');
  this.comparator = reverseComparator(this.comparator);
}
MaxHeap.prototype = Heap.prototype;
Heap.from = function(iterable, comparator) {
  var heap = new Heap(comparator);
  var items;
  if (iterables.isArrayLike(iterable))
    items = iterable.slice();
  else
    items = iterables.toArray(iterable);
  heapify(heap.comparator, items);
  heap.items = items;
  heap.size = items.length;
  return heap;
};
MaxHeap.from = function(iterable, comparator) {
  var heap = new MaxHeap(comparator);
  var items;
  if (iterables.isArrayLike(iterable))
    items = iterable.slice();
  else
    items = iterables.toArray(iterable);
  heapify(heap.comparator, items);
  heap.items = items;
  heap.size = items.length;
  return heap;
};
return {
    Heap : Heap
}
}();

H.Structure.iterables = function() {
const forEach = H.Structure.for_each.forEach;
const isTypedArray = H.Assert.is_typed_array.isTypedArray;
function isArrayLike(target) {
  return Array.isArray(target) || isTypedArray(target);
}
function guessLength(target) {
  if (typeof target.length === 'number')
    return target.length;
  if (typeof target.size === 'number')
    return target.size;
  return;
}
function toArray(target) {
  var l = guessLength(target);
  var array = typeof l === 'number' ? new Array(l) : [];
  var i = 0;
  forEach(target, function(value) {
    array[i++] = value;
  });
  return array;
}
return {
    isArrayLike : isArrayLike,
    guessLength : guessLength,
    toArray : toArray
}
}();

H.Structure.iterator = function() {
function Iterator(next) {
    Object.defineProperty(this, '_next', {
      writable: false,
      enumerable: false,
      value: next
    });
    this.done = false;
  }
  Iterator.prototype.next = function() {
    if (this.done)
      return {done: true};
    var step = this._next();
    if (step.done)
      this.done = true;
    return step;
  };
  if (typeof Symbol !== 'undefined')
    Iterator.prototype[Symbol.iterator] = function() {
      return this;
    };
  Iterator.of = function() {
    var args = arguments,
        l = args.length,
        i = 0;
    return new Iterator(function() {
      if (i >= l)
        return {done: true};
      return {done: false, value: args[i++]};
    });
  };
  Iterator.empty = function() {
    var iterator = new Iterator(null);
    iterator.done = true;
    return iterator;
  };
  Iterator.is = function(value) {
    if (value instanceof Iterator)
      return true;
    return (
      typeof value === 'object' &&
      value !== null &&
      typeof value.next === 'function'
    );
  };
return {
    Iterator : Iterator
}
}();
H.Structure.linked_map = function() {
    const each = H.Array.each;
    var LinkedMap = function( keyGeneratorFunction ){
        this.__list = [];
        this.__map = {};
        if( typeof keyGeneratorFunction === 'function' ){
            this.generateKey = keyGeneratorFunction;
        }
    };
    LinkedMap.prototype = {
        each: function( fn ){
            each(this.__map, fn);
        },
        get: function( id_or_val ){
            var result = this.__map[id_or_val];
            if( result === undefined ){
                id_or_val = this.generateKey( id_or_val );
                result = this.__map[id_or_val];
            }
            return result;
        },
        generateKey: function( key ){ return key.toString(); },
        getArray: function(){
            return this.__list;
        },
        has: function( id_or_val ){
            var self = this;
            var _has = function( id ){
                return ( self.__map[ id ] !== undefined );
            };
            if( _has( id_or_val ) ){
                return true;
            }
            if(this.__map[id]){
                return true;
            }
            return this.__map[this.generateKey( id_or_val )];
        },
        put: function( id, val ){
            id = this.generateKey( id );
            this.__map[id] = val;
            this.__list.push( val );
        },
        remove: function( val ){
            val = this.get( val );
            var id = this.generateKey(val);
            delete this.__map[id];
            return this.__list.splice( this.__list.indexOf(val), 1)[0];
        },
        size: function(){
            return this.__list.length;
        },
        values: function(){
            return this.__list.slice(0);
        }
    };
    return {
        LinkedMap : LinkedMap
    }
}();


H.Structure.multi_map = function() {
const Iterator = H.Structure.iterator.Iterator;
const forEach = H.Structure.for_each.forEach;
function MultiMap(Container) {
  this.Container = Container || Array;
  this.items = new Map();
  this.clear();
  Object.defineProperty(this.items, 'constructor', {
    value: MultiMap,
    enumerable: false
  });
}
MultiMap.prototype.clear = function() {
  this.size = 0;
  this.dimension = 0;
  this.items.clear();
};
MultiMap.prototype.set = function(key, value) {
  var container = this.items.get(key),
      sizeBefore;
  if (!container) {
    this.dimension++;
    container = new this.Container();
    this.items.set(key, container);
  }
  if (this.Container === Set) {
    sizeBefore = container.size;
    container.add(value);
    if (sizeBefore < container.size)
      this.size++;
  }
  else {
    container.push(value);
    this.size++;
  }
  return this;
};
MultiMap.prototype.delete = function(key) {
  var container = this.items.get(key);
  if (!container)
    return false;
  this.size -= (this.Container === Set ? container.size : container.length);
  this.dimension--;
  this.items.delete(key);
  return true;
};
MultiMap.prototype.remove = function(key, value) {
  var container = this.items.get(key),
      wasDeleted,
      index;
  if (!container)
    return false;
  if (this.Container === Set) {
    wasDeleted = container.delete(value);
    if (wasDeleted)
      this.size--;
    if (container.size === 0) {
      this.items.delete(key);
      this.dimension--;
    }
    return wasDeleted;
  }
  else {
    index = container.indexOf(value);
    if (index === -1)
      return false;
    this.size--;
    if (container.length === 1) {
      this.items.delete(key);
      this.dimension--;
      return true;
    }
    container.splice(index, 1);
    return true;
  }
};
MultiMap.prototype.has = function(key) {
  return this.items.has(key);
};
MultiMap.prototype.get = function(key) {
  return this.items.get(key);
};
MultiMap.prototype.multiplicity = function(key) {
  var container = this.items.get(key);
  if (typeof container === 'undefined')
    return 0;
  return this.Container === Set ? container.size : container.length;
};
MultiMap.prototype.count = MultiMap.prototype.multiplicity;
MultiMap.prototype.forEach = function(callback, scope) {
  scope = arguments.length > 1 ? scope : this;
  var key;
  function inner(value) {
    callback.call(scope, value, key);
  }
  this.items.forEach(function(container, k) {
    key = k;
    container.forEach(inner);
  });
};
MultiMap.prototype.forEachAssociation = function(callback, scope) {
  scope = arguments.length > 1 ? scope : this;
  this.items.forEach(callback, scope);
};
MultiMap.prototype.keys = function() {
  return this.items.keys();
};
MultiMap.prototype.values = function() {
  var iterator = this.items.values(),
      inContainer = false,
      countainer,
      step,
      i,
      l;
  if (this.Container === Set)
    return new Iterator(function next() {
      if (!inContainer) {
        step = iterator.next();
        if (step.done)
          return {done: true};
        inContainer = true;
        countainer = step.value.values();
      }
      step = countainer.next();
      if (step.done) {
        inContainer = false;
        return next();
      }
      return {
        done: false,
        value: step.value
      };
    });
  return new Iterator(function next() {
    if (!inContainer) {
      step = iterator.next();
      if (step.done)
        return {done: true};
      inContainer = true;
      countainer = step.value;
      i = 0;
      l = countainer.length;
    }
    if (i >= l) {
      inContainer = false;
      return next();
    }
    return {
      done: false,
      value: countainer[i++]
    };
  });
};
MultiMap.prototype.entries = function() {
  var iterator = this.items.entries(),
      inContainer = false,
      countainer,
      step,
      key,
      i,
      l;
  if (this.Container === Set)
    return new Iterator(function next() {
      if (!inContainer) {
        step = iterator.next();
        if (step.done)
          return {done: true};
        inContainer = true;
        key = step.value[0];
        countainer = step.value[1].values();
      }
      step = countainer.next();
      if (step.done) {
        inContainer = false;
        return next();
      }
      return {
        done: false,
        value: [key, step.value]
      };
    });
  return new Iterator(function next() {
    if (!inContainer) {
      step = iterator.next();
      if (step.done)
        return {done: true};
      inContainer = true;
      key = step.value[0];
      countainer = step.value[1];
      i = 0;
      l = countainer.length;
    }
    if (i >= l) {
      inContainer = false;
      return next();
    }
    return {
      done: false,
      value: [key, countainer[i++]]
    };
  });
};
MultiMap.prototype.containers = function() {
  return this.items.values();
};
MultiMap.prototype.associations = function() {
  return this.items.entries();
};
if (typeof Symbol !== 'undefined')
  MultiMap.prototype[Symbol.iterator] = MultiMap.prototype.entries;
MultiMap.prototype.inspect = function() {
  return this.items;
};
if (typeof Symbol !== 'undefined')
  MultiMap.prototype[Symbol.for('nodejs.util.inspect.custom')] = MultiMap.prototype.inspect;
MultiMap.prototype.toJSON = function() {
  return this.items;
};
MultiMap.from = function(iterable, Container) {
  var map = new MultiMap(Container);
  forEach(iterable, function(value, key) {
    map.set(key, value);
  });
  return map;
};
return { 
    MultiMap : MultiMap
}
}();

H.Set = function (toStringFunction) {
    const isUndefined = H.Assert.is_undef;
    var theSet = {},
        dictionary = new H.Dictionary(toStringFunction);
    theSet.contains = function (element) {
        return dictionary.containsKey(element);
    };
    theSet.add = function (element) {
        if (theSet.contains(element) || isUndefined(element)) {
            return false;
        }
        dictionary.set(element, element);
        return true;
    };
    theSet.intersection = function (otherSet) {
        theSet.forEach(function (element) {
            if (!otherSet.contains(element)) {
                theSet.remove(element);
            }
        });
    };
    theSet.union = function (otherSet) {
        otherSet.forEach(function (element) {
            theSet.add(element);
        });
    };
    theSet.difference = function (otherSet) {
        otherSet.forEach(function (element) {
            theSet.remove(element);
        });
    };
    theSet.isSubsetOf = function (otherSet) {
        var isSub = true;
        if (theSet.size() > otherSet.size()) {
            return false;
        }
        theSet.forEach(function (element) {
            if (!otherSet.contains(element)) {
                isSub = false;
                return false;
            }
        });
        return isSub;
    };
    theSet.remove = function (element) {
        if (!theSet.contains(element)) {
            return false;
        }
        dictionary.remove(element);
        return true;
    };
    theSet.forEach = function (callback) {
        dictionary.forEach(function (k, v) {
            return callback(v);
        });
    };
    theSet.toArray = function () {
        return dictionary.values();
    };
    theSet.isEmpty = function () {
        return dictionary.isEmpty();
    };
    theSet.size = function () {
        return dictionary.size();
    };
    theSet.clear = function () {
        dictionary.clear();
    };
    theSet.equals = function (other) {
        var isEqual;
        if (isUndefined(other) || typeof other.isSubsetOf !== 'function') {
            return false;
        }
        if (theSet.size() !== other.size()) {
            return false;
        }
        isEqual = true;
        other.forEach(function (element) {
            isEqual = theSet.contains(element);
            return isEqual;
        });
        return isEqual;
    };
    return theSet;
};

H.Trie = function() {
    function Trie(caseSensitive) {
        this.dictionary = {};
        this.$ = false;
        if(typeof caseSensitive === "undefined") {
            caseSensitive = true;
        }
        this.cs = caseSensitive;
    }
    Trie.prototype.addString = function(string) {
        if(this.cs === false) {
            string = string.toLowerCase();
        }
        if(string.length === 0) {
            var wasWord = this.$;
            this.$ = true;
            return wasWord;
        }
        var next = this.dictionary[string[0]];
        if(!next) {
            this.dictionary[string[0]] = new Trie(this.cs);
            next = this.dictionary[string[0]];
        }
        return next.addString(string.substring(1));
    };
    Trie.prototype.addStrings = function(list) {
        for(var i in list) {
            this.addString(list[i]);
        }
    };
    Trie.prototype.keysWithPrefix = function(prefix) {
        if(this.caseSensitive === false) {
            prefix = prefix.toLowerCase();
        }
        function isEmpty (object) {
            for (var key in object) if (object.hasOwnProperty(key)) return false;
            return true;
        }
        function get (node, word) {
            if(!node) return null;
            if(word.length == 0) return node;
            return get(node.dictionary[word[0]], word.substring(1));
        }
        function recurse ( node, stringAgg, resultsAgg) {
            if (!node) return;
            if (node.$) {
                resultsAgg.push(stringAgg);
            }
            if (isEmpty(node.dictionary)) {
                return ;
            }
            for (var c in node.dictionary) {
                recurse (node.dictionary[c],stringAgg + c, resultsAgg);
            }
        }
        var results = [];
        recurse (get(this, prefix), prefix, results);
        return results;
    };
    Trie.prototype.contains = function(string) {
        if(this.cs === false) {
            string = string.toLowerCase();
        }
        if(string.length === 0) {
            return this.$;
        }
        var firstLetter = string[0];
        var next = this.dictionary[firstLetter];		
        if(!next) {
            return false;
        }
        return next.contains(string.substring(1));
    }
    Trie.prototype.findMatchesOnPath = function(search) {
        if(this.cs === false) {
            search = search.toLowerCase();
        }
        function recurse(node, search, stringAgg, resultsAgg) {
            if(node.$) {
                resultsAgg.push(stringAgg);
            }
            if(search.length === 0) {
                return resultsAgg;
            }
            var next = node.dictionary[search[0]];
            if(!next) {
                return resultsAgg;
            }
            return recurse(next, search.substring(1), stringAgg + search[0], resultsAgg);
        };
        return recurse(this, search, "", []);
    };
    Trie.prototype.findPrefix = function(search) {
        if(this.cs === false) {
            search = search.toLowerCase();
        }
        function recurse(node, search, stringAgg, lastWord) {
            if(node.$) {
                lastWord = stringAgg;
            }
            if(search.length === 0) {
                return [lastWord, search];
            }
            var next = node.dictionary[search[0]];
            if(!next) {
                return [lastWord, search];
            }
            return recurse(next, search.substring(1), stringAgg + search[0], lastWord);
        };
        return recurse(this, search, "", null);
    };
    Trie.prototype.getSize = function() { 
        var total = 1;
        for(var c in this.dictionary) {
            total += this.dictionary[c].getSize();
        }
        return total;
    };
    return {
        Trie : Trie
    }
    }();

H.Validate.assert_string = function (input) {
    const isString = (typeof input === 'string' || input instanceof String);
    if (!isString) {
      let invalidType;
      if (input === null) {
        invalidType = 'null';
      } else {
        invalidType = typeof input;
        if (invalidType === 'object' && input.constructor && input.constructor.hasOwnProperty('name')) {
          invalidType = input.constructor.name;
        } else {
          invalidType = `a ${invalidType}`;
        }
      }
      throw new TypeError(`Expected string but received ${invalidType}.`);
    }
  }
H.Validate.includes = (arr, val) => arr.some(arrVal => val === arrVal);
H.Validate.is_alpha = function (str, locale = 'en-US') {
const assertString = H.Validate.assert_string;
const alpha = H.Validate.alpha;
const locales = Object.keys(alpha);
  assertString(str);
  if (locale in alpha) {
    return alpha[locale].test(str);
  }
  throw new Error(`Invalid locale '${locale}'`);
}
H.Validate.is_currency = function (str, options) {
const merge = H.Validate.merge;
const assertString = H.Validate.assert_string;
function currencyRegex(options) {
  let decimal_digits = `\\d{${options.digits_after_decimal[0]}}`;
  options.digits_after_decimal.forEach((digit, index) => { if (index !== 0) decimal_digits = `${decimal_digits}|\\d{${digit}}`; });
  const symbol =
    `(\\${options.symbol.replace(/\./g, '\\.')})${(options.require_symbol ? '' : '?')}`,
    negative = '-?',
    whole_dollar_amount_without_sep = '[1-9]\\d*',
    whole_dollar_amount_with_sep = `[1-9]\\d{0,2}(\\${options.thousands_separator}\\d{3})*`,
    valid_whole_dollar_amounts = [
      '0', whole_dollar_amount_without_sep, whole_dollar_amount_with_sep],
    whole_dollar_amount = `(${valid_whole_dollar_amounts.join('|')})?`,
    decimal_amount = `(\\${options.decimal_separator}(${decimal_digits}))${options.require_decimal ? '' : '?'}`;
  let pattern = whole_dollar_amount + (options.allow_decimal || options.require_decimal ? decimal_amount : '');
  if (options.allow_negatives && !options.parens_for_negatives) {
    if (options.negative_sign_after_digits) {
      pattern += negative;
    } else if (options.negative_sign_before_digits) {
      pattern = negative + pattern;
    }
  }
  if (options.allow_negative_sign_placeholder) {
    pattern = `( (?!\\-))?${pattern}`;
  } else if (options.allow_space_after_symbol) {
    pattern = ` ?${pattern}`;
  } else if (options.allow_space_after_digits) {
    pattern += '( (?!$))?';
  }
  if (options.symbol_after_digits) {
    pattern += symbol;
  } else {
    pattern = symbol + pattern;
  }
  if (options.allow_negatives) {
    if (options.parens_for_negatives) {
      pattern = `(\\(${pattern}\\)|${pattern})`;
    } else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) {
      pattern = negative + pattern;
    }
  }
  return new RegExp(`^(?!-? )(?=.*\\d)${pattern}$`);
}
const default_currency_options = {
  symbol: '$',
  require_symbol: false,
  allow_space_after_symbol: false,
  symbol_after_digits: false,
  allow_negatives: true,
  parens_for_negatives: false,
  negative_sign_before_digits: false,
  negative_sign_after_digits: false,
  allow_negative_sign_placeholder: false,
  thousands_separator: ',',
  decimal_separator: '.',
  allow_decimal: true,
  require_decimal: false,
  digits_after_decimal: [2],
  allow_space_after_digits: false,
};
  assertString(str);
  options = merge(options, default_currency_options);
  return currencyRegex(options).test(str);
}
H.Validate.is_divisible_by = function(str, num) {
  const assertString = H.Validate.assert_string;
  const toFloat = H.Validate.is_float;
  assertString(str);
  return toFloat(str) % parseInt(num, 10) === 0;
};

H.Validate.is_float = function (str, options) {
    const assertString = H.Validate.assert_string;
    const decimal = H.Validate.decimal;
    const locales = Object.keys(decimal);
  assertString(str);
  options = options || {};
  const float = new RegExp(`^(?:[-+])?(?:[0-9]+)?(?:\\${options.locale ? decimal[options.locale] : '.'}[0-9]*)?(?:[eE][\\+\\-]?(?:[0-9]+))?$`);
  if (str === '' || str === '.' || str === '-' || str === '+') {
    return false;
  }
  const value = parseFloat(str.replace(',', '.'));
  return float.test(str) &&
    (!options.hasOwnProperty('min') || value >= options.min) &&
    (!options.hasOwnProperty('max') || value <= options.max) &&
    (!options.hasOwnProperty('lt') || value < options.lt) &&
    (!options.hasOwnProperty('gt') || value > options.gt);
}

H.Validate.is_in = function (str, options) {
    const assertString = H.Validate.assert_string;
    const toString = H.Validate.to_string;
  assertString(str);
  let i;
  if (Object.prototype.toString.call(options) === '[object Array]') {
    const array = [];
    for (i in options) {
      if ({}.hasOwnProperty.call(options, i)) {
        array[i] = toString(options[i]);
      }
    }
    return array.indexOf(str) >= 0;
  } else if (typeof options === 'object') {
    return options.hasOwnProperty(str);
  } else if (options && typeof options.indexOf === 'function') {
    return options.indexOf(str) >= 0;
  }
  return false;
}
H.Validate.is_ISO31661_Alpha2 = function (str) {
const assertString = H.Validate.assert_string;
const includes = H.Validate.includes;
const validISO31661Alpha2CountriesCodes = [
  'AD', 'AE', 'AF', 'AG', 'AI', 'AL', 'AM', 'AO', 'AQ', 'AR', 'AS', 'AT', 'AU', 'AW', 'AX', 'AZ',
  'BA', 'BB', 'BD', 'BE', 'BF', 'BG', 'BH', 'BI', 'BJ', 'BL', 'BM', 'BN', 'BO', 'BQ', 'BR', 'BS', 'BT', 'BV', 'BW', 'BY', 'BZ',
  'CA', 'CC', 'CD', 'CF', 'CG', 'CH', 'CI', 'CK', 'CL', 'CM', 'CN', 'CO', 'CR', 'CU', 'CV', 'CW', 'CX', 'CY', 'CZ',
  'DE', 'DJ', 'DK', 'DM', 'DO', 'DZ',
  'EC', 'EE', 'EG', 'EH', 'ER', 'ES', 'ET',
  'FI', 'FJ', 'FK', 'FM', 'FO', 'FR',
  'GA', 'GB', 'GD', 'GE', 'GF', 'GG', 'GH', 'GI', 'GL', 'GM', 'GN', 'GP', 'GQ', 'GR', 'GS', 'GT', 'GU', 'GW', 'GY',
  'HK', 'HM', 'HN', 'HR', 'HT', 'HU',
  'ID', 'IE', 'IL', 'IM', 'IN', 'IO', 'IQ', 'IR', 'IS', 'IT',
  'JE', 'JM', 'JO', 'JP',
  'KE', 'KG', 'KH', 'KI', 'KM', 'KN', 'KP', 'KR', 'KW', 'KY', 'KZ',
  'LA', 'LB', 'LC', 'LI', 'LK', 'LR', 'LS', 'LT', 'LU', 'LV', 'LY',
  'MA', 'MC', 'MD', 'ME', 'MF', 'MG', 'MH', 'MK', 'ML', 'MM', 'MN', 'MO', 'MP', 'MQ', 'MR', 'MS', 'MT', 'MU', 'MV', 'MW', 'MX', 'MY', 'MZ',
  'NA', 'NC', 'NE', 'NF', 'NG', 'NI', 'NL', 'NO', 'NP', 'NR', 'NU', 'NZ',
  'OM',
  'PA', 'PE', 'PF', 'PG', 'PH', 'PK', 'PL', 'PM', 'PN', 'PR', 'PS', 'PT', 'PW', 'PY',
  'QA',
  'RE', 'RO', 'RS', 'RU', 'RW',
  'SA', 'SB', 'SC', 'SD', 'SE', 'SG', 'SH', 'SI', 'SJ', 'SK', 'SL', 'SM', 'SN', 'SO', 'SR', 'SS', 'ST', 'SV', 'SX', 'SY', 'SZ',
  'TC', 'TD', 'TF', 'TG', 'TH', 'TJ', 'TK', 'TL', 'TM', 'TN', 'TO', 'TR', 'TT', 'TV', 'TW', 'TZ',
  'UA', 'UG', 'UM', 'US', 'UY', 'UZ',
  'VA', 'VC', 'VE', 'VG', 'VI', 'VN', 'VU',
  'WF', 'WS',
  'YE', 'YT',
  'ZA', 'ZM', 'ZW',
];
  assertString(str);
  return includes(validISO31661Alpha2CountriesCodes, str.toUpperCase());
}
H.Validate.is_ISO31661_Alpha3 = function (str) {
  const assertString = H.Validate.assert_string;
  const includes = H.Validate.includes;
const validISO31661Alpha3CountriesCodes = [
  'AFG', 'ALA', 'ALB', 'DZA', 'ASM', 'AND', 'AGO', 'AIA', 'ATA', 'ATG', 'ARG', 'ARM', 'ABW', 'AUS', 'AUT', 'AZE',
  'BHS', 'BHR', 'BGD', 'BRB', 'BLR', 'BEL', 'BLZ', 'BEN', 'BMU', 'BTN', 'BOL', 'BES', 'BIH', 'BWA', 'BVT', 'BRA',
  'IOT', 'BRN', 'BGR', 'BFA', 'BDI', 'KHM', 'CMR', 'CAN', 'CPV', 'CYM', 'CAF', 'TCD', 'CHL', 'CHN', 'CXR', 'CCK',
  'COL', 'COM', 'COG', 'COD', 'COK', 'CRI', 'CIV', 'HRV', 'CUB', 'CUW', 'CYP', 'CZE', 'DNK', 'DJI', 'DMA', 'DOM',
  'ECU', 'EGY', 'SLV', 'GNQ', 'ERI', 'EST', 'ETH', 'FLK', 'FRO', 'FJI', 'FIN', 'FRA', 'GUF', 'PYF', 'ATF', 'GAB',
  'GMB', 'GEO', 'DEU', 'GHA', 'GIB', 'GRC', 'GRL', 'GRD', 'GLP', 'GUM', 'GTM', 'GGY', 'GIN', 'GNB', 'GUY', 'HTI',
  'HMD', 'VAT', 'HND', 'HKG', 'HUN', 'ISL', 'IND', 'IDN', 'IRN', 'IRQ', 'IRL', 'IMN', 'ISR', 'ITA', 'JAM', 'JPN',
  'JEY', 'JOR', 'KAZ', 'KEN', 'KIR', 'PRK', 'KOR', 'KWT', 'KGZ', 'LAO', 'LVA', 'LBN', 'LSO', 'LBR', 'LBY', 'LIE',
  'LTU', 'LUX', 'MAC', 'MKD', 'MDG', 'MWI', 'MYS', 'MDV', 'MLI', 'MLT', 'MHL', 'MTQ', 'MRT', 'MUS', 'MYT', 'MEX',
  'FSM', 'MDA', 'MCO', 'MNG', 'MNE', 'MSR', 'MAR', 'MOZ', 'MMR', 'NAM', 'NRU', 'NPL', 'NLD', 'NCL', 'NZL', 'NIC',
  'NER', 'NGA', 'NIU', 'NFK', 'MNP', 'NOR', 'OMN', 'PAK', 'PLW', 'PSE', 'PAN', 'PNG', 'PRY', 'PER', 'PHL', 'PCN',
  'POL', 'PRT', 'PRI', 'QAT', 'REU', 'ROU', 'RUS', 'RWA', 'BLM', 'SHN', 'KNA', 'LCA', 'MAF', 'SPM', 'VCT', 'WSM',
  'SMR', 'STP', 'SAU', 'SEN', 'SRB', 'SYC', 'SLE', 'SGP', 'SXM', 'SVK', 'SVN', 'SLB', 'SOM', 'ZAF', 'SGS', 'SSD',
  'ESP', 'LKA', 'SDN', 'SUR', 'SJM', 'SWZ', 'SWE', 'CHE', 'SYR', 'TWN', 'TJK', 'TZA', 'THA', 'TLS', 'TGO', 'TKL',
  'TON', 'TTO', 'TUN', 'TUR', 'TKM', 'TCA', 'TUV', 'UGA', 'UKR', 'ARE', 'GBR', 'USA', 'UMI', 'URY', 'UZB', 'VUT',
  'VEN', 'VNM', 'VGB', 'VIR', 'WLF', 'ESH', 'YEM', 'ZMB', 'ZWE',
];
  assertString(str);
  return includes(validISO31661Alpha3CountriesCodes, str.toUpperCase());
}
H.Validate.is_ISO8601 = function(str, options) {
  const assertString = H.Validate.assert_string;
  const iso8601 = /^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/;
  const isValidDate = str => {
    const ordinalMatch = str.match(/^(\d{4})-?(\d{3})([ T]{1}\.*|$)/);
    if (ordinalMatch) {
      const oYear = Number(ordinalMatch[1]);
      const oDay = Number(ordinalMatch[2]);
      if ((oYear % 4 === 0 && oYear % 100 !== 0) || oYear % 400 === 0)
        return oDay <= 366;
      return oDay <= 365;
    }
    const match = str.match(/(\d{4})-?(\d{0,2})-?(\d*)/).map(Number);
    const year = match[1];
    const month = match[2];
    const day = match[3];
    const monthString = month ? `0${month}`.slice(-2) : month;
    const dayString = day ? `0${day}`.slice(-2) : day;
    const d = new Date(`${year}-${monthString || "01"}-${dayString || "01"}`);
    if (month && day) {
      return (
        d.getUTCFullYear() === year &&
        d.getUTCMonth() + 1 === month &&
        d.getUTCDate() === day
      );
    }
    return true;
  };
  assertString(str);
  const check = iso8601.test(str);
  if (!options) return check;
  if (check && options.strict) return isValidDate(str);
  return check;
};
H.Validate.is_JSON = function(str) {
  const assertString = H.Validate.assert_string;
  assertString(str);
  try {
    const obj = JSON.parse(str);
    return !!obj && typeof obj === "object";
  } catch (e) {
  }
  return false;
};

H.Validate.is_lat_long = function(str) {
  const assertString = H.Validate.assert_string;
  const lat = /^\(?[+-]?(90(\.0+)?|[1-8]?\d(\.\d+)?)$/;
  const long = /^\s?[+-]?(180(\.0+)?|1[0-7]\d(\.\d+)?|\d{1,2}(\.\d+)?)\)?$/;
  assertString(str);
  if (!str.includes(",")) return false;
  const pair = str.split(",");
  if (
    (pair[0].startsWith("(") && !pair[1].endsWith(")")) ||
    (pair[1].endsWith(")") && !pair[0].startsWith("("))
  )
    return false;
  return lat.test(pair[0]) && long.test(pair[1]);
};

H.Validate.is_length = function(str, options) {
  const assertString = H.Validate.assert_string;
  assertString(str);
  let min;
  let max;
  if (typeof options === "object") {
    min = options.min || 0;
    max = options.max;
  } else {
    min = arguments[1] || 0;
    max = arguments[2];
  }
  const surrogatePairs = str.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g) || [];
  const len = str.length - surrogatePairs.length;
  return len >= min && (typeof max === "undefined" || len <= max);
};

H.Validate.is_number = function(str) {
    return isNaN(str);
};
H.Validate.is_alphanumeric = function(str, locale = "en-US") {
  const assertString = H.Validate.assert_string;
  const alphanumeric = H.Validate.alphanumeric;
  const locales = Object.keys(alphanumeric);
  assertString(str);
  if (locale in alphanumeric) {
    return alphanumeric[locale].test(str);
  }
  throw new Error(`Invalid locale '${locale}'`);
};

H.Validate.merge = function(obj = {}, defaults) {
  for (const key in defaults) {
    if (typeof obj[key] === "undefined") {
      obj[key] = defaults[key];
    }
  }
  return obj;
};

H.Validate.to_string = function (input) {
    if (typeof input === 'object' && input !== null) {
      if (typeof input.toString === 'function') {
        input = input.toString();
      } else {
        input = '[object Object]';
      }
    } else if (input === null || typeof input === 'undefined' || (isNaN(input) && !input.length)) {
      input = '';
    }
    return String(input);
  }

H.Vector.add = function (vec1, vec2) {
	vec1.x += vec2.x;
	vec1.y += vec2.y;
	return vec1;
};

H.Vector.cross = function ( vec1, vec2 ) {
        let result = (vec1.x * vec2.y ) - (vec1.y * vec2.x );
        return result;
    };

H.Vector.distance_sq = function (vec1, vec2) {
	const distanceX = H.Vector.distance_x;
	const distanceY = H.Vector.distance_y;
	var dx = distanceX(vec1, vec2),
		dy = distanceY(vec1, vec2);
	return dx * dx + dy * dy;
};

H.Vector.distance_x = function (vec1, vec2) {
	return vec1.x - vec2.x;
};

H.Vector.distance_y = function (vec1, vec2) {
	return vec1.y - vec2.y;
};

H.Vector.distance = function (vec1, vec2) {
    const distanceSq = H.Vector.distance_sq;
    return Math.sqrt(distanceSq(vec1, vec2));
};

H.Vector.dot = function ( vec1, vec2 ) {
        let result = vec1.x * vec2.x + vec1.y * vec2.y;
        return result;
};
H.Vector.get_random = function(k, vectors) {
  Array.prototype.compare = function(testArr) {
    if (this.length != testArr.length) return false;
    for (var i = 0; i < testArr.length; i++) {
      if (this[i].compare) {
        if (!this[i].compare(testArr[i])) return false;
      }
      if (this[i] !== testArr[i]) return false;
    }
    return true;
  };
  var n = vectors.length;
  if (k > n) return null;
  var selected_vectors = new Array(k);
  var selected_indices = new Array(k);
  var tested_indices = new Object();
  var tested = 0;
  var selected = 0;
  var i, vector, select;
  while (selected < k) {
    if (tested == n) return null;
    var random_index = Math.floor(Math.random() * n);
    if (random_index in tested_indices) continue;
    tested_indices[random_index] = 1;
    tested++;
    vector = vectors[random_index];
    select = true;
    for (i = 0; i < selected; i++) {
      if (vector.compare(selected_vectors[i])) {
        select = false;
        break;
      }
    }
    if (select) {
      selected_vectors[selected] = vector;
      selected_indices[selected] = random_index;
      selected++;
    }
  }
  return { vectors: selected_vectors, indices: selected_indices };
};

H.Vector.horizontal_angle = function (vec2) {
	return Math.atan2(vec2.y, vec2.x);
};

H.Vector.length_sq = function (vec2) {
	return vec2.x * vec2.x + vec2.y * vec2.y;
};

H.Vector.length = function (vec2) {
    const lengthSq = H.Vector.length_sq
    return Math.sqrt(lengthSq(vec2));
};

H.Vector.multiply_by_value = function (value , vec) {
    var N = vec.length ;
    var v = new Array(N) ;
    for (var i = 0 ; i < N ; i++)
        v[i] = value * vec[i] ;
    return v ;
}	

    var project_onto = function ( vec1, vec2 ) {
        var coeff = ( (vec1.x * vec2.x)+(vec1.y * vec2.y) ) / ((vec2.x*vec2.x)+(vec2.y*vec2.y));
        vec1.x = coeff * vec2.x;
        vec1.y = coeff * vec2.y;
        return vec1;
    };
H.Vector.random = function(n,lower,upper) {
    lower = (typeof lower !== 'undefined') ? lower : 0;
    upper = (typeof upper !== 'undefined') ? upper : 1;
    var vec = [];
    while(vec.length < n)
        vec.push(lower + (upper-lower) * Math.random());
    return vec;
};

H.Vector.vec2_from_array = function (arr) {
	return H.Vector.vec2(arr[0] || 0, arr[1] || 0);
};

H.Vector.vec2_from_object = function (obj) {
	return H.Vector.vec2(obj.x || 0, obj.y || 0);
};

H.Vector.vec2 = function (x, y) {
    let vector = new Object();
	vector.x = x || 0;
    vector.y = y || 0;
    return vector;
};

H.Vector.vec3 = function (x, y, z) {
    let vector = new Object();
	vector.x = x || 0;
    vector.y = y || 0;
    vector.z = z || 0;
    return vector;
};
H.Vector.vertical_angle = function (vec2) {
	return Math.atan2(vec2.x, vec2.y);
};

var z_sin = function (vec, s) {
    let ang = Math.PI;
    let x = vec.x;
    let y = vec.y;
    let z = ((y - s) / Math.sin(90 - ang) * Math.sin(ang));
    let result = { x: x, y: y, z: z };
    return result;
};
H.Cube.array = function() {
let array8 = arrayUntyped,
    array16 = arrayUntyped,
    array32 = arrayUntyped,
    arrayLengthen = arrayLengthenUntyped,
    arrayWiden = arrayWidenUntyped;
if (typeof Uint8Array !== "undefined") {
  array8 = function(n) { return new Uint8Array(n); };
  array16 = function(n) { return new Uint16Array(n); };
  array32 = function(n) { return new Uint32Array(n); };
  arrayLengthen = function(array, length) {
    if (array.length >= length) return array;
    var copy = new array.constructor(length);
    copy.set(array);
    return copy;
  };
  arrayWiden = function(array, width) {
    var copy;
    switch (width) {
      case 16: copy = array16(array.length); break;
      case 32: copy = array32(array.length); break;
      default: throw new Error("invalid array width!");
    }
    copy.set(array);
    return copy;
  };
}
function arrayUntyped(n) {
  var array = new Array(n), i = -1;
  while (++i < n) array[i] = 0;
  return array;
}
function arrayLengthenUntyped(array, length) {
  var n = array.length;
  while (n < length) array[n++] = 0;
  return array;
}
function arrayWidenUntyped(array, width) {
  if (width > 32) throw new Error("invalid array width!");
  return array;
}
function bitarray(n) {
  this.length = n;
  this.subarrays = 1;
  this.width = 8;
  this.masks = {
    0: 0
  }
  this[0] = array8(n);
}
bitarray.prototype.lengthen = function(n) {
  var i, len;
  for (i = 0, len = this.subarrays; i < len; ++i) {
    this[i] = arrayLengthen(this[i], n);
  }
  this.length = n;
};
bitarray.prototype.add = function() {
  var m, w, one, i, len;
  for (i = 0, len = this.subarrays; i < len; ++i) {
    m = this.masks[i];
    w = this.width - (32 * i);
    one = (~m & (m + 1)) >>> 0;
    if (w >= 32 && !one) {
      continue;
    }
    if (w < 32 && (one & (1 << w))) {
      this[i] = arrayWiden(this[i], w <<= 1);
      this.width = 32 * i + w;
    }
    this.masks[i] |= one;
    return {
      offset: i,
      one: one
    };
  }
  this[this.subarrays] = array8(this.length);
  this.masks[this.subarrays] = 1;
  this.width += 8;
  return {
    offset: this.subarrays++,
    one: 1
  };
};
bitarray.prototype.copy = function(dest, src) {
  var i, len;
  for (i = 0, len = this.subarrays; i < len; ++i) {
    this[i][dest] = this[i][src];
  }
};
bitarray.prototype.truncate = function(n) {
  var i, len;
  for (i = 0, len = this.subarrays; i < len; ++i) {
    for (var j = this.length - 1; j >= n; j--) {
      this[i][j] = 0;
    }
  }
  this.length = n;
};
bitarray.prototype.zero = function(n) {
  var i, len;
  for (i = 0, len = this.subarrays; i < len; ++i) {
    if (this[i][n]) {
      return false;
    }
  }
  return true;
};
bitarray.prototype.zeroExcept = function(n, offset, zero) {
  var i, len;
  for (i = 0, len = this.subarrays; i < len; ++i) {
    if (i === offset ? this[i][n] & zero : this[i][n]) {
      return false;
    }
  }
  return true;
};
bitarray.prototype.zeroExceptMask = function(n, mask) {
  var i, len;
  for (i = 0, len = this.subarrays; i < len; ++i) {
    if (this[i][n] & mask[i]) {
      return false;
    }
  }
  return true;
}
bitarray.prototype.only = function(n, offset, one) {
  var i, len;
  for (i = 0, len = this.subarrays; i < len; ++i) {
    if (this[i][n] != (i === offset ? one : 0)) {
      return false;
    }
  }
  return true;
};
bitarray.prototype.onlyExcept = function(n, offset, zero, onlyOffset, onlyOne) {
  var mask;
  var i, len;
  for (i = 0, len = this.subarrays; i < len; ++i) {
    mask = this[i][n];
    if (i === offset)
      mask &= zero;
    if (mask != (i === onlyOffset ? onlyOne : 0)) {
      return false;
    }
  }
  return true;
};
return {
  array8: arrayUntyped,
  array16: arrayUntyped,
  array32: arrayUntyped,
  arrayLengthen: arrayLengthenUntyped,
  arrayWiden: arrayWidenUntyped,
  bitarray: bitarray
};
}();
H.Cube.bisect = function() {
const identity = H.Func.identity;
function bisect_by(f) {
  function bisectLeft(a, x, lo, hi) {
    while (lo < hi) {
      var mid = lo + hi >>> 1;
      if (f(a[mid]) < x) lo = mid + 1;
      else hi = mid;
    }
    return lo;
  }
  function bisectRight(a, x, lo, hi) {
    while (lo < hi) {
      var mid = lo + hi >>> 1;
      if (x < f(a[mid])) hi = mid;
      else lo = mid + 1;
    }
    return lo;
  }
  bisectRight.right = bisectRight;
  bisectRight.left = bisectLeft;
  return bisectRight;
}
const bisect = bisect_by(identity);
bisect.by = bisect_by; 
return {
  bisect : bisect
}
}();

H.Cube.filter = function() {
const filterExact = (bisect, value) => {
  return function(values) {
    var n = values.length;
    return [bisect.left(values, value, 0, n), bisect.right(values, value, 0, n)];
  };
}
const filterRange = (bisect, range) => {
  var min = range[0],
      max = range[1];
  return function(values) {
    var n = values.length;
    return [bisect.left(values, min, 0, n), bisect.left(values, max, 0, n)];
  };
}
const filterAll = values => {
  return [0, values.length];
}
return {
  filterExact : filterExact,
  filterRange : filterRange,
  filterAll : filterAll
}
}();

H.Cube.heap = function() {
  const identity = H.Func.identity;
function heap_by(f) {
  function heap(a, lo, hi) {
    var n = hi - lo,
        i = (n >>> 1) + 1;
    while (--i > 0) sift(a, i, n, lo);
    return a;
  }
  function sort(a, lo, hi) {
    var n = hi - lo,
        t;
    while (--n > 0) t = a[lo], a[lo] = a[lo + n], a[lo + n] = t, sift(a, 1, n, lo);
    return a;
  }
  function sift(a, i, n, lo) {
    var d = a[--lo + i],
        x = f(d),
        child;
    while ((child = i << 1) <= n) {
      if (child < n && f(a[lo + child]) > f(a[lo + child + 1])) child++;
      if (x <= f(a[lo + child])) break;
      a[lo + i] = a[lo + child];
      i = child;
    }
    a[lo + i] = d;
  }
  heap.sort = sort;
  return heap;
}
const h = heap_by(identity);
h.by = heap_by;
return {
  h : h
}
}();

H.Cube.heap_select = function() {
const identity = H.Func.identity;
const xFilterHeap = H.Cube.heap.h;
function heapselect_by(f) {
  var heap = xFilterHeap.by(f);
  function heapselect(a, lo, hi, k) {
    var queue = new Array(k = Math.min(hi - lo, k)),
        min,
        i,
        d;
    for (i = 0; i < k; ++i) queue[i] = a[lo++];
    heap(queue, 0, k);
    if (lo < hi) {
      min = f(queue[0]);
      do {
        if (f(d = a[lo]) > min) {
          queue[0] = d;
          min = f(heap(queue, 0, k)[0]);
        }
      } while (++lo < hi);
    }
    return queue;
  }
  return heapselect;
}
const h = heapselect_by(identity);
h.by = heapselect_by; 
return {
  h : h
}
}();

H.Cube.null = function() {
  return null
}
H.Cube.permute = function(array, index, deep) {
  for (var i = 0, n = index.length, copy = deep ? JSON.parse(JSON.stringify(array)) : new Array(n); i < n; ++i) {
    copy[i] = array[index[i]];
  }
  return copy;
}

H.Cube.reduce = function() {
const reduceIncrement = p => {
  return p + 1;
}
const reduceDecrement = p => {
  return p - 1;
}
const reduceAdd = f => {
  return function(p, v) {
    return p + +f(v);
  };
}
const reduceSubtract = f => {
  return function(p, v) {
    return p - f(v);
  };
}
return {
  reduceIncrement,
  reduceDecrement,
  reduceAdd,
  reduceSubtract
};
}();
H.Cube.result = function() {
const deep = H.Obj.deep_obj;
const get = (obj, prop) => {
  const value = obj[prop];
  return (typeof value === 'function') ? value.call(obj) : value;
}
const reg = /\[([\w\d]+)\]/g;
var exec = function (obj, path)  {
  return deep(get, obj, path.replace(reg, '.$1'))
}
return {
  exec : exec
}
}();
H.Cube.zero = function() {
  return 0
}
H.Cube.cf = function() {
const xfilterArray = H.Cube.array;
const xfilterFilter = H.Cube.filter;
const cr_identity = H.Func.identity;
const cr_null = H.Cube.null;
const cr_zero = H.Cube.zero;
const xfilterHeapselect = H.Cube.heap_select.h;
const xfilterHeap = H.Cube.heap.h;
const bisect = H.Cube.bisect.bisect;
const permute = H.Cube.permute;
const xfilterReduce = H.Cube.reduce;
const result = H.Cube.result.exec;
var REMOVED_INDEX = -1;
crossfilter.heap = xfilterHeap;
crossfilter.heapselect = xfilterHeapselect;
crossfilter.bisect = bisect;
crossfilter.permute = permute;
function crossfilter() {
  var crossfilter = {
    add: add,
    remove: removeData,
    dimension: dimension,
    groupAll: groupAll,
    size: size,
    all: all,
    allFiltered: allFiltered,
    onChange: onChange,
    isElementFiltered: isElementFiltered
  };
  var data = [], 
      n = 0, 
      filters, 
      filterListeners = [], 
      dataListeners = [], 
      removeDataListeners = [], 
      callbacks = [];
  filters = new xfilterArray.bitarray(0);
  function add(newData) {
    var n0 = n,
        n1 = newData.length;
    if (n1) {
      data = data.concat(newData);
      filters.lengthen(n += n1);
      dataListeners.forEach(function(l) { l(newData, n0, n1); });
      triggerOnChange('dataAdded');
    }
    return crossfilter;
  }
  function removeData(predicate) {
    var 
        newIndex = new Array(n),
        removed = [],
        usePred = typeof predicate === 'function',
        shouldRemove = function (i) {
          return usePred ? predicate(data[i], i) : filters.zero(i)
        };
    for (var index1 = 0, index2 = 0; index1 < n; ++index1) {
      if ( shouldRemove(index1) ) {
        removed.push(index1);
        newIndex[index1] = REMOVED_INDEX;
      } else {
        newIndex[index1] = index2++;
      }
    }
    filterListeners.forEach(function(l) { l(-1, -1, [], removed, true); });
    removeDataListeners.forEach(function(l) { l(newIndex); });
    for (var index3 = 0, index4 = 0; index3 < n; ++index3) {
      if ( newIndex[index3] !== REMOVED_INDEX ) {
        if (index3 !== index4) filters.copy(index4, index3), data[index4] = data[index3];
        ++index4;
      }
    }
    data.length = n = index4;
    filters.truncate(index4);
    triggerOnChange('dataRemoved');
  }
  function maskForDimensions(dimensions) {
    var n,
        d,
        len,
        id,
        mask = Array(filters.subarrays);
    for (n = 0; n < filters.subarrays; n++) { mask[n] = ~0; }
    for (d = 0, len = dimensions.length; d < len; d++) {
      id = dimensions[d].id();
      mask[id >> 7] &= ~(0x1 << (id & 0x3f));
    }
    return mask;
  }
  function isElementFiltered(i, ignore_dimensions) {
    var mask = maskForDimensions(ignore_dimensions || []);
    return filters.zeroExceptMask(i,mask);
  }
  function dimension(value, iterable) {
    if (typeof value === 'string') {
      var accessorPath = value;
      value = function(d) { return result(d, accessorPath); };
    }
    var dimension = {
      filter: filter,
      filterExact: filterExact,
      filterRange: filterRange,
      filterFunction: filterFunction,
      filterAll: filterAll,
      currentFilter: currentFilter,
      hasCurrentFilter: hasCurrentFilter,
      top: top,
      bottom: bottom,
      group: group,
      groupAll: groupAll,
      dispose: dispose,
      remove: dispose, 
      accessor: value,
      id: function() { return id; }
    };
    var one, 
        zero, 
        offset, 
        id, 
        values, 
        index, 
        newValues, 
        newIndex, 
        iterablesIndexCount,
        iterablesIndexFilterStatus,
        iterablesEmptyRows = [],
        sortRange = function(n) {
          return cr_range(n).sort(function(A, B) {
            var a = newValues[A], b = newValues[B];
            return a < b ? -1 : a > b ? 1 : A - B;
          });
        },
        refilter = xfilterFilter.filterAll, 
        refilterFunction, 
        filterValue, 
        filterValuePresent, 
        indexListeners = [], 
        dimensionGroups = [],
        lo0 = 0,
        hi0 = 0,
        t = 0,
        k;
    dataListeners.unshift(preAdd);
    dataListeners.push(postAdd);
    removeDataListeners.push(removeData);
    var tmp = filters.add();
    offset = tmp.offset;
    one = tmp.one;
    zero = ~one;
    id = (offset << 7) | (Math.log(one) / Math.log(2));
    preAdd(data, 0, n);
    postAdd(data, 0, n);
    function preAdd(newData, n0, n1) {
      var newIterablesIndexCount,
          newIterablesIndexFilterStatus;
      if (iterable){
        t = 0;
        j = 0;
        k = [];
        for (var i0 = 0; i0 < newData.length; i0++) {
          for(j = 0, k = value(newData[i0]); j < k.length; j++) {
            t++;
          }
        }
        newValues = [];
        newIterablesIndexCount = cr_range(newData.length);
        newIterablesIndexFilterStatus = cr_index(t,1);
        var unsortedIndex = cr_range(t);
        for (var l = 0, index1 = 0; index1 < newData.length; index1++) {
          k = value(newData[index1])
          if(!k.length){
            newIterablesIndexCount[index1] = 0;
            iterablesEmptyRows.push(index1 + n0);
            continue;
          }
          newIterablesIndexCount[index1] = k.length
          for (j = 0; j < k.length; j++) {
            newValues.push(k[j]);
            unsortedIndex[l] = index1;
            l++;
          }
        }
        var sortMap = sortRange(t);
        newValues = permute(newValues, sortMap);
        newIndex = permute(unsortedIndex, sortMap)
      } else{
        newValues = newData.map(value);
        newIndex = sortRange(n1);
        newValues = permute(newValues, newIndex);
      }
      var bounds = refilter(newValues), lo1 = bounds[0], hi1 = bounds[1];
      var index2, index3, index4;
      if(iterable) {
        n1 = t;
        if (refilterFunction) {
          for (index2 = 0; index2 < n1; ++index2) {
            if (!refilterFunction(newValues[index2], index2)) {
              if(--newIterablesIndexCount[newIndex[index2]] === 0) {
                filters[offset][newIndex[index2] + n0] |= one;
              }
              newIterablesIndexFilterStatus[index2] = 1;
            }
          }
        } else {
          for (index3 = 0; index3 < lo1; ++index3) {
            if(--newIterablesIndexCount[newIndex[index3]] === 0) {
              filters[offset][newIndex[index3] + n0] |= one;
            }
            newIterablesIndexFilterStatus[index3] = 1;
          }
          for (index4 = hi1; index4 < n1; ++index4) {
            if(--newIterablesIndexCount[newIndex[index4]] === 0) {
              filters[offset][newIndex[index4] + n0] |= one;
            }
            newIterablesIndexFilterStatus[index4] = 1;
          }
        }
      } else {
        if (refilterFunction) {
          for (index2 = 0; index2 < n1; ++index2) {
            if (!refilterFunction(newValues[index2], index2)) {
              filters[offset][newIndex[index2] + n0] |= one;
            }
          }
        } else {
          for (index3 = 0; index3 < lo1; ++index3) {
            filters[offset][newIndex[index3] + n0] |= one;
          }
          for (index4 = hi1; index4 < n1; ++index4) {
            filters[offset][newIndex[index4] + n0] |= one;
          }
        }
      }
      if (!n0) {
        values = newValues;
        index = newIndex;
        iterablesIndexCount = newIterablesIndexCount;
        iterablesIndexFilterStatus = newIterablesIndexFilterStatus;
        lo0 = lo1;
        hi0 = hi1;
        return;
      }
      var oldValues = values,
        oldIndex = index,
        oldIterablesIndexFilterStatus = iterablesIndexFilterStatus,
        old_n0,
        i1 = 0;
      i0 = 0;
      if(iterable){
        old_n0 = n0
        n0 = oldValues.length;
        n1 = t
      }
      values = iterable ? new Array(n0 + n1) : new Array(n);
      index = iterable ? new Array(n0 + n1) : cr_index(n, n);
      if(iterable) iterablesIndexFilterStatus = cr_index(n0 + n1, 1);
      if(iterable) {
        var oldiiclength = iterablesIndexCount.length;
        iterablesIndexCount = xfilterArray.arrayLengthen(iterablesIndexCount, n);
        for(var j=0; j+oldiiclength < n; j++) {
          iterablesIndexCount[j+oldiiclength] = newIterablesIndexCount[j];
        }
      }
      var index5 = 0;
      for (; i0 < n0 && i1 < n1; ++index5) {
        if (oldValues[i0] < newValues[i1]) {
          values[index5] = oldValues[i0];
          if(iterable) iterablesIndexFilterStatus[index5] = oldIterablesIndexFilterStatus[i0];
          index[index5] = oldIndex[i0++];
        } else {
          values[index5] = newValues[i1];
          if(iterable) iterablesIndexFilterStatus[index5] = newIterablesIndexFilterStatus[i1];
          index[index5] = newIndex[i1++] + (iterable ? old_n0 : n0);
        }
      }
      for (; i0 < n0; ++i0, ++index5) {
        values[index5] = oldValues[i0];
        if(iterable) iterablesIndexFilterStatus[index5] = oldIterablesIndexFilterStatus[i0];
        index[index5] = oldIndex[i0];
      }
      for (; i1 < n1; ++i1, ++index5) {
        values[index5] = newValues[i1];
        if(iterable) iterablesIndexFilterStatus[index5] = newIterablesIndexFilterStatus[i1];
        index[index5] = newIndex[i1] + (iterable ? old_n0 : n0);
      }
      bounds = refilter(values), lo0 = bounds[0], hi0 = bounds[1];
    }
    function postAdd(newData, n0, n1) {
      indexListeners.forEach(function(l) { l(newValues, newIndex, n0, n1); });
      newValues = newIndex = null;
    }
    function removeData(reIndex) {
      if (iterable) {
        for (var i0 = 0, i1 = 0; i0 < iterablesEmptyRows.length; i0++) {
          if (reIndex[iterablesEmptyRows[i0]] !== REMOVED_INDEX) {
            iterablesEmptyRows[i1] = reIndex[iterablesEmptyRows[i0]];
            i1++;
          }
        }
        iterablesEmptyRows.length = i1;
        for (i0 = 0, i1 = 0; i0 < n; i0++) {
          if (reIndex[i0] !== REMOVED_INDEX) {
            if (i1 !== i0) iterablesIndexCount[i1] = iterablesIndexCount[i0];
            i1++;
          }
        }
        iterablesIndexCount = iterablesIndexCount.slice(0, i1);
      }
      var n0 = values.length;
      for (var i = 0, j = 0, oldDataIndex; i < n0; ++i) {
        oldDataIndex = index[i];
        if (reIndex[oldDataIndex] !== REMOVED_INDEX) {
          if (i !== j) values[j] = values[i];
          index[j] = reIndex[oldDataIndex];
          if (iterable) {
            iterablesIndexFilterStatus[j] = iterablesIndexFilterStatus[i];
          }
          ++j;
        }
      }
      values.length = j;
      if (iterable) iterablesIndexFilterStatus = iterablesIndexFilterStatus.slice(0, j);
      while (j < n0) index[j++] = 0;
      var bounds = refilter(values);
      lo0 = bounds[0], hi0 = bounds[1];
    }
    function filterIndexBounds(bounds) {
      var lo1 = bounds[0],
          hi1 = bounds[1];
      if (refilterFunction) {
        refilterFunction = null;
        filterIndexFunction(function(d, i) { return lo1 <= i && i < hi1; }, bounds[0] === 0 && bounds[1] === values.length);
        lo0 = lo1;
        hi0 = hi1;
        return dimension;
      }
      var i,
          j,
          k,
          added = [],
          removed = [],
          valueIndexAdded = [],
          valueIndexRemoved = [];
      if (lo1 < lo0) {
        for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {
          added.push(index[i]);
          valueIndexAdded.push(i);
        }
      } else if (lo1 > lo0) {
        for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {
          removed.push(index[i]);
          valueIndexRemoved.push(i);
        }
      }
      if (hi1 > hi0) {
        for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {
          added.push(index[i]);
          valueIndexAdded.push(i);
        }
      } else if (hi1 < hi0) {
        for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {
          removed.push(index[i]);
          valueIndexRemoved.push(i);
        }
      }
      if(!iterable) {
        for(i=0; i<added.length; i++) {
          filters[offset][added[i]] ^= one;
        }
        for(i=0; i<removed.length; i++) {
          filters[offset][removed[i]] ^= one;
        }
      } else {
        var newAdded = [];
        var newRemoved = [];
        for (i = 0; i < added.length; i++) {
          iterablesIndexCount[added[i]]++
          iterablesIndexFilterStatus[valueIndexAdded[i]] = 0;
          if(iterablesIndexCount[added[i]] === 1) {
            filters[offset][added[i]] ^= one;
            newAdded.push(added[i]);
          }
        }
        for (i = 0; i < removed.length; i++) {
          iterablesIndexCount[removed[i]]--
          iterablesIndexFilterStatus[valueIndexRemoved[i]] = 1;
          if(iterablesIndexCount[removed[i]] === 0) {
            filters[offset][removed[i]] ^= one;
            newRemoved.push(removed[i]);
          }
        }
        added = newAdded;
        removed = newRemoved;
        if(refilter === xfilterFilter.filterAll) {
          for(i = 0; i < iterablesEmptyRows.length; i++) {
            if((filters[offset][k = iterablesEmptyRows[i]] & one)) {
              filters[offset][k] ^= one;
              added.push(k);
            }
          }
        } else {
          for(i = 0; i < iterablesEmptyRows.length; i++) {
            if(!(filters[offset][k = iterablesEmptyRows[i]] & one)) {
              filters[offset][k] ^= one;
              removed.push(k);
            }
          }
        }
      }
      lo0 = lo1;
      hi0 = hi1;
      filterListeners.forEach(function(l) { l(one, offset, added, removed); });
      triggerOnChange('filtered');
      return dimension;
    }
    function filter(range) {
      return range == null
          ? filterAll() : Array.isArray(range)
          ? filterRange(range) : typeof range === "function"
          ? filterFunction(range)
          : filterExact(range);
    }
    function filterExact(value) {
      filterValue = value;
      filterValuePresent = true;
      return filterIndexBounds((refilter = xfilterFilter.filterExact(bisect, value))(values));
    }
    function filterRange(range) {
      filterValue = range;
      filterValuePresent = true;
      return filterIndexBounds((refilter = xfilterFilter.filterRange(bisect, range))(values));
    }
    function filterAll() {
      filterValue = undefined;
      filterValuePresent = false;
      return filterIndexBounds((refilter = xfilterFilter.filterAll)(values));
    }
    function filterFunction(f) {
      filterValue = f;
      filterValuePresent = true;
      refilterFunction = f;
      refilter = xfilterFilter.filterAll;
      filterIndexFunction(f, false);
      var bounds = refilter(values);
      lo0 = bounds[0], hi0 = bounds[1];
      return dimension;
    }
    function filterIndexFunction(f, filterAll) {
      var i,
          k,
          x,
          added = [],
          removed = [],
          valueIndexAdded = [],
          valueIndexRemoved = [],
          indexLength = values.length;
      if(!iterable) {
        for (i = 0; i < indexLength; ++i) {
          if (!(filters[offset][k = index[i]] & one) ^ !!(x = f(values[i], i))) {
            if (x) added.push(k);
            else removed.push(k);
          }
        }
      }
      if(iterable) {
        for(i=0; i < indexLength; ++i) {
          if(f(values[i], i)) {
            added.push(index[i]);
            valueIndexAdded.push(i);
          } else {
            removed.push(index[i]);
            valueIndexRemoved.push(i);
          }
        }
      }
      if(!iterable) {
        for(i=0; i<added.length; i++) {
          if(filters[offset][added[i]] & one) filters[offset][added[i]] &= zero;
        }
        for(i=0; i<removed.length; i++) {
          if(!(filters[offset][removed[i]] & one)) filters[offset][removed[i]] |= one;
        }
      } else {
        var newAdded = [];
        var newRemoved = [];
        for (i = 0; i < added.length; i++) {
          if(iterablesIndexFilterStatus[valueIndexAdded[i]] === 1) {
            iterablesIndexCount[added[i]]++
            iterablesIndexFilterStatus[valueIndexAdded[i]] = 0;
            if(iterablesIndexCount[added[i]] === 1) {
              filters[offset][added[i]] ^= one;
              newAdded.push(added[i]);
            }
          }
        }
        for (i = 0; i < removed.length; i++) {
          if(iterablesIndexFilterStatus[valueIndexRemoved[i]] === 0) {
            iterablesIndexCount[removed[i]]--
            iterablesIndexFilterStatus[valueIndexRemoved[i]] = 1;
            if(iterablesIndexCount[removed[i]] === 0) {
              filters[offset][removed[i]] ^= one;
              newRemoved.push(removed[i]);
            }
          }
        }
        added = newAdded;
        removed = newRemoved;
        if(filterAll) {
          for(i = 0; i < iterablesEmptyRows.length; i++) {
            if((filters[offset][k = iterablesEmptyRows[i]] & one)) {
              filters[offset][k] ^= one;
              added.push(k);
            }
          }
        } else {
          for(i = 0; i < iterablesEmptyRows.length; i++) {
            if(!(filters[offset][k = iterablesEmptyRows[i]] & one)) {
              filters[offset][k] ^= one;
              removed.push(k);
            }
          }
        }
      }
      filterListeners.forEach(function(l) { l(one, offset, added, removed); });
      triggerOnChange('filtered');
    }
    function currentFilter() {
      return filterValue;
    }
    function hasCurrentFilter() {
      return filterValuePresent;
    }
    function top(k, top_offset) {
      var array = [],
          i = hi0,
          j,
          toSkip = 0;
      if(top_offset && top_offset > 0) toSkip = top_offset;
      while (--i >= lo0 && k > 0) {
        if (filters.zero(j = index[i])) {
          if(toSkip > 0) {
            --toSkip;
          } else {
            array.push(data[j]);
            --k;
          }
        }
      }
      if(iterable){
        for(i = 0; i < iterablesEmptyRows.length && k > 0; i++) {
          if(filters.zero(j = iterablesEmptyRows[i])) {
            if(toSkip > 0) {
              --toSkip;
            } else {
              array.push(data[j]);
              --k;
            }
          }
        }
      }
      return array;
    }
    function bottom(k, bottom_offset) {
      var array = [],
          i,
          j,
          toSkip = 0;
      if(bottom_offset && bottom_offset > 0) toSkip = bottom_offset;
      if(iterable) {
        for(i = 0; i < iterablesEmptyRows.length && k > 0; i++) {
          if(filters.zero(j = iterablesEmptyRows[i])) {
            if(toSkip > 0) {
              --toSkip;
            } else {
              array.push(data[j]);
              --k;
            }
          }
        }
      }
      i = lo0;
      while (i < hi0 && k > 0) {
        if (filters.zero(j = index[i])) {
          if(toSkip > 0) {
            --toSkip;
          } else {
            array.push(data[j]);
            --k;
          }
        }
        i++;
      }
      return array;
    }
    function group(key) {
      var group = {
        top: top,
        all: all,
        reduce: reduce,
        reduceCount: reduceCount,
        reduceSum: reduceSum,
        order: order,
        orderNatural: orderNatural,
        size: size,
        dispose: dispose,
        remove: dispose 
      };
      dimensionGroups.push(group);
      var groups, 
          groupIndex, 
          groupWidth = 8,
          groupCapacity = capacity(groupWidth),
          k = 0, 
          select,
          heap,
          reduceAdd,
          reduceRemove,
          reduceInitial,
          update = cr_null,
          reset = cr_null,
          resetNeeded = true,
          groupAll = key === cr_null,
          n0old;
      if (arguments.length < 1) {
        key = cr_identity
      };
      filterListeners.push(update);
      indexListeners.push(add);
      removeDataListeners.push(removeData);
      add(values, index, 0, n);
      function add(newValues, newIndex, n0, n1) {
        if(iterable) {
          n0old = n0
          n0 = values.length - newValues.length
          n1 = newValues.length;
        }
        var oldGroups = groups,
            reIndex = iterable ? [] : cr_index(k, groupCapacity),
            add = reduceAdd,
            remove = reduceRemove,
            initial = reduceInitial,
            k0 = k, 
            i0 = 0, 
            i1 = 0, 
            j, 
            g0, 
            x0, 
            x1, 
            g, 
            x; 
        if (resetNeeded) add = initial = cr_null;
        if (resetNeeded) remove = initial = cr_null;
        groups = new Array(k), k = 0;
        if(iterable){
          groupIndex = k0 ? groupIndex : [];
        }
        else{
          groupIndex = k0 > 1 ? xfilterArray.arrayLengthen(groupIndex, n) : cr_index(n, groupCapacity);
        }
        if (k0) x0 = (g0 = oldGroups[0]).key;
        while (i1 < n1 && !((x1 = key(newValues[i1])) >= x1)) ++i1;
        while (i1 < n1) {
          if (g0 && x0 <= x1) {
            g = g0, x = x0;
            reIndex[i0] = k;
            g0 = oldGroups[++i0];
            if (g0) x0 = g0.key;
          } else {
            g = {key: x1, value: initial()}, x = x1;
          }
          groups[k] = g;
          while (x1 <= x) {
            j = newIndex[i1] + (iterable ? n0old : n0)
            if(iterable){
              if(groupIndex[j]){
                groupIndex[j].push(k)
              }
              else{
                groupIndex[j] = [k]
              }
            }
            else{
              groupIndex[j] = k;
            }
            g.value = add(g.value, data[j], true);
            if (!filters.zeroExcept(j, offset, zero)) g.value = remove(g.value, data[j], false);
            if (++i1 >= n1) break;
            x1 = key(newValues[i1]);
          }
          groupIncrement();
        }
        while (i0 < k0) {
          groups[reIndex[i0] = k] = oldGroups[i0++];
          groupIncrement();
        }
        if(iterable){
          for (var index1 = 0; index1 < n; index1++) {
            if(!groupIndex[index1]){
              groupIndex[index1] = [];
            }
          }
        }
        if(k > i0){
          if(iterable){
            for (i0 = 0; i0 < n0old; ++i0) {
              for (index1 = 0; index1 < groupIndex[i0].length; index1++) {
                groupIndex[i0][index1] = reIndex[groupIndex[i0][index1]];
              }
            }
          }
          else{
            for (i0 = 0; i0 < n0; ++i0) {
              groupIndex[i0] = reIndex[groupIndex[i0]];
            }
          }
        }
        j = filterListeners.indexOf(update);
        if (k > 1 || iterable) {
          update = updateMany;
          reset = resetMany;
        } else {
          if (!k && groupAll) {
            k = 1;
            groups = [{key: null, value: initial()}];
          }
          if (k === 1) {
            update = updateOne;
            reset = resetOne;
          } else {
            update = cr_null;
            reset = cr_null;
          }
          groupIndex = null;
        }
        filterListeners[j] = update;
        function groupIncrement() {
          if(iterable){
            k++
            return
          }
          if (++k === groupCapacity) {
            reIndex = xfilterArray.arrayWiden(reIndex, groupWidth <<= 1);
            groupIndex = xfilterArray.arrayWiden(groupIndex, groupWidth);
            groupCapacity = capacity(groupWidth);
          }
        }
      }
      function removeData(reIndex) {
        if (k > 1 || iterable) {
          var oldK = k,
              oldGroups = groups,
              seenGroups = cr_index(oldK, oldK),
              i,
              i0,
              j;
          if (!iterable) {
            for (i = 0, j = 0; i < n; ++i) {
              if (reIndex[i] !== REMOVED_INDEX) {
                seenGroups[groupIndex[j] = groupIndex[i]] = 1;
                ++j;
              }
            }
          } else {
            for (i = 0, j = 0; i < n; ++i) {
              if (reIndex[i] !== REMOVED_INDEX) {
                groupIndex[j] = groupIndex[i];
                for (i0 = 0; i0 < groupIndex[j].length; i0++) {
                  seenGroups[groupIndex[j][i0]] = 1;
                }
                ++j;
              }
            }
          }
          groups = [], k = 0;
          for (i = 0; i < oldK; ++i) {
            if (seenGroups[i]) {
              seenGroups[i] = k++;
              groups.push(oldGroups[i]);
            }
          }
          if (k > 1 || iterable) {
            if (!iterable) {
              for (i = 0; i < j; ++i) groupIndex[i] = seenGroups[groupIndex[i]];
            } else {
              for (i = 0; i < j; ++i) {
                for (i0 = 0; i0 < groupIndex[i].length; ++i0) {
                  groupIndex[i][i0] = seenGroups[groupIndex[i][i0]];
                }
              }
            }
          } else {
            groupIndex = null;
          }
          filterListeners[filterListeners.indexOf(update)] = k > 1 || iterable
              ? (reset = resetMany, update = updateMany)
              : k === 1 ? (reset = resetOne, update = updateOne)
              : reset = update = cr_null;
        } else if (k === 1) {
          if (groupAll) return;
          for (var index3 = 0; index3 < n; ++index3) if (reIndex[index3] !== REMOVED_INDEX) return;
          groups = [], k = 0;
          filterListeners[filterListeners.indexOf(update)] =
          update = reset = cr_null;
        }
      }
      function updateMany(filterOne, filterOffset, added, removed, notFilter) {
        if ((filterOne === one && filterOffset === offset) || resetNeeded) return;
        var i,
            j,
            k,
            n,
            g;
        if(iterable){
          for (i = 0, n = added.length; i < n; ++i) {
            if (filters.zeroExcept(k = added[i], offset, zero)) {
              for (j = 0; j < groupIndex[k].length; j++) {
                g = groups[groupIndex[k][j]];
                g.value = reduceAdd(g.value, data[k], false, j);
              }
            }
          }
          for (i = 0, n = removed.length; i < n; ++i) {
            if (filters.onlyExcept(k = removed[i], offset, zero, filterOffset, filterOne)) {
              for (j = 0; j < groupIndex[k].length; j++) {
                g = groups[groupIndex[k][j]];
                g.value = reduceRemove(g.value, data[k], notFilter, j);
              }
            }
          }
          return;
        }
        for (i = 0, n = added.length; i < n; ++i) {
          if (filters.zeroExcept(k = added[i], offset, zero)) {
            g = groups[groupIndex[k]];
            g.value = reduceAdd(g.value, data[k], false);
          }
        }
        for (i = 0, n = removed.length; i < n; ++i) {
          if (filters.onlyExcept(k = removed[i], offset, zero, filterOffset, filterOne)) {
            g = groups[groupIndex[k]];
            g.value = reduceRemove(g.value, data[k], notFilter);
          }
        }
      }
      function updateOne(filterOne, filterOffset, added, removed, notFilter) {
        if ((filterOne === one && filterOffset === offset) || resetNeeded) return;
        var i,
            k,
            n,
            g = groups[0];
        for (i = 0, n = added.length; i < n; ++i) {
          if (filters.zeroExcept(k = added[i], offset, zero)) {
            g.value = reduceAdd(g.value, data[k], false);
          }
        }
        for (i = 0, n = removed.length; i < n; ++i) {
          if (filters.onlyExcept(k = removed[i], offset, zero, filterOffset, filterOne)) {
            g.value = reduceRemove(g.value, data[k], notFilter);
          }
        }
      }
      function resetMany() {
        var i,
            j,
            g;
        for (i = 0; i < k; ++i) {
          groups[i].value = reduceInitial();
        }
        if(iterable){
          for (i = 0; i < n; ++i) {
            for (j = 0; j < groupIndex[i].length; j++) {
              g = groups[groupIndex[i][j]];
              g.value = reduceAdd(g.value, data[i], true, j);
            }
          }
          for (i = 0; i < n; ++i) {
            if (!filters.zeroExcept(i, offset, zero)) {
              for (j = 0; j < groupIndex[i].length; j++) {
                g = groups[groupIndex[i][j]];
                g.value = reduceRemove(g.value, data[i], false, j);
              }
            }
          }
          return;
        }
        for (i = 0; i < n; ++i) {
          g = groups[groupIndex[i]];
          g.value = reduceAdd(g.value, data[i], true);
        }
        for (i = 0; i < n; ++i) {
          if (!filters.zeroExcept(i, offset, zero)) {
            g = groups[groupIndex[i]];
            g.value = reduceRemove(g.value, data[i], false);
          }
        }
      }
      function resetOne() {
        var i,
            g = groups[0];
        g.value = reduceInitial();
        for (i = 0; i < n; ++i) {
          g.value = reduceAdd(g.value, data[i], true);
        }
        for (i = 0; i < n; ++i) {
          if (!filters.zeroExcept(i, offset, zero)) {
            g.value = reduceRemove(g.value, data[i], false);
          }
        }
      }
      function all() {
        if (resetNeeded) reset(), resetNeeded = false;
        return groups;
      }
      function top(k) {
        var top = select(all(), 0, groups.length, k);
        return heap.sort(top, 0, top.length);
      }
      function reduce(add, remove, initial) {
        reduceAdd = add;
        reduceRemove = remove;
        reduceInitial = initial;
        resetNeeded = true;
        return group;
      }
      function reduceCount() {
        return reduce(xfilterReduce.reduceIncrement, xfilterReduce.reduceDecrement, cr_zero);
      }
      function reduceSum(value) {
        return reduce(xfilterReduce.reduceAdd(value), xfilterReduce.reduceSubtract(value), cr_zero);
      }
      function order(value) {
        select = xfilterHeapselect.by(valueOf);
        heap = xfilterHeap.by(valueOf);
        function valueOf(d) { return value(d.value); }
        return group;
      }
      function orderNatural() {
        return order(cr_identity);
      }
      function size() {
        return k;
      }
      function dispose() {
        var i = filterListeners.indexOf(update);
        if (i >= 0) filterListeners.splice(i, 1);
        i = indexListeners.indexOf(add);
        if (i >= 0) indexListeners.splice(i, 1);
        i = removeDataListeners.indexOf(removeData);
        if (i >= 0) removeDataListeners.splice(i, 1);
        i = dimensionGroups.indexOf(group);
        if (i >= 0) dimensionGroups.splice(i, 1);
        return group;
      }
      return reduceCount().orderNatural();
    }
    function groupAll() {
      var g = group(cr_null), all = g.all;
      delete g.all;
      delete g.top;
      delete g.order;
      delete g.orderNatural;
      delete g.size;
      g.value = function() { return all()[0].value; };
      return g;
    }
    function dispose() {
      dimensionGroups.forEach(function(group) { group.dispose(); });
      var i = dataListeners.indexOf(preAdd);
      if (i >= 0) dataListeners.splice(i, 1);
      i = dataListeners.indexOf(postAdd);
      if (i >= 0) dataListeners.splice(i, 1);
      i = removeDataListeners.indexOf(removeData);
      if (i >= 0) removeDataListeners.splice(i, 1);
      filters.masks[offset] &= zero;
      return filterAll();
    }
    return dimension;
  }
  function groupAll() {
    var group = {
      reduce: reduce,
      reduceCount: reduceCount,
      reduceSum: reduceSum,
      value: value,
      dispose: dispose,
      remove: dispose 
    };
    var reduceValue,
        reduceAdd,
        reduceRemove,
        reduceInitial,
        resetNeeded = true;
    filterListeners.push(update);
    dataListeners.push(add);
    add(data, 0, n);
    function add(newData, n0) {
      var i;
      if (resetNeeded) return;
      for (i = n0; i < n; ++i) {
        reduceValue = reduceAdd(reduceValue, data[i], true);
        if (!filters.zero(i)) {
          reduceValue = reduceRemove(reduceValue, data[i], false);
        }
      }
    }
    function update(filterOne, filterOffset, added, removed, notFilter) {
      var i,
          k,
          n;
      if (resetNeeded) return;
      for (i = 0, n = added.length; i < n; ++i) {
        if (filters.zero(k = added[i])) {
          reduceValue = reduceAdd(reduceValue, data[k], notFilter);
        }
      }
      for (i = 0, n = removed.length; i < n; ++i) {
        if (filters.only(k = removed[i], filterOffset, filterOne)) {
          reduceValue = reduceRemove(reduceValue, data[k], notFilter);
        }
      }
    }
    function reset() {
      var i;
      reduceValue = reduceInitial();
      for (i = 0; i < n; ++i) {
        reduceValue = reduceAdd(reduceValue, data[i], true);
        if (!filters.zero(i)) {
          reduceValue = reduceRemove(reduceValue, data[i], false);
        }
      }
    }
    function reduce(add, remove, initial) {
      reduceAdd = add;
      reduceRemove = remove;
      reduceInitial = initial;
      resetNeeded = true;
      return group;
    }
    function reduceCount() {
      return reduce(xfilterReduce.reduceIncrement, xfilterReduce.reduceDecrement, cr_zero);
    }
    function reduceSum(value) {
      return reduce(xfilterReduce.reduceAdd(value), xfilterReduce.reduceSubtract(value), cr_zero);
    }
    function value() {
      if (resetNeeded) reset(), resetNeeded = false;
      return reduceValue;
    }
    function dispose() {
      var i = filterListeners.indexOf(update);
      if (i >= 0) filterListeners.splice(i, 1);
      i = dataListeners.indexOf(add);
      if (i >= 0) dataListeners.splice(i, 1);
      return group;
    }
    return reduceCount();
  }
  function size() {
    return n;
  }
  function all(){
    return data;
  }
  function allFiltered(ignore_dimensions) {
    var array = [],
        i = 0,
        mask = maskForDimensions(ignore_dimensions || []);
      for (i = 0; i < n; i++) {
        if (filters.zeroExceptMask(i, mask)) {
          array.push(data[i]);
        }
      }
      return array;
  }
  function onChange(cb){
    if(typeof cb !== 'function'){
      console.warn('onChange callback parameter must be a function!');
      return;
    }
    callbacks.push(cb);
    return function(){
      callbacks.splice(callbacks.indexOf(cb), 1);
    };
  }
  function triggerOnChange(eventName){
    for (var i = 0; i < callbacks.length; i++) {
      callbacks[i](eventName);
    }
  }
  return arguments.length
      ? add(arguments[0])
      : crossfilter;
}
function cr_index(n, m) {
  return (m < 0x101
      ? xfilterArray.array8 : m < 0x10001
      ? xfilterArray.array16
      : xfilterArray.array32)(n);
}
function cr_range(n) {
  var range = cr_index(n, n);
  for (var i = -1; ++i < n;) range[i] = i;
  return range;
}
function capacity(w) {
  return w === 8
      ? 0x100 : w === 16
      ? 0x10000
      : 0x100000000;
}
return {
  crossfilter : crossfilter
}
}();
H.Cube.accessors = function() {
var reductio_parameters = H.Cube.parameters;
function assign(target) {
	if (target == null) {
		throw new TypeError('Cannot convert undefined or null to object');
	}
	var output = Object(target);
	for (var index = 1; index < arguments.length; ++index) {
		var source = arguments[index];
		if (source != null) {
			for (var nextKey in source) {
				if(source.hasOwnProperty(nextKey)) {
					output[nextKey] = source[nextKey];
				}
			}
		}
	}
	return output;
};
function accessor_build(obj, p) {
	function accessorify(v) {
		if( typeof v === 'string' ) {
			var tempValue = v;
			var func = function (d) { return d[tempValue]; }
			return func;
		} else {
			return v;
		}
	}
	function accessorifyNumeric(v) {
		if( typeof v === 'string' ) {
			var tempValue = v;
			var func = function (d) { return +d[tempValue]; }
			return func;
		} else {
			return v;
		}
	}
	obj.fromObject = function(value) {
		if(!arguments.length) return p;
		assign(p, value);
		return obj;
	};
	obj.toObject = function() {
		return p;
	};
	obj.count = function(value, propName) {
		if (!arguments.length) return p.count;
    if (!propName) {
      propName = 'count';
    }
		p.count = propName;
		return obj;
	};
	obj.sum = function(value) {
		if (!arguments.length) return p.sum;
		value = accessorifyNumeric(value);
		p.sum = value;
		return obj;
	};
	obj.avg = function(value) {
		if (!arguments.length) return p.avg;
		value = accessorifyNumeric(value);
		if( typeof value === 'function' ) {
			if(p.sum && p.sum !== value) console.warn('SUM aggregation is being overwritten by AVG aggregation');
			p.sum = value;
			p.avg = true;
			p.count = 'count';
		} else {
			p.avg = value;
		}
		return obj;
	};
	obj.exception = function(value) {
		if (!arguments.length) return p.exceptionAccessor;
		value = accessorify(value);
		p.exceptionAccessor = value;
		return obj;
	};
	obj.filter = function(value) {
		if (!arguments.length) return p.filter;
		p.filter = value;
		return obj;
	};
	obj.valueList = function(value) {
		if (!arguments.length) return p.valueList;
		value = accessorify(value);
		p.valueList = value;
		return obj;
	};
	obj.median = function(value) {
		if (!arguments.length) return p.median;
		value = accessorifyNumeric(value);
		if(typeof value === 'function') {
			if(p.valueList && p.valueList !== value) console.warn('VALUELIST accessor is being overwritten by median aggregation');
			p.valueList = value;
		}
		p.median = value;
		return obj;
	};
	obj.min = function(value) {
		if (!arguments.length) return p.min;
		value = accessorifyNumeric(value);
		if(typeof value === 'function') {
			if(p.valueList && p.valueList !== value) console.warn('VALUELIST accessor is being overwritten by min aggregation');
			p.valueList = value;
		}
		p.min = value;
		return obj;
	};
	obj.max = function(value) {
		if (!arguments.length) return p.max;
		value = accessorifyNumeric(value);
		if(typeof value === 'function') {
			if(p.valueList && p.valueList !== value) console.warn('VALUELIST accessor is being overwritten by max aggregation');
			p.valueList = value;
		}
		p.max = value;
		return obj;
	};
	obj.exceptionCount = function(value) {
		if (!arguments.length) return p.exceptionCount;
		value = accessorify(value);
		if( typeof value === 'function' ) {
			if(p.exceptionAccessor && p.exceptionAccessor !== value) console.warn('EXCEPTION accessor is being overwritten by exception count aggregation');
			p.exceptionAccessor = value;
			p.exceptionCount = true;
		} else {
			p.exceptionCount = value;
		}
		return obj;
	};
	obj.exceptionSum = function(value) {
		if (!arguments.length) return p.exceptionSum;
		value = accessorifyNumeric(value);
		p.exceptionSum = value;
		return obj;
	};
	obj.histogramValue = function(value) {
		if (!arguments.length) return p.histogramValue;
		value = accessorifyNumeric(value);
		p.histogramValue = value;
		return obj;
	};
	obj.histogramBins = function(value) {
		if (!arguments.length) return p.histogramThresholds;
		p.histogramThresholds = value;
		return obj;
	};
	obj.std = function(value) {
		if (!arguments.length) return p.std;
		value = accessorifyNumeric(value);
		if(typeof(value) === 'function') {
			p.sumOfSquares = value;
			p.sum = value;
			p.count = 'count';
			p.std = true;
		} else {
			p.std = value;
		}
		return obj;
	};
	obj.sumOfSq = function(value) {
		if (!arguments.length) return p.sumOfSquares;
		value = accessorifyNumeric(value);
		p.sumOfSquares = value;
		return obj;
	};
	obj.value = function(value, accessor) {
		if (!arguments.length || typeof value !== 'string' ) {
			console.error("'value' requires a string argument.");
		} else {
			if(!p.values) p.values = {};
			p.values[value] = {};
			p.values[value].parameters = reductio_parameters();
			accessor_build(p.values[value], p.values[value].parameters);
			if(accessor) p.values[value].accessor = accessor;
			return p.values[value];
		}
	};
	obj.nest = function(keyAccessorArray) {
		if(!arguments.length) return p.nestKeys;
		keyAccessorArray.map(accessorify);
		p.nestKeys = keyAccessorArray;
		return obj;
	};
	obj.alias = function(propAccessorObj) {
		if(!arguments.length) return p.aliasKeys;
		p.aliasKeys = propAccessorObj;
		return obj;
	};
	obj.aliasProp = function(propAccessorObj) {
		if(!arguments.length) return p.aliasPropKeys;
		p.aliasPropKeys = propAccessorObj;
		return obj;
	};
	obj.groupAll = function(groupTest) {
		if(!arguments.length) return p.groupAll;
		p.groupAll = groupTest;
		return obj;
	};
	obj.dataList = function(value) {
		if (!arguments.length) return p.dataList;
		p.dataList = value;
		return obj;
	};
	obj.custom = function(addRemoveInitialObj) {
		if (!arguments.length) return p.custom;
		p.custom = addRemoveInitialObj;
		return obj;
	};
}
return {
	build: accessor_build
}
}();

H.Cube.reductio_alias_prop = {
	add: function (obj, prior, path) {
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			for(var prop in obj) {
				path(p)[prop] = obj[prop](path(p),v);
			}
			return p;
		};
	}
};

H.Cube.reductio_alias = {
	initial: function(prior, path, obj) {
		return function (p) {
			if(prior) p = prior(p);
			function buildAliasFunction(key){
				return function(){
					return obj[key](path(p));
				};
			}
			for(var prop in obj) {
				path(p)[prop] = buildAliasFunction(prop);
			}
			return p;
		};
	}
};

H.Cube.reductio_avg = {
	add: function (a, prior, path) {
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			if(path(p).count > 0) {
				path(p).avg = path(p).sum / path(p).count;
			} else {
				path(p).avg = 0;
			}
			return p;
		};
	},
	remove: function (a, prior, path) {
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			if(path(p).count > 0) {
				path(p).avg = path(p).sum / path(p).count;
			} else {
				path(p).avg = 0;
			}
			return p;
		};
	},
	initial: function (prior, path) {
		return function (p) {
			p = prior(p);
			path(p).avg = 0;
			return p;
		};
	}
};

H.Cube.build = function() {
function build_function(p, f, path) {
	const reductio_filter = H.Cube.reductio_filter;
	const reductio_count = H.Cube.reductio_count;
	const reductio_sum = H.Cube.reductio_sum;
	const reductio_avg = H.Cube.reductio_avg;
	const reductio_median = H.Cube.reductio_median;
	const reductio_min = H.Cube.reductio_min;
	const reductio_max = H.Cube.reductio_max;
	const reductio_value_count = H.Cube.reductio_value_count;
	const reductio_value_list = H.Cube.reductio_value_list;
	const reductio_exception_count = H.Cube.reductio_exception_count;
	const reductio_exception_sum = H.Cube.reductio_exception_sum;
	const reductio_histogram = H.Cube.reductio_histogram;
	const reductio_sum_of_sq = H.Cube.reductio_sum_of_sq;
	const reductio_std = H.Cube.reductio_std;
	const reductio_nest = H.Cube.reductio_nest;
	const reductio_alias = H.Cube.reductio_alias;
	const reductio_alias_prop = H.Cube.reductio_alias_prop;
	const reductio_data_list = H.Cube.reductio_data_list;
	const reductio_custom = H.Cube.reductio_custom;
	if(!path) path = function (d) { return d; };
	var origF = {
		reduceAdd: f.reduceAdd,
		reduceRemove: f.reduceRemove,
		reduceInitial: f.reduceInitial
	};
	if(p.count || p.std) {
    f.reduceAdd = reductio_count.add(f.reduceAdd, path, p.count);
    f.reduceRemove = reductio_count.remove(f.reduceRemove, path, p.count);
    f.reduceInitial = reductio_count.initial(f.reduceInitial, path, p.count);
	}
	if(p.sum) {
		f.reduceAdd = reductio_sum.add(p.sum, f.reduceAdd, path);
		f.reduceRemove = reductio_sum.remove(p.sum, f.reduceRemove, path);
		f.reduceInitial = reductio_sum.initial(f.reduceInitial, path);
	}
	if(p.avg) {
		if(!p.count || !p.sum) {
			console.error("You must set .count(true) and define a .sum(accessor) to use .avg(true).");
		} else {
			f.reduceAdd = reductio_avg.add(p.sum, f.reduceAdd, path);
			f.reduceRemove = reductio_avg.remove(p.sum, f.reduceRemove, path);
			f.reduceInitial = reductio_avg.initial(f.reduceInitial, path);
		}
	}
	if(p.exceptionCount) {
		if(!p.exceptionAccessor) {
			console.error("You must define an .exception(accessor) to use .exceptionCount(true).");
		} else {
			f.reduceAdd = reductio_exception_count.add(p.exceptionAccessor, f.reduceAdd, path);
			f.reduceRemove = reductio_exception_count.remove(p.exceptionAccessor, f.reduceRemove, path);
			f.reduceInitial = reductio_exception_count.initial(f.reduceInitial, path);
		}
	}
	if(p.exceptionSum) {
		if(!p.exceptionAccessor) {
			console.error("You must define an .exception(accessor) to use .exceptionSum(accessor).");
		} else {
			f.reduceAdd = reductio_exception_sum.add(p.exceptionAccessor, p.exceptionSum, f.reduceAdd, path);
			f.reduceRemove = reductio_exception_sum.remove(p.exceptionAccessor, p.exceptionSum, f.reduceRemove, path);
			f.reduceInitial = reductio_exception_sum.initial(f.reduceInitial, path);
		}
	}
	if(p.valueList || p.median || p.min || p.max) {
		f.reduceAdd = reductio_value_list.add(p.valueList, f.reduceAdd, path);
		f.reduceRemove = reductio_value_list.remove(p.valueList, f.reduceRemove, path);
		f.reduceInitial = reductio_value_list.initial(f.reduceInitial, path);
	}
	if(p.dataList) {
		f.reduceAdd = reductio_data_list.add(p.dataList, f.reduceAdd, path);
		f.reduceRemove = reductio_data_list.remove(p.dataList, f.reduceRemove, path);
		f.reduceInitial = reductio_data_list.initial(f.reduceInitial, path);
	}
	if(p.median) {
		f.reduceAdd = reductio_median.add(f.reduceAdd, path);
		f.reduceRemove = reductio_median.remove(f.reduceRemove, path);
		f.reduceInitial = reductio_median.initial(f.reduceInitial, path);
	}
	if(p.min) {
		f.reduceAdd = reductio_min.add(f.reduceAdd, path);
		f.reduceRemove = reductio_min.remove(f.reduceRemove, path);
		f.reduceInitial = reductio_min.initial(f.reduceInitial, path);
	}
	if(p.max) {
		f.reduceAdd = reductio_max.add(f.reduceAdd, path);
		f.reduceRemove = reductio_max.remove(f.reduceRemove, path);
		f.reduceInitial = reductio_max.initial(f.reduceInitial, path);
	}
	if(p.exceptionAccessor) {
		f.reduceAdd = reductio_value_count.add(p.exceptionAccessor, f.reduceAdd, path);
		f.reduceRemove = reductio_value_count.remove(p.exceptionAccessor, f.reduceRemove, path);
		f.reduceInitial = reductio_value_count.initial(f.reduceInitial, path);
	}
	if(p.histogramValue && p.histogramThresholds) {
		f.reduceAdd = reductio_histogram.add(p.histogramValue, f.reduceAdd, path);
		f.reduceRemove = reductio_histogram.remove(p.histogramValue, f.reduceRemove, path);
		f.reduceInitial = reductio_histogram.initial(p.histogramThresholds ,f.reduceInitial, path);
	}
	if(p.sumOfSquares) {
		f.reduceAdd = reductio_sum_of_sq.add(p.sumOfSquares, f.reduceAdd, path);
		f.reduceRemove = reductio_sum_of_sq.remove(p.sumOfSquares, f.reduceRemove, path);
		f.reduceInitial = reductio_sum_of_sq.initial(f.reduceInitial, path);
	}
	if(p.std) {
		if(!p.sumOfSquares || !p.sum) {
			console.error("You must set .sumOfSq(accessor) and define a .sum(accessor) to use .std(true). Or use .std(accessor).");
		} else {
			f.reduceAdd = reductio_std.add(f.reduceAdd, path);
			f.reduceRemove = reductio_std.remove(f.reduceRemove, path);
			f.reduceInitial = reductio_std.initial(f.reduceInitial, path);
		}
	}
	if (p.custom) {
		f.reduceAdd = reductio_custom.add(f.reduceAdd, path, p.custom.add);
		f.reduceRemove = reductio_custom.remove(f.reduceRemove, path, p.custom.remove);
		f.reduceInitial = reductio_custom.initial(f.reduceInitial, path, p.custom.initial);
	}
	if(p.nestKeys) {
		f.reduceAdd = reductio_nest.add(p.nestKeys, f.reduceAdd, path);
		f.reduceRemove = reductio_nest.remove(p.nestKeys, f.reduceRemove, path);
		f.reduceInitial = reductio_nest.initial(f.reduceInitial, path);
	}
	if(p.aliasKeys) {
		f.reduceInitial = reductio_alias.initial(f.reduceInitial, path, p.aliasKeys);
	}
	if(p.aliasPropKeys) {
		f.reduceAdd = reductio_alias_prop.add(p.aliasPropKeys, f.reduceAdd, path);
		f.reduceRemove = reductio_alias_prop.add(p.aliasPropKeys, f.reduceRemove, path);
	}
	if (p.filter) {
		f.reduceAdd = reductio_filter.add(p.filter, f.reduceAdd, origF.reduceAdd, path);
		f.reduceRemove = reductio_filter.remove(p.filter, f.reduceRemove, origF.reduceRemove, path);
	}
	if(p.values) {
		Object.getOwnPropertyNames(p.values).forEach(function(n) {
			var setupPath = function(prior) {
				return function (p) {
					p = prior(p);
					path(p)[n] = {};
					return p;
				};
			};
			f.reduceInitial = setupPath(f.reduceInitial);
			build_function(p.values[n].parameters, f, function (p) { return p[n]; });
		});
	}
}
return {
	build: build_function
}
}();

H.Cube.cap = function() {
var pluck = function(n){
    return function(d){
        return d[n];
    };
};
const _grouper = function(path, prior){
    if(!path) path = function(d){return d;};
    return function(p, v){
        if(prior) prior(p, v);
        var x = path(p), y = path(v);
        if(typeof y.count !== 'undefined') x.count += y.count;
        if(typeof y.sum !== 'undefined') x.sum += y.sum;
        if(typeof y.avg !== 'undefined') x.avg = x.sum/x.count;
        return p;
    };
};
const reductio_cap = function (prior, f, p) {
    var obj = f.reduceInitial();
    var values = p.values ? Object.keys(p.values) : [];
    var _othersGrouper = _grouper();
    if (values.length) {
        for (var i = 0; i < values.length; ++i) {
            _othersGrouper = _grouper(pluck(values[i]), _othersGrouper);
        }
    }
    return function (cap, othersName) {
        if (!arguments.length) return prior();
        if( cap === Infinity || !cap ) return prior();
        var all = prior();
        var slice_idx = cap-1;
        if(all.length <= cap) return all;
        var data = all.slice(0, slice_idx);
        var others = {key: othersName || 'Others'};
        others.value = f.reduceInitial();
        for (var i = slice_idx; i < all.length; ++i) {
            _othersGrouper(others.value, all[i].value);
        }
        data.push(others);
        return data;
    };
};
return {
    reductio_cap : reductio_cap
}
}();

H.Cube.reductio_count = {
	add: function(prior, path, propName) {
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			path(p)[propName]++;
			return p;
		};
	},
	remove: function(prior, path, propName) {
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			path(p)[propName]--;
			return p;
		};
	},
	initial: function(prior, path, propName) {
		return function (p) {
			if(prior) p = prior(p);
			path(p)[propName] = 0;
			return p;
		};
	}
};

H.Cube.reductio_custom = {
	add: function(prior, path, addFn) {
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			return addFn(p, v);
		};
	},
	remove: function(prior, path, removeFn) {
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			return removeFn(p, v);
		};
	},
	initial: function(prior, path, initialFn) {
		return function (p) {	
			if(prior) p = prior(p);
			return initialFn(p);
		};
	}
};

H.Cube.reductio_data_list = {
	add: function(a, prior, path) {
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			path(p).dataList.push(v);
			return p;
		};
	},
	remove: function(a, prior, path) {
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			path(p).dataList.splice(path(p).dataList.indexOf(v), 1);
			return p;
		};
	},
	initial: function(prior, path) {
		return function (p) {
			if(prior) p = prior(p);
			path(p).dataList = [];
			return p;
		};
	}
};

H.Cube.reductio_exception_count = {
	add: function (a, prior, path) {
		var i, curr;
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			i = path(p).bisect(path(p).values, a(v), 0, path(p).values.length);
			curr = path(p).values[i];
			if((!curr || curr[0] !== a(v)) || curr[1] === 0) {
				path(p).exceptionCount++;
			}
			return p;
		};
	},
	remove: function (a, prior, path) {
		var i, curr;
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			i = path(p).bisect(path(p).values, a(v), 0, path(p).values.length);
			curr = path(p).values[i];
			if(curr && curr[0] === a(v) && curr[1] === 1) {
				path(p).exceptionCount--;
			}
			return p;
		};
	},
	initial: function (prior, path) {
		return function (p) {
			p = prior(p);
			path(p).exceptionCount = 0;
			return p;
		};
	}
};

H.Cube.reductio_exception_sum = {
	add: function (a, sum, prior, path) {
		var i, curr;
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			i = path(p).bisect(path(p).values, a(v), 0, path(p).values.length);
			curr = path(p).values[i];
			if((!curr || curr[0] !== a(v)) || curr[1] === 0) {
				path(p).exceptionSum = path(p).exceptionSum + sum(v);
			}
			return p;
		};
	},
	remove: function (a, sum, prior, path) {
		var i, curr;
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			i = path(p).bisect(path(p).values, a(v), 0, path(p).values.length);
			curr = path(p).values[i];
			if(curr && curr[0] === a(v) && curr[1] === 1) {
				path(p).exceptionSum = path(p).exceptionSum - sum(v);
			}
			return p;
		};
	},
	initial: function (prior, path) {
		return function (p) {
			p = prior(p);
			path(p).exceptionSum = 0;
			return p;
		};
	}
};

H.Cube.reductio_filter = {
	add: function (filter, prior, skip) {
		return function (p, v, nf) {
			if (filter(v, nf)) {
				if (prior) prior(p, v, nf);
			} else {
				if (skip) skip(p, v, nf);
			}
			return p;
		};
	},
	remove: function (filter, prior, skip) {
		return function (p, v, nf) {
			if (filter(v, nf)) {
				if (prior) prior(p, v, nf);
			} else {
				if (skip) skip(p, v, nf);
			}
			return p;
		};
	}
};

H.Cube.reductio_histogram = {
	add: function (a, prior, path) {
		var bisect = H.Cube.cf.crossfilter.bisect.by(function(d) { return d; }).left;
		var bisectHisto = H.Cube.cf.crossfilter.bisect.by(function(d) { return d.x; }).right;
		var curr;
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			curr = path(p).histogram[bisectHisto(path(p).histogram, a(v), 0, path(p).histogram.length) - 1];
			curr.y++;
			curr.splice(bisect(curr, a(v), 0, curr.length), 0, a(v));
			return p;
		};
	},
	remove: function (a, prior, path) {
		var bisect = H.Cube.cf.crossfilter.bisect.by(function(d) { return d; }).left;
		var bisectHisto = H.Cube.cf.crossfilter.bisect.by(function(d) { return d.x; }).right;
		var curr;
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			curr = path(p).histogram[bisectHisto(path(p).histogram, a(v), 0, path(p).histogram.length) - 1];
			curr.y--;
			curr.splice(bisect(curr, a(v), 0, curr.length), 1);
			return p;
		};
	},
	initial: function (thresholds, prior, path) {
		return function (p) {
			p = prior(p);
			path(p).histogram = [];
			var arr = [];
			for(var i = 1; i < thresholds.length; i++) {
				arr = [];
				arr.x = thresholds[i - 1];
				arr.dx = (thresholds[i] - thresholds[i - 1]);
				arr.y = 0;
				path(p).histogram.push(arr);
			}
			return p;
		};
	}
};

H.Cube.reductio_max = {
	add: function (prior, path) {
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			path(p).max = path(p).valueList[path(p).valueList.length - 1];
			return p;
		};
	},
	remove: function (prior, path) {
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			if(path(p).valueList.length === 0) {
				path(p).max = undefined;
				return p;
			}
			path(p).max = path(p).valueList[path(p).valueList.length - 1];
			return p;
		};
	},
	initial: function (prior, path) {
		return function (p) {
			p = prior(p);
			path(p).max = undefined;
			return p;
		};
	}
};

H.Cube.reductio_median = {
	add: function (prior, path) {
		var half;
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			half = Math.floor(path(p).valueList.length/2);
			if(path(p).valueList.length % 2) {
				path(p).median = path(p).valueList[half];
			} else {
				path(p).median = (path(p).valueList[half-1] + path(p).valueList[half]) / 2.0;
			}
			return p;
		};
	},
	remove: function (prior, path) {
		var half;
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			half = Math.floor(path(p).valueList.length/2);
			if(path(p).valueList.length === 0) {
				path(p).median = undefined;
				return p;
			}
			if(path(p).valueList.length === 1 || path(p).valueList.length % 2) {
				path(p).median = path(p).valueList[half];
			} else {
				path(p).median = (path(p).valueList[half-1] + path(p).valueList[half]) / 2.0;
			}
			return p;
		};
	},
	initial: function (prior, path) {
		return function (p) {
			p = prior(p);
			path(p).median = undefined;
			return p;
		};
	}
};

H.Cube.reductio_min = {
	add: function (prior, path) {
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			path(p).min = path(p).valueList[0];
			return p;
		};
	},
	remove: function (prior, path) {
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			if(path(p).valueList.length === 0) {
				path(p).min = undefined;
				return p;
			}
			path(p).min = path(p).valueList[0];
			return p;
		};
	},
	initial: function (prior, path) {
		return function (p) {
			p = prior(p);
			path(p).min = undefined;
			return p;
		};
	}
};

H.Cube.reductio_nest = {
	add: function (keyAccessors, prior, path) {
		var i; 
		var arrRef;
		var newRef;
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			arrRef = path(p).nest;
			keyAccessors.forEach(function(a) {
				newRef = arrRef.filter(function(d) { return d.key === a(v); })[0];
				if(newRef) {
					arrRef = newRef.values;
				} else {
					newRef = [];
					arrRef.push({ key: a(v), values: newRef });
					arrRef = newRef;
				}
			});
			arrRef.push(v);
			return p;
		};
	},
	remove: function (keyAccessors, prior, path) {
		var arrRef;
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			arrRef = path(p).nest;
			keyAccessors.forEach(function(a) {
				arrRef = arrRef.filter(function(d) { return d.key === a(v); })[0].values;
			});
			arrRef.splice(arrRef.indexOf(v), 1);
			return p;
		};
	},
	initial: function (prior, path) {
		return function (p) {
			p = prior(p);
			path(p).nest = [];
			return p;
		};
	}
};
H.Cube.reductio_parameters = function() {
	return {
		order: false,
		avg: false,
		count: false,
		sum: false,
		exceptionAccessor: false,
		exceptionCount: false,
		exceptionSum: false,
		filter: false,
		valueList: false,
		median: false,
		histogramValue: false,
		min: false,
		max: false,
		histogramThresholds: false,
		std: false,
		sumOfSquares: false,
		values: false,
		nestKeys: false,
		aliasKeys: false,
		aliasPropKeys: false,
		groupAll: false,
		dataList: false,
		custom: false
	};
};

H.Cube.postprocess = function(reductio) {
    return function (group, p, f) {
        group.post = function(){
            var postprocess = function () {
                return postprocess.all();
            };
            postprocess.all = function () {
                return group.all();
            };
            var postprocessors = reductio.postprocessors;
            Object.keys(postprocessors).forEach(function (name) {
                postprocess[name] = function () {
                    var _all = postprocess.all;
                    var args = [].slice.call(arguments);
                    postprocess.all = function () {
                        return postprocessors[name](_all, f, p).apply(null, args);
                    };
                    return postprocess;
                };
            });
            return postprocess;
        };
    };
}

H.Cube.postprocessors = function(reductio){
    reductio.postprocessors = {};
    reductio.registerPostProcessor = function(name, func){
        reductio.postprocessors[name] = func;
    };
    reductio.registerPostProcessor('cap', H.Cube.cap.reductio_cap);
    reductio.registerPostProcessor('sortBy', H.Cube.sort_by.exec);
};

H.Cube.sort_by = function() {
var pluck_n = function (n) {
    if (typeof n === 'function') {
        return n;
    }
    if (~n.indexOf('.')) {
        var split = n.split('.');
        return function (d) {
            return split.reduce(function (p, v) {
                return p[v];
            }, d);
        };
    }
    return function (d) {
        return d[n];
    };
};
function ascending(a, b) {
    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}
var comparer = function (accessor, ordering) {
    return function (a, b) {
        return ordering(accessor(a), accessor(b));
    };
};
var exec = function (prior) {
    return function (value, order) {
        if (arguments.length === 1) {
            order = ascending;
        }
        return prior().sort(comparer(pluck_n(value), order));
    };
};
return {
    exec : exec
}
}();
H.Cube.reductio_std = {
	add: function (prior, path) {
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			if(path(p).count > 0) {
				path(p).std = 0.0;
				var n = path(p).sumOfSq - path(p).sum*path(p).sum/path(p).count;
				if (n>0.0) path(p).std = Math.sqrt(n/(path(p).count-1));
			} else {
				path(p).std = 0.0;
			}
			return p;
		};
	},
	remove: function (prior, path) {
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			if(path(p).count > 0) {
				path(p).std = 0.0;
				var n = path(p).sumOfSq - path(p).sum*path(p).sum/path(p).count;
				if (n>0.0) path(p).std = Math.sqrt(n/(path(p).count-1));
			} else {
				path(p).std = 0;
			}
			return p;
		};
	},
	initial: function (prior, path) {
		return function (p) {
			p = prior(p);
			path(p).std = 0;
			return p;
		};
	}
};

H.Cube.reductio_sum_of_sq = {
	add: function (a, prior, path) {
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			path(p).sumOfSq = path(p).sumOfSq + a(v)*a(v);
			return p;
		};
	},
	remove: function (a, prior, path) {
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			path(p).sumOfSq = path(p).sumOfSq - a(v)*a(v);
			return p;
		};
	},
	initial: function (prior, path) {
		return function (p) {
			p = prior(p);
			path(p).sumOfSq = 0;
			return p;
		};
	}
};

H.Cube.reductio_sum = {
	add: function (a, prior, path) {
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			path(p).sum = path(p).sum + a(v);
			return p;
		};
	},
	remove: function (a, prior, path) {
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			path(p).sum = path(p).sum - a(v);
			return p;
		};
	},
	initial: function (prior, path) {
		return function (p) {
			p = prior(p);
			path(p).sum = 0;
			return p;
		};
	}
};

H.Cube.red = (function() {
  var reductio_build = H.Cube.build;
  var reductio_accessors = H.Cube.accessors;
  var reductio_parameters = H.Cube.reductio_parameters;
  var reductio_postprocess = H.Cube.postprocess;
  var crossfilter = H.Cube.cf.crossfilter;
  function reductio() {
    var parameters = reductio_parameters();
    var funcs = {};
    function my(group) {
      funcs = {
        reduceAdd: function(p) {
          return p;
        },
        reduceRemove: function(p) {
          return p;
        },
        reduceInitial: function() {
          return {};
        }
      };
      reductio_build.build(parameters, funcs);
      if (parameters.groupAll) {
        if (group.top) {
          console.warn(
            "'groupAll' is defined but attempting to run on a standard dimension.group(). Must run on dimension.groupAll()."
          );
        } else {
          var bisect = crossfilter.bisect.by(function(d) {
            return d.key;
          }).left;
          var i, j;
          var keys;
          var keysLength;
          var k; 
          group.reduce(
            function(p, v, nf) {
              keys = parameters.groupAll(v);
              keysLength = keys.length;
              for (j = 0; j < keysLength; j++) {
                k = keys[j];
                i = bisect(p, k, 0, p.length);
                if (!p[i] || p[i].key !== k) {
				  p.splice(i, 0, { key: k, value: funcs.reduceInitial() });
                }
                funcs.reduceAdd(p[i].value, v, nf);
              }
              return p;
            },
            function(p, v, nf) {
              keys = parameters.groupAll(v);
              keysLength = keys.length;
              for (j = 0; j < keysLength; j++) {
                i = bisect(p, keys[j], 0, p.length);
                funcs.reduceRemove(p[i].value, v, nf);
              }
              return p;
            },
            function() {
              return [];
            }
          );
          if (!group.all) {
            group.all = function() {
              return this.value();
            };
          }
        }
      } else {
        group.reduce(funcs.reduceAdd, funcs.reduceRemove, funcs.reduceInitial);
      }
      reductio_postprocess(group, parameters, funcs);
      return group;
    }
    reductio_accessors.build(my, parameters);
    return my;
  }
  H.Cube.postprocessors(reductio);
  reductio_postprocess = reductio_postprocess(reductio);
  return {
    reductio: reductio
  };
})();

H.Cube.reductio_value_count = {
	add: function (a, prior, path) {
		var i, curr;
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			i = path(p).bisect(path(p).values, a(v), 0, path(p).values.length);
			curr = path(p).values[i];
			if(curr && curr[0] === a(v)) {
				curr[1]++;
			} else {
				path(p).values.splice(i, 0, [a(v), 1]);
			}
			return p;
		};
	},
	remove: function (a, prior, path) {
		var i;
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			i = path(p).bisect(path(p).values, a(v), 0, path(p).values.length);
			path(p).values[i][1]--;
			return p;
		};
	},
	initial: function (prior, path) {
		return function (p) {
			p = prior(p);
			path(p).values = [];
			path(p).bisect = H.Cube.cf.crossfilter.bisect.by(function(d) { return d[0]; }).left;
			return p;
		};
	}
};

H.Cube.reductio_value_list = {
	add: function (a, prior, path) {
		var i;
		var bisect = H.Cube.cf.crossfilter.bisect.by(function(d) { return d; }).left;
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			i = bisect(path(p).valueList, a(v), 0, path(p).valueList.length);
			path(p).valueList.splice(i, 0, a(v));
			return p;
		};
	},
	remove: function (a, prior, path) {
		var i;
		var bisect = H.Cube.cf.crossfilter.bisect.by(function(d) { return d; }).left;
		return function (p, v, nf) {
			if(prior) prior(p, v, nf);
			i = bisect(path(p).valueList, a(v), 0, path(p).valueList.length);
			path(p).valueList.splice(i, 1);
			return p;
		};
	},
	initial: function (prior, path) {
		return function (p) {
			p = prior(p);
			path(p).valueList = [];
			return p;
		};
	}
};
function csv2array(data, delimeter) {
  if (delimeter == undefined) 
    delimeter = ',';
  if (delimeter && delimeter.length > 1)
    delimeter = ',';
  var newline = '\n';
  var eof = '';
  var i = 0;
  var c = data.charAt(i);
  var row = 0;
  var col = 0;
  var array = new Array();
  while (c != eof) {
    while (c == ' ' || c == '\t' || c == '\r') {
      c = data.charAt(++i); 
    }
    var value = "";
    if (c == '\"') {
      c = data.charAt(++i);
      do {
        if (c != '\"') {
          value += c;
          c = data.charAt(++i);
        }
        if (c == '\"') {
          var cnext = data.charAt(i+1);
          if (cnext == '\"') {
            value += '\"';
            i += 2;
            c = data.charAt(i);
          }
        }
      }
      while (c != eof && c != '\"');
      if (c == eof) {
        throw "Unexpected end of data, double-quote expected";
      }
      c = data.charAt(++i);
    }
    else {
      while (c != eof && c != delimeter && c!= newline && c != ' ' && c != '\t' && c != '\r') {
        value += c;
        c = data.charAt(++i);
      }
    }
    if (array.length <= row) 
      array.push(new Array());
    array[row].push(value);
    while (c == ' ' || c == '\t' || c == '\r') {
      c = data.charAt(++i);
    }
    if (c == delimeter) {
      col++;
    }
    else if (c == newline) {
      col = 0;
      row++;
    }
    else if (c != eof) {
      throw "Delimiter expected after character " + i;
    }
    c = data.charAt(++i);
  }  
  return array;
}
"use strict";
H.Namespace = function() {
    const forEach = H.Array.for_each;
    const deepMatch = H.Obj.deep_match;
    var set = function (obj, path){
        if(get(obj, path)) {
            throw new Error( path + ': has already been added to global namespace' );
        }
        if (!path) return obj;
        forEach(path.split('.'), function(key){
            if (!obj[key]) {
                obj[key] = {};
            }
            obj = obj[key];
        });
        return obj;
    }
    var get = function (obj, path){
        let check = deepMatch(obj, { path })
        return check
    }
    var callers = function (obj){
        console.log("Caller is running")
    }
    var report = function(obj) {
        let result = obj;
        return result;
    }
    return {
        set: set,
        get : get,
        callers: callers,
        report : report
    };
}();